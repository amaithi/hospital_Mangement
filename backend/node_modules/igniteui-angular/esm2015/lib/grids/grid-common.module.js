import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { IgxGridCellComponent } from './cell.component';
import { IgxGridFooterComponent } from './grid-footer/grid-footer.component';
import { IgxGridBodyDirective } from './grid.common';
import { IgxGridTransaction, IgxGridBaseDirective } from './grid-base.directive';
import { IgxBaseTransactionService } from '../services/transaction/base-transaction';
import { IgxRowEditTemplateDirective, IgxRowEditActionsDirective, IgxRowEditTextDirective, IgxRowEditTabStopDirective } from './grid.rowEdit.directive';
import { IgxPaginatorModule } from '../paginator/paginator.component';
import { IgxGridPipesModule } from './common/grid-pipes.module';
import { IgxGridExcelStyleFilteringModule } from './filtering/excel-style/grid.excel-style-filtering.module';
import { IgxRowDragModule } from './row-drag.directive';
import { IgxAdvancedFilteringDialogComponent } from './filtering/advanced-filtering/advanced-filtering-dialog.component';
import { IgxGridSelectionModule } from './selection/selection.module';
import { IgxGridResizingModule } from './resizing/resize.module';
import { IgxColumnMovingModule } from './moving/moving.module';
import { IgxGridSharedModules } from './common/shared.module';
import { IgxGridSummaryModule } from './summaries/summary.module';
import { IgxGridToolbarModule } from './toolbar/toolbar.module';
import { IgxColumnHidingModule } from './hiding/hiding.module';
import { IgxColumnPinningModule } from './pinning/pinning.module';
import { IgxGridColumnModule } from './columns/column.module';
import { IgxGridHeadersModule } from './headers/headers.module';
import { IgxGridFilteringModule } from './filtering/base/filtering.module';
import { IgxRowDirective } from './row.directive';
/**
 * @hidden
 */
let IgxGridCommonModule = class IgxGridCommonModule {
};
IgxGridCommonModule = __decorate([
    NgModule({
        declarations: [
            IgxGridBaseDirective,
            IgxRowDirective,
            IgxGridCellComponent,
            IgxRowEditTemplateDirective,
            IgxRowEditActionsDirective,
            IgxRowEditTextDirective,
            IgxRowEditTabStopDirective,
            IgxGridBodyDirective,
            IgxGridFooterComponent,
            IgxAdvancedFilteringDialogComponent
        ],
        entryComponents: [
            IgxAdvancedFilteringDialogComponent
        ],
        exports: [
            IgxGridCellComponent,
            IgxRowEditTemplateDirective,
            IgxRowEditActionsDirective,
            IgxRowEditTextDirective,
            IgxRowEditTabStopDirective,
            IgxGridBodyDirective,
            IgxColumnHidingModule,
            IgxColumnPinningModule,
            IgxGridColumnModule,
            IgxGridHeadersModule,
            IgxGridPipesModule,
            IgxGridFilteringModule,
            IgxGridExcelStyleFilteringModule,
            IgxRowDragModule,
            IgxPaginatorModule,
            IgxGridFooterComponent,
            IgxGridResizingModule,
            IgxColumnMovingModule,
            IgxGridSelectionModule,
            IgxGridSummaryModule,
            IgxGridToolbarModule,
            IgxAdvancedFilteringDialogComponent,
            IgxGridSharedModules
        ],
        imports: [
            IgxGridColumnModule,
            IgxGridHeadersModule,
            IgxColumnMovingModule,
            IgxGridResizingModule,
            IgxColumnPinningModule,
            IgxGridSelectionModule,
            IgxGridSummaryModule,
            IgxGridToolbarModule,
            IgxColumnHidingModule,
            IgxGridPipesModule,
            IgxGridFilteringModule,
            IgxGridExcelStyleFilteringModule,
            IgxRowDragModule,
            IgxPaginatorModule,
            IgxGridSharedModules
        ],
        providers: [
            { provide: IgxGridTransaction, useClass: IgxBaseTransactionService }
        ]
    })
], IgxGridCommonModule);
export { IgxGridCommonModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZC1jb21tb24ubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vaWduaXRldWktYW5ndWxhci8iLCJzb3VyY2VzIjpbImxpYi9ncmlkcy9ncmlkLWNvbW1vbi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDeEQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDN0UsT0FBTyxFQUNILG9CQUFvQixFQUN2QixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUNqRixPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQztBQUNyRixPQUFPLEVBQ0gsMkJBQTJCLEVBQzNCLDBCQUEwQixFQUMxQix1QkFBdUIsRUFDdkIsMEJBQTBCLEVBQzdCLE1BQU0sMEJBQTBCLENBQUM7QUFDbEMsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDdEUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDaEUsT0FBTyxFQUFFLGdDQUFnQyxFQUFFLE1BQU0sMkRBQTJELENBQUM7QUFDN0csT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDeEQsT0FBTyxFQUFFLG1DQUFtQyxFQUFFLE1BQU0sb0VBQW9FLENBQUM7QUFDekgsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDdEUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDakUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDL0QsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDOUQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDbEUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDaEUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDL0QsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDbEUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDOUQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDaEUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDM0UsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2xEOztHQUVHO0FBK0RILElBQWEsbUJBQW1CLEdBQWhDLE1BQWEsbUJBQW1CO0NBQUksQ0FBQTtBQUF2QixtQkFBbUI7SUE5RC9CLFFBQVEsQ0FBQztRQUNOLFlBQVksRUFBRTtZQUNWLG9CQUFvQjtZQUNwQixlQUFlO1lBQ2Ysb0JBQW9CO1lBQ3BCLDJCQUEyQjtZQUMzQiwwQkFBMEI7WUFDMUIsdUJBQXVCO1lBQ3ZCLDBCQUEwQjtZQUMxQixvQkFBb0I7WUFDcEIsc0JBQXNCO1lBQ3RCLG1DQUFtQztTQUN0QztRQUNELGVBQWUsRUFBRTtZQUNiLG1DQUFtQztTQUN0QztRQUNELE9BQU8sRUFBRTtZQUNMLG9CQUFvQjtZQUNwQiwyQkFBMkI7WUFDM0IsMEJBQTBCO1lBQzFCLHVCQUF1QjtZQUN2QiwwQkFBMEI7WUFDMUIsb0JBQW9CO1lBQ3BCLHFCQUFxQjtZQUNyQixzQkFBc0I7WUFDdEIsbUJBQW1CO1lBQ25CLG9CQUFvQjtZQUNwQixrQkFBa0I7WUFDbEIsc0JBQXNCO1lBQ3RCLGdDQUFnQztZQUNoQyxnQkFBZ0I7WUFDaEIsa0JBQWtCO1lBQ2xCLHNCQUFzQjtZQUN0QixxQkFBcUI7WUFDckIscUJBQXFCO1lBQ3JCLHNCQUFzQjtZQUN0QixvQkFBb0I7WUFDcEIsb0JBQW9CO1lBQ3BCLG1DQUFtQztZQUNuQyxvQkFBb0I7U0FDdkI7UUFDRCxPQUFPLEVBQUU7WUFDTCxtQkFBbUI7WUFDbkIsb0JBQW9CO1lBQ3BCLHFCQUFxQjtZQUNyQixxQkFBcUI7WUFDckIsc0JBQXNCO1lBQ3RCLHNCQUFzQjtZQUN0QixvQkFBb0I7WUFDcEIsb0JBQW9CO1lBQ3BCLHFCQUFxQjtZQUNyQixrQkFBa0I7WUFDbEIsc0JBQXNCO1lBQ3RCLGdDQUFnQztZQUNoQyxnQkFBZ0I7WUFDaEIsa0JBQWtCO1lBQ2xCLG9CQUFvQjtTQUN2QjtRQUNELFNBQVMsRUFBRTtZQUNQLEVBQUUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLFFBQVEsRUFBRSx5QkFBeUIsRUFBRTtTQUN2RTtLQUNKLENBQUM7R0FDVyxtQkFBbUIsQ0FBSTtTQUF2QixtQkFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSWd4R3JpZENlbGxDb21wb25lbnQgfSBmcm9tICcuL2NlbGwuY29tcG9uZW50JztcbmltcG9ydCB7IElneEdyaWRGb290ZXJDb21wb25lbnQgfSBmcm9tICcuL2dyaWQtZm9vdGVyL2dyaWQtZm9vdGVyLmNvbXBvbmVudCc7XG5pbXBvcnQge1xuICAgIElneEdyaWRCb2R5RGlyZWN0aXZlXG59IGZyb20gJy4vZ3JpZC5jb21tb24nO1xuaW1wb3J0IHsgSWd4R3JpZFRyYW5zYWN0aW9uLCBJZ3hHcmlkQmFzZURpcmVjdGl2ZSB9IGZyb20gJy4vZ3JpZC1iYXNlLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBJZ3hCYXNlVHJhbnNhY3Rpb25TZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvdHJhbnNhY3Rpb24vYmFzZS10cmFuc2FjdGlvbic7XG5pbXBvcnQge1xuICAgIElneFJvd0VkaXRUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICBJZ3hSb3dFZGl0QWN0aW9uc0RpcmVjdGl2ZSxcbiAgICBJZ3hSb3dFZGl0VGV4dERpcmVjdGl2ZSxcbiAgICBJZ3hSb3dFZGl0VGFiU3RvcERpcmVjdGl2ZVxufSBmcm9tICcuL2dyaWQucm93RWRpdC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgSWd4UGFnaW5hdG9yTW9kdWxlIH0gZnJvbSAnLi4vcGFnaW5hdG9yL3BhZ2luYXRvci5jb21wb25lbnQnO1xuaW1wb3J0IHsgSWd4R3JpZFBpcGVzTW9kdWxlIH0gZnJvbSAnLi9jb21tb24vZ3JpZC1waXBlcy5tb2R1bGUnO1xuaW1wb3J0IHsgSWd4R3JpZEV4Y2VsU3R5bGVGaWx0ZXJpbmdNb2R1bGUgfSBmcm9tICcuL2ZpbHRlcmluZy9leGNlbC1zdHlsZS9ncmlkLmV4Y2VsLXN0eWxlLWZpbHRlcmluZy5tb2R1bGUnO1xuaW1wb3J0IHsgSWd4Um93RHJhZ01vZHVsZSB9IGZyb20gJy4vcm93LWRyYWcuZGlyZWN0aXZlJztcbmltcG9ydCB7IElneEFkdmFuY2VkRmlsdGVyaW5nRGlhbG9nQ29tcG9uZW50IH0gZnJvbSAnLi9maWx0ZXJpbmcvYWR2YW5jZWQtZmlsdGVyaW5nL2FkdmFuY2VkLWZpbHRlcmluZy1kaWFsb2cuY29tcG9uZW50JztcbmltcG9ydCB7IElneEdyaWRTZWxlY3Rpb25Nb2R1bGUgfSBmcm9tICcuL3NlbGVjdGlvbi9zZWxlY3Rpb24ubW9kdWxlJztcbmltcG9ydCB7IElneEdyaWRSZXNpemluZ01vZHVsZSB9IGZyb20gJy4vcmVzaXppbmcvcmVzaXplLm1vZHVsZSc7XG5pbXBvcnQgeyBJZ3hDb2x1bW5Nb3ZpbmdNb2R1bGUgfSBmcm9tICcuL21vdmluZy9tb3ZpbmcubW9kdWxlJztcbmltcG9ydCB7IElneEdyaWRTaGFyZWRNb2R1bGVzIH0gZnJvbSAnLi9jb21tb24vc2hhcmVkLm1vZHVsZSc7XG5pbXBvcnQgeyBJZ3hHcmlkU3VtbWFyeU1vZHVsZSB9IGZyb20gJy4vc3VtbWFyaWVzL3N1bW1hcnkubW9kdWxlJztcbmltcG9ydCB7IElneEdyaWRUb29sYmFyTW9kdWxlIH0gZnJvbSAnLi90b29sYmFyL3Rvb2xiYXIubW9kdWxlJztcbmltcG9ydCB7IElneENvbHVtbkhpZGluZ01vZHVsZSB9IGZyb20gJy4vaGlkaW5nL2hpZGluZy5tb2R1bGUnO1xuaW1wb3J0IHsgSWd4Q29sdW1uUGlubmluZ01vZHVsZSB9IGZyb20gJy4vcGlubmluZy9waW5uaW5nLm1vZHVsZSc7XG5pbXBvcnQgeyBJZ3hHcmlkQ29sdW1uTW9kdWxlIH0gZnJvbSAnLi9jb2x1bW5zL2NvbHVtbi5tb2R1bGUnO1xuaW1wb3J0IHsgSWd4R3JpZEhlYWRlcnNNb2R1bGUgfSBmcm9tICcuL2hlYWRlcnMvaGVhZGVycy5tb2R1bGUnO1xuaW1wb3J0IHsgSWd4R3JpZEZpbHRlcmluZ01vZHVsZSB9IGZyb20gJy4vZmlsdGVyaW5nL2Jhc2UvZmlsdGVyaW5nLm1vZHVsZSc7XG5pbXBvcnQgeyBJZ3hSb3dEaXJlY3RpdmUgfSBmcm9tICcuL3Jvdy5kaXJlY3RpdmUnO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbkBOZ01vZHVsZSh7XG4gICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgIElneEdyaWRCYXNlRGlyZWN0aXZlLFxuICAgICAgICBJZ3hSb3dEaXJlY3RpdmUsXG4gICAgICAgIElneEdyaWRDZWxsQ29tcG9uZW50LFxuICAgICAgICBJZ3hSb3dFZGl0VGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgICAgIElneFJvd0VkaXRBY3Rpb25zRGlyZWN0aXZlLFxuICAgICAgICBJZ3hSb3dFZGl0VGV4dERpcmVjdGl2ZSxcbiAgICAgICAgSWd4Um93RWRpdFRhYlN0b3BEaXJlY3RpdmUsXG4gICAgICAgIElneEdyaWRCb2R5RGlyZWN0aXZlLFxuICAgICAgICBJZ3hHcmlkRm9vdGVyQ29tcG9uZW50LFxuICAgICAgICBJZ3hBZHZhbmNlZEZpbHRlcmluZ0RpYWxvZ0NvbXBvbmVudFxuICAgIF0sXG4gICAgZW50cnlDb21wb25lbnRzOiBbXG4gICAgICAgIElneEFkdmFuY2VkRmlsdGVyaW5nRGlhbG9nQ29tcG9uZW50XG4gICAgXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICAgIElneEdyaWRDZWxsQ29tcG9uZW50LFxuICAgICAgICBJZ3hSb3dFZGl0VGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgICAgIElneFJvd0VkaXRBY3Rpb25zRGlyZWN0aXZlLFxuICAgICAgICBJZ3hSb3dFZGl0VGV4dERpcmVjdGl2ZSxcbiAgICAgICAgSWd4Um93RWRpdFRhYlN0b3BEaXJlY3RpdmUsXG4gICAgICAgIElneEdyaWRCb2R5RGlyZWN0aXZlLFxuICAgICAgICBJZ3hDb2x1bW5IaWRpbmdNb2R1bGUsXG4gICAgICAgIElneENvbHVtblBpbm5pbmdNb2R1bGUsXG4gICAgICAgIElneEdyaWRDb2x1bW5Nb2R1bGUsXG4gICAgICAgIElneEdyaWRIZWFkZXJzTW9kdWxlLFxuICAgICAgICBJZ3hHcmlkUGlwZXNNb2R1bGUsXG4gICAgICAgIElneEdyaWRGaWx0ZXJpbmdNb2R1bGUsXG4gICAgICAgIElneEdyaWRFeGNlbFN0eWxlRmlsdGVyaW5nTW9kdWxlLFxuICAgICAgICBJZ3hSb3dEcmFnTW9kdWxlLFxuICAgICAgICBJZ3hQYWdpbmF0b3JNb2R1bGUsXG4gICAgICAgIElneEdyaWRGb290ZXJDb21wb25lbnQsXG4gICAgICAgIElneEdyaWRSZXNpemluZ01vZHVsZSxcbiAgICAgICAgSWd4Q29sdW1uTW92aW5nTW9kdWxlLFxuICAgICAgICBJZ3hHcmlkU2VsZWN0aW9uTW9kdWxlLFxuICAgICAgICBJZ3hHcmlkU3VtbWFyeU1vZHVsZSxcbiAgICAgICAgSWd4R3JpZFRvb2xiYXJNb2R1bGUsXG4gICAgICAgIElneEFkdmFuY2VkRmlsdGVyaW5nRGlhbG9nQ29tcG9uZW50LFxuICAgICAgICBJZ3hHcmlkU2hhcmVkTW9kdWxlc1xuICAgIF0sXG4gICAgaW1wb3J0czogW1xuICAgICAgICBJZ3hHcmlkQ29sdW1uTW9kdWxlLFxuICAgICAgICBJZ3hHcmlkSGVhZGVyc01vZHVsZSxcbiAgICAgICAgSWd4Q29sdW1uTW92aW5nTW9kdWxlLFxuICAgICAgICBJZ3hHcmlkUmVzaXppbmdNb2R1bGUsXG4gICAgICAgIElneENvbHVtblBpbm5pbmdNb2R1bGUsXG4gICAgICAgIElneEdyaWRTZWxlY3Rpb25Nb2R1bGUsXG4gICAgICAgIElneEdyaWRTdW1tYXJ5TW9kdWxlLFxuICAgICAgICBJZ3hHcmlkVG9vbGJhck1vZHVsZSxcbiAgICAgICAgSWd4Q29sdW1uSGlkaW5nTW9kdWxlLFxuICAgICAgICBJZ3hHcmlkUGlwZXNNb2R1bGUsXG4gICAgICAgIElneEdyaWRGaWx0ZXJpbmdNb2R1bGUsXG4gICAgICAgIElneEdyaWRFeGNlbFN0eWxlRmlsdGVyaW5nTW9kdWxlLFxuICAgICAgICBJZ3hSb3dEcmFnTW9kdWxlLFxuICAgICAgICBJZ3hQYWdpbmF0b3JNb2R1bGUsXG4gICAgICAgIElneEdyaWRTaGFyZWRNb2R1bGVzXG4gICAgXSxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgeyBwcm92aWRlOiBJZ3hHcmlkVHJhbnNhY3Rpb24sIHVzZUNsYXNzOiBJZ3hCYXNlVHJhbnNhY3Rpb25TZXJ2aWNlIH1cbiAgICBdXG59KVxuZXhwb3J0IGNsYXNzIElneEdyaWRDb21tb25Nb2R1bGUgeyB9XG4iXX0=