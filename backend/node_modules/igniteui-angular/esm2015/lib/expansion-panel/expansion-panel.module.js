import { __decorate } from "tslib";
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { IgxRippleModule } from '../directives/ripple/ripple.directive';
import { IgxButtonModule } from '../directives/button/button.directive';
import { IgxAvatarModule } from '../avatar/avatar.component';
import { IgxIconModule } from '../icon/public_api';
import { IgxExpansionPanelComponent } from './expansion-panel.component';
import { IgxExpansionPanelHeaderComponent } from './expansion-panel-header.component';
import { IgxExpansionPanelBodyComponent } from './expansion-panel-body.component';
import { IgxExpansionPanelDescriptionDirective, IgxExpansionPanelTitleDirective, IgxExpansionPanelIconDirective } from './expansion-panel.directives';
/**
 * @hidden
 */
let IgxExpansionPanelModule = class IgxExpansionPanelModule {
};
IgxExpansionPanelModule = __decorate([
    NgModule({
        declarations: [
            IgxExpansionPanelComponent,
            IgxExpansionPanelHeaderComponent,
            IgxExpansionPanelBodyComponent,
            IgxExpansionPanelDescriptionDirective,
            IgxExpansionPanelTitleDirective,
            IgxExpansionPanelIconDirective
        ],
        entryComponents: [],
        exports: [
            IgxExpansionPanelComponent,
            IgxExpansionPanelHeaderComponent,
            IgxExpansionPanelBodyComponent,
            IgxExpansionPanelDescriptionDirective,
            IgxExpansionPanelTitleDirective,
            IgxExpansionPanelIconDirective
        ],
        imports: [
            CommonModule,
            IgxRippleModule,
            IgxIconModule,
            IgxButtonModule,
            IgxAvatarModule
        ]
    })
], IgxExpansionPanelModule);
export { IgxExpansionPanelModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwYW5zaW9uLXBhbmVsLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2lnbml0ZXVpLWFuZ3VsYXIvIiwic291cmNlcyI6WyJsaWIvZXhwYW5zaW9uLXBhbmVsL2V4cGFuc2lvbi1wYW5lbC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUN4RSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDeEUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQzdELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNuRCxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUN6RSxPQUFPLEVBQUUsZ0NBQWdDLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUN0RixPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUNsRixPQUFPLEVBQ0gscUNBQXFDLEVBQ3JDLCtCQUErQixFQUMvQiw4QkFBOEIsRUFDakMsTUFBTSw4QkFBOEIsQ0FBQztBQUV0Qzs7R0FFRztBQTRCSCxJQUFhLHVCQUF1QixHQUFwQyxNQUFhLHVCQUF1QjtDQUNuQyxDQUFBO0FBRFksdUJBQXVCO0lBM0JuQyxRQUFRLENBQUM7UUFDUixZQUFZLEVBQUU7WUFDWiwwQkFBMEI7WUFDMUIsZ0NBQWdDO1lBQ2hDLDhCQUE4QjtZQUM5QixxQ0FBcUM7WUFDckMsK0JBQStCO1lBQy9CLDhCQUE4QjtTQUMvQjtRQUNELGVBQWUsRUFBRSxFQUNoQjtRQUNELE9BQU8sRUFBRTtZQUNQLDBCQUEwQjtZQUMxQixnQ0FBZ0M7WUFDaEMsOEJBQThCO1lBQzlCLHFDQUFxQztZQUNyQywrQkFBK0I7WUFDN0IsOEJBQThCO1NBQ2pDO1FBQ0QsT0FBTyxFQUFFO1lBQ1AsWUFBWTtZQUNaLGVBQWU7WUFDZixhQUFhO1lBQ2IsZUFBZTtZQUNmLGVBQWU7U0FDaEI7S0FDRixDQUFDO0dBQ1csdUJBQXVCLENBQ25DO1NBRFksdUJBQXVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJZ3hSaXBwbGVNb2R1bGUgfSBmcm9tICcuLi9kaXJlY3RpdmVzL3JpcHBsZS9yaXBwbGUuZGlyZWN0aXZlJztcbmltcG9ydCB7IElneEJ1dHRvbk1vZHVsZSB9IGZyb20gJy4uL2RpcmVjdGl2ZXMvYnV0dG9uL2J1dHRvbi5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgSWd4QXZhdGFyTW9kdWxlIH0gZnJvbSAnLi4vYXZhdGFyL2F2YXRhci5jb21wb25lbnQnO1xuaW1wb3J0IHsgSWd4SWNvbk1vZHVsZSB9IGZyb20gJy4uL2ljb24vcHVibGljX2FwaSc7XG5pbXBvcnQgeyBJZ3hFeHBhbnNpb25QYW5lbENvbXBvbmVudCB9IGZyb20gJy4vZXhwYW5zaW9uLXBhbmVsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJZ3hFeHBhbnNpb25QYW5lbEhlYWRlckNvbXBvbmVudCB9IGZyb20gJy4vZXhwYW5zaW9uLXBhbmVsLWhlYWRlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgSWd4RXhwYW5zaW9uUGFuZWxCb2R5Q29tcG9uZW50IH0gZnJvbSAnLi9leHBhbnNpb24tcGFuZWwtYm9keS5jb21wb25lbnQnO1xuaW1wb3J0IHtcbiAgICBJZ3hFeHBhbnNpb25QYW5lbERlc2NyaXB0aW9uRGlyZWN0aXZlLFxuICAgIElneEV4cGFuc2lvblBhbmVsVGl0bGVEaXJlY3RpdmUsXG4gICAgSWd4RXhwYW5zaW9uUGFuZWxJY29uRGlyZWN0aXZlXG59IGZyb20gJy4vZXhwYW5zaW9uLXBhbmVsLmRpcmVjdGl2ZXMnO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgSWd4RXhwYW5zaW9uUGFuZWxDb21wb25lbnQsXG4gICAgSWd4RXhwYW5zaW9uUGFuZWxIZWFkZXJDb21wb25lbnQsXG4gICAgSWd4RXhwYW5zaW9uUGFuZWxCb2R5Q29tcG9uZW50LFxuICAgIElneEV4cGFuc2lvblBhbmVsRGVzY3JpcHRpb25EaXJlY3RpdmUsXG4gICAgSWd4RXhwYW5zaW9uUGFuZWxUaXRsZURpcmVjdGl2ZSxcbiAgICBJZ3hFeHBhbnNpb25QYW5lbEljb25EaXJlY3RpdmVcbiAgXSxcbiAgZW50cnlDb21wb25lbnRzOiBbXG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBJZ3hFeHBhbnNpb25QYW5lbENvbXBvbmVudCxcbiAgICBJZ3hFeHBhbnNpb25QYW5lbEhlYWRlckNvbXBvbmVudCxcbiAgICBJZ3hFeHBhbnNpb25QYW5lbEJvZHlDb21wb25lbnQsXG4gICAgSWd4RXhwYW5zaW9uUGFuZWxEZXNjcmlwdGlvbkRpcmVjdGl2ZSxcbiAgICBJZ3hFeHBhbnNpb25QYW5lbFRpdGxlRGlyZWN0aXZlLFxuICAgICAgSWd4RXhwYW5zaW9uUGFuZWxJY29uRGlyZWN0aXZlXG4gIF0sXG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgSWd4UmlwcGxlTW9kdWxlLFxuICAgIElneEljb25Nb2R1bGUsXG4gICAgSWd4QnV0dG9uTW9kdWxlLFxuICAgIElneEF2YXRhck1vZHVsZVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIElneEV4cGFuc2lvblBhbmVsTW9kdWxlIHtcbn1cbiJdfQ==