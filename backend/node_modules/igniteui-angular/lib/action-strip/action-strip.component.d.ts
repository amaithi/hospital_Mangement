import { Renderer2, ViewContainerRef, QueryList, TemplateRef } from '@angular/core';
import { DisplayDensityBase, IDisplayDensityOptions } from '../core/density';
import { OverlaySettings } from '../services/public_api';
export declare class IgxActionStripMenuItemDirective {
    templateRef: TemplateRef<any>;
    constructor(templateRef: TemplateRef<any>);
}
/**
 * Action Strip provides templatable area for one or more actions.
 *
 * @igxModule IgxActionStripModule
 *
 * @igxTheme igx-action-strip-theme
 *
 * @igxKeywords action, strip, actionStrip, pinning, editing
 *
 * @igxGroup Data Entry & Display
 *
 * @remarks
 * The Ignite UI Action Strip is a container, overlaying its parent container,
 * and displaying action buttons with action applicable to the parent component the strip is instantiated or shown for.
 *
 * @example
 * ```html
 * <igx-action-strip #actionStrip>
 *     <igx-icon (click)="doSomeAction()"></igx-icon>
 * </igx-action-strip>
 */
export declare class IgxActionStripComponent extends DisplayDensityBase {
    private _viewContainer;
    private renderer;
    protected _displayDensityOptions: IDisplayDensityOptions;
    constructor(_viewContainer: ViewContainerRef, renderer: Renderer2, _displayDensityOptions: IDisplayDensityOptions);
    /**
     * Getter for the 'display' property of the current `IgxActionStrip`
     * @hidden
     * @internal
     */
    get display(): string;
    private _hidden;
    /**
     * An @Input property that set the visibility of the Action Strip.
     * Could be used to set if the Action Strip will be initially hidden.
     * @example
     * ```html
     *  <igx-action-strip [hidden]="false">
     * ```
     */
    set hidden(value: boolean);
    get hidden(): boolean;
    /**
     * Host `class.igx-action-strip` binding.
     * @hidden
     * @internal
     */
    hostClass: string;
    /**
     * Host `attr.class` binding.
     * @hidden
     * @internal
     */
    get hostClasses(): string;
    /**
     * Sets the context of an action strip.
     * The context should be an instance of a @Component, that has element property.
     * This element will be the placeholder of the action strip.
     * @example
     * ```html
     * <igx-action-strip [context]="cell"></igx-action-strip>
     * ```
     */
    context: any;
    /**
     * Menu Items ContentChildren inside the Action Strip
     * @hidden
     * @internal
     */
    menuItems: QueryList<IgxActionStripMenuItemDirective>;
    /**
     * Reference to the menu
     * @hidden
     * @internal
     */
    private menu;
    /**
     * Showing the Action Strip and appending it the specified context element.
     * @param context
     * @example
     * ```typescript
     * this.actionStrip.show(row);
     * ```
     */
    show(context?: any): void;
    /**
     * Hiding the Action Strip and removing it from its current context element.
     * @example
     * ```typescript
     * this.actionStrip.hide();
     * ```
     */
    hide(): void;
    /**
     * Getter for menu overlay settings
     * @hidden
     * @internal
     */
    get menuOverlaySettings(): OverlaySettings;
    /**
     * Close the menu if opened
     * @hidden
     * @internal
     */
    private closeMenu;
}
