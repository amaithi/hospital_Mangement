import { __decorate, __extends } from "tslib";
import { Component, ChangeDetectorRef } from '@angular/core';
import { ColumnChooserBaseDirective } from '../column-chooser-base';
import { IgxColumnPinningItemDirective } from './pinning.directive';
var IgxColumnPinningComponent = /** @class */ (function (_super) {
    __extends(IgxColumnPinningComponent, _super);
    function IgxColumnPinningComponent(cdr) {
        var _this = _super.call(this, cdr) || this;
        _this.cdr = cdr;
        return _this;
    }
    /**
     * @hidden
     */
    IgxColumnPinningComponent.prototype.createColumnItem = function (container, column) {
        if (column.level !== 0 || column.disablePinning) {
            return null;
        }
        var item = new IgxColumnPinningItemDirective();
        item.container = container;
        item.column = column;
        return item;
    };
    /**
     * @hidden
     */
    IgxColumnPinningComponent.prototype.checkboxValueChange = function (event, columnItem) {
        if (event.checked && !columnItem.pinnable) {
            event.checkbox.checked = false;
            return false;
        }
        columnItem.value = !columnItem.value;
    };
    Object.defineProperty(IgxColumnPinningComponent.prototype, "pinnableColumns", {
        /**
         * @hidden @internal
         */
        get: function () {
            return this.columnItems.filter(function (col) { return !col.pinningDisabled; });
        },
        enumerable: true,
        configurable: true
    });
    IgxColumnPinningComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    IgxColumnPinningComponent = __decorate([
        Component({
            preserveWhitespaces: false,
            selector: 'igx-column-pinning',
            template: "\n<div class=\"igx-column-hiding__header\">\n    <h4 class=\"igx-column-hiding__header-title\" *ngIf=\"title\">{{ title }}</h4>\n\n    <igx-input-group class=\"igx-column-hiding__header-input\" *ngIf=\"!disableFilter\">\n        <input igxInput\n            type=\"text\"\n            [(ngModel)]=\"filterCriteria\"\n            [placeholder]=\"filterColumnsPrompt\"\n            autocomplete=\"off\" />\n    </igx-input-group>\n</div>\n\n<div class=\"igx-column-hiding__columns\"\n    [style.max-height]=\"columnsAreaMaxHeight\">\n    <igx-checkbox igxColumnPinningItem\n        *ngFor=\"let columnItem of pinnableColumns\"\n        class=\"igx-column-hiding__columns-item\"\n        (change)=\"checkboxValueChange($event, columnItem)\"\n        [checked]=\"columnItem.value\">\n        {{ columnItem.name }}\n    </igx-checkbox>\n</div>\n"
        })
    ], IgxColumnPinningComponent);
    return IgxColumnPinningComponent;
}(ColumnChooserBaseDirective));
export { IgxColumnPinningComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sdW1uLXBpbm5pbmcuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vaWduaXRldWktYW5ndWxhci8iLCJzb3VyY2VzIjpbImxpYi9ncmlkcy9waW5uaW5nL2NvbHVtbi1waW5uaW5nLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsT0FBTyxFQUFFLFNBQVMsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3RCxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUNwRSxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQVNwRTtJQUErQyw2Q0FBMEI7SUFFckUsbUNBQW1CLEdBQXNCO1FBQXpDLFlBQ0ksa0JBQU0sR0FBRyxDQUFDLFNBQ2I7UUFGa0IsU0FBRyxHQUFILEdBQUcsQ0FBbUI7O0lBRXpDLENBQUM7SUFFRDs7T0FFRztJQUNILG9EQUFnQixHQUFoQixVQUFpQixTQUFjLEVBQUUsTUFBVztRQUN4QyxJQUFJLE1BQU0sQ0FBQyxLQUFLLEtBQUssQ0FBQyxJQUFJLE1BQU0sQ0FBQyxjQUFjLEVBQUU7WUFDN0MsT0FBTyxJQUFJLENBQUM7U0FDZjtRQUNELElBQU0sSUFBSSxHQUFHLElBQUksNkJBQTZCLEVBQUUsQ0FBQztRQUNqRCxJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztRQUMzQixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUNyQixPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRUQ7O09BRUc7SUFDSSx1REFBbUIsR0FBMUIsVUFBMkIsS0FBSyxFQUFFLFVBQXlDO1FBQ3ZFLElBQUksS0FBSyxDQUFDLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUU7WUFDdkMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1lBQy9CLE9BQU8sS0FBSyxDQUFDO1NBQ2hCO1FBQ0QsVUFBVSxDQUFDLEtBQUssR0FBRyxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUM7SUFDekMsQ0FBQztJQUtELHNCQUFXLHNEQUFlO1FBSDFCOztXQUVHO2FBQ0g7WUFDSSxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLFVBQUMsR0FBRyxJQUFLLE9BQUEsQ0FBQyxHQUFHLENBQUMsZUFBZSxFQUFwQixDQUFvQixDQUFDLENBQUM7UUFDbEUsQ0FBQzs7O09BQUE7O2dCQWpDdUIsaUJBQWlCOztJQUZoQyx5QkFBeUI7UUFMckMsU0FBUyxDQUFDO1lBQ1AsbUJBQW1CLEVBQUUsS0FBSztZQUMxQixRQUFRLEVBQUUsb0JBQW9CO1lBQzlCLG8xQkFBOEM7U0FDakQsQ0FBQztPQUNXLHlCQUF5QixDQW9DckM7SUFBRCxnQ0FBQztDQUFBLEFBcENELENBQStDLDBCQUEwQixHQW9DeEU7U0FwQ1kseUJBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBDb21wb25lbnQsIENoYW5nZURldGVjdG9yUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb2x1bW5DaG9vc2VyQmFzZURpcmVjdGl2ZSB9IGZyb20gJy4uL2NvbHVtbi1jaG9vc2VyLWJhc2UnO1xuaW1wb3J0IHsgSWd4Q29sdW1uUGlubmluZ0l0ZW1EaXJlY3RpdmUgfSBmcm9tICcuL3Bpbm5pbmcuZGlyZWN0aXZlJztcblxuXG5cbkBDb21wb25lbnQoe1xuICAgIHByZXNlcnZlV2hpdGVzcGFjZXM6IGZhbHNlLFxuICAgIHNlbGVjdG9yOiAnaWd4LWNvbHVtbi1waW5uaW5nJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vY29sdW1uLXBpbm5pbmcuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIElneENvbHVtblBpbm5pbmdDb21wb25lbnQgZXh0ZW5kcyBDb2x1bW5DaG9vc2VyQmFzZURpcmVjdGl2ZSB7XG5cbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZikge1xuICAgICAgICBzdXBlcihjZHIpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBjcmVhdGVDb2x1bW5JdGVtKGNvbnRhaW5lcjogYW55LCBjb2x1bW46IGFueSkge1xuICAgICAgICBpZiAoY29sdW1uLmxldmVsICE9PSAwIHx8IGNvbHVtbi5kaXNhYmxlUGlubmluZykge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgaXRlbSA9IG5ldyBJZ3hDb2x1bW5QaW5uaW5nSXRlbURpcmVjdGl2ZSgpO1xuICAgICAgICBpdGVtLmNvbnRhaW5lciA9IGNvbnRhaW5lcjtcbiAgICAgICAgaXRlbS5jb2x1bW4gPSBjb2x1bW47XG4gICAgICAgIHJldHVybiBpdGVtO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBwdWJsaWMgY2hlY2tib3hWYWx1ZUNoYW5nZShldmVudCwgY29sdW1uSXRlbTogSWd4Q29sdW1uUGlubmluZ0l0ZW1EaXJlY3RpdmUpIHtcbiAgICAgICAgaWYgKGV2ZW50LmNoZWNrZWQgJiYgIWNvbHVtbkl0ZW0ucGlubmFibGUpIHtcbiAgICAgICAgICAgIGV2ZW50LmNoZWNrYm94LmNoZWNrZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBjb2x1bW5JdGVtLnZhbHVlID0gIWNvbHVtbkl0ZW0udmFsdWU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQGhpZGRlbiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0IHBpbm5hYmxlQ29sdW1ucygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29sdW1uSXRlbXMuZmlsdGVyKChjb2wpID0+ICFjb2wucGlubmluZ0Rpc2FibGVkKTtcbiAgICB9XG59XG5cbiJdfQ==