import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { IgxColumnComponent } from './column.component';
import { IgxColumnGroupComponent } from './column-group.component';
import { IgxColumnLayoutComponent } from './column-layout.component';
import { IgxCellEditorTemplateDirective, IgxCellFooterTemplateDirective, IgxCellHeaderTemplateDirective, IgxCellTemplateDirective, IgxCollapsibleIndicatorTemplateDirective, IgxFilterCellTemplateDirective } from './templates.directive';
var IgxGridColumnModule = /** @class */ (function () {
    function IgxGridColumnModule() {
    }
    IgxGridColumnModule = __decorate([
        NgModule({
            declarations: [
                IgxFilterCellTemplateDirective,
                IgxCellTemplateDirective,
                IgxCellHeaderTemplateDirective,
                IgxCellFooterTemplateDirective,
                IgxCellEditorTemplateDirective,
                IgxCollapsibleIndicatorTemplateDirective,
                IgxColumnComponent,
                IgxColumnGroupComponent,
                IgxColumnLayoutComponent
            ],
            entryComponents: [
                IgxColumnComponent,
                IgxColumnGroupComponent,
                IgxColumnLayoutComponent
            ],
            exports: [
                IgxFilterCellTemplateDirective,
                IgxCellTemplateDirective,
                IgxCellHeaderTemplateDirective,
                IgxCellFooterTemplateDirective,
                IgxCellEditorTemplateDirective,
                IgxCollapsibleIndicatorTemplateDirective,
                IgxColumnComponent,
                IgxColumnGroupComponent,
                IgxColumnLayoutComponent
            ]
        })
    ], IgxGridColumnModule);
    return IgxGridColumnModule;
}());
export { IgxGridColumnModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sdW1uLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2lnbml0ZXVpLWFuZ3VsYXIvIiwic291cmNlcyI6WyJsaWIvZ3JpZHMvY29sdW1ucy9jb2x1bW4ubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3hELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ25FLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ3JFLE9BQU8sRUFDSCw4QkFBOEIsRUFDOUIsOEJBQThCLEVBQzlCLDhCQUE4QixFQUM5Qix3QkFBd0IsRUFDeEIsd0NBQXdDLEVBQ3hDLDhCQUE4QixFQUNqQyxNQUFNLHVCQUF1QixDQUFDO0FBZ0MvQjtJQUFBO0lBQWtDLENBQUM7SUFBdEIsbUJBQW1CO1FBN0IvQixRQUFRLENBQUM7WUFDTixZQUFZLEVBQUU7Z0JBQ1YsOEJBQThCO2dCQUM5Qix3QkFBd0I7Z0JBQ3hCLDhCQUE4QjtnQkFDOUIsOEJBQThCO2dCQUM5Qiw4QkFBOEI7Z0JBQzlCLHdDQUF3QztnQkFDeEMsa0JBQWtCO2dCQUNsQix1QkFBdUI7Z0JBQ3ZCLHdCQUF3QjthQUMzQjtZQUNELGVBQWUsRUFBRTtnQkFDYixrQkFBa0I7Z0JBQ2xCLHVCQUF1QjtnQkFDdkIsd0JBQXdCO2FBQzNCO1lBQ0QsT0FBTyxFQUFFO2dCQUNMLDhCQUE4QjtnQkFDOUIsd0JBQXdCO2dCQUN4Qiw4QkFBOEI7Z0JBQzlCLDhCQUE4QjtnQkFDOUIsOEJBQThCO2dCQUM5Qix3Q0FBd0M7Z0JBQ3hDLGtCQUFrQjtnQkFDbEIsdUJBQXVCO2dCQUN2Qix3QkFBd0I7YUFDM0I7U0FDSixDQUFDO09BQ1csbUJBQW1CLENBQUc7SUFBRCwwQkFBQztDQUFBLEFBQW5DLElBQW1DO1NBQXRCLG1CQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJZ3hDb2x1bW5Db21wb25lbnQgfSBmcm9tICcuL2NvbHVtbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgSWd4Q29sdW1uR3JvdXBDb21wb25lbnQgfSBmcm9tICcuL2NvbHVtbi1ncm91cC5jb21wb25lbnQnO1xuaW1wb3J0IHsgSWd4Q29sdW1uTGF5b3V0Q29tcG9uZW50IH0gZnJvbSAnLi9jb2x1bW4tbGF5b3V0LmNvbXBvbmVudCc7XG5pbXBvcnQge1xuICAgIElneENlbGxFZGl0b3JUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICBJZ3hDZWxsRm9vdGVyVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgSWd4Q2VsbEhlYWRlclRlbXBsYXRlRGlyZWN0aXZlLFxuICAgIElneENlbGxUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICBJZ3hDb2xsYXBzaWJsZUluZGljYXRvclRlbXBsYXRlRGlyZWN0aXZlLFxuICAgIElneEZpbHRlckNlbGxUZW1wbGF0ZURpcmVjdGl2ZVxufSBmcm9tICcuL3RlbXBsYXRlcy5kaXJlY3RpdmUnO1xuXG5cbkBOZ01vZHVsZSh7XG4gICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgIElneEZpbHRlckNlbGxUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICAgICAgSWd4Q2VsbFRlbXBsYXRlRGlyZWN0aXZlLFxuICAgICAgICBJZ3hDZWxsSGVhZGVyVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgICAgIElneENlbGxGb290ZXJUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICAgICAgSWd4Q2VsbEVkaXRvclRlbXBsYXRlRGlyZWN0aXZlLFxuICAgICAgICBJZ3hDb2xsYXBzaWJsZUluZGljYXRvclRlbXBsYXRlRGlyZWN0aXZlLFxuICAgICAgICBJZ3hDb2x1bW5Db21wb25lbnQsXG4gICAgICAgIElneENvbHVtbkdyb3VwQ29tcG9uZW50LFxuICAgICAgICBJZ3hDb2x1bW5MYXlvdXRDb21wb25lbnRcbiAgICBdLFxuICAgIGVudHJ5Q29tcG9uZW50czogW1xuICAgICAgICBJZ3hDb2x1bW5Db21wb25lbnQsXG4gICAgICAgIElneENvbHVtbkdyb3VwQ29tcG9uZW50LFxuICAgICAgICBJZ3hDb2x1bW5MYXlvdXRDb21wb25lbnRcbiAgICBdLFxuICAgIGV4cG9ydHM6IFtcbiAgICAgICAgSWd4RmlsdGVyQ2VsbFRlbXBsYXRlRGlyZWN0aXZlLFxuICAgICAgICBJZ3hDZWxsVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgICAgIElneENlbGxIZWFkZXJUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICAgICAgSWd4Q2VsbEZvb3RlclRlbXBsYXRlRGlyZWN0aXZlLFxuICAgICAgICBJZ3hDZWxsRWRpdG9yVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgICAgIElneENvbGxhcHNpYmxlSW5kaWNhdG9yVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgICAgIElneENvbHVtbkNvbXBvbmVudCxcbiAgICAgICAgSWd4Q29sdW1uR3JvdXBDb21wb25lbnQsXG4gICAgICAgIElneENvbHVtbkxheW91dENvbXBvbmVudFxuICAgIF1cbn0pXG5leHBvcnQgY2xhc3MgSWd4R3JpZENvbHVtbk1vZHVsZSB7fVxuIl19