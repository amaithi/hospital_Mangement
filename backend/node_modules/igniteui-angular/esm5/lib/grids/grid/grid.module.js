import { __decorate } from "tslib";
import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';
import { IgxGroupAreaDropDirective, IgxGroupByRowTemplateDirective, IgxRowExpandedIndicatorDirective, IgxRowCollapsedIndicatorDirective, IgxHeaderExpandIndicatorDirective, IgxHeaderCollapseIndicatorDirective, IgxGridDetailTemplateDirective } from './grid.directives';
import { IgxGridComponent } from './grid.component';
import { IgxGridPagingPipe, IgxGridGroupingPipe, IgxGridSortingPipe, IgxGridFilteringPipe } from './grid.pipes';
import { IgxGridGroupByRowComponent } from './groupby-row.component';
import { IgxGridRowComponent } from './grid-row.component';
import { IgxGridCommonModule } from '../grid-common.module';
import { IgxGridSummaryPipe } from './grid.summary.pipe';
import { IgxGridDetailsPipe } from './grid.details.pipe';
import { IgxGridExpandableCellComponent } from './expandable-cell.component';
/**
 * @hidden
 */
var IgxGridModule = /** @class */ (function () {
    function IgxGridModule() {
    }
    IgxGridModule = __decorate([
        NgModule({
            declarations: [
                IgxGridComponent,
                IgxGridRowComponent,
                IgxGridGroupByRowComponent,
                IgxGroupByRowTemplateDirective,
                IgxGridDetailTemplateDirective,
                IgxRowExpandedIndicatorDirective,
                IgxRowCollapsedIndicatorDirective,
                IgxHeaderExpandIndicatorDirective,
                IgxHeaderCollapseIndicatorDirective,
                IgxGroupAreaDropDirective,
                IgxGridGroupingPipe,
                IgxGridPagingPipe,
                IgxGridSortingPipe,
                IgxGridFilteringPipe,
                IgxGridSummaryPipe,
                IgxGridDetailsPipe,
                IgxGridExpandableCellComponent
            ],
            exports: [
                IgxGridComponent,
                IgxGridExpandableCellComponent,
                IgxGridGroupByRowComponent,
                IgxGridRowComponent,
                IgxGroupByRowTemplateDirective,
                IgxGridDetailTemplateDirective,
                IgxRowExpandedIndicatorDirective,
                IgxRowCollapsedIndicatorDirective,
                IgxHeaderExpandIndicatorDirective,
                IgxHeaderCollapseIndicatorDirective,
                IgxGroupAreaDropDirective,
                IgxGridGroupingPipe,
                IgxGridPagingPipe,
                IgxGridSortingPipe,
                IgxGridFilteringPipe,
                IgxGridSummaryPipe,
                IgxGridDetailsPipe,
                IgxGridCommonModule
            ],
            imports: [
                IgxGridCommonModule,
            ],
            schemas: [CUSTOM_ELEMENTS_SCHEMA]
        })
    ], IgxGridModule);
    return IgxGridModule;
}());
export { IgxGridModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZC5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9pZ25pdGV1aS1hbmd1bGFyLyIsInNvdXJjZXMiOlsibGliL2dyaWRzL2dyaWQvZ3JpZC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakUsT0FBTyxFQUNILHlCQUF5QixFQUN6Qiw4QkFBOEIsRUFDOUIsZ0NBQWdDLEVBQ2hDLGlDQUFpQyxFQUNqQyxpQ0FBaUMsRUFDakMsbUNBQW1DLEVBQ25DLDhCQUE4QixFQUNqQyxNQUFNLG1CQUFtQixDQUFDO0FBQzNCLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ3BELE9BQU8sRUFDSCxpQkFBaUIsRUFDakIsbUJBQW1CLEVBQ25CLGtCQUFrQixFQUNsQixvQkFBb0IsRUFDdkIsTUFBTSxjQUFjLENBQUM7QUFDdEIsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDckUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDM0QsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDekQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDekQsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDN0U7O0dBRUc7QUE4Q0g7SUFBQTtJQUE0QixDQUFDO0lBQWhCLGFBQWE7UUE3Q3pCLFFBQVEsQ0FBQztZQUNSLFlBQVksRUFBRTtnQkFDWixnQkFBZ0I7Z0JBQ2hCLG1CQUFtQjtnQkFDbkIsMEJBQTBCO2dCQUMxQiw4QkFBOEI7Z0JBQzlCLDhCQUE4QjtnQkFDOUIsZ0NBQWdDO2dCQUNoQyxpQ0FBaUM7Z0JBQ2pDLGlDQUFpQztnQkFDakMsbUNBQW1DO2dCQUNuQyx5QkFBeUI7Z0JBQ3pCLG1CQUFtQjtnQkFDbkIsaUJBQWlCO2dCQUNqQixrQkFBa0I7Z0JBQ2xCLG9CQUFvQjtnQkFDcEIsa0JBQWtCO2dCQUNsQixrQkFBa0I7Z0JBQ2xCLDhCQUE4QjthQUMvQjtZQUNELE9BQU8sRUFBRTtnQkFDUCxnQkFBZ0I7Z0JBQ2hCLDhCQUE4QjtnQkFDOUIsMEJBQTBCO2dCQUMxQixtQkFBbUI7Z0JBQ25CLDhCQUE4QjtnQkFDOUIsOEJBQThCO2dCQUM5QixnQ0FBZ0M7Z0JBQ2hDLGlDQUFpQztnQkFDakMsaUNBQWlDO2dCQUNqQyxtQ0FBbUM7Z0JBQ25DLHlCQUF5QjtnQkFDekIsbUJBQW1CO2dCQUNuQixpQkFBaUI7Z0JBQ2pCLGtCQUFrQjtnQkFDbEIsb0JBQW9CO2dCQUNwQixrQkFBa0I7Z0JBQ2xCLGtCQUFrQjtnQkFDbEIsbUJBQW1CO2FBQ3BCO1lBQ0QsT0FBTyxFQUFFO2dCQUNQLG1CQUFtQjthQUNwQjtZQUNELE9BQU8sRUFBRSxDQUFDLHNCQUFzQixDQUFDO1NBQ2xDLENBQUM7T0FDVyxhQUFhLENBQUc7SUFBRCxvQkFBQztDQUFBLEFBQTdCLElBQTZCO1NBQWhCLGFBQWEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgQ1VTVE9NX0VMRU1FTlRTX1NDSEVNQSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgICBJZ3hHcm91cEFyZWFEcm9wRGlyZWN0aXZlLFxuICAgIElneEdyb3VwQnlSb3dUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICBJZ3hSb3dFeHBhbmRlZEluZGljYXRvckRpcmVjdGl2ZSxcbiAgICBJZ3hSb3dDb2xsYXBzZWRJbmRpY2F0b3JEaXJlY3RpdmUsXG4gICAgSWd4SGVhZGVyRXhwYW5kSW5kaWNhdG9yRGlyZWN0aXZlLFxuICAgIElneEhlYWRlckNvbGxhcHNlSW5kaWNhdG9yRGlyZWN0aXZlLFxuICAgIElneEdyaWREZXRhaWxUZW1wbGF0ZURpcmVjdGl2ZVxufSBmcm9tICcuL2dyaWQuZGlyZWN0aXZlcyc7XG5pbXBvcnQgeyBJZ3hHcmlkQ29tcG9uZW50IH0gZnJvbSAnLi9ncmlkLmNvbXBvbmVudCc7XG5pbXBvcnQge1xuICAgIElneEdyaWRQYWdpbmdQaXBlLFxuICAgIElneEdyaWRHcm91cGluZ1BpcGUsXG4gICAgSWd4R3JpZFNvcnRpbmdQaXBlLFxuICAgIElneEdyaWRGaWx0ZXJpbmdQaXBlXG59IGZyb20gJy4vZ3JpZC5waXBlcyc7XG5pbXBvcnQgeyBJZ3hHcmlkR3JvdXBCeVJvd0NvbXBvbmVudCB9IGZyb20gJy4vZ3JvdXBieS1yb3cuY29tcG9uZW50JztcbmltcG9ydCB7IElneEdyaWRSb3dDb21wb25lbnQgfSBmcm9tICcuL2dyaWQtcm93LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJZ3hHcmlkQ29tbW9uTW9kdWxlIH0gZnJvbSAnLi4vZ3JpZC1jb21tb24ubW9kdWxlJztcbmltcG9ydCB7IElneEdyaWRTdW1tYXJ5UGlwZSB9IGZyb20gJy4vZ3JpZC5zdW1tYXJ5LnBpcGUnO1xuaW1wb3J0IHsgSWd4R3JpZERldGFpbHNQaXBlIH0gZnJvbSAnLi9ncmlkLmRldGFpbHMucGlwZSc7XG5pbXBvcnQgeyBJZ3hHcmlkRXhwYW5kYWJsZUNlbGxDb21wb25lbnQgfSBmcm9tICcuL2V4cGFuZGFibGUtY2VsbC5jb21wb25lbnQnO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1xuICAgIElneEdyaWRDb21wb25lbnQsXG4gICAgSWd4R3JpZFJvd0NvbXBvbmVudCxcbiAgICBJZ3hHcmlkR3JvdXBCeVJvd0NvbXBvbmVudCxcbiAgICBJZ3hHcm91cEJ5Um93VGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgSWd4R3JpZERldGFpbFRlbXBsYXRlRGlyZWN0aXZlLFxuICAgIElneFJvd0V4cGFuZGVkSW5kaWNhdG9yRGlyZWN0aXZlLFxuICAgIElneFJvd0NvbGxhcHNlZEluZGljYXRvckRpcmVjdGl2ZSxcbiAgICBJZ3hIZWFkZXJFeHBhbmRJbmRpY2F0b3JEaXJlY3RpdmUsXG4gICAgSWd4SGVhZGVyQ29sbGFwc2VJbmRpY2F0b3JEaXJlY3RpdmUsXG4gICAgSWd4R3JvdXBBcmVhRHJvcERpcmVjdGl2ZSxcbiAgICBJZ3hHcmlkR3JvdXBpbmdQaXBlLFxuICAgIElneEdyaWRQYWdpbmdQaXBlLFxuICAgIElneEdyaWRTb3J0aW5nUGlwZSxcbiAgICBJZ3hHcmlkRmlsdGVyaW5nUGlwZSxcbiAgICBJZ3hHcmlkU3VtbWFyeVBpcGUsXG4gICAgSWd4R3JpZERldGFpbHNQaXBlLFxuICAgIElneEdyaWRFeHBhbmRhYmxlQ2VsbENvbXBvbmVudFxuICBdLFxuICBleHBvcnRzOiBbXG4gICAgSWd4R3JpZENvbXBvbmVudCxcbiAgICBJZ3hHcmlkRXhwYW5kYWJsZUNlbGxDb21wb25lbnQsXG4gICAgSWd4R3JpZEdyb3VwQnlSb3dDb21wb25lbnQsXG4gICAgSWd4R3JpZFJvd0NvbXBvbmVudCxcbiAgICBJZ3hHcm91cEJ5Um93VGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgSWd4R3JpZERldGFpbFRlbXBsYXRlRGlyZWN0aXZlLFxuICAgIElneFJvd0V4cGFuZGVkSW5kaWNhdG9yRGlyZWN0aXZlLFxuICAgIElneFJvd0NvbGxhcHNlZEluZGljYXRvckRpcmVjdGl2ZSxcbiAgICBJZ3hIZWFkZXJFeHBhbmRJbmRpY2F0b3JEaXJlY3RpdmUsXG4gICAgSWd4SGVhZGVyQ29sbGFwc2VJbmRpY2F0b3JEaXJlY3RpdmUsXG4gICAgSWd4R3JvdXBBcmVhRHJvcERpcmVjdGl2ZSxcbiAgICBJZ3hHcmlkR3JvdXBpbmdQaXBlLFxuICAgIElneEdyaWRQYWdpbmdQaXBlLFxuICAgIElneEdyaWRTb3J0aW5nUGlwZSxcbiAgICBJZ3hHcmlkRmlsdGVyaW5nUGlwZSxcbiAgICBJZ3hHcmlkU3VtbWFyeVBpcGUsXG4gICAgSWd4R3JpZERldGFpbHNQaXBlLFxuICAgIElneEdyaWRDb21tb25Nb2R1bGVcbiAgXSxcbiAgaW1wb3J0czogW1xuICAgIElneEdyaWRDb21tb25Nb2R1bGUsXG4gIF0sXG4gIHNjaGVtYXM6IFtDVVNUT01fRUxFTUVOVFNfU0NIRU1BXVxufSlcbmV4cG9ydCBjbGFzcyBJZ3hHcmlkTW9kdWxlIHt9XG4iXX0=