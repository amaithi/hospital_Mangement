import { __decorate } from "tslib";
import { Component, Input, HostBinding } from '@angular/core';
var NEXT_ID = 0;
/**
 * The `<igx-drop-down-item>` is a container intended for row items in
 * a `<igx-drop-down>` container.
 */
var IgxDropDownGroupComponent = /** @class */ (function () {
    function IgxDropDownGroupComponent() {
        this._id = NEXT_ID++;
        /**
         * @hidden @internal
         */
        this.role = 'group';
        /** @hidden @internal */
        this.groupClass = true;
        /**
         * Sets/gets if the item group is disabled
         *
         * ```typescript
         * const myDropDownGroup: IgxDropDownGroupComponent = this.dropdownGroup;
         * // get
         * ...
         * const groupState: boolean = myDropDownGroup.disabled;
         * ...
         * //set
         * ...
         * myDropDownGroup,disabled = false;
         * ...
         * ```
         *
         * ```html
         * <igx-drop-down-item-group [label]="'My Items'" [disabled]="true">
         *     <igx-drop-down-item *ngFor="let item of items[index]" [value]="item.value">
         *         {{ item.text }}
         *     </igx-drop-down-item>
         * </igx-drop-down-item-group>
         * ```
         *
         * **NOTE:** All items inside of a disabled drop down group will be treated as disabled
         */
        this.disabled = false;
    }
    Object.defineProperty(IgxDropDownGroupComponent.prototype, "labelId", {
        /**
         * @hidden @internal
         */
        get: function () {
            return "igx-item-group-label-" + this._id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDropDownGroupComponent.prototype, "labelledBy", {
        get: function () {
            return this.labelId;
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        HostBinding("attr.aria-labelledby")
    ], IgxDropDownGroupComponent.prototype, "labelledBy", null);
    __decorate([
        HostBinding('attr.role')
    ], IgxDropDownGroupComponent.prototype, "role", void 0);
    __decorate([
        HostBinding('class.igx-drop-down__group')
    ], IgxDropDownGroupComponent.prototype, "groupClass", void 0);
    __decorate([
        Input(),
        HostBinding("attr.aria-disabled"),
        HostBinding('class.igx-drop-down__group--disabled')
    ], IgxDropDownGroupComponent.prototype, "disabled", void 0);
    __decorate([
        Input()
    ], IgxDropDownGroupComponent.prototype, "label", void 0);
    IgxDropDownGroupComponent = __decorate([
        Component({
            selector: 'igx-drop-down-item-group',
            template: "\n        <label id=\"{{labelId}}\">{{ label }}</label>\n        <ng-content select=\"igx-drop-down-item\"></ng-content>\n    "
        })
    ], IgxDropDownGroupComponent);
    return IgxDropDownGroupComponent;
}());
export { IgxDropDownGroupComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcC1kb3duLWdyb3VwLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2lnbml0ZXVpLWFuZ3VsYXIvIiwic291cmNlcyI6WyJsaWIvZHJvcC1kb3duL2Ryb3AtZG93bi1ncm91cC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUU5RCxJQUFJLE9BQU8sR0FBRyxDQUFDLENBQUM7QUFDaEI7OztHQUdHO0FBUUg7SUFBQTtRQUNZLFFBQUcsR0FBRyxPQUFPLEVBQUUsQ0FBQztRQWN4Qjs7V0FFRztRQUVJLFNBQUksR0FBRyxPQUFPLENBQUM7UUFFdEIsd0JBQXdCO1FBRWpCLGVBQVUsR0FBRyxJQUFJLENBQUM7UUFDekI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztXQXdCRztRQUlJLGFBQVEsR0FBRyxLQUFLLENBQUM7SUF5QjVCLENBQUM7SUF2RUcsc0JBQVcsOENBQU87UUFIbEI7O1dBRUc7YUFDSDtZQUNJLE9BQU8sMEJBQXdCLElBQUksQ0FBQyxHQUFLLENBQUM7UUFDOUMsQ0FBQzs7O09BQUE7SUFHRCxzQkFBVyxpREFBVTthQUFyQjtZQUNJLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztRQUN4QixDQUFDOzs7T0FBQTtJQUZEO1FBREMsV0FBVyxDQUFDLHNCQUFzQixDQUFDOytEQUduQztJQU1EO1FBREMsV0FBVyxDQUFDLFdBQVcsQ0FBQzsyREFDSDtJQUl0QjtRQURDLFdBQVcsQ0FBQyw0QkFBNEIsQ0FBQztpRUFDakI7SUE2QnpCO1FBSEMsS0FBSyxFQUFFO1FBQ1AsV0FBVyxDQUFDLG9CQUFvQixDQUFDO1FBQ2pDLFdBQVcsQ0FBQyxzQ0FBc0MsQ0FBQzsrREFDNUI7SUF3QnhCO1FBREMsS0FBSyxFQUFFOzREQUNhO0lBNUVaLHlCQUF5QjtRQVByQyxTQUFTLENBQUM7WUFDUCxRQUFRLEVBQUUsMEJBQTBCO1lBQ3BDLFFBQVEsRUFBRSxnSUFHVDtTQUNKLENBQUM7T0FDVyx5QkFBeUIsQ0E2RXJDO0lBQUQsZ0NBQUM7Q0FBQSxBQTdFRCxJQTZFQztTQTdFWSx5QkFBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBIb3N0QmluZGluZyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5sZXQgTkVYVF9JRCA9IDA7XG4vKipcbiAqIFRoZSBgPGlneC1kcm9wLWRvd24taXRlbT5gIGlzIGEgY29udGFpbmVyIGludGVuZGVkIGZvciByb3cgaXRlbXMgaW5cbiAqIGEgYDxpZ3gtZHJvcC1kb3duPmAgY29udGFpbmVyLlxuICovXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2lneC1kcm9wLWRvd24taXRlbS1ncm91cCcsXG4gICAgdGVtcGxhdGU6IGBcbiAgICAgICAgPGxhYmVsIGlkPVwie3tsYWJlbElkfX1cIj57eyBsYWJlbCB9fTwvbGFiZWw+XG4gICAgICAgIDxuZy1jb250ZW50IHNlbGVjdD1cImlneC1kcm9wLWRvd24taXRlbVwiPjwvbmctY29udGVudD5cbiAgICBgXG59KVxuZXhwb3J0IGNsYXNzIElneERyb3BEb3duR3JvdXBDb21wb25lbnQge1xuICAgIHByaXZhdGUgX2lkID0gTkVYVF9JRCsrO1xuXG4gICAgLyoqXG4gICAgICogQGhpZGRlbiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0IGxhYmVsSWQoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIGBpZ3gtaXRlbS1ncm91cC1sYWJlbC0ke3RoaXMuX2lkfWA7XG4gICAgfVxuXG4gICAgQEhvc3RCaW5kaW5nKGBhdHRyLmFyaWEtbGFiZWxsZWRieWApXG4gICAgcHVibGljIGdldCBsYWJlbGxlZEJ5KCk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiB0aGlzLmxhYmVsSWQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQGhpZGRlbiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBASG9zdEJpbmRpbmcoJ2F0dHIucm9sZScpXG4gICAgcHVibGljIHJvbGUgPSAnZ3JvdXAnO1xuXG4gICAgLyoqIEBoaWRkZW4gQGludGVybmFsICovXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5pZ3gtZHJvcC1kb3duX19ncm91cCcpXG4gICAgcHVibGljIGdyb3VwQ2xhc3MgPSB0cnVlO1xuICAgIC8qKlxuICAgICAqIFNldHMvZ2V0cyBpZiB0aGUgaXRlbSBncm91cCBpcyBkaXNhYmxlZFxuICAgICAqXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGNvbnN0IG15RHJvcERvd25Hcm91cDogSWd4RHJvcERvd25Hcm91cENvbXBvbmVudCA9IHRoaXMuZHJvcGRvd25Hcm91cDtcbiAgICAgKiAvLyBnZXRcbiAgICAgKiAuLi5cbiAgICAgKiBjb25zdCBncm91cFN0YXRlOiBib29sZWFuID0gbXlEcm9wRG93bkdyb3VwLmRpc2FibGVkO1xuICAgICAqIC4uLlxuICAgICAqIC8vc2V0XG4gICAgICogLi4uXG4gICAgICogbXlEcm9wRG93bkdyb3VwLGRpc2FibGVkID0gZmFsc2U7XG4gICAgICogLi4uXG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBgYGBodG1sXG4gICAgICogPGlneC1kcm9wLWRvd24taXRlbS1ncm91cCBbbGFiZWxdPVwiJ015IEl0ZW1zJ1wiIFtkaXNhYmxlZF09XCJ0cnVlXCI+XG4gICAgICogICAgIDxpZ3gtZHJvcC1kb3duLWl0ZW0gKm5nRm9yPVwibGV0IGl0ZW0gb2YgaXRlbXNbaW5kZXhdXCIgW3ZhbHVlXT1cIml0ZW0udmFsdWVcIj5cbiAgICAgKiAgICAgICAgIHt7IGl0ZW0udGV4dCB9fVxuICAgICAqICAgICA8L2lneC1kcm9wLWRvd24taXRlbT5cbiAgICAgKiA8L2lneC1kcm9wLWRvd24taXRlbS1ncm91cD5cbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqICoqTk9URToqKiBBbGwgaXRlbXMgaW5zaWRlIG9mIGEgZGlzYWJsZWQgZHJvcCBkb3duIGdyb3VwIHdpbGwgYmUgdHJlYXRlZCBhcyBkaXNhYmxlZFxuICAgICAqL1xuICAgIEBJbnB1dCgpXG4gICAgQEhvc3RCaW5kaW5nKGBhdHRyLmFyaWEtZGlzYWJsZWRgKVxuICAgIEBIb3N0QmluZGluZygnY2xhc3MuaWd4LWRyb3AtZG93bl9fZ3JvdXAtLWRpc2FibGVkJylcbiAgICBwdWJsaWMgZGlzYWJsZWQgPSBmYWxzZTtcblxuICAgIC8qKlxuICAgICAqIFNldHMvZ2V0cyB0aGUgbGFiZWwgb2YgdGhlIGl0ZW0gZ3JvdXBcbiAgICAgKlxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBjb25zdCBteURyb3BEb3duR3JvdXA6IElneERyb3BEb3duR3JvdXBDb21wb25lbnQgPSB0aGlzLmRyb3Bkb3duR3JvdXA7XG4gICAgICogLy8gZ2V0XG4gICAgICogLi4uXG4gICAgICogY29uc3QgbXlMYWJlbDogc3RyaW5nID0gbXlEcm9wRG93bkdyb3VwLmxhYmVsO1xuICAgICAqIC4uLlxuICAgICAqIC8vIHNldFxuICAgICAqIC4uLlxuICAgICAqIG15RHJvcERvd25Hcm91cC5sYWJlbCA9ICdNeSBOZXcgTGFiZWwnO1xuICAgICAqIC4uLlxuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogYGBgaHRtbFxuICAgICAqIDxpZ3gtZHJvcC1kb3duLWl0ZW0tZ3JvdXAgW2xhYmVsXT1cIidNeSBuZXcgTGFiZWwnXCI+XG4gICAgICogICAgICAuLi5cbiAgICAgKiA8L2lneC1kcm9wLWRvd24taXRlbS1ncm91cD5cbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBASW5wdXQoKVxuICAgIHB1YmxpYyBsYWJlbDogc3RyaW5nO1xufVxuIl19