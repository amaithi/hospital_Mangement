import { __decorate, __extends } from "tslib";
import { Component, HostBinding } from '@angular/core';
import { IgxDropDownItemBaseDirective } from './drop-down-item.base';
/**
 * The `<igx-drop-down-item>` is a container intended for row items in
 * a `<igx-drop-down>` container.
 */
var IgxDropDownItemComponent = /** @class */ (function (_super) {
    __extends(IgxDropDownItemComponent, _super);
    function IgxDropDownItemComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(IgxDropDownItemComponent.prototype, "focused", {
        /**
         * @inheritdoc
         */
        get: function () {
            var focusedState = this._focused;
            if (this.hasIndex) {
                var focusedItem = this.selection.first_item(this.dropDown.id + "-active");
                var focusedIndex = focusedItem ? focusedItem.index : -1;
                focusedState = this._index === focusedIndex;
            }
            return this.isSelectable && focusedState;
        },
        /**
         * @inheritdoc
         */
        set: function (value) {
            this._focused = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDropDownItemComponent.prototype, "selected", {
        /**
         * @inheritdoc
         */
        get: function () {
            if (this.hasIndex) {
                var item = this.selection.first_item("" + this.dropDown.id);
                return item ? item.index === this._index && item.value === this.value : false;
            }
            return this._selected;
        },
        /**
         * @inheritdoc
         */
        set: function (value) {
            if (this.isHeader) {
                return;
            }
            this._selected = value;
            this.selectedChange.emit(this._selected);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDropDownItemComponent.prototype, "setTabIndex", {
        /**
         * @hidden @internal
         */
        get: function () {
            var shouldSetTabIndex = this.dropDown.allowItemsFocus && this.isSelectable;
            if (shouldSetTabIndex) {
                return 0;
            }
            else {
                return null;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @inheritdoc
     */
    IgxDropDownItemComponent.prototype.clicked = function (event) {
        if (!this.isSelectable) {
            this.ensureItemFocus();
            return;
        }
        if (this.selection) {
            this.dropDown.selectItem(this, event);
        }
    };
    __decorate([
        HostBinding('attr.tabindex')
    ], IgxDropDownItemComponent.prototype, "setTabIndex", null);
    IgxDropDownItemComponent = __decorate([
        Component({
            selector: 'igx-drop-down-item',
            template: "<ng-content></ng-content>"
        })
    ], IgxDropDownItemComponent);
    return IgxDropDownItemComponent;
}(IgxDropDownItemBaseDirective));
export { IgxDropDownItemComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcC1kb3duLWl0ZW0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vaWduaXRldWktYW5ndWxhci8iLCJzb3VyY2VzIjpbImxpYi9kcm9wLWRvd24vZHJvcC1kb3duLWl0ZW0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0gsU0FBUyxFQUNULFdBQVcsRUFDZCxNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUVyRTs7O0dBR0c7QUFLSDtJQUE4Qyw0Q0FBNEI7SUFBMUU7O0lBa0VBLENBQUM7SUE5REcsc0JBQUksNkNBQU87UUFIWDs7V0FFRzthQUNIO1lBQ0ksSUFBSSxZQUFZLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztZQUNqQyxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7Z0JBQ2YsSUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLFlBQVMsQ0FBQyxDQUFDO2dCQUM1RSxJQUFNLFlBQVksR0FBRyxXQUFXLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUMxRCxZQUFZLEdBQUcsSUFBSSxDQUFDLE1BQU0sS0FBSyxZQUFZLENBQUM7YUFDL0M7WUFDRCxPQUFPLElBQUksQ0FBQyxZQUFZLElBQUksWUFBWSxDQUFDO1FBQzdDLENBQUM7UUFFRDs7V0FFRzthQUNILFVBQVksS0FBYztZQUN0QixJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztRQUMxQixDQUFDOzs7T0FQQTtJQVdELHNCQUFJLDhDQUFRO1FBSFo7O1dBRUc7YUFDSDtZQUNJLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtnQkFDZixJQUFNLElBQUksR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQyxLQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBSSxDQUFDLENBQUM7Z0JBQzlELE9BQU8sSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxLQUFLLElBQUksQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDLEtBQUssS0FBSyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7YUFDakY7WUFDRCxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDMUIsQ0FBQztRQUVEOztXQUVHO2FBQ0gsVUFBYSxLQUFjO1lBQ3ZCLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtnQkFDZixPQUFPO2FBQ1Y7WUFDRCxJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztZQUN2QixJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDN0MsQ0FBQzs7O09BWEE7SUFnQkQsc0JBQUksaURBQVc7UUFKZjs7V0FFRzthQUVIO1lBQ0ksSUFBTSxpQkFBaUIsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLGVBQWUsSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDO1lBQzdFLElBQUksaUJBQWlCLEVBQUU7Z0JBQ25CLE9BQU8sQ0FBQyxDQUFDO2FBQ1o7aUJBQU07Z0JBQ0gsT0FBTyxJQUFJLENBQUM7YUFDZjtRQUNMLENBQUM7OztPQUFBO0lBRUQ7O09BRUc7SUFDSCwwQ0FBTyxHQUFQLFVBQVEsS0FBSztRQUNULElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFO1lBQ3BCLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztZQUN2QixPQUFPO1NBQ1Y7UUFDRCxJQUFJLElBQUksQ0FBQyxTQUFTLEVBQUU7WUFDaEIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDO1NBQ3pDO0lBQ0wsQ0FBQztJQXBCRDtRQURDLFdBQVcsQ0FBQyxlQUFlLENBQUM7K0RBUTVCO0lBcERRLHdCQUF3QjtRQUpwQyxTQUFTLENBQUM7WUFDUCxRQUFRLEVBQUUsb0JBQW9CO1lBQzlCLHFDQUE0QztTQUMvQyxDQUFDO09BQ1csd0JBQXdCLENBa0VwQztJQUFELCtCQUFDO0NBQUEsQUFsRUQsQ0FBOEMsNEJBQTRCLEdBa0V6RTtTQWxFWSx3QkFBd0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIENvbXBvbmVudCxcbiAgICBIb3N0QmluZGluZ1xufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElneERyb3BEb3duSXRlbUJhc2VEaXJlY3RpdmUgfSBmcm9tICcuL2Ryb3AtZG93bi1pdGVtLmJhc2UnO1xuXG4vKipcbiAqIFRoZSBgPGlneC1kcm9wLWRvd24taXRlbT5gIGlzIGEgY29udGFpbmVyIGludGVuZGVkIGZvciByb3cgaXRlbXMgaW5cbiAqIGEgYDxpZ3gtZHJvcC1kb3duPmAgY29udGFpbmVyLlxuICovXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2lneC1kcm9wLWRvd24taXRlbScsXG4gICAgdGVtcGxhdGVVcmw6ICdkcm9wLWRvd24taXRlbS5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgSWd4RHJvcERvd25JdGVtQ29tcG9uZW50IGV4dGVuZHMgSWd4RHJvcERvd25JdGVtQmFzZURpcmVjdGl2ZSB7XG4gICAgLyoqXG4gICAgICogQGluaGVyaXRkb2NcbiAgICAgKi9cbiAgICBnZXQgZm9jdXNlZCgpOiBib29sZWFuIHtcbiAgICAgICAgbGV0IGZvY3VzZWRTdGF0ZSA9IHRoaXMuX2ZvY3VzZWQ7XG4gICAgICAgIGlmICh0aGlzLmhhc0luZGV4KSB7XG4gICAgICAgICAgICBjb25zdCBmb2N1c2VkSXRlbSA9IHRoaXMuc2VsZWN0aW9uLmZpcnN0X2l0ZW0oYCR7dGhpcy5kcm9wRG93bi5pZH0tYWN0aXZlYCk7XG4gICAgICAgICAgICBjb25zdCBmb2N1c2VkSW5kZXggPSBmb2N1c2VkSXRlbSA/IGZvY3VzZWRJdGVtLmluZGV4IDogLTE7XG4gICAgICAgICAgICBmb2N1c2VkU3RhdGUgPSB0aGlzLl9pbmRleCA9PT0gZm9jdXNlZEluZGV4O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmlzU2VsZWN0YWJsZSAmJiBmb2N1c2VkU3RhdGU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQGluaGVyaXRkb2NcbiAgICAgKi9cbiAgICBzZXQgZm9jdXNlZCh2YWx1ZTogYm9vbGVhbikge1xuICAgICAgICB0aGlzLl9mb2N1c2VkID0gdmFsdWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbmhlcml0ZG9jXG4gICAgICovXG4gICAgZ2V0IHNlbGVjdGVkKCk6IGJvb2xlYW4ge1xuICAgICAgICBpZiAodGhpcy5oYXNJbmRleCkge1xuICAgICAgICAgICAgY29uc3QgaXRlbSA9IHRoaXMuc2VsZWN0aW9uLmZpcnN0X2l0ZW0oYCR7dGhpcy5kcm9wRG93bi5pZH1gKTtcbiAgICAgICAgICAgIHJldHVybiBpdGVtID8gaXRlbS5pbmRleCA9PT0gdGhpcy5faW5kZXggJiYgaXRlbS52YWx1ZSA9PT0gdGhpcy52YWx1ZSA6IGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9zZWxlY3RlZDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAaW5oZXJpdGRvY1xuICAgICAqL1xuICAgIHNldCBzZWxlY3RlZCh2YWx1ZTogYm9vbGVhbikge1xuICAgICAgICBpZiAodGhpcy5pc0hlYWRlcikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3NlbGVjdGVkID0gdmFsdWU7XG4gICAgICAgIHRoaXMuc2VsZWN0ZWRDaGFuZ2UuZW1pdCh0aGlzLl9zZWxlY3RlZCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW4gQGludGVybmFsXG4gICAgICovXG4gICAgQEhvc3RCaW5kaW5nKCdhdHRyLnRhYmluZGV4JylcbiAgICBnZXQgc2V0VGFiSW5kZXgoKSB7XG4gICAgICAgIGNvbnN0IHNob3VsZFNldFRhYkluZGV4ID0gdGhpcy5kcm9wRG93bi5hbGxvd0l0ZW1zRm9jdXMgJiYgdGhpcy5pc1NlbGVjdGFibGU7XG4gICAgICAgIGlmIChzaG91bGRTZXRUYWJJbmRleCkge1xuICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBpbmhlcml0ZG9jXG4gICAgICovXG4gICAgY2xpY2tlZChldmVudCk6IHZvaWQge1xuICAgICAgICBpZiAoIXRoaXMuaXNTZWxlY3RhYmxlKSB7XG4gICAgICAgICAgICB0aGlzLmVuc3VyZUl0ZW1Gb2N1cygpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnNlbGVjdGlvbikge1xuICAgICAgICAgICAgdGhpcy5kcm9wRG93bi5zZWxlY3RJdGVtKHRoaXMsIGV2ZW50KTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==