import { __decorate, __extends } from "tslib";
import { Component, ElementRef, HostBinding, Input, ViewChild, ViewContainerRef, ChangeDetectorRef, OnDestroy, OnInit } from '@angular/core';
import { VirtualHelperBaseDirective } from './base.helper.component';
var VirtualHelperComponent = /** @class */ (function (_super) {
    __extends(VirtualHelperComponent, _super);
    function VirtualHelperComponent(elementRef, cdr) {
        var _this = _super.call(this, elementRef, cdr) || this;
        _this.elementRef = elementRef;
        _this.cdr = cdr;
        _this.cssClasses = 'igx-vhelper--vertical';
        return _this;
    }
    VirtualHelperComponent.prototype.ngOnInit = function () {
        this.scrollWidth = this.getScrollWidth();
    };
    VirtualHelperComponent.prototype.getScrollWidth = function () {
        var div = document.createElement('div');
        var style = div.style;
        style.width = '100px';
        style.height = '100px';
        style.position = 'absolute';
        style.top = '-10000px';
        style.top = '-10000px';
        style.overflow = 'scroll';
        document.body.appendChild(div);
        var scrollWidth = div.offsetWidth - div.clientWidth;
        document.body.removeChild(div);
        return scrollWidth ? scrollWidth + 1 : 0;
    };
    VirtualHelperComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: ChangeDetectorRef }
    ]; };
    __decorate([
        HostBinding('scrollTop')
    ], VirtualHelperComponent.prototype, "scrollTop", void 0);
    __decorate([
        HostBinding('style.width.px')
    ], VirtualHelperComponent.prototype, "scrollWidth", void 0);
    __decorate([
        ViewChild('container', { read: ViewContainerRef, static: true })
    ], VirtualHelperComponent.prototype, "_vcr", void 0);
    __decorate([
        Input()
    ], VirtualHelperComponent.prototype, "itemsLength", void 0);
    __decorate([
        HostBinding('class')
    ], VirtualHelperComponent.prototype, "cssClasses", void 0);
    VirtualHelperComponent = __decorate([
        Component({
            selector: 'igx-virtual-helper',
            template: '<div #container class="igx-vhelper__placeholder-content" [style.height.px]="size"></div>'
        })
    ], VirtualHelperComponent);
    return VirtualHelperComponent;
}(VirtualHelperBaseDirective));
export { VirtualHelperComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlydHVhbC5oZWxwZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vaWduaXRldWktYW5ndWxhci8iLCJzb3VyY2VzIjpbImxpYi9kaXJlY3RpdmVzL2Zvci1vZi92aXJ0dWFsLmhlbHBlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUMxRSxpQkFBaUIsRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pFLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBTXJFO0lBQTRDLDBDQUEwQjtJQWNsRSxnQ0FBbUIsVUFBc0IsRUFBUyxHQUFzQjtRQUF4RSxZQUNJLGtCQUFNLFVBQVUsRUFBRSxHQUFHLENBQUMsU0FDekI7UUFGa0IsZ0JBQVUsR0FBVixVQUFVLENBQVk7UUFBUyxTQUFHLEdBQUgsR0FBRyxDQUFtQjtRQUZqRSxnQkFBVSxHQUFHLHVCQUF1QixDQUFDOztJQUk1QyxDQUFDO0lBRUQseUNBQVEsR0FBUjtRQUNJLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQzdDLENBQUM7SUFFTywrQ0FBYyxHQUF0QjtRQUNJLElBQU0sR0FBRyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDMUMsSUFBTSxLQUFLLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQztRQUN4QixLQUFLLENBQUMsS0FBSyxHQUFHLE9BQU8sQ0FBQztRQUN0QixLQUFLLENBQUMsTUFBTSxHQUFHLE9BQU8sQ0FBQztRQUN2QixLQUFLLENBQUMsUUFBUSxHQUFHLFVBQVUsQ0FBQztRQUM1QixLQUFLLENBQUMsR0FBRyxHQUFHLFVBQVUsQ0FBQztRQUN2QixLQUFLLENBQUMsR0FBRyxHQUFHLFVBQVUsQ0FBQztRQUN2QixLQUFLLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUMxQixRQUFRLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUMvQixJQUFNLFdBQVcsR0FBRyxHQUFHLENBQUMsV0FBVyxHQUFHLEdBQUcsQ0FBQyxXQUFXLENBQUM7UUFDdEQsUUFBUSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0IsT0FBTyxXQUFXLENBQUMsQ0FBQyxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUM3QyxDQUFDOztnQkFyQjhCLFVBQVU7Z0JBQWMsaUJBQWlCOztJQVp4RTtRQURDLFdBQVcsQ0FBQyxXQUFXLENBQUM7NkRBQ1I7SUFHakI7UUFEQyxXQUFXLENBQUMsZ0JBQWdCLENBQUM7K0RBQ1g7SUFFK0M7UUFBakUsU0FBUyxDQUFDLFdBQVcsRUFBRSxFQUFFLElBQUksRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUM7d0RBQWE7SUFDckU7UUFBUixLQUFLLEVBQUU7K0RBQTRCO0lBSXBDO1FBREMsV0FBVyxDQUFDLE9BQU8sQ0FBQzs4REFDdUI7SUFabkMsc0JBQXNCO1FBSmxDLFNBQVMsQ0FBQztZQUNQLFFBQVEsRUFBRSxvQkFBb0I7WUFDOUIsUUFBUSxFQUFFLDBGQUEwRjtTQUN2RyxDQUFDO09BQ1csc0JBQXNCLENBcUNsQztJQUFELDZCQUFDO0NBQUEsQUFyQ0QsQ0FBNEMsMEJBQTBCLEdBcUNyRTtTQXJDWSxzQkFBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIEhvc3RCaW5kaW5nLCBJbnB1dCwgVmlld0NoaWxkLCBWaWV3Q29udGFpbmVyUmVmLFxuICAgICBDaGFuZ2VEZXRlY3RvclJlZiwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFZpcnR1YWxIZWxwZXJCYXNlRGlyZWN0aXZlIH0gZnJvbSAnLi9iYXNlLmhlbHBlci5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2lneC12aXJ0dWFsLWhlbHBlcicsXG4gICAgdGVtcGxhdGU6ICc8ZGl2ICNjb250YWluZXIgY2xhc3M9XCJpZ3gtdmhlbHBlcl9fcGxhY2Vob2xkZXItY29udGVudFwiIFtzdHlsZS5oZWlnaHQucHhdPVwic2l6ZVwiPjwvZGl2Pidcbn0pXG5leHBvcnQgY2xhc3MgVmlydHVhbEhlbHBlckNvbXBvbmVudCBleHRlbmRzIFZpcnR1YWxIZWxwZXJCYXNlRGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kgIHtcbiAgICBASG9zdEJpbmRpbmcoJ3Njcm9sbFRvcCcpXG4gICAgcHVibGljIHNjcm9sbFRvcDtcblxuICAgIEBIb3N0QmluZGluZygnc3R5bGUud2lkdGgucHgnKVxuICAgIHB1YmxpYyBzY3JvbGxXaWR0aDtcblxuICAgIEBWaWV3Q2hpbGQoJ2NvbnRhaW5lcicsIHsgcmVhZDogVmlld0NvbnRhaW5lclJlZiwgc3RhdGljOiB0cnVlIH0pIHB1YmxpYyBfdmNyO1xuICAgIEBJbnB1dCgpIHB1YmxpYyBpdGVtc0xlbmd0aDogbnVtYmVyO1xuXG5cbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzJylcbiAgICBwdWJsaWMgY3NzQ2xhc3NlcyA9ICdpZ3gtdmhlbHBlci0tdmVydGljYWwnO1xuXG4gICAgY29uc3RydWN0b3IocHVibGljIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsIHB1YmxpYyBjZHI6IENoYW5nZURldGVjdG9yUmVmKSB7XG4gICAgICAgIHN1cGVyKGVsZW1lbnRSZWYsIGNkcik7XG4gICAgfVxuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIHRoaXMuc2Nyb2xsV2lkdGggPSB0aGlzLmdldFNjcm9sbFdpZHRoKCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBnZXRTY3JvbGxXaWR0aCgpIHtcbiAgICAgICAgY29uc3QgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGNvbnN0IHN0eWxlID0gZGl2LnN0eWxlO1xuICAgICAgICBzdHlsZS53aWR0aCA9ICcxMDBweCc7XG4gICAgICAgIHN0eWxlLmhlaWdodCA9ICcxMDBweCc7XG4gICAgICAgIHN0eWxlLnBvc2l0aW9uID0gJ2Fic29sdXRlJztcbiAgICAgICAgc3R5bGUudG9wID0gJy0xMDAwMHB4JztcbiAgICAgICAgc3R5bGUudG9wID0gJy0xMDAwMHB4JztcbiAgICAgICAgc3R5bGUub3ZlcmZsb3cgPSAnc2Nyb2xsJztcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChkaXYpO1xuICAgICAgICBjb25zdCBzY3JvbGxXaWR0aCA9IGRpdi5vZmZzZXRXaWR0aCAtIGRpdi5jbGllbnRXaWR0aDtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChkaXYpO1xuICAgICAgICByZXR1cm4gc2Nyb2xsV2lkdGggPyBzY3JvbGxXaWR0aCArIDEgOiAwO1xuICAgIH1cblxufVxuIl19