import { ExcelFileTypes, ExcelFolderTypes } from './excel-enums';
import { AppFile, ContentTypesFile, CoreFile, RootRelsFile, SharedStringsFile, StyleFile, TablesFile, ThemeFile, WorkbookFile, WorkbookRelsFile, WorksheetFile, WorksheetRelsFile } from './excel-files';
import { DocPropsExcelFolder, RootExcelFolder, RootRelsExcelFolder, TablesExcelFolder, ThemeExcelFolder, WorksheetsExcelFolder, WorksheetsRelsExcelFolder, XLExcelFolder, XLRelsExcelFolder } from './excel-folders';
/** @hidden */
var ExcelElementsFactory = /** @class */ (function () {
    function ExcelElementsFactory() {
    }
    ExcelElementsFactory.getExcelFolder = function (type) {
        switch (type) {
            case ExcelFolderTypes.RootExcelFolder:
                return new RootExcelFolder();
            case ExcelFolderTypes.RootRelsExcelFolder:
                return new RootRelsExcelFolder();
            case ExcelFolderTypes.DocPropsExcelFolder:
                return new DocPropsExcelFolder();
            case ExcelFolderTypes.XLExcelFolder:
                return new XLExcelFolder();
            case ExcelFolderTypes.XLRelsExcelFolder:
                return new XLRelsExcelFolder();
            case ExcelFolderTypes.ThemeExcelFolder:
                return new ThemeExcelFolder();
            case ExcelFolderTypes.WorksheetsExcelFolder:
                return new WorksheetsExcelFolder();
            case ExcelFolderTypes.WorksheetsRelsExcelFolder:
                return new WorksheetsRelsExcelFolder();
            case ExcelFolderTypes.TablesExcelFolder:
                return new TablesExcelFolder();
            default:
                throw new Error('Unknown excel folder type!');
        }
    };
    ExcelElementsFactory.getExcelFile = function (type) {
        switch (type) {
            case ExcelFileTypes.RootRelsFile:
                return new RootRelsFile();
            case ExcelFileTypes.AppFile:
                return new AppFile();
            case ExcelFileTypes.CoreFile:
                return new CoreFile();
            case ExcelFileTypes.WorkbookRelsFile:
                return new WorkbookRelsFile();
            case ExcelFileTypes.ThemeFile:
                return new ThemeFile();
            case ExcelFileTypes.WorksheetFile:
                return new WorksheetFile();
            case ExcelFileTypes.StyleFile:
                return new StyleFile();
            case ExcelFileTypes.WorkbookFile:
                return new WorkbookFile();
            case ExcelFileTypes.ContentTypesFile:
                return new ContentTypesFile();
            case ExcelFileTypes.SharedStringsFile:
                return new SharedStringsFile();
            case ExcelFileTypes.WorksheetRelsFile:
                return new WorksheetRelsFile();
            case ExcelFileTypes.TablesFile:
                return new TablesFile();
            default:
                throw Error('Unknown excel file type!');
        }
    };
    return ExcelElementsFactory;
}());
export { ExcelElementsFactory };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhjZWwtZWxlbWVudHMtZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2lnbml0ZXVpLWFuZ3VsYXIvIiwic291cmNlcyI6WyJsaWIvc2VydmljZXMvZXhjZWwvZXhjZWwtZWxlbWVudHMtZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0gsY0FBYyxFQUNkLGdCQUFnQixFQUNuQixNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQ0gsT0FBTyxFQUNQLGdCQUFnQixFQUNoQixRQUFRLEVBQ1IsWUFBWSxFQUNaLGlCQUFpQixFQUNqQixTQUFTLEVBQ1QsVUFBVSxFQUNWLFNBQVMsRUFDVCxZQUFZLEVBQ1osZ0JBQWdCLEVBQ2hCLGFBQWEsRUFDYixpQkFBaUIsRUFDcEIsTUFBTSxlQUFlLENBQUM7QUFFdkIsT0FBTyxFQUNILG1CQUFtQixFQUNuQixlQUFlLEVBQ2YsbUJBQW1CLEVBQ25CLGlCQUFpQixFQUNqQixnQkFBZ0IsRUFDaEIscUJBQXFCLEVBQ3JCLHlCQUF5QixFQUN6QixhQUFhLEVBQ2IsaUJBQWlCLEVBQ3BCLE1BQU0saUJBQWlCLENBQUM7QUFPekIsY0FBYztBQUNkO0lBQUE7SUF5REEsQ0FBQztJQXZEaUIsbUNBQWMsR0FBNUIsVUFBNkIsSUFBc0I7UUFDL0MsUUFBUSxJQUFJLEVBQUU7WUFDVixLQUFLLGdCQUFnQixDQUFDLGVBQWU7Z0JBQ2pDLE9BQU8sSUFBSSxlQUFlLEVBQUUsQ0FBQztZQUNqQyxLQUFLLGdCQUFnQixDQUFDLG1CQUFtQjtnQkFDckMsT0FBTyxJQUFJLG1CQUFtQixFQUFFLENBQUM7WUFDckMsS0FBSyxnQkFBZ0IsQ0FBQyxtQkFBbUI7Z0JBQ3JDLE9BQU8sSUFBSSxtQkFBbUIsRUFBRSxDQUFDO1lBQ3JDLEtBQUssZ0JBQWdCLENBQUMsYUFBYTtnQkFDL0IsT0FBTyxJQUFJLGFBQWEsRUFBRSxDQUFDO1lBQy9CLEtBQUssZ0JBQWdCLENBQUMsaUJBQWlCO2dCQUNuQyxPQUFPLElBQUksaUJBQWlCLEVBQUUsQ0FBQztZQUNuQyxLQUFLLGdCQUFnQixDQUFDLGdCQUFnQjtnQkFDbEMsT0FBTyxJQUFJLGdCQUFnQixFQUFFLENBQUM7WUFDbEMsS0FBSyxnQkFBZ0IsQ0FBQyxxQkFBcUI7Z0JBQ3ZDLE9BQVEsSUFBSSxxQkFBcUIsRUFBRSxDQUFDO1lBQ3hDLEtBQUssZ0JBQWdCLENBQUMseUJBQXlCO2dCQUMzQyxPQUFPLElBQUkseUJBQXlCLEVBQUUsQ0FBQztZQUMzQyxLQUFLLGdCQUFnQixDQUFDLGlCQUFpQjtnQkFDbkMsT0FBTyxJQUFJLGlCQUFpQixFQUFFLENBQUM7WUFDbkM7Z0JBQ0ksTUFBTSxJQUFJLEtBQUssQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDO1NBQ3JEO0lBQ0wsQ0FBQztJQUVhLGlDQUFZLEdBQTFCLFVBQTJCLElBQW9CO1FBQzNDLFFBQVEsSUFBSSxFQUFFO1lBQ1YsS0FBSyxjQUFjLENBQUMsWUFBWTtnQkFDNUIsT0FBUSxJQUFJLFlBQVksRUFBRSxDQUFDO1lBQy9CLEtBQUssY0FBYyxDQUFDLE9BQU87Z0JBQ3ZCLE9BQVEsSUFBSSxPQUFPLEVBQUUsQ0FBQztZQUMxQixLQUFLLGNBQWMsQ0FBQyxRQUFRO2dCQUN4QixPQUFPLElBQUksUUFBUSxFQUFFLENBQUM7WUFDMUIsS0FBSyxjQUFjLENBQUMsZ0JBQWdCO2dCQUNoQyxPQUFPLElBQUksZ0JBQWdCLEVBQUUsQ0FBQztZQUNsQyxLQUFLLGNBQWMsQ0FBQyxTQUFTO2dCQUN6QixPQUFPLElBQUksU0FBUyxFQUFFLENBQUM7WUFDM0IsS0FBSyxjQUFjLENBQUMsYUFBYTtnQkFDN0IsT0FBTyxJQUFJLGFBQWEsRUFBRSxDQUFDO1lBQy9CLEtBQUssY0FBYyxDQUFDLFNBQVM7Z0JBQ3pCLE9BQU8sSUFBSSxTQUFTLEVBQUUsQ0FBQztZQUMzQixLQUFLLGNBQWMsQ0FBQyxZQUFZO2dCQUM1QixPQUFPLElBQUksWUFBWSxFQUFFLENBQUM7WUFDOUIsS0FBSyxjQUFjLENBQUMsZ0JBQWdCO2dCQUNoQyxPQUFPLElBQUksZ0JBQWdCLEVBQUUsQ0FBQztZQUNsQyxLQUFLLGNBQWMsQ0FBQyxpQkFBaUI7Z0JBQ2pDLE9BQU8sSUFBSSxpQkFBaUIsRUFBRSxDQUFDO1lBQ25DLEtBQUssY0FBYyxDQUFDLGlCQUFpQjtnQkFDakMsT0FBTyxJQUFJLGlCQUFpQixFQUFFLENBQUM7WUFDbkMsS0FBSyxjQUFjLENBQUMsVUFBVTtnQkFDMUIsT0FBTyxJQUFJLFVBQVUsRUFBRSxDQUFDO1lBQzVCO2dCQUNJLE1BQU0sS0FBSyxDQUFDLDBCQUEwQixDQUFDLENBQUM7U0FDL0M7SUFDTCxDQUFDO0lBQ0wsMkJBQUM7QUFBRCxDQUFDLEFBekRELElBeURDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBFeGNlbEZpbGVUeXBlcyxcbiAgICBFeGNlbEZvbGRlclR5cGVzXG59IGZyb20gJy4vZXhjZWwtZW51bXMnO1xuXG5pbXBvcnQge1xuICAgIEFwcEZpbGUsXG4gICAgQ29udGVudFR5cGVzRmlsZSxcbiAgICBDb3JlRmlsZSxcbiAgICBSb290UmVsc0ZpbGUsXG4gICAgU2hhcmVkU3RyaW5nc0ZpbGUsXG4gICAgU3R5bGVGaWxlLFxuICAgIFRhYmxlc0ZpbGUsXG4gICAgVGhlbWVGaWxlLFxuICAgIFdvcmtib29rRmlsZSxcbiAgICBXb3JrYm9va1JlbHNGaWxlLFxuICAgIFdvcmtzaGVldEZpbGUsXG4gICAgV29ya3NoZWV0UmVsc0ZpbGVcbn0gZnJvbSAnLi9leGNlbC1maWxlcyc7XG5cbmltcG9ydCB7XG4gICAgRG9jUHJvcHNFeGNlbEZvbGRlcixcbiAgICBSb290RXhjZWxGb2xkZXIsXG4gICAgUm9vdFJlbHNFeGNlbEZvbGRlcixcbiAgICBUYWJsZXNFeGNlbEZvbGRlcixcbiAgICBUaGVtZUV4Y2VsRm9sZGVyLFxuICAgIFdvcmtzaGVldHNFeGNlbEZvbGRlcixcbiAgICBXb3Jrc2hlZXRzUmVsc0V4Y2VsRm9sZGVyLFxuICAgIFhMRXhjZWxGb2xkZXIsXG4gICAgWExSZWxzRXhjZWxGb2xkZXJcbn0gZnJvbSAnLi9leGNlbC1mb2xkZXJzJztcblxuaW1wb3J0IHtcbiAgICBJRXhjZWxGaWxlLFxuICAgIElFeGNlbEZvbGRlclxufSBmcm9tICcuL2V4Y2VsLWludGVyZmFjZXMnO1xuXG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IGNsYXNzIEV4Y2VsRWxlbWVudHNGYWN0b3J5IHtcblxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0RXhjZWxGb2xkZXIodHlwZTogRXhjZWxGb2xkZXJUeXBlcyk6IElFeGNlbEZvbGRlciB7XG4gICAgICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICAgICAgY2FzZSBFeGNlbEZvbGRlclR5cGVzLlJvb3RFeGNlbEZvbGRlcjpcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFJvb3RFeGNlbEZvbGRlcigpO1xuICAgICAgICAgICAgY2FzZSBFeGNlbEZvbGRlclR5cGVzLlJvb3RSZWxzRXhjZWxGb2xkZXI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBSb290UmVsc0V4Y2VsRm9sZGVyKCk7XG4gICAgICAgICAgICBjYXNlIEV4Y2VsRm9sZGVyVHlwZXMuRG9jUHJvcHNFeGNlbEZvbGRlcjpcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IERvY1Byb3BzRXhjZWxGb2xkZXIoKTtcbiAgICAgICAgICAgIGNhc2UgRXhjZWxGb2xkZXJUeXBlcy5YTEV4Y2VsRm9sZGVyOlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgWExFeGNlbEZvbGRlcigpO1xuICAgICAgICAgICAgY2FzZSBFeGNlbEZvbGRlclR5cGVzLlhMUmVsc0V4Y2VsRm9sZGVyOlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgWExSZWxzRXhjZWxGb2xkZXIoKTtcbiAgICAgICAgICAgIGNhc2UgRXhjZWxGb2xkZXJUeXBlcy5UaGVtZUV4Y2VsRm9sZGVyOlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgVGhlbWVFeGNlbEZvbGRlcigpO1xuICAgICAgICAgICAgY2FzZSBFeGNlbEZvbGRlclR5cGVzLldvcmtzaGVldHNFeGNlbEZvbGRlcjpcbiAgICAgICAgICAgICAgICByZXR1cm4gIG5ldyBXb3Jrc2hlZXRzRXhjZWxGb2xkZXIoKTtcbiAgICAgICAgICAgIGNhc2UgRXhjZWxGb2xkZXJUeXBlcy5Xb3Jrc2hlZXRzUmVsc0V4Y2VsRm9sZGVyOlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgV29ya3NoZWV0c1JlbHNFeGNlbEZvbGRlcigpO1xuICAgICAgICAgICAgY2FzZSBFeGNlbEZvbGRlclR5cGVzLlRhYmxlc0V4Y2VsRm9sZGVyOlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgVGFibGVzRXhjZWxGb2xkZXIoKTtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdVbmtub3duIGV4Y2VsIGZvbGRlciB0eXBlIScpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIHN0YXRpYyBnZXRFeGNlbEZpbGUodHlwZTogRXhjZWxGaWxlVHlwZXMpOiBJRXhjZWxGaWxlIHtcbiAgICAgICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgICAgICBjYXNlIEV4Y2VsRmlsZVR5cGVzLlJvb3RSZWxzRmlsZTpcbiAgICAgICAgICAgICAgICByZXR1cm4gIG5ldyBSb290UmVsc0ZpbGUoKTtcbiAgICAgICAgICAgIGNhc2UgRXhjZWxGaWxlVHlwZXMuQXBwRmlsZTpcbiAgICAgICAgICAgICAgICByZXR1cm4gIG5ldyBBcHBGaWxlKCk7XG4gICAgICAgICAgICBjYXNlIEV4Y2VsRmlsZVR5cGVzLkNvcmVGaWxlOlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgQ29yZUZpbGUoKTtcbiAgICAgICAgICAgIGNhc2UgRXhjZWxGaWxlVHlwZXMuV29ya2Jvb2tSZWxzRmlsZTpcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFdvcmtib29rUmVsc0ZpbGUoKTtcbiAgICAgICAgICAgIGNhc2UgRXhjZWxGaWxlVHlwZXMuVGhlbWVGaWxlOlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgVGhlbWVGaWxlKCk7XG4gICAgICAgICAgICBjYXNlIEV4Y2VsRmlsZVR5cGVzLldvcmtzaGVldEZpbGU6XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBXb3Jrc2hlZXRGaWxlKCk7XG4gICAgICAgICAgICBjYXNlIEV4Y2VsRmlsZVR5cGVzLlN0eWxlRmlsZTpcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFN0eWxlRmlsZSgpO1xuICAgICAgICAgICAgY2FzZSBFeGNlbEZpbGVUeXBlcy5Xb3JrYm9va0ZpbGU6XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBXb3JrYm9va0ZpbGUoKTtcbiAgICAgICAgICAgIGNhc2UgRXhjZWxGaWxlVHlwZXMuQ29udGVudFR5cGVzRmlsZTpcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IENvbnRlbnRUeXBlc0ZpbGUoKTtcbiAgICAgICAgICAgIGNhc2UgRXhjZWxGaWxlVHlwZXMuU2hhcmVkU3RyaW5nc0ZpbGU6XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBTaGFyZWRTdHJpbmdzRmlsZSgpO1xuICAgICAgICAgICAgY2FzZSBFeGNlbEZpbGVUeXBlcy5Xb3Jrc2hlZXRSZWxzRmlsZTpcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFdvcmtzaGVldFJlbHNGaWxlKCk7XG4gICAgICAgICAgICBjYXNlIEV4Y2VsRmlsZVR5cGVzLlRhYmxlc0ZpbGU6XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBUYWJsZXNGaWxlKCk7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHRocm93IEVycm9yKCdVbmtub3duIGV4Y2VsIGZpbGUgdHlwZSEnKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==