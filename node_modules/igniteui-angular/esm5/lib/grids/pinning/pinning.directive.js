import { __decorate, __extends } from "tslib";
import { Directive } from '@angular/core';
import { ColumnChooserItemBaseDirective } from '../column-chooser-item-base';
var IgxColumnPinningItemDirective = /** @class */ (function (_super) {
    __extends(IgxColumnPinningItemDirective, _super);
    function IgxColumnPinningItemDirective() {
        return _super.call(this, 'pinned') || this;
    }
    Object.defineProperty(IgxColumnPinningItemDirective.prototype, "pinnable", {
        /**
         * Returns whether a column could be pinned.
         * It's not possible to pin a column if there is not enough space for the unpinned area.
         * ```typescript
         * const columnItem: IgxColumnPinningItemDirective;
         * this.columnItem.pinnable;
         * ```
         */
        get: function () {
            return this.column.pinnable;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxColumnPinningItemDirective.prototype, "pinningDisabled", {
        /**
         * Returns whether a column have pinning enabled
         */
        get: function () {
            return this.column.disablePinning;
        },
        enumerable: true,
        configurable: true
    });
    IgxColumnPinningItemDirective = __decorate([
        Directive({
            selector: '[igxColumnPinningItem]'
        })
    ], IgxColumnPinningItemDirective);
    return IgxColumnPinningItemDirective;
}(ColumnChooserItemBaseDirective));
export { IgxColumnPinningItemDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGlubmluZy5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9pZ25pdGV1aS1hbmd1bGFyLyIsInNvdXJjZXMiOlsibGliL2dyaWRzL3Bpbm5pbmcvcGlubmluZy5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFNN0U7SUFBbUQsaURBQThCO0lBRTdFO2VBQ0ksa0JBQU0sUUFBUSxDQUFDO0lBQ25CLENBQUM7SUFVRCxzQkFBSSxtREFBUTtRQVJaOzs7Ozs7O1dBT0c7YUFDSDtZQUNJLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUM7UUFDaEMsQ0FBQzs7O09BQUE7SUFJRCxzQkFBVywwREFBZTtRQUgxQjs7V0FFRzthQUNIO1lBQ0ksT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQztRQUN0QyxDQUFDOzs7T0FBQTtJQXRCUSw2QkFBNkI7UUFIekMsU0FBUyxDQUFDO1lBQ1AsUUFBUSxFQUFFLHdCQUF3QjtTQUNyQyxDQUFDO09BQ1csNkJBQTZCLENBdUJ6QztJQUFELG9DQUFDO0NBQUEsQUF2QkQsQ0FBbUQsOEJBQThCLEdBdUJoRjtTQXZCWSw2QkFBNkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbHVtbkNob29zZXJJdGVtQmFzZURpcmVjdGl2ZSB9IGZyb20gJy4uL2NvbHVtbi1jaG9vc2VyLWl0ZW0tYmFzZSc7XG5cblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbaWd4Q29sdW1uUGlubmluZ0l0ZW1dJ1xufSlcbmV4cG9ydCBjbGFzcyBJZ3hDb2x1bW5QaW5uaW5nSXRlbURpcmVjdGl2ZSBleHRlbmRzIENvbHVtbkNob29zZXJJdGVtQmFzZURpcmVjdGl2ZSB7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoJ3Bpbm5lZCcpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgd2hldGhlciBhIGNvbHVtbiBjb3VsZCBiZSBwaW5uZWQuXG4gICAgICogSXQncyBub3QgcG9zc2libGUgdG8gcGluIGEgY29sdW1uIGlmIHRoZXJlIGlzIG5vdCBlbm91Z2ggc3BhY2UgZm9yIHRoZSB1bnBpbm5lZCBhcmVhLlxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBjb25zdCBjb2x1bW5JdGVtOiBJZ3hDb2x1bW5QaW5uaW5nSXRlbURpcmVjdGl2ZTtcbiAgICAgKiB0aGlzLmNvbHVtbkl0ZW0ucGlubmFibGU7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgZ2V0IHBpbm5hYmxlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb2x1bW4ucGlubmFibGU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgd2hldGhlciBhIGNvbHVtbiBoYXZlIHBpbm5pbmcgZW5hYmxlZFxuICAgICAqL1xuICAgIHB1YmxpYyBnZXQgcGlubmluZ0Rpc2FibGVkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb2x1bW4uZGlzYWJsZVBpbm5pbmc7XG4gICAgfVxufVxuIl19