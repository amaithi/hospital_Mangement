import { ExportUtilities } from '../exporter-common/export-utilities';
import { WorksheetDataDictionary } from './worksheet-data-dictionary';
/** @hidden */
var WorksheetData = /** @class */ (function () {
    function WorksheetData(_data, options, indexOfLastPinnedColumn, sort, isTreeGridData) {
        if (isTreeGridData === void 0) { isTreeGridData = false; }
        this._data = _data;
        this.options = options;
        this.indexOfLastPinnedColumn = indexOfLastPinnedColumn;
        this.sort = sort;
        this.isTreeGridData = isTreeGridData;
        this.initializeData();
    }
    Object.defineProperty(WorksheetData.prototype, "data", {
        get: function () {
            return this._data;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WorksheetData.prototype, "columnCount", {
        get: function () {
            return this._columnCount;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WorksheetData.prototype, "rowCount", {
        get: function () {
            return this._rowCount;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WorksheetData.prototype, "isEmpty", {
        get: function () {
            return !this.rowCount || !this._columnCount;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WorksheetData.prototype, "keys", {
        get: function () {
            return this._keys;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WorksheetData.prototype, "isSpecialData", {
        get: function () {
            return this._isSpecialData;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WorksheetData.prototype, "dataDictionary", {
        get: function () {
            return this._dataDictionary;
        },
        enumerable: true,
        configurable: true
    });
    WorksheetData.prototype.initializeData = function () {
        if (!this._data || this._data.length === 0) {
            return;
        }
        var actualData = this._data.map(function (item) { return item.rowData; });
        this._keys = ExportUtilities.getKeysFromData(actualData);
        if (this._keys.length === 0) {
            return;
        }
        this._isSpecialData = ExportUtilities.isSpecialData(actualData);
        this._columnCount = this._keys.length;
        this._rowCount = this._data.length + 1;
        this._dataDictionary = new WorksheetDataDictionary(this._columnCount, this.options.columnWidth);
    };
    return WorksheetData;
}());
export { WorksheetData };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid29ya3NoZWV0LWRhdGEuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9pZ25pdGV1aS1hbmd1bGFyLyIsInNvdXJjZXMiOlsibGliL3NlcnZpY2VzL2V4Y2VsL3dvcmtzaGVldC1kYXRhLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUV0RSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUV0RSxjQUFjO0FBQ2Q7SUFPSSx1QkFBb0IsS0FBWSxFQUFTLE9BQWdDLEVBQVMsdUJBQXVCLEVBQ3RGLElBQVMsRUFBUyxjQUFzQjtRQUF0QiwrQkFBQSxFQUFBLHNCQUFzQjtRQUR2QyxVQUFLLEdBQUwsS0FBSyxDQUFPO1FBQVMsWUFBTyxHQUFQLE9BQU8sQ0FBeUI7UUFBUyw0QkFBdUIsR0FBdkIsdUJBQXVCLENBQUE7UUFDdEYsU0FBSSxHQUFKLElBQUksQ0FBSztRQUFTLG1CQUFjLEdBQWQsY0FBYyxDQUFRO1FBQ3ZELElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUMxQixDQUFDO0lBRUQsc0JBQVcsK0JBQUk7YUFBZjtZQUNJLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztRQUN0QixDQUFDOzs7T0FBQTtJQUVELHNCQUFXLHNDQUFXO2FBQXRCO1lBQ0ksT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDO1FBQzdCLENBQUM7OztPQUFBO0lBRUQsc0JBQVcsbUNBQVE7YUFBbkI7WUFDSSxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDMUIsQ0FBQzs7O09BQUE7SUFFRCxzQkFBVyxrQ0FBTzthQUFsQjtZQUNJLE9BQU8sQ0FBQyxJQUFJLENBQUMsUUFBUSxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQztRQUNoRCxDQUFDOzs7T0FBQTtJQUVELHNCQUFXLCtCQUFJO2FBQWY7WUFDSSxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDdEIsQ0FBQzs7O09BQUE7SUFFRCxzQkFBVyx3Q0FBYTthQUF4QjtZQUNJLE9BQU8sSUFBSSxDQUFDLGNBQWMsQ0FBQztRQUMvQixDQUFDOzs7T0FBQTtJQUVELHNCQUFXLHlDQUFjO2FBQXpCO1lBQ0ksT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDO1FBQ2hDLENBQUM7OztPQUFBO0lBRU8sc0NBQWMsR0FBdEI7UUFDSSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7WUFDeEMsT0FBTztTQUNWO1FBRUQsSUFBTSxVQUFVLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsVUFBQyxJQUFJLElBQUssT0FBQSxJQUFJLENBQUMsT0FBTyxFQUFaLENBQVksQ0FBQyxDQUFDO1FBRTFELElBQUksQ0FBQyxLQUFLLEdBQUcsZUFBZSxDQUFDLGVBQWUsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUN6RCxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtZQUN6QixPQUFPO1NBQ1Y7UUFFRCxJQUFJLENBQUMsY0FBYyxHQUFHLGVBQWUsQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDLENBQUM7UUFFaEUsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQztRQUN0QyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztRQUV2QyxJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksdUJBQXVCLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ3BHLENBQUM7SUFDTCxvQkFBQztBQUFELENBQUMsQUEzREQsSUEyREMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFeHBvcnRVdGlsaXRpZXMgfSBmcm9tICcuLi9leHBvcnRlci1jb21tb24vZXhwb3J0LXV0aWxpdGllcyc7XG5pbXBvcnQgeyBJZ3hFeGNlbEV4cG9ydGVyT3B0aW9ucyB9IGZyb20gJy4vZXhjZWwtZXhwb3J0ZXItb3B0aW9ucyc7XG5pbXBvcnQgeyBXb3Jrc2hlZXREYXRhRGljdGlvbmFyeSB9IGZyb20gJy4vd29ya3NoZWV0LWRhdGEtZGljdGlvbmFyeSc7XG5cbi8qKiBAaGlkZGVuICovXG5leHBvcnQgY2xhc3MgV29ya3NoZWV0RGF0YSB7XG4gICAgcHJpdmF0ZSBfY29sdW1uQ291bnQ6IG51bWJlcjtcbiAgICBwcml2YXRlIF9yb3dDb3VudDogbnVtYmVyO1xuICAgIHByaXZhdGUgX2RhdGFEaWN0aW9uYXJ5OiBXb3Jrc2hlZXREYXRhRGljdGlvbmFyeTtcbiAgICBwcml2YXRlIF9rZXlzOiBzdHJpbmdbXTtcbiAgICBwcml2YXRlIF9pc1NwZWNpYWxEYXRhOiBib29sZWFuO1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBfZGF0YTogYW55W10sIHB1YmxpYyBvcHRpb25zOiBJZ3hFeGNlbEV4cG9ydGVyT3B0aW9ucywgcHVibGljIGluZGV4T2ZMYXN0UGlubmVkQ29sdW1uLFxuICAgICAgICAgICAgICAgIHB1YmxpYyBzb3J0OiBhbnksIHB1YmxpYyBpc1RyZWVHcmlkRGF0YSA9IGZhbHNlKSB7XG4gICAgICAgIHRoaXMuaW5pdGlhbGl6ZURhdGEoKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IGRhdGEoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9kYXRhO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgY29sdW1uQ291bnQoKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbHVtbkNvdW50O1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgcm93Q291bnQoKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3Jvd0NvdW50O1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgaXNFbXB0eSgpIHtcbiAgICAgICAgcmV0dXJuICF0aGlzLnJvd0NvdW50IHx8ICF0aGlzLl9jb2x1bW5Db3VudDtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IGtleXMoKTogc3RyaW5nW10ge1xuICAgICAgICByZXR1cm4gdGhpcy5fa2V5cztcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IGlzU3BlY2lhbERhdGEoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pc1NwZWNpYWxEYXRhO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgZGF0YURpY3Rpb25hcnkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9kYXRhRGljdGlvbmFyeTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGluaXRpYWxpemVEYXRhKCkge1xuICAgICAgICBpZiAoIXRoaXMuX2RhdGEgfHwgdGhpcy5fZGF0YS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGFjdHVhbERhdGEgPSB0aGlzLl9kYXRhLm1hcCgoaXRlbSkgPT4gaXRlbS5yb3dEYXRhKTtcblxuICAgICAgICB0aGlzLl9rZXlzID0gRXhwb3J0VXRpbGl0aWVzLmdldEtleXNGcm9tRGF0YShhY3R1YWxEYXRhKTtcbiAgICAgICAgaWYgKHRoaXMuX2tleXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLl9pc1NwZWNpYWxEYXRhID0gRXhwb3J0VXRpbGl0aWVzLmlzU3BlY2lhbERhdGEoYWN0dWFsRGF0YSk7XG5cbiAgICAgICAgdGhpcy5fY29sdW1uQ291bnQgPSB0aGlzLl9rZXlzLmxlbmd0aDtcbiAgICAgICAgdGhpcy5fcm93Q291bnQgPSB0aGlzLl9kYXRhLmxlbmd0aCArIDE7XG5cbiAgICAgICAgdGhpcy5fZGF0YURpY3Rpb25hcnkgPSBuZXcgV29ya3NoZWV0RGF0YURpY3Rpb25hcnkodGhpcy5fY29sdW1uQ291bnQsIHRoaXMub3B0aW9ucy5jb2x1bW5XaWR0aCk7XG4gICAgfVxufVxuIl19