import { __decorate } from "tslib";
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { IgxIconModule } from '../icon/public_api';
import { IgxCalendarComponent } from './calendar.component';
import { IgxCalendarHeaderTemplateDirective, IgxCalendarMonthDirective, IgxCalendarSubheaderTemplateDirective, IgxCalendarYearDirective, IgxCalendarScrollMonthDirective } from './calendar.directives';
import { IgxMonthsViewComponent } from './months-view/months-view.component';
import { IgxYearsViewComponent } from './years-view/years-view.component';
import { IgxDaysViewComponent } from './days-view/days-view.component';
import { IgxDayItemComponent } from './days-view/day-item.component';
import { IgxMonthPickerComponent } from './month-picker/month-picker.component';
import { IgxCalendarBaseDirective } from './calendar-base';
import { IgxMonthPickerBaseDirective } from './month-picker-base';
import { IgxMonthViewSlotsCalendar, IgxGetViewDateCalendar } from './months-view.pipe';
/**
 * @hidden
 */
let IgxCalendarModule = class IgxCalendarModule {
};
IgxCalendarModule = __decorate([
    NgModule({
        declarations: [
            IgxCalendarBaseDirective,
            IgxMonthPickerBaseDirective,
            IgxDayItemComponent,
            IgxDaysViewComponent,
            IgxCalendarComponent,
            IgxCalendarHeaderTemplateDirective,
            IgxCalendarMonthDirective,
            IgxCalendarYearDirective,
            IgxCalendarSubheaderTemplateDirective,
            IgxCalendarScrollMonthDirective,
            IgxMonthsViewComponent,
            IgxYearsViewComponent,
            IgxMonthPickerComponent,
            IgxMonthViewSlotsCalendar,
            IgxGetViewDateCalendar
        ],
        exports: [
            IgxCalendarComponent,
            IgxDaysViewComponent,
            IgxMonthsViewComponent,
            IgxYearsViewComponent,
            IgxMonthPickerComponent,
            IgxCalendarHeaderTemplateDirective,
            IgxCalendarMonthDirective,
            IgxCalendarYearDirective,
            IgxCalendarSubheaderTemplateDirective
        ],
        imports: [CommonModule, FormsModule, IgxIconModule]
    })
], IgxCalendarModule);
export { IgxCalendarModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXIubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vaWduaXRldWktYW5ndWxhci8iLCJzb3VyY2VzIjpbImxpYi9jYWxlbmRhci9jYWxlbmRhci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDbkQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDNUQsT0FBTyxFQUNILGtDQUFrQyxFQUNsQyx5QkFBeUIsRUFDekIscUNBQXFDLEVBQ3JDLHdCQUF3QixFQUN4QiwrQkFBK0IsRUFDbEMsTUFBTSx1QkFBdUIsQ0FBQztBQUMvQixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUM3RSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUMxRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUN2RSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNyRSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUNoRixPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNsRSxPQUFPLEVBQUUseUJBQXlCLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUV2Rjs7R0FFRztBQWdDSCxJQUFhLGlCQUFpQixHQUE5QixNQUFhLGlCQUFpQjtDQUFJLENBQUE7QUFBckIsaUJBQWlCO0lBL0I3QixRQUFRLENBQUM7UUFDTixZQUFZLEVBQUU7WUFDVix3QkFBd0I7WUFDeEIsMkJBQTJCO1lBQzNCLG1CQUFtQjtZQUNuQixvQkFBb0I7WUFDcEIsb0JBQW9CO1lBQ3BCLGtDQUFrQztZQUNsQyx5QkFBeUI7WUFDekIsd0JBQXdCO1lBQ3hCLHFDQUFxQztZQUNyQywrQkFBK0I7WUFDL0Isc0JBQXNCO1lBQ3RCLHFCQUFxQjtZQUNyQix1QkFBdUI7WUFDdkIseUJBQXlCO1lBQ3pCLHNCQUFzQjtTQUN6QjtRQUNELE9BQU8sRUFBRTtZQUNMLG9CQUFvQjtZQUNwQixvQkFBb0I7WUFDcEIsc0JBQXNCO1lBQ3RCLHFCQUFxQjtZQUNyQix1QkFBdUI7WUFDdkIsa0NBQWtDO1lBQ2xDLHlCQUF5QjtZQUN6Qix3QkFBd0I7WUFDeEIscUNBQXFDO1NBQ3hDO1FBQ0QsT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLFdBQVcsRUFBRSxhQUFhLENBQUM7S0FDdEQsQ0FBQztHQUNXLGlCQUFpQixDQUFJO1NBQXJCLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBJZ3hJY29uTW9kdWxlIH0gZnJvbSAnLi4vaWNvbi9wdWJsaWNfYXBpJztcbmltcG9ydCB7IElneENhbGVuZGFyQ29tcG9uZW50IH0gZnJvbSAnLi9jYWxlbmRhci5jb21wb25lbnQnO1xuaW1wb3J0IHtcbiAgICBJZ3hDYWxlbmRhckhlYWRlclRlbXBsYXRlRGlyZWN0aXZlLFxuICAgIElneENhbGVuZGFyTW9udGhEaXJlY3RpdmUsXG4gICAgSWd4Q2FsZW5kYXJTdWJoZWFkZXJUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICBJZ3hDYWxlbmRhclllYXJEaXJlY3RpdmUsXG4gICAgSWd4Q2FsZW5kYXJTY3JvbGxNb250aERpcmVjdGl2ZVxufSBmcm9tICcuL2NhbGVuZGFyLmRpcmVjdGl2ZXMnO1xuaW1wb3J0IHsgSWd4TW9udGhzVmlld0NvbXBvbmVudCB9IGZyb20gJy4vbW9udGhzLXZpZXcvbW9udGhzLXZpZXcuY29tcG9uZW50JztcbmltcG9ydCB7IElneFllYXJzVmlld0NvbXBvbmVudCB9IGZyb20gJy4veWVhcnMtdmlldy95ZWFycy12aWV3LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJZ3hEYXlzVmlld0NvbXBvbmVudCB9IGZyb20gJy4vZGF5cy12aWV3L2RheXMtdmlldy5jb21wb25lbnQnO1xuaW1wb3J0IHsgSWd4RGF5SXRlbUNvbXBvbmVudCB9IGZyb20gJy4vZGF5cy12aWV3L2RheS1pdGVtLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJZ3hNb250aFBpY2tlckNvbXBvbmVudCB9IGZyb20gJy4vbW9udGgtcGlja2VyL21vbnRoLXBpY2tlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgSWd4Q2FsZW5kYXJCYXNlRGlyZWN0aXZlIH0gZnJvbSAnLi9jYWxlbmRhci1iYXNlJztcbmltcG9ydCB7IElneE1vbnRoUGlja2VyQmFzZURpcmVjdGl2ZSB9IGZyb20gJy4vbW9udGgtcGlja2VyLWJhc2UnO1xuaW1wb3J0IHsgSWd4TW9udGhWaWV3U2xvdHNDYWxlbmRhciwgSWd4R2V0Vmlld0RhdGVDYWxlbmRhciB9IGZyb20gJy4vbW9udGhzLXZpZXcucGlwZSc7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5ATmdNb2R1bGUoe1xuICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgICBJZ3hDYWxlbmRhckJhc2VEaXJlY3RpdmUsXG4gICAgICAgIElneE1vbnRoUGlja2VyQmFzZURpcmVjdGl2ZSxcbiAgICAgICAgSWd4RGF5SXRlbUNvbXBvbmVudCxcbiAgICAgICAgSWd4RGF5c1ZpZXdDb21wb25lbnQsXG4gICAgICAgIElneENhbGVuZGFyQ29tcG9uZW50LFxuICAgICAgICBJZ3hDYWxlbmRhckhlYWRlclRlbXBsYXRlRGlyZWN0aXZlLFxuICAgICAgICBJZ3hDYWxlbmRhck1vbnRoRGlyZWN0aXZlLFxuICAgICAgICBJZ3hDYWxlbmRhclllYXJEaXJlY3RpdmUsXG4gICAgICAgIElneENhbGVuZGFyU3ViaGVhZGVyVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgICAgIElneENhbGVuZGFyU2Nyb2xsTW9udGhEaXJlY3RpdmUsXG4gICAgICAgIElneE1vbnRoc1ZpZXdDb21wb25lbnQsXG4gICAgICAgIElneFllYXJzVmlld0NvbXBvbmVudCxcbiAgICAgICAgSWd4TW9udGhQaWNrZXJDb21wb25lbnQsXG4gICAgICAgIElneE1vbnRoVmlld1Nsb3RzQ2FsZW5kYXIsXG4gICAgICAgIElneEdldFZpZXdEYXRlQ2FsZW5kYXJcbiAgICBdLFxuICAgIGV4cG9ydHM6IFtcbiAgICAgICAgSWd4Q2FsZW5kYXJDb21wb25lbnQsXG4gICAgICAgIElneERheXNWaWV3Q29tcG9uZW50LFxuICAgICAgICBJZ3hNb250aHNWaWV3Q29tcG9uZW50LFxuICAgICAgICBJZ3hZZWFyc1ZpZXdDb21wb25lbnQsXG4gICAgICAgIElneE1vbnRoUGlja2VyQ29tcG9uZW50LFxuICAgICAgICBJZ3hDYWxlbmRhckhlYWRlclRlbXBsYXRlRGlyZWN0aXZlLFxuICAgICAgICBJZ3hDYWxlbmRhck1vbnRoRGlyZWN0aXZlLFxuICAgICAgICBJZ3hDYWxlbmRhclllYXJEaXJlY3RpdmUsXG4gICAgICAgIElneENhbGVuZGFyU3ViaGVhZGVyVGVtcGxhdGVEaXJlY3RpdmVcbiAgICBdLFxuICAgIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIEZvcm1zTW9kdWxlLCBJZ3hJY29uTW9kdWxlXVxufSlcbmV4cG9ydCBjbGFzcyBJZ3hDYWxlbmRhck1vZHVsZSB7IH1cbiJdfQ==