export var TransactionType;
(function (TransactionType) {
    TransactionType["ADD"] = "add";
    TransactionType["DELETE"] = "delete";
    TransactionType["UPDATE"] = "update";
})(TransactionType || (TransactionType = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNhY3Rpb24uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9pZ25pdGV1aS1hbmd1bGFyLyIsInNvdXJjZXMiOlsibGliL3NlcnZpY2VzL3RyYW5zYWN0aW9uL3RyYW5zYWN0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE1BQU0sQ0FBTixJQUFZLGVBSVg7QUFKRCxXQUFZLGVBQWU7SUFDdkIsOEJBQVcsQ0FBQTtJQUNYLG9DQUFpQixDQUFBO0lBQ2pCLG9DQUFpQixDQUFBO0FBQ3JCLENBQUMsRUFKVyxlQUFlLEtBQWYsZUFBZSxRQUkxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5leHBvcnQgZW51bSBUcmFuc2FjdGlvblR5cGUge1xuICAgIEFERCA9ICdhZGQnLFxuICAgIERFTEVURSA9ICdkZWxldGUnLFxuICAgIFVQREFURSA9ICd1cGRhdGUnXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgVHJhbnNhY3Rpb24ge1xuICAgIGlkOiBhbnk7XG4gICAgdHlwZTogVHJhbnNhY3Rpb25UeXBlO1xuICAgIG5ld1ZhbHVlOiBhbnk7XG59XG5cbi8qKlxuICogQGV4cGVyaW1lbnRhbFxuICogQGhpZGRlblxuICovXG5leHBvcnQgaW50ZXJmYWNlIEhpZXJhcmNoaWNhbFRyYW5zYWN0aW9uIGV4dGVuZHMgVHJhbnNhY3Rpb24ge1xuICAgIHBhdGg/OiBhbnlbXTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBTdGF0ZSB7XG4gICAgdmFsdWU6IGFueTtcbiAgICByZWNvcmRSZWY6IGFueTtcbiAgICB0eXBlOiBUcmFuc2FjdGlvblR5cGU7XG59XG5cbi8qKlxuICogQGV4cGVyaW1lbnRhbFxuICogQGhpZGRlblxuICovXG5leHBvcnQgaW50ZXJmYWNlIEhpZXJhcmNoaWNhbFN0YXRlIGV4dGVuZHMgU3RhdGUge1xuICAgIHBhdGg6IGFueVtdO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFRyYW5zYWN0aW9uU2VydmljZTxUIGV4dGVuZHMgVHJhbnNhY3Rpb24sIFMgZXh0ZW5kcyBTdGF0ZT4ge1xuICAgIC8qKlxuICAgICAqIFJldHVybnMgd2hldGhlciB0cmFuc2FjdGlvbiBpcyBlbmFibGVkIGZvciB0aGlzIHNlcnZpY2VcbiAgICAgKi9cbiAgICByZWFkb25seSBlbmFibGVkOiBib29sZWFuO1xuXG4gICAgLyoqXG4gICAgICogRXZlbnQgZmlyZWQgd2hlbiB0cmFuc2FjdGlvbiBzdGF0ZSBoYXMgY2hhbmdlZCAtIGFkZCB0cmFuc2FjdGlvbiwgY29tbWl0IGFsbCB0cmFuc2FjdGlvbnMsIHVuZG8gYW5kIHJlZG9cbiAgICAgKi9cbiAgICBvblN0YXRlVXBkYXRlPzogRXZlbnRFbWl0dGVyPHZvaWQ+O1xuXG4gICAgLyoqXG4gICAgICogQHJldHVybnMgaWYgdGhlcmUgYXJlIGFueSB0cmFuc2FjdGlvbnMgaW4gdGhlIFVuZG8gc3RhY2tcbiAgICAgKi9cbiAgICBjYW5VbmRvOiBib29sZWFuO1xuXG4gICAgLyoqXG4gICAgICogQHJldHVybnMgaWYgdGhlcmUgYXJlIGFueSB0cmFuc2FjdGlvbnMgaW4gdGhlIFJlZG8gc3RhY2tcbiAgICAgKi9cbiAgICBjYW5SZWRvOiBib29sZWFuO1xuXG4gICAgLyoqXG4gICAgICogQWRkcyBwcm92aWRlZCAgdHJhbnNhY3Rpb24gd2l0aCByZWNvcmRSZWYgaWYgYW55XG4gICAgICogQHBhcmFtIHRyYW5zYWN0aW9uIFRyYW5zYWN0aW9uIHRvIGJlIGFkZGVkXG4gICAgICogQHBhcmFtIHJlY29yZFJlZiBSZWZlcmVuY2UgdG8gdGhlIHZhbHVlIG9mIHRoZSByZWNvcmQgaW4gdGhlIGRhdGEgc291cmNlIHJlbGF0ZWQgdG8gdGhlIGNoYW5nZWQgaXRlbVxuICAgICAqL1xuICAgIGFkZCh0cmFuc2FjdGlvbjogVCwgcmVjb3JkUmVmPzogYW55KTogdm9pZDtcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYWxsIHJlY29yZGVkIHRyYW5zYWN0aW9ucyBpbiBjaHJvbm9sb2dpY2FsIG9yZGVyXG4gICAgICogQHBhcmFtIGlkIE9wdGlvbmFsIHJlY29yZCBpZCB0byBnZXQgdHJhbnNhY3Rpb25zIGZvclxuICAgICAqIEByZXR1cm5zIEFsbCB0cmFuc2FjdGlvbiBpbiB0aGUgc2VydmljZSBvciBmb3IgdGhlIHNwZWNpZmllZCByZWNvcmRcbiAgICAgKi9cbiAgICBnZXRUcmFuc2FjdGlvbkxvZyhpZD86IGFueSk6IFRbXTtcblxuICAgIC8qKlxuICAgICAqIFJlbW92ZSB0aGUgbGFzdCB0cmFuc2FjdGlvbiBpZiBhbnlcbiAgICAgKi9cbiAgICB1bmRvKCk6IHZvaWQ7XG5cbiAgICAvKipcbiAgICAgKiBBcHBsaWVzIHRoZSBsYXN0IHVuZG9uZSB0cmFuc2FjdGlvbiBpZiBhbnlcbiAgICAgKi9cbiAgICByZWRvKCk6IHZvaWQ7XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGFnZ3JlZ2F0ZWQgY2hhbmdlcyBmcm9tIGFsbCB0cmFuc2FjdGlvbnNcbiAgICAgKiBAcGFyYW0gbWVyZ2VDaGFuZ2VzIElmIHNldCB0byB0cnVlIHdpbGwgbWVyZ2UgZWFjaCBzdGF0ZSdzIHZhbHVlIG92ZXIgcmVsYXRlIHJlY29yZFJlZlxuICAgICAqIGFuZCB3aWxsIHJlY29yZCByZXN1bHRpbmcgdmFsdWUgaW4gdGhlIHJlbGF0ZWQgdHJhbnNhY3Rpb25cbiAgICAgKiBAcmV0dXJucyBDb2xsZWN0aW9uIG9mIGFnZ3JlZ2F0ZWQgdHJhbnNhY3Rpb25zIGZvciBlYWNoIGNoYW5nZWQgcmVjb3JkXG4gICAgICovXG4gICAgZ2V0QWdncmVnYXRlZENoYW5nZXMobWVyZ2VDaGFuZ2VzOiBib29sZWFuKTogVFtdO1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgc3RhdGUgb2YgdGhlIHJlY29yZCB3aXRoIHByb3ZpZGVkIGlkXG4gICAgICogQHBhcmFtIGlkIFRoZSBpZCBvZiB0aGUgcmVjb3JkXG4gICAgICogQHBhcmFtIHBlbmRpbmcgU2hvdWxkIGdldCBwZW5kaW5nIHN0YXRlXG4gICAgICogQHJldHVybnMgU3RhdGUgb2YgdGhlIHJlY29yZCBpZiBhbnlcbiAgICAgKi9cbiAgICBnZXRTdGF0ZShpZDogYW55LCBwZW5kaW5nPzogYm9vbGVhbik6IFM7XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHZhbHVlIG9mIHRoZSByZXF1aXJlZCBpZCBpbmNsdWRpbmcgYWxsIHVuY29tbWl0dGVkIGNoYW5nZXNcbiAgICAgKiBAcGFyYW0gaWQgVGhlIGlkIG9mIHRoZSByZWNvcmQgdG8gcmV0dXJuIHZhbHVlIGZvclxuICAgICAqIEBwYXJhbSBtZXJnZUNoYW5nZXMgSWYgc2V0IHRvIHRydWUgd2lsbCBtZXJnZSBzdGF0ZSdzIHZhbHVlIG92ZXIgcmVsYXRlIHJlY29yZFJlZlxuICAgICAqIGFuZCB3aWxsIHJldHVybiBtZXJnZWQgdmFsdWVcbiAgICAgKiBAcmV0dXJucyBWYWx1ZSB3aXRoIGNoYW5nZXMgb3IgKipudWxsKipcbiAgICAgKi9cbiAgICBnZXRBZ2dyZWdhdGVkVmFsdWUoaWQ6IGFueSwgbWVyZ2VDaGFuZ2VzOiBib29sZWFuKTogYW55O1xuXG4gICAgLyoqXG4gICAgICogQXBwbGllcyBhbGwgdHJhbnNhY3Rpb25zIG92ZXIgdGhlIHByb3ZpZGVkIGRhdGFcbiAgICAgKiBAcGFyYW0gZGF0YSBEYXRhIHNvdXJjZSB0byB1cGRhdGVcbiAgICAgKiBAcGFyYW0gaWQgT3B0aW9uYWwgcmVjb3JkIGlkIHRvIGNvbW1pdCB0cmFuc2FjdGlvbnMgZm9yXG4gICAgICovXG4gICAgY29tbWl0KGRhdGE6IGFueVtdLCBpZD86IGFueSk6IHZvaWQ7XG5cbiAgICAvKipcbiAgICAgKiBDbGVhcnMgYWxsIHRyYW5zYWN0aW9uc1xuICAgICAqIEBwYXJhbSBpZCBPcHRpb25hbCByZWNvcmQgaWQgdG8gY2xlYXIgdHJhbnNhY3Rpb25zIGZvclxuICAgICAqL1xuICAgIGNsZWFyKGlkPzogYW55KTogdm9pZDtcblxuICAgIC8qKlxuICAgICAqIFN0YXJ0cyBwZW5kaW5nIHRyYW5zYWN0aW9ucy4gQWxsIHRyYW5zYWN0aW9ucyBwYXNzZWQgYWZ0ZXIgY2FsbCB0byBzdGFydFBlbmRpbmdcbiAgICAgKiB3aWxsIG5vdCBiZSBhZGRlZCB0byB0cmFuc2FjdGlvbiBsb2dcbiAgICAgKi9cbiAgICBzdGFydFBlbmRpbmcoKTogdm9pZDtcblxuICAgIC8qKlxuICAgICAqIENsZWFycyBhbGwgcGVuZGluZyB0cmFuc2FjdGlvbnMgYW5kIGFnZ3JlZ2F0ZWQgcGVuZGluZyBzdGF0ZS4gSWYgY29tbWl0IGlzIHNldCB0byB0cnVlXG4gICAgICogY29tbWl0cyBwZW5kaW5nIHN0YXRlcyBhcyBzaW5nbGUgdHJhbnNhY3Rpb25cbiAgICAgKiBAcGFyYW0gY29tbWl0IFNob3VsZCBjb21taXQgdGhlIHBlbmRpbmcgc3RhdGVzXG4gICAgICovXG4gICAgZW5kUGVuZGluZyhjb21taXQ6IGJvb2xlYW4pOiB2b2lkO1xufVxuIl19