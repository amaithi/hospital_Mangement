import { __decorate, __param } from "tslib";
import { Directive, Inject } from '@angular/core';
import { IgxActionStripComponent } from '../action-strip.component';
import { IgxRowDirective } from '../../grids/public_api';
let IgxGridActionsBaseDirective = class IgxGridActionsBaseDirective {
    constructor(strip) {
        this.strip = strip;
    }
    /**
     * Getter to be used in template
     * @hidden
     * @internal
     */
    get isRowContext() {
        return this.isRow(this.strip.context);
    }
    /**
     * Check if the param is a row from a grid
     * @hidden
     * @internal
     * @param context
     */
    isRow(context) {
        return context && context instanceof IgxRowDirective;
    }
};
IgxGridActionsBaseDirective.ctorParameters = () => [
    { type: IgxActionStripComponent, decorators: [{ type: Inject, args: [IgxActionStripComponent,] }] }
];
IgxGridActionsBaseDirective = __decorate([
    Directive({
        selector: '[igxGridActionsBase]'
    }),
    __param(0, Inject(IgxActionStripComponent))
], IgxGridActionsBaseDirective);
export { IgxGridActionsBaseDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZC1hY3Rpb25zLWJhc2UuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vaWduaXRldWktYW5ndWxhci8iLCJzb3VyY2VzIjpbImxpYi9hY3Rpb24tc3RyaXAvZ3JpZC1hY3Rpb25zL2dyaWQtYWN0aW9ucy1iYXNlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbEQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDcEUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBS3pELElBQWEsMkJBQTJCLEdBQXhDLE1BQWEsMkJBQTJCO0lBQ3BDLFlBQXVELEtBQThCO1FBQTlCLFVBQUssR0FBTCxLQUFLLENBQXlCO0lBQUksQ0FBQztJQUUxRjs7OztPQUlHO0lBQ0gsSUFBSSxZQUFZO1FBQ1osT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDMUMsQ0FBQztJQUVEOzs7OztPQUtHO0lBQ08sS0FBSyxDQUFDLE9BQU87UUFDbkIsT0FBTyxPQUFPLElBQUksT0FBTyxZQUFZLGVBQWUsQ0FBQztJQUN6RCxDQUFDO0NBQ0osQ0FBQTs7WUFwQmlFLHVCQUF1Qix1QkFBeEUsTUFBTSxTQUFDLHVCQUF1Qjs7QUFEbEMsMkJBQTJCO0lBSHZDLFNBQVMsQ0FBQztRQUNQLFFBQVEsRUFBRSxzQkFBc0I7S0FDbkMsQ0FBQztJQUVlLFdBQUEsTUFBTSxDQUFDLHVCQUF1QixDQUFDLENBQUE7R0FEbkMsMkJBQTJCLENBcUJ2QztTQXJCWSwyQkFBMkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEluamVjdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSWd4QWN0aW9uU3RyaXBDb21wb25lbnQgfSBmcm9tICcuLi9hY3Rpb24tc3RyaXAuY29tcG9uZW50JztcbmltcG9ydCB7IElneFJvd0RpcmVjdGl2ZSB9IGZyb20gJy4uLy4uL2dyaWRzL3B1YmxpY19hcGknO1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1tpZ3hHcmlkQWN0aW9uc0Jhc2VdJ1xufSlcbmV4cG9ydCBjbGFzcyBJZ3hHcmlkQWN0aW9uc0Jhc2VEaXJlY3RpdmUge1xuICAgIGNvbnN0cnVjdG9yKEBJbmplY3QoSWd4QWN0aW9uU3RyaXBDb21wb25lbnQpIHByb3RlY3RlZCBzdHJpcDogSWd4QWN0aW9uU3RyaXBDb21wb25lbnQpIHsgfVxuXG4gICAgLyoqXG4gICAgICogR2V0dGVyIHRvIGJlIHVzZWQgaW4gdGVtcGxhdGVcbiAgICAgKiBAaGlkZGVuXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgZ2V0IGlzUm93Q29udGV4dCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaXNSb3codGhpcy5zdHJpcC5jb250ZXh0KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDaGVjayBpZiB0aGUgcGFyYW0gaXMgYSByb3cgZnJvbSBhIGdyaWRcbiAgICAgKiBAaGlkZGVuXG4gICAgICogQGludGVybmFsXG4gICAgICogQHBhcmFtIGNvbnRleHRcbiAgICAgKi9cbiAgICBwcm90ZWN0ZWQgaXNSb3coY29udGV4dCk6IGNvbnRleHQgaXMgSWd4Um93RGlyZWN0aXZlPGFueT4ge1xuICAgICAgICByZXR1cm4gY29udGV4dCAmJiBjb250ZXh0IGluc3RhbmNlb2YgSWd4Um93RGlyZWN0aXZlO1xuICAgIH1cbn1cbiJdfQ==