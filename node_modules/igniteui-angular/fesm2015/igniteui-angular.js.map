{"version":3,"file":"igniteui-angular.js","sources":["ng://igniteui-angular/lib/animations/easings.ts","ng://igniteui-angular/lib/animations/fade/index.ts","ng://igniteui-angular/lib/animations/flip/index.ts","ng://igniteui-angular/lib/animations/rotate/index.ts","ng://igniteui-angular/lib/animations/misc/shake.ts","ng://igniteui-angular/lib/animations/misc/pulsate.ts","ng://igniteui-angular/lib/animations/scale/index.ts","ng://igniteui-angular/lib/animations/slide/index.ts","ng://igniteui-angular/lib/animations/swing/index.ts","ng://igniteui-angular/lib/animations/grow/index.ts","ng://igniteui-angular/lib/core/navigation/nav.service.ts","ng://igniteui-angular/lib/core/navigation/directives.ts","ng://igniteui-angular/lib/core/utils.ts","ng://igniteui-angular/lib/data-operations/sorting-expression.interface.ts","ng://igniteui-angular/lib/data-operations/operations.ts","ng://igniteui-angular/lib/data-operations/sorting-strategy.ts","ng://igniteui-angular/lib/data-operations/grouping-strategy.ts","ng://igniteui-angular/lib/data-operations/paging-state.interface.ts","ng://igniteui-angular/lib/data-operations/filtering-expression.interface.ts","ng://igniteui-angular/lib/data-operations/filtering-expressions-tree.ts","ng://igniteui-angular/lib/data-operations/filtering-strategy.ts","ng://igniteui-angular/lib/services/transaction/transaction.ts","ng://igniteui-angular/lib/data-operations/data-util.ts","ng://igniteui-angular/lib/services/exporter-common/export-utilities.ts","ng://igniteui-angular/lib/grids/api.service.ts","ng://igniteui-angular/lib/grids/tree-grid/tree-grid.filtering.pipe.ts","ng://igniteui-angular/lib/services/exporter-common/base-export-service.ts","ng://igniteui-angular/lib/services/csv/char-separated-value-data.ts","ng://igniteui-angular/lib/services/exporter-common/exporter-options-base.ts","ng://igniteui-angular/lib/services/csv/csv-exporter-options.ts","ng://igniteui-angular/lib/services/csv/csv-exporter.ts","ng://igniteui-angular/lib/services/excel/excel-enums.ts","ng://igniteui-angular/lib/services/excel/excel-strings.ts","ng://igniteui-angular/lib/services/excel/excel-files.ts","ng://igniteui-angular/lib/services/excel/excel-folders.ts","ng://igniteui-angular/lib/services/excel/excel-elements-factory.ts","ng://igniteui-angular/lib/services/excel/worksheet-data-dictionary.ts","ng://igniteui-angular/lib/services/excel/worksheet-data.ts","ng://igniteui-angular/lib/services/excel/excel-exporter.ts","ng://igniteui-angular/lib/services/excel/excel-exporter-options.ts","ng://igniteui-angular/lib/services/overlay/utilities.ts","ng://igniteui-angular/lib/services/overlay/position/global-position-strategy.ts","ng://igniteui-angular/lib/services/overlay/scroll/scroll-strategy.ts","ng://igniteui-angular/lib/services/overlay/scroll/NoOpScrollStrategy.ts","ng://igniteui-angular/lib/core/deprecateDecorators.ts","ng://igniteui-angular/lib/services/overlay/overlay.ts","ng://igniteui-angular/lib/services/overlay/position/container-position-strategy.ts","ng://igniteui-angular/lib/services/overlay/position/connected-positioning-strategy.ts","ng://igniteui-angular/lib/services/overlay/position/base-fit-position-strategy.ts","ng://igniteui-angular/lib/services/overlay/position/auto-position-strategy.ts","ng://igniteui-angular/lib/services/overlay/position/elastic-position-strategy.ts","ng://igniteui-angular/lib/services/overlay/scroll/absolute-scroll-strategy.ts","ng://igniteui-angular/lib/services/overlay/scroll/block-scroll-strategy.ts","ng://igniteui-angular/lib/services/overlay/scroll/close-scroll-strategy.ts","ng://igniteui-angular/lib/services/overlay/scroll/index.ts","ng://igniteui-angular/lib/services/transaction/base-transaction.ts","ng://igniteui-angular/lib/services/transaction/igx-transaction.ts","ng://igniteui-angular/lib/services/transaction/igx-hierarchical-transaction.ts","ng://igniteui-angular/lib/services/public_api.ts","ng://igniteui-angular/lib/directives/toggle/toggle.directive.ts","ng://igniteui-angular/lib/drop-down/drop-down.common.ts","ng://igniteui-angular/lib/core/selection.ts","ng://igniteui-angular/lib/drop-down/drop-down-group.component.ts","ng://igniteui-angular/lib/drop-down/drop-down-item.base.ts","ng://igniteui-angular/lib/drop-down/drop-down-item.component.ts","ng://igniteui-angular/lib/core/displayDensity.ts","ng://igniteui-angular/lib/drop-down/drop-down.base.ts","ng://igniteui-angular/lib/directives/for-of/display.container.ts","ng://igniteui-angular/lib/directives/for-of/base.helper.component.ts","ng://igniteui-angular/lib/directives/for-of/horizontal.virtual.helper.component.ts","ng://igniteui-angular/lib/directives/for-of/virtual.helper.component.ts","ng://igniteui-angular/lib/directives/scroll-inertia/scroll_inertia.directive.ts","ng://igniteui-angular/lib/directives/for-of/for_of.sync.service.ts","ng://igniteui-angular/lib/directives/for-of/for_of.directive.ts","ng://igniteui-angular/lib/drop-down/drop-down.component.ts","ng://igniteui-angular/lib/drop-down/drop-down-navigation.directive.ts","ng://igniteui-angular/lib/drop-down/public_api.ts","ng://igniteui-angular/lib/directives/hint/hint.directive.ts","ng://igniteui-angular/lib/input-group/input-group.common.ts","ng://igniteui-angular/lib/directives/input/input.directive.ts","ng://igniteui-angular/lib/directives/label/label.directive.ts","ng://igniteui-angular/lib/directives/prefix/prefix.directive.ts","ng://igniteui-angular/lib/directives/suffix/suffix.directive.ts","ng://igniteui-angular/lib/input-group/input-group.component.ts","ng://igniteui-angular/lib/directives/autocomplete/autocomplete.directive.ts","ng://igniteui-angular/lib/directives/button/button.directive.ts","ng://igniteui-angular/lib/directives/divider/divider.directive.ts","ng://igniteui-angular/lib/directives/drag-drop/drag-drop.strategy.ts","ng://igniteui-angular/lib/directives/drag-drop/drag-drop.directive.ts","ng://igniteui-angular/lib/directives/filter/filter.directive.ts","ng://igniteui-angular/lib/directives/focus/focus.directive.ts","ng://igniteui-angular/lib/directives/layout/layout.directive.ts","ng://igniteui-angular/lib/directives/mask/mask-parsing.service.ts","ng://igniteui-angular/lib/directives/mask/mask.directive.ts","ng://igniteui-angular/lib/radio/radio.component.ts","ng://igniteui-angular/lib/directives/ripple/ripple.directive.ts","ng://igniteui-angular/lib/directives/radio/radio-group.directive.ts","ng://igniteui-angular/lib/directives/text-highlight/text-highlight.directive.ts","ng://igniteui-angular/lib/directives/text-selection/text-selection.directive.ts","ng://igniteui-angular/lib/directives/tooltip/tooltip.directive.ts","ng://igniteui-angular/lib/directives/date-time-editor/date-time-editor.common.ts","ng://igniteui-angular/lib/date-picker/date-picker.utils.ts","ng://igniteui-angular/lib/directives/date-time-editor/date-time-editor.directive.ts","ng://igniteui-angular/lib/data-operations/filtering-condition.ts","ng://igniteui-angular/lib/data-operations/filtering-state.interface.ts","ng://igniteui-angular/lib/data-operations/groupby-record.interface.ts","ng://igniteui-angular/lib/action-strip/action-strip.component.ts","ng://igniteui-angular/lib/grids/selection/selection.service.ts","ng://igniteui-angular/lib/core/touch.ts","ng://igniteui-angular/lib/grids/common/enums.ts","ng://igniteui-angular/lib/grids/cell.component.ts","ng://igniteui-angular/lib/grids/watch-changes.ts","ng://igniteui-angular/lib/grids/hierarchical-grid/row-island-api.service.ts","ng://igniteui-angular/lib/checkbox/checkbox.component.ts","ng://igniteui-angular/lib/grids/row.directive.ts","ng://igniteui-angular/lib/grids/summaries/grid-summary.ts","ng://igniteui-angular/lib/grids/columns/templates.directive.ts","ng://igniteui-angular/lib/grids/columns/column.component.ts","ng://igniteui-angular/lib/grids/grid.common.ts","ng://igniteui-angular/lib/grids/column-chooser-item-base.ts","ng://igniteui-angular/lib/grids/hiding/column-hiding-item.directive.ts","ng://igniteui-angular/lib/grids/column-chooser-base.ts","ng://igniteui-angular/lib/grids/hiding/column-hiding.component.ts","ng://igniteui-angular/lib/grids/pinning/pinning.directive.ts","ng://igniteui-angular/lib/grids/pinning/column-pinning.component.ts","ng://igniteui-angular/lib/icon/icon.service.ts","ng://igniteui-angular/lib/grids/filtering/svgIcons.ts","ng://igniteui-angular/lib/grids/toolbar/grid-toolbar.component.ts","ng://igniteui-angular/lib/grids/grid.rowEdit.directive.ts","ng://igniteui-angular/lib/list/list.common.ts","ng://igniteui-angular/lib/list/list-item.component.ts","ng://igniteui-angular/lib/list/list.component.ts","ng://igniteui-angular/lib/grids/filtering/excel-style/excel-style-search.component.ts","ng://igniteui-angular/lib/grids/common/pipes.ts","ng://igniteui-angular/lib/grids/filtering/excel-style/excel-style-position-strategy.ts","ng://igniteui-angular/lib/grids/filtering/grid-filtering.service.ts","ng://igniteui-angular/lib/icon/icon.component.ts","ng://igniteui-angular/lib/icon/public_api.ts","ng://igniteui-angular/lib/buttonGroup/buttonGroup.component.ts","ng://igniteui-angular/lib/grids/filtering/excel-style/excel-style-default-expression.component.ts","ng://igniteui-angular/lib/core/dates/dateRange.ts","ng://igniteui-angular/lib/calendar/calendar.ts","ng://igniteui-angular/lib/calendar/calendar.directives.ts","ng://igniteui-angular/lib/calendar/calendar-base.ts","ng://igniteui-angular/lib/calendar/month-picker-base.ts","ng://igniteui-angular/lib/calendar/months-view/months-view.component.ts","ng://igniteui-angular/lib/calendar/years-view/years-view.component.ts","ng://igniteui-angular/lib/calendar/days-view/day-item.component.ts","ng://igniteui-angular/lib/calendar/days-view/daysview-navigation.service.ts","ng://igniteui-angular/lib/calendar/days-view/days-view.component.ts","ng://igniteui-angular/lib/calendar/calendar.component.ts","ng://igniteui-angular/lib/calendar/month-picker/month-picker.component.ts","ng://igniteui-angular/lib/calendar/months-view.pipe.ts","ng://igniteui-angular/lib/calendar/calendar.module.ts","ng://igniteui-angular/lib/date-picker/date-picker.common.ts","ng://igniteui-angular/lib/date-picker/date-picker.pipes.ts","ng://igniteui-angular/lib/date-picker/date-picker.directives.ts","ng://igniteui-angular/lib/core/enums.ts","ng://igniteui-angular/lib/date-picker/calendar-container.component.ts","ng://igniteui-angular/lib/date-picker/date-picker.component.ts","ng://igniteui-angular/lib/grids/filtering/excel-style/excel-style-date-expression.component.ts","ng://igniteui-angular/lib/grids/filtering/excel-style/excel-style-custom-dialog.component.ts","ng://igniteui-angular/lib/grids/filtering/excel-style/excel-style-sorting.component.ts","ng://igniteui-angular/lib/grids/filtering/excel-style/grid.excel-style-filtering.component.ts","ng://igniteui-angular/lib/grids/grid-navigation.service.ts","ng://igniteui-angular/lib/grids/resizing/resizing.service.ts","ng://igniteui-angular/lib/grids/headers/grid-header.component.ts","ng://igniteui-angular/lib/chips/chip.component.ts","ng://igniteui-angular/lib/chips/chips-area.component.ts","ng://igniteui-angular/lib/avatar/avatar.component.ts","ng://igniteui-angular/lib/chips/chips.module.ts","ng://igniteui-angular/lib/grids/filtering/base/grid-filtering-cell.component.ts","ng://igniteui-angular/lib/grids/headers/grid-header-group.component.ts","ng://igniteui-angular/lib/core/i18n/date-range-picker-resources.ts","ng://igniteui-angular/lib/core/i18n/grid-resources.ts","ng://igniteui-angular/lib/core/i18n/time-picker-resources.ts","ng://igniteui-angular/lib/core/i18n/paginator-resources.ts","ng://igniteui-angular/lib/core/i18n/carousel-resources.ts","ng://igniteui-angular/lib/core/i18n/resources.ts","ng://igniteui-angular/lib/grids/summaries/grid-summary.service.ts","ng://igniteui-angular/lib/grids/summaries/summary-cell.component.ts","ng://igniteui-angular/lib/grids/summaries/summary-row.component.ts","ng://igniteui-angular/lib/grids/selection/drag-select.directive.ts","ng://igniteui-angular/lib/directives/template-outlet/template_outlet.directive.ts","ng://igniteui-angular/lib/grids/resizing/resizer.directive.ts","ng://igniteui-angular/lib/grids/resizing/resizer.component.ts","ng://igniteui-angular/lib/grids/filtering/base/grid-filtering-row.component.ts","ng://igniteui-angular/lib/grids/moving/moving.service.ts","ng://igniteui-angular/lib/grids/moving/moving.drag.directive.ts","ng://igniteui-angular/lib/grids/grid/grid.directives.ts","ng://igniteui-angular/lib/select/select-item.component.ts","ng://igniteui-angular/lib/select/select-positioning-strategy.ts","ng://igniteui-angular/lib/select/select.component.ts","ng://igniteui-angular/lib/grids/filtering/advanced-filtering/advanced-filtering-dialog.component.ts","ng://igniteui-angular/lib/grids/selection/row-selectors.ts","ng://igniteui-angular/lib/grids/toolbar/toolbar.directive.ts","ng://igniteui-angular/lib/grids/columns/column-group.component.ts","ng://igniteui-angular/lib/grids/row-drag.directive.ts","ng://igniteui-angular/lib/grids/grid-base.directive.ts","ng://igniteui-angular/lib/grids/grid-footer/grid-footer.component.ts","ng://igniteui-angular/lib/select/select-group.component.ts","ng://igniteui-angular/lib/select/select-navigation.directive.ts","ng://igniteui-angular/lib/select/select.module.ts","ng://igniteui-angular/lib/paginator/paginator.component.ts","ng://igniteui-angular/lib/grids/common/grid-pipes.module.ts","ng://igniteui-angular/lib/grids/filtering/excel-style/excel-style-column-moving.component.ts","ng://igniteui-angular/lib/grids/filtering/excel-style/excel-style-search.pipe.ts","ng://igniteui-angular/lib/progressbar/progressbar.common.ts","ng://igniteui-angular/lib/services/direction/directionality.ts","ng://igniteui-angular/lib/progressbar/progressbar.component.ts","ng://igniteui-angular/lib/grids/filtering/excel-style/grid.excel-style-filtering.module.ts","ng://igniteui-angular/lib/grids/selection/selection.module.ts","ng://igniteui-angular/lib/grids/resizing/resize-handle.directive.ts","ng://igniteui-angular/lib/grids/resizing/resize.module.ts","ng://igniteui-angular/lib/grids/moving/moving.drop.directive.ts","ng://igniteui-angular/lib/grids/moving/moving.module.ts","ng://igniteui-angular/lib/badge/badge.component.ts","ng://igniteui-angular/lib/grids/grid/grid-api.service.ts","ng://igniteui-angular/lib/grids/grid/groupby-row.component.ts","ng://igniteui-angular/lib/grids/grid-mrl-navigation.service.ts","ng://igniteui-angular/lib/grids/grid/grid.component.ts","ng://igniteui-angular/lib/grids/state.directive.ts","ng://igniteui-angular/lib/grids/common/shared.module.ts","ng://igniteui-angular/lib/grids/summaries/grid-root-summary.pipe.ts","ng://igniteui-angular/lib/grids/summaries/summary.module.ts","ng://igniteui-angular/lib/grids/hiding/hiding.module.ts","ng://igniteui-angular/lib/grids/pinning/pinning.module.ts","ng://igniteui-angular/lib/grids/toolbar/toolbar.module.ts","ng://igniteui-angular/lib/grids/columns/column-layout.component.ts","ng://igniteui-angular/lib/grids/columns/column.module.ts","ng://igniteui-angular/lib/grids/filtering/base/filtering.module.ts","ng://igniteui-angular/lib/grids/headers/headers.module.ts","ng://igniteui-angular/lib/grids/grid-common.module.ts","ng://igniteui-angular/lib/action-strip/grid-actions/grid-actions-base.directive.ts","ng://igniteui-angular/lib/action-strip/grid-actions/grid-editing-actions.component.ts","ng://igniteui-angular/lib/action-strip/grid-actions/grid-pinning-actions.component.ts","ng://igniteui-angular/lib/action-strip/action-strip.module.ts","ng://igniteui-angular/lib/expansion-panel/expansion-panel.common.ts","ng://igniteui-angular/lib/expansion-panel/expansion-panel-body.component.ts","ng://igniteui-angular/lib/expansion-panel/expansion-panel.directives.ts","ng://igniteui-angular/lib/expansion-panel/expansion-panel-header.component.ts","ng://igniteui-angular/lib/expansion-panel/expansion-panel.component.ts","ng://igniteui-angular/lib/expansion-panel/expansion-panel.module.ts","ng://igniteui-angular/lib/banner/banner.directives.ts","ng://igniteui-angular/lib/banner/banner.component.ts","ng://igniteui-angular/lib/card/card.component.ts","ng://igniteui-angular/lib/carousel/carousel.directives.ts","ng://igniteui-angular/lib/carousel/slide.component.ts","ng://igniteui-angular/lib/carousel/carousel.component.ts","ng://igniteui-angular/lib/combo/combo.directives.ts","ng://igniteui-angular/lib/combo/combo.api.ts","ng://igniteui-angular/lib/combo/combo-item.component.ts","ng://igniteui-angular/lib/combo/combo.common.ts","ng://igniteui-angular/lib/combo/combo-add-item.component.ts","ng://igniteui-angular/lib/combo/combo-dropdown.component.ts","ng://igniteui-angular/lib/combo/combo.pipes.ts","ng://igniteui-angular/lib/combo/combo.component.ts","ng://igniteui-angular/lib/dialog/dialog.directives.ts","ng://igniteui-angular/lib/dialog/dialog.component.ts","ng://igniteui-angular/lib/grids/grid/grid.pipes.ts","ng://igniteui-angular/lib/grids/grid/grid-row.component.ts","ng://igniteui-angular/lib/grids/grid/grid.summary.pipe.ts","ng://igniteui-angular/lib/grids/grid/grid.details.pipe.ts","ng://igniteui-angular/lib/grids/grid/expandable-cell.component.ts","ng://igniteui-angular/lib/grids/grid/grid.module.ts","ng://igniteui-angular/lib/grids/tree-grid/tree-grid-api.service.ts","ng://igniteui-angular/lib/grids/tree-grid/tree-grid.directives.ts","ng://igniteui-angular/lib/grids/tree-grid/tree-grid.component.ts","ng://igniteui-angular/lib/grids/tree-grid/tree-grid-row.component.ts","ng://igniteui-angular/lib/grids/tree-grid/tree-grid.pipes.ts","ng://igniteui-angular/lib/grids/tree-grid/tree-cell.component.ts","ng://igniteui-angular/lib/grids/tree-grid/tree-grid.summary.pipe.ts","ng://igniteui-angular/lib/grids/tree-grid/tree-grid.module.ts","ng://igniteui-angular/lib/grids/hierarchical-grid/child-grid-row.component.ts","ng://igniteui-angular/lib/grids/hierarchical-grid/hierarchical-grid-navigation.service.ts","ng://igniteui-angular/lib/grids/hierarchical-grid/hierarchical-grid-base.directive.ts","ng://igniteui-angular/lib/grids/hierarchical-grid/hierarchical-grid-api.service.ts","ng://igniteui-angular/lib/grids/hierarchical-grid/row-island.component.ts","ng://igniteui-angular/lib/grids/hierarchical-grid/hierarchical-grid.component.ts","ng://igniteui-angular/lib/grids/hierarchical-grid/hierarchical-cell.component.ts","ng://igniteui-angular/lib/grids/hierarchical-grid/hierarchical-row.component.ts","ng://igniteui-angular/lib/grids/hierarchical-grid/hierarchical-grid.pipes.ts","ng://igniteui-angular/lib/grids/hierarchical-grid/hierarchical-grid.module.ts","ng://igniteui-angular/lib/navbar/navbar.component.ts","ng://igniteui-angular/lib/navigation-drawer/navigation-drawer.directives.ts","ng://igniteui-angular/lib/navigation-drawer/navigation-drawer.component.ts","ng://igniteui-angular/lib/navigation-drawer/navigation-drawer.module.ts","ng://igniteui-angular/lib/slider/slider.common.ts","ng://igniteui-angular/lib/slider/thumb/thumb-slider.component.ts","ng://igniteui-angular/lib/slider/label/thumb-label.component.ts","ng://igniteui-angular/lib/slider/ticks/ticks.component.ts","ng://igniteui-angular/lib/slider/ticks/tick.pipe.ts","ng://igniteui-angular/lib/slider/slider.component.ts","ng://igniteui-angular/lib/snackbar/snackbar.component.ts","ng://igniteui-angular/lib/switch/switch.component.ts","ng://igniteui-angular/lib/tabbar/tabbar.component.ts","ng://igniteui-angular/lib/tabs/tabs.common.ts","ng://igniteui-angular/lib/tabs/tabs.directives.ts","ng://igniteui-angular/lib/tabs/tab-item.component.ts","ng://igniteui-angular/lib/tabs/tabs-group.component.ts","ng://igniteui-angular/lib/tabs/tabs.component.ts","ng://igniteui-angular/lib/time-picker/time-picker.common.ts","ng://igniteui-angular/lib/time-picker/time-picker.directives.ts","ng://igniteui-angular/lib/time-picker/time-picker.pipes.ts","ng://igniteui-angular/lib/time-picker/time-picker.component.ts","ng://igniteui-angular/lib/toast/toast.component.ts","ng://igniteui-angular/lib/splitter/splitter-pane/splitter-pane.component.ts","ng://igniteui-angular/lib/splitter/splitter.component.ts","ng://igniteui-angular/lib/splitter/splitter-bar/splitter-bar.component.ts","ng://igniteui-angular/lib/splitter/splitter.module.ts","ng://igniteui-angular/lib/date-range-picker/date-range-picker-inputs.common.ts","ng://igniteui-angular/lib/date-range-picker/date-range-picker.component.ts","ng://igniteui-angular/lib/date-range-picker/date-range-picker.module.ts","ng://igniteui-angular/public_api.ts","ng://igniteui-angular/igniteui-angular.ts"],"sourcesContent":["enum EaseIn {\n    quad = `cubic-bezier(0.550, 0.085, 0.680, 0.530)` as any,\n    cubic = `cubic-bezier(0.550, 0.055, 0.675, 0.190)` as any,\n    quart = `cubic-bezier(0.895, 0.030, 0.685, 0.220)` as any,\n    quint = `cubic-bezier(0.755, 0.050, 0.855, 0.060)` as any,\n    sine = `cubic-bezier(0.470, 0.000, 0.745, 0.715)` as any,\n    expo = `cubic-bezier(0.950, 0.050, 0.795, 0.035)` as any,\n    circ = `cubic-bezier(0.600, 0.040, 0.980, 0.335)` as any,\n    back = `cubic-bezier(0.600, -0.280, 0.735, 0.045)` as any\n}\n\nenum EaseOut {\n    quad = `cubic-bezier(0.250, 0.460, 0.450, 0.940)` as any,\n    cubic = `cubic-bezier(0.215, 0.610, 0.355, 1.000)` as any,\n    quart = `cubic-bezier(0.165, 0.840, 0.440, 1.000)` as any,\n    quint = `cubic-bezier(0.230, 1.000, 0.320, 1.000)` as any,\n    sine = `cubic-bezier(0.390, 0.575, 0.565, 1.000)` as any,\n    expo = `cubic-bezier(0.190, 1.000, 0.220, 1.000)` as any,\n    circ = `cubic-bezier(0.075, 0.820, 0.165, 1.000)` as any,\n    back = `cubic-bezier(0.175, 0.885, 0.320, 1.275)` as any\n}\n\nenum EaseInOut {\n    quad = `cubic-bezier(0.455, 0.030, 0.515, 0.955)` as any,\n    cubic = `cubic-bezier(0.645, 0.045, 0.355, 1.000)` as any,\n    quart = `cubic-bezier(0.770, 0.000, 0.175, 1.000)` as any,\n    quint = `cubic-bezier(0.860, 0.000, 0.070, 1.000)` as any,\n    sine = `cubic-bezier(0.445, 0.050, 0.550, 0.950)` as any,\n    expo = `cubic-bezier(1.000, 0.000, 0.000, 1.000)` as any,\n    circ = `cubic-bezier(0.785, 0.135, 0.150, 0.860)` as any,\n    back = `cubic-bezier(0.680, -0.550, 0.265, 1.550)` as any\n}\n\nexport { EaseIn, EaseOut, EaseInOut };\n","import { animate, animation, AnimationMetadata, AnimationReferenceMetadata, style } from '@angular/animations';\nimport { EaseOut } from '../easings';\nimport { IAnimationParams } from '../interface';\n\nconst base: AnimationMetadata[] = [\n    style({\n        opacity: `{{startOpacity}}`\n    }),\n    animate(\n        `{{duration}} {{delay}} {{easing}}`,\n        style({\n            opacity: `{{endOpacity}}`\n        })\n    )\n];\n\nconst baseParams: IAnimationParams = {\n    delay: '0s',\n    duration: '350ms',\n    easing: EaseOut.sine,\n    endOpacity: 1,\n    startOpacity: 0\n};\n\nconst fadeIn: AnimationReferenceMetadata = animation(base, {\n    params: baseParams\n});\n\nconst fadeOut: AnimationReferenceMetadata = animation(base, {\n    params: {\n        delay: '0s',\n        duration: '350ms',\n        easing: EaseOut.sine,\n        endOpacity: 0,\n        startOpacity: 1\n    }\n});\n\nexport { fadeIn, fadeOut };\n","import {\n    animate,\n    animation,\n    AnimationMetadata,\n    AnimationReferenceMetadata,\n    keyframes,\n    style\n} from '@angular/animations';\nimport { EaseOut } from '../easings';\nimport { IAnimationParams } from '../interface';\n\nconst baseRecipe: AnimationMetadata[] = [\n    style({\n        backfaceVisibility: 'hidden',\n        transformStyle: 'preserve-3d'\n    }),\n    animate(\n        `{{duration}} {{delay}} {{easing}}`,\n        keyframes([\n            style({\n                offset: 0,\n                transform: `translateZ({{startDistance}})\n                rotate3d({{rotateX}}, {{rotateY}}, {{rotateZ}}, {{startAngle}}deg)`\n            }),\n            style({\n                offset: 1,\n                transform: `translateZ({{endDistance}})\n                rotate3d({{rotateX}}, {{rotateY}}, {{rotateZ}}, {{endAngle}}deg)`\n            })\n        ])\n    )\n];\n\nconst baseParams: IAnimationParams = {\n    delay: '0s',\n    duration: '600ms',\n    easing: EaseOut.quad,\n    endAngle: 180,\n    endDistance: '0px',\n    rotateX: 1,\n    rotateY: 0,\n    rotateZ: 0,\n    startAngle: 0,\n    startDistance: '0px'\n};\n\nconst flipTop: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseParams\n    }\n});\n\nconst flipBottom: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseParams,\n        endAngle: -180\n    }\n});\n\nconst flipLeft: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseParams,\n        rotateX: 0,\n        rotateY: 1\n    }\n});\n\nconst flipRight: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseParams,\n        endAngle: -180,\n        rotateX: 0,\n        rotateY: 1\n    }\n});\n\nconst flipHorFwd: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseParams,\n        endDistance: '170px'\n    }\n});\n\nconst flipHorBck: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseParams,\n        endDistance: '-170px'\n    }\n});\n\nconst flipVerFwd: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseParams,\n        endDistance: '170px',\n        rotateX: 0,\n        rotateY: 1\n    }\n});\n\nconst flipVerBck: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseParams,\n        endDistance: '-170px',\n        rotateX: 0,\n        rotateY: 1\n    }\n});\n\nexport {\n    flipTop,\n    flipRight,\n    flipBottom,\n    flipLeft,\n    flipHorFwd,\n    flipHorBck,\n    flipVerFwd,\n    flipVerBck\n};\n","import { animate, animation, AnimationMetadata, AnimationReferenceMetadata, style } from '@angular/animations';\nimport { EaseIn, EaseOut } from '../easings';\nimport { IAnimationParams } from '../interface';\n\nconst baseRecipe: AnimationMetadata[] = [\n    style({\n        opacity: `{{startOpacity}}`,\n        transform: `rotate3d({{rotateX}},{{rotateY}},{{rotateZ}},{{startAngle}}deg)`,\n        transformOrigin: `{{xPos}} {{yPos}}`\n    }),\n    animate(\n        `{{duration}} {{delay}} {{easing}}`,\n        style({\n            offset: 0,\n            opacity: `{{endOpacity}}`,\n            transform: `rotate3d({{rotateX}},{{rotateY}},{{rotateZ}},{{endAngle}}deg)`,\n            transformOrigin: `{{xPos}} {{yPos}}`\n        })\n    )\n];\n\nconst baseInParams: IAnimationParams = {\n    delay: '0s',\n    duration: '600ms',\n    easing: EaseOut.quad,\n    endAngle: 0,\n    endOpacity: 1,\n    rotateX: 0,\n    rotateY: 0,\n    rotateZ: 1,\n    startAngle: -360,\n    startOpacity: 0,\n    xPos: 'center',\n    yPos: 'center'\n};\n\nconst baseOutParams: IAnimationParams = {\n    ...baseInParams,\n    easing: EaseIn.quad,\n    endOpacity: 0,\n    startOpacity: 1\n};\n\nconst rotateInCenter: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: { ...baseInParams }\n});\n\nconst rotateOutCenter: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: { ...baseOutParams }\n});\n\nconst rotateInTop: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseInParams,\n        xPos: 'top'\n    }\n});\n\nconst rotateOutTop: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseOutParams,\n        xPos: 'top'\n    }\n});\n\nconst rotateInRight: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseInParams,\n        xPos: 'right'\n    }\n});\n\nconst rotateOutRight: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseOutParams,\n        xPos: 'right'\n    }\n});\n\nconst rotateInBottom: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseInParams,\n        xPos: 'bottom'\n    }\n});\n\nconst rotateOutBottom: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseOutParams,\n        xPos: 'bottom'\n    }\n});\n\nconst rotateInLeft: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseInParams,\n        xPos: 'left'\n    }\n});\n\nconst rotateOutLeft: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseOutParams,\n        xPos: 'left'\n    }\n});\n\nconst rotateInTr: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseInParams,\n        xPos: 'right',\n        yPos: 'top'\n    }\n});\n\nconst rotateOutTr: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseOutParams,\n        xPos: 'right',\n        yPos: 'top'\n    }\n});\n\nconst rotateInBr: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseInParams,\n        xPos: 'right',\n        yPos: 'bottom'\n    }\n});\n\nconst rotateOutBr: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseOutParams,\n        xPos: 'right',\n        yPos: 'bottom'\n    }\n});\n\nconst rotateInBl: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseInParams,\n        xPos: 'left',\n        yPos: 'bottom'\n    }\n});\n\nconst rotateOutBl: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseOutParams,\n        xPos: 'left',\n        yPos: 'bottom'\n    }\n});\n\nconst rotateInTl: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseInParams,\n        xPos: 'left',\n        yPos: 'top'\n    }\n});\n\nconst rotateOutTl: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseOutParams,\n        xPos: 'left',\n        yPos: 'top'\n    }\n});\n\nconst rotateInDiagonal1: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseInParams,\n        rotateX: 1,\n        rotateY: 1,\n        rotateZ: 0\n    }\n});\n\nconst rotateOutDiagonal1: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseOutParams,\n        rotateX: 1,\n        rotateY: 1,\n        rotateZ: 0\n    }\n});\n\nconst rotateInDiagonal2: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseInParams,\n        rotateX: -1,\n        rotateY: 1,\n        rotateZ: 0\n    }\n});\n\nconst rotateOutDiagonal2: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseOutParams,\n        rotateX: -1,\n        rotateY: 1,\n        rotateZ: 0\n    }\n});\n\nconst rotateInHor: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseInParams,\n        rotateX: 0,\n        rotateY: 1,\n        rotateZ: 0\n    }\n});\n\nconst rotateOutHor: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseOutParams,\n        rotateX: 0,\n        rotateY: 1,\n        rotateZ: 0\n    }\n});\n\nconst rotateInVer: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseInParams,\n        rotateX: 1,\n        rotateY: 0,\n        rotateZ: 0\n    }\n});\n\nconst rotateOutVer: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseOutParams,\n        rotateX: 1,\n        rotateY: 0,\n        rotateZ: 0\n    }\n});\n\nexport {\n    rotateInCenter,\n    rotateInTop,\n    rotateInRight,\n    rotateInLeft,\n    rotateInBottom,\n    rotateInTr,\n    rotateInBr,\n    rotateInBl,\n    rotateInTl,\n    rotateInDiagonal1,\n    rotateInDiagonal2,\n    rotateInHor,\n    rotateInVer,\n    rotateOutCenter,\n    rotateOutTop,\n    rotateOutRight,\n    rotateOutLeft,\n    rotateOutBottom,\n    rotateOutTr,\n    rotateOutBr,\n    rotateOutBl,\n    rotateOutTl,\n    rotateOutDiagonal1,\n    rotateOutDiagonal2,\n    rotateOutHor,\n    rotateOutVer\n};\n","import {\n    animate,\n    animation,\n    AnimationMetadata,\n    AnimationReferenceMetadata,\n    keyframes,\n    style\n} from '@angular/animations';\nimport { EaseInOut } from '../easings';\nimport { IAnimationParams } from '../interface';\n\nconst baseRecipe: AnimationMetadata[] = [\n    animate(\n        `{{duration}} {{delay}} {{easing}}`,\n        keyframes([\n            style({\n                offset: 0,\n                transform: `rotate(0deg) translate{{direction}}(0)`,\n                transformOrigin: `{{xPos}} {{yPos}}`\n            }),\n            style({\n                offset: 0.1,\n                transform: `rotate({{endAngle}}deg) translate{{direction}}(-{{startDistance}})`\n            }),\n            style({\n                offset: 0.2,\n                transform: `rotate(-{{startAngle}}deg) translate{{direction}}({{startDistance}})`\n            }),\n            style({\n                offset: 0.3,\n                transform: `rotate({{startAngle}}deg) translate{{direction}}(-{{startDistance}})`\n            }),\n            style({\n                offset: 0.4,\n                transform: `rotate(-{{startAngle}}deg) translate{{direction}}({{startDistance}})`\n\n            }),\n            style({\n                offset: 0.5,\n                transform: `rotate({{startAngle}}deg) translate{{direction}}(-{{startDistance}})`\n            }),\n            style({\n                offset: 0.6,\n                transform: `rotate(-{{startAngle}}deg) translate{{direction}}({{startDistance}})`\n\n            }),\n            style({\n                offset: 0.7,\n                transform: `rotate({{startAngle}}deg) translate{{direction}}(-{{startDistance}})`\n            }),\n            style({\n                offset: 0.8,\n                transform: `rotate(-{{endAngle}}deg) translate{{direction}}({{endDistance}})`\n\n            }),\n            style({\n                offset: 0.9,\n                transform: `rotate({{endAngle}}deg) translate{{direction}}(-{{endDistance}})`\n\n            }),\n            style({\n                offset: 1,\n                transform: `rotate(0deg) translate{{direction}}(0)`,\n                transformOrigin: `{{xPos}} {{yPos}}`\n            })\n        ])\n    )\n];\n\nconst baseParams: IAnimationParams = {\n    delay: '0s',\n    direction: 'X',\n    duration: '800ms',\n    easing: EaseInOut.quad,\n    endAngle: 0,\n    endDistance: '8px',\n    startAngle: 0,\n    startDistance: '10px',\n    xPos: 'center',\n    yPos: 'center'\n};\n\nconst shakeHor: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseParams,\n        direction: 'X'\n    }\n});\n\nconst shakeVer: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseParams,\n        direction: 'Y'\n    }\n});\n\nconst shakeTop: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseParams,\n        endAngle: 2,\n        endDistance: '0',\n        startAngle: 4,\n        startDistance: '0',\n        yPos: 'top'\n    }\n});\n\nconst shakeBottom: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseParams,\n        direction: 'Y',\n        endAngle: 2,\n        endDistance: '0',\n        startAngle: 4,\n        startDistance: '0',\n        yPos: 'bottom'\n    }\n});\n\nconst shakeRight: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseParams,\n        direction: 'Y',\n        endAngle: 2,\n        endDistance: '0',\n        startAngle: 4,\n        startDistance: '0',\n        xPos: 'right',\n        yPos: 'center'\n    }\n});\n\nconst shakeLeft: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseParams,\n        direction: 'Y',\n        endAngle: 2,\n        endDistance: '0',\n        startAngle: 4,\n        startDistance: '0',\n        xPos: 'left',\n        yPos: 'center'\n    }\n});\n\nconst shakeCenter: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseParams,\n        direction: 'Y',\n        endAngle: 8,\n        endDistance: '0',\n        startAngle: 10,\n        startDistance: '0',\n        xPos: 'center',\n        yPos: 'center'\n    }\n});\n\nconst shakeTr: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseParams,\n        direction: 'Y',\n        endAngle: 2,\n        endDistance: '0',\n        startAngle: 4,\n        startDistance: '0',\n        xPos: 'right',\n        yPos: 'top'\n    }\n});\n\nconst shakeBr: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseParams,\n        direction: 'Y',\n        endAngle: 2,\n        endDistance: '0',\n        startAngle: 4,\n        startDistance: '0',\n        xPos: 'right',\n        yPos: 'bottom'\n    }\n});\n\nconst shakeBl: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseParams,\n        direction: 'Y',\n        endAngle: 2,\n        endDistance: '0',\n        startAngle: 4,\n        startDistance: '0',\n        xPos: 'left',\n        yPos: 'bottom'\n    }\n});\n\nconst shakeTl: AnimationReferenceMetadata = animation(baseRecipe, {\n    params: {\n        ...baseParams,\n        direction: 'Y',\n        endAngle: 2,\n        endDistance: '0',\n        startAngle: 4,\n        startDistance: '0',\n        xPos: 'left',\n        yPos: 'top'\n    }\n});\n\nexport {\n    shakeHor,\n    shakeVer,\n    shakeTop,\n    shakeBottom,\n    shakeRight,\n    shakeLeft,\n    shakeCenter,\n    shakeTr,\n    shakeBr,\n    shakeBl,\n    shakeTl\n};\n","import {\n    animate,\n    animation,\n    AnimationMetadata,\n    keyframes,\n    style\n} from '@angular/animations';\nimport { IAnimationParams } from '../interface';\n\nconst heartbeatBase: AnimationMetadata[] = [\n    style({\n        animationTimingFunction: `ease-out`,\n        transform: `scale(1)`,\n        transformOrigin: `center center`\n    }),\n    animate(\n        `{{duration}} {{delay}} {{easing}}`,\n        keyframes([\n            style({\n                animationTimingFunction: `ease-in`,\n                offset: 0.1,\n                transform: `scale(0.91)`\n            }),\n            style({\n                animationTimingFunction: `ease-out`,\n                offset: 0.17,\n                transform: `scale(0.98)`\n            }),\n            style({\n                animationTimingFunction: `ease-in`,\n                offset: 0.33,\n                transform: `scale(0.87)`\n            }),\n            style({\n                animationTimingFunction: `ease-out`,\n                offset: 0.45,\n                transform: `scale(1)`\n            })\n        ])\n    )\n];\n\nconst heartbeatParams: IAnimationParams = {\n    delay: '0s',\n    duration: '1.5s',\n    easing: 'ease-in-out'\n};\n\nconst pulsateBase: AnimationMetadata[] = [\n    animate(\n        `{{duration}} {{delay}} {{easing}}`,\n        keyframes([\n            style({\n                offset: 0,\n                transform: `scale({{fromScale}})`\n            }),\n            style({\n                offset: 0.5,\n                transform: `scale({{toScale}})`\n            }),\n            style({\n                offset: 1,\n                transform: `scale({{fromScale}})`\n            })\n        ])\n    )\n];\n\nconst pulsateParams: IAnimationParams = {\n    delay: '0s',\n    duration: '.5s',\n    easing: 'ease-in-out',\n    fromScale: 1,\n    toScale: 1.1\n};\n\nconst blinkBase: AnimationMetadata[] = [\n    animate(\n        `{{duration}} {{delay}} {{easing}}`,\n        keyframes([\n            style({\n                offset: 0,\n                opacity: .8,\n                transform: `scale({{fromScale}})`\n            }),\n            style({\n                offset: 0.8,\n                opacity: 0,\n                transform: `scale({{midScale}})`\n            }),\n            style({\n                offset: 1,\n                opacity: 0,\n                transform: `scale({{toScale}})`\n            })\n        ])\n    )\n];\n\nconst blinkParams: IAnimationParams = {\n    delay: '0s',\n    duration: '.8s',\n    easing: 'ease-in-out',\n    fromScale: .2,\n    midScale: 1.2,\n    toScale: 2.2\n};\n\nconst pulsateFwd = animation(pulsateBase, {\n    params: {\n        ...pulsateParams\n    }\n});\n\nconst pulsateBck = animation(pulsateBase, {\n    params: {\n        ...pulsateParams,\n        toScale: .9\n    }\n});\n\nconst heartbeat = animation(heartbeatBase, {\n    params: {\n        ...heartbeatParams\n    }\n});\n\nconst blink = animation(blinkBase, {\n    params: {\n        ...blinkParams\n    }\n});\n\nexport {\n    heartbeat,\n    pulsateFwd,\n    pulsateBck,\n    blink\n};\n","import { animate, animation, AnimationMetadata, AnimationReferenceMetadata, style } from '@angular/animations';\nimport { EaseOut } from '../easings';\nimport { IAnimationParams } from '../interface';\n\nconst base: AnimationMetadata[] = [\n    style({\n        opacity: `{{startOpacity}}`,\n        transform: `scale{{direction}}({{fromScale}})`,\n        transformOrigin: `{{xPos}} {{yPos}}`\n    }),\n    animate(\n        `{{duration}} {{delay}} {{easing}}`,\n        style({\n            opacity: `{{endOpacity}}`,\n            transform: `scale{{direction}}({{toScale}})`,\n            transformOrigin: `{{xPos}} {{yPos}}`\n        })\n    )\n];\n\nconst baseInParams: IAnimationParams = {\n    delay: '0s',\n    direction: '',\n    duration: '350ms',\n    easing: EaseOut.quad,\n    endOpacity: 1,\n    fromScale: .5,\n    startOpacity: 0,\n    toScale: 1,\n    xPos: '50%',\n    yPos: '50%'\n};\n\nconst baseOutParams: IAnimationParams = {\n    ...baseInParams,\n    easing: EaseOut.sine,\n    endOpacity: 0,\n    fromScale: 1,\n    startOpacity: 1,\n    toScale: .5\n};\n\nconst scaleInCenter: AnimationReferenceMetadata = animation(base, { params: baseInParams });\n\nconst scaleInBl: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseInParams,\n            xPos: '0',\n            yPos: '100%'\n        }\n    }\n);\n\nconst scaleInVerCenter: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseInParams,\n            direction: 'Y',\n            fromScale: .4\n        }\n    }\n);\n\nconst scaleInTop: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseInParams,\n            xPos: '50%',\n            yPos: '0'\n        }\n    }\n);\n\nconst scaleInLeft: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseInParams,\n            xPos: '0',\n            yPos: '50%'\n        }\n    }\n);\n\nconst scaleInVerTop: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseInParams,\n            direction: 'Y',\n            fromScale: .4,\n            xPos: '100%',\n            yPos: '0'\n        }\n    }\n);\n\nconst scaleInTr = animation(base,\n    {\n        params: {\n            ...baseInParams,\n            xPos: '100%',\n            yPos: '0'\n        }\n    }\n);\n\nconst scaleInTl: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseInParams,\n            xPos: '0',\n            yPos: '0'\n        }\n    }\n);\n\nconst scaleInVerBottom: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseInParams,\n            direction: 'Y',\n            fromScale: .4,\n            xPos: '0',\n            yPos: '100%'\n        }\n    }\n);\n\nconst scaleInRight: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseInParams,\n            xPos: '100%',\n            yPos: '50%'\n        }\n    }\n);\n\nconst scaleInHorCenter: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseInParams,\n            direction: 'X',\n            fromScale: .4\n        }\n    }\n);\n\nconst scaleInBr: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseInParams,\n            xPos: '100%',\n            yPos: '100%'\n        }\n    }\n);\n\nconst scaleInHorLeft: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseInParams,\n            direction: 'X',\n            fromScale: .4,\n            xPos: '0',\n            yPos: '0'\n        }\n    }\n);\n\nconst scaleInBottom: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseInParams,\n            xPos: '50%',\n            yPos: '100%'\n        }\n    }\n);\n\nconst scaleInHorRight: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseInParams,\n            direction: 'X',\n            fromScale: .4,\n            xPos: '100%',\n            yPos: '100%'\n        }\n    }\n);\n\nconst scaleOutCenter: AnimationReferenceMetadata = animation(base, { params: baseOutParams });\n\nconst scaleOutBl: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseOutParams,\n            xPos: '0',\n            yPos: '100%'\n        }\n    }\n);\n\nconst scaleOutBr: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseOutParams,\n            xPos: '100%',\n            yPos: '100%'\n        }\n    }\n);\n\nconst scaleOutVerCenter: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseOutParams,\n            direction: 'Y',\n            toScale: .3\n        }\n    }\n);\n\nconst scaleOutVerTop: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseOutParams,\n            direction: 'Y',\n            toScale: .3,\n            xPos: '100%',\n            yPos: '0'\n        }\n    }\n);\n\nconst scaleOutVerBottom: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseOutParams,\n            direction: 'Y',\n            toScale: .3,\n            xPos: '0',\n            yPos: '100%'\n        }\n    }\n);\n\nconst scaleOutTop: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseOutParams,\n            xPos: '50%',\n            yPos: '0'\n        }\n    }\n);\n\nconst scaleOutLeft: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseOutParams,\n            xPos: '0',\n            yPos: '50%'\n        }\n    }\n);\n\nconst scaleOutTr: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseOutParams,\n            xPos: '100%',\n            yPos: '0'\n        }\n    }\n);\n\nconst scaleOutTl: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseOutParams,\n            xPos: '0',\n            yPos: '0'\n        }\n    }\n);\n\nconst scaleOutRight: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseOutParams,\n            xPos: '100%',\n            yPos: '50%'\n        }\n    }\n);\n\nconst scaleOutBottom: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseOutParams,\n            xPos: '50%',\n            yPos: '100%'\n        }\n    }\n);\n\nconst scaleOutHorCenter: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseOutParams,\n            direction: 'X',\n            toScale: .3\n        }\n    }\n);\n\nconst scaleOutHorLeft: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseOutParams,\n            direction: 'X',\n            toScale: .3,\n            xPos: '0',\n            yPos: '0'\n        }\n    }\n);\n\nconst scaleOutHorRight: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseOutParams,\n            direction: 'X',\n            toScale: .3,\n            xPos: '100%',\n            yPos: '100%'\n        }\n    }\n);\n\nexport {\n    scaleInTop,\n    scaleInRight,\n    scaleInBottom,\n    scaleInLeft,\n    scaleInCenter,\n    scaleInTr,\n    scaleInBr,\n    scaleInBl,\n    scaleInTl,\n    scaleInVerTop,\n    scaleInVerBottom,\n    scaleInVerCenter,\n    scaleInHorCenter,\n    scaleInHorLeft,\n    scaleInHorRight,\n    scaleOutTop,\n    scaleOutRight,\n    scaleOutBottom,\n    scaleOutLeft,\n    scaleOutCenter,\n    scaleOutTr,\n    scaleOutBr,\n    scaleOutBl,\n    scaleOutTl,\n    scaleOutVerTop,\n    scaleOutVerBottom,\n    scaleOutVerCenter,\n    scaleOutHorCenter,\n    scaleOutHorLeft,\n    scaleOutHorRight\n};\n","import { animate, animation, AnimationMetadata, AnimationReferenceMetadata, style } from '@angular/animations';\nimport { EaseIn, EaseOut } from '../easings';\nimport { IAnimationParams } from '../interface';\n\nconst base: AnimationMetadata[] = [\n    style({\n        opacity: `{{startOpacity}}`,\n        transform: `{{fromPosition}}`\n    }),\n    animate(\n        `{{duration}} {{delay}} {{easing}}`,\n        style({\n            opacity: `{{endOpacity}}`,\n            transform: `{{toPosition}}`\n        })\n    )\n];\n\nconst baseInParams: IAnimationParams = {\n    delay: '0s',\n    duration: '350ms',\n    easing: EaseOut.quad,\n    endOpacity: 1,\n    fromPosition: 'translateY(-500px)',\n    startOpacity: 0,\n    toPosition: 'translateY(0)'\n};\n\nconst baseOutParams: IAnimationParams = {\n    delay: '0s',\n    duration: '350ms',\n    easing: EaseIn.quad,\n    endOpacity: 0,\n    fromPosition: 'translateY(0)',\n    startOpacity: 1,\n    toPosition: 'translateY(-500px)'\n};\n\nconst slideInTop: AnimationReferenceMetadata = animation(base, { params: baseInParams });\n\nconst slideInLeft: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            delay: '0s',\n            duration: '350ms',\n            easing: EaseOut.quad,\n            endOpacity: 1,\n            fromPosition: 'translateX(-500px)',\n            startOpacity: 0,\n            toPosition: 'translateY(0)'\n        }\n    }\n);\n\nconst slideInRight: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            delay: '0s',\n            duration: '350ms',\n            easing: EaseOut.quad,\n            endOpacity: 1,\n            fromPosition: 'translateX(500px)',\n            startOpacity: 0,\n            toPosition: 'translateY(0)'\n        }\n    }\n);\n\nconst slideInBottom: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            delay: '0s',\n            duration: '350ms',\n            easing: EaseOut.quad,\n            endOpacity: 1,\n            fromPosition: 'translateY(500px)',\n            startOpacity: 0,\n            toPosition: 'translateY(0)'\n        }\n    }\n);\n\nconst slideInTr: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseInParams,\n            fromPosition: 'translateY(-500px) translateX(500px)',\n            toPosition: 'translateY(0) translateX(0)'\n        }\n    }\n);\n\nconst slideInTl: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseInParams,\n            fromPosition: 'translateY(-500px) translateX(-500px)',\n            toPosition: 'translateY(0) translateX(0)'\n        }\n    }\n);\n\nconst slideInBr: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseInParams,\n            fromPosition: 'translateY(500px) translateX(500px)',\n            toPosition: 'translateY(0) translateX(0)'\n        }\n    }\n);\n\nconst slideInBl: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseInParams,\n            fromPosition: 'translateY(500px) translateX(-500px)',\n            toPosition: 'translateY(0) translateX(0)'\n        }\n    }\n);\n\nconst slideOutTop: AnimationReferenceMetadata = animation(base, { params: baseOutParams });\n\nconst slideOutRight: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseOutParams,\n            toPosition: 'translateX(500px)'\n        }\n    }\n);\n\nconst slideOutBottom: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            delay: '0s',\n            duration: '350ms',\n            easing: EaseIn.quad,\n            endOpacity: 0,\n            fromPosition: 'translateY(0)',\n            startOpacity: 1,\n            toPosition: 'translateY(500px)'\n        }\n    }\n);\n\nconst slideOutLeft: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseOutParams,\n            toPosition: 'translateX(-500px)'\n        }\n    }\n);\n\nconst slideOutTr: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseOutParams,\n            fromPosition: 'translateY(0) translateX(0)',\n            toPosition: 'translateY(-500px) translateX(500px)'\n        }\n    }\n);\n\nconst slideOutBr: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseOutParams,\n            fromPosition: 'translateY(0) translateX(0)',\n            toPosition: 'translateY(500px) translateX(500px)'\n        }\n    }\n);\n\nconst slideOutBl: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseOutParams,\n            fromPosition: 'translateY(0) translateX(0)',\n            toPosition: 'translateY(500px) translateX(-500px)'\n        }\n    }\n);\n\nconst slideOutTl: AnimationReferenceMetadata = animation(base,\n    {\n        params: {\n            ...baseOutParams,\n            fromPosition: 'translateY(0) translateX(0)',\n            toPosition: 'translateY(-500px) translateX(-500px)'\n        }\n    }\n);\n\nexport {\n    slideInTop,\n    slideInRight,\n    slideInBottom,\n    slideInLeft,\n    slideInTr,\n    slideInBr,\n    slideInBl,\n    slideInTl,\n    slideOutTop,\n    slideOutBottom,\n    slideOutRight,\n    slideOutLeft,\n    slideOutTr,\n    slideOutBr,\n    slideOutBl,\n    slideOutTl\n};\n","import { animate, animation, AnimationMetadata, AnimationReferenceMetadata, style } from '@angular/animations';\nimport { EaseIn, EaseOut } from '../easings';\nimport { IAnimationParams } from '../interface';\n\nconst swingBase: AnimationMetadata[] = [\n    style({\n        opacity: `{{startOpacity}}`,\n        transform: `rotate{{direction}}({{startAngle}}deg)`,\n        transformOrigin: `{{xPos}} {{yPos}}`\n    }),\n    animate(\n        `{{duration}} {{delay}} {{easing}}`,\n        style({\n            opacity: `{{endOpacity}}`,\n            transform: `rotate{{direction}}({{endAngle}}deg)`,\n            transformOrigin: `{{xPos}} {{yPos}}`\n        })\n    )\n];\n\nconst swingParams: IAnimationParams = {\n    delay: '0s',\n    direction: 'X',\n    duration: '.5s',\n    easing: EaseOut.back,\n    endAngle: 0,\n    endOpacity: 1,\n    startAngle: -100,\n    startOpacity: 0,\n    xPos: 'top',\n    yPos: 'center'\n};\n\nconst swingOutParams: IAnimationParams = {\n    ...swingParams,\n    duration: '.55s',\n    easing: EaseIn.back,\n    endAngle: 70,\n    endOpacity: 0,\n    startAngle: 0,\n    startOpacity: 1\n};\n\nconst swingInTopFwd: AnimationReferenceMetadata = animation(swingBase, {\n    params: {\n        ...swingParams\n    }\n});\n\nconst swingInRightFwd: AnimationReferenceMetadata = animation(swingBase, {\n    params: {\n        ...swingParams,\n        direction: 'Y',\n        xPos: 'center',\n        yPos: 'right'\n    }\n});\n\nconst swingInBottomFwd: AnimationReferenceMetadata = animation(swingBase, {\n    params: {\n        ...swingParams,\n        startAngle: 100,\n        xPos: 'bottom'\n    }\n});\n\nconst swingInLeftFwd: AnimationReferenceMetadata = animation(swingBase, {\n    params: {\n        ...swingParams,\n        direction: 'Y',\n        startAngle: 100,\n        xPos: 'center',\n        yPos: 'left'\n    }\n});\n\nconst swingInTopBck: AnimationReferenceMetadata = animation(swingBase, {\n    params: {\n        ...swingParams,\n        duration: '.6s',\n        startAngle: 70\n    }\n});\n\nconst swingInRightBck: AnimationReferenceMetadata = animation(swingBase, {\n    params: {\n        ...swingParams,\n        direction: 'Y',\n        duration: '.6s',\n        startAngle: 70,\n        xPos: 'center',\n        yPos: 'right'\n    }\n});\n\nconst swingInBottomBck: AnimationReferenceMetadata = animation(swingBase, {\n    params: {\n        ...swingParams,\n        duration: '.6s',\n        startAngle: -70,\n        xPos: 'bottom'\n    }\n});\n\nconst swingInLeftBck: AnimationReferenceMetadata = animation(swingBase, {\n    params: {\n        ...swingParams,\n        direction: 'Y',\n        duration: '.6s',\n        startAngle: -70,\n        xPos: 'center',\n        yPos: 'left'\n    }\n});\n\nconst swingOutTopFwd: AnimationReferenceMetadata = animation(swingBase, {\n    params: {\n        ...swingOutParams\n    }\n});\n\nconst swingOutRightFwd: AnimationReferenceMetadata = animation(swingBase, {\n    params: {\n        ...swingOutParams,\n        direction: 'Y',\n        xPos: 'center',\n        yPos: 'right'\n    }\n});\n\nconst swingOutBottomFwd: AnimationReferenceMetadata = animation(swingBase, {\n    params: {\n        ...swingOutParams,\n        endAngle: -70,\n        xPos: 'bottom'\n    }\n});\n\nconst swingOutLefttFwd: AnimationReferenceMetadata = animation(swingBase, {\n    params: {\n        ...swingOutParams,\n        direction: 'Y',\n        endAngle: -70,\n        xPos: 'center',\n        yPos: 'left'\n    }\n});\n\nconst swingOutTopBck: AnimationReferenceMetadata = animation(swingBase, {\n    params: {\n        ...swingOutParams,\n        duration: '.45s',\n        endAngle: -100\n    }\n});\n\nconst swingOutRightBck: AnimationReferenceMetadata = animation(swingBase, {\n    params: {\n        ...swingOutParams,\n        direction: 'Y',\n        duration: '.45s',\n        endAngle: -100,\n        xPos: 'center',\n        yPos: 'right'\n    }\n});\n\nconst swingOutBottomBck: AnimationReferenceMetadata = animation(swingBase, {\n    params: {\n        ...swingOutParams,\n        duration: '.45s',\n        endAngle: 100,\n        xPos: 'bottom'\n    }\n});\n\nconst swingOutLeftBck: AnimationReferenceMetadata = animation(swingBase, {\n    params: {\n        ...swingOutParams,\n        direction: 'Y',\n        duration: '.45s',\n        endAngle: 100,\n        xPos: 'center',\n        yPos: 'left'\n    }\n});\n\nexport {\n    swingInTopFwd,\n    swingInRightFwd,\n    swingInLeftFwd,\n    swingInBottomFwd,\n    swingInTopBck,\n    swingInRightBck,\n    swingInBottomBck,\n    swingInLeftBck,\n    swingOutTopFwd,\n    swingOutRightFwd,\n    swingOutBottomFwd,\n    swingOutLefttFwd,\n    swingOutTopBck,\n    swingOutRightBck,\n    swingOutBottomBck,\n    swingOutLeftBck\n};\n","import { animate, animation, AnimationMetadata, AnimationReferenceMetadata, style } from '@angular/animations';\nimport { EaseOut, EaseIn } from '../easings';\nimport { IAnimationParams } from '../interface';\n\nconst base: AnimationMetadata[] = [\n    style({\n        opacity: `{{ startOpacity }}`,\n        height: `{{ startHeight }}`\n    }),\n    animate(\n        `{{duration}} {{delay}} {{easing}}`,\n        style({\n            opacity: `{{ endOpacity }}`,\n            height: `{{ endHeight }}`\n        })\n    )\n];\n\nconst baseParams: IAnimationParams = {\n    delay: '0s',\n    duration: '350ms',\n    easing: EaseIn.quad,\n    startOpacity: 0,\n    endOpacity: 1,\n    startHeight: '',\n    endHeight: ''\n};\n\nconst growVerIn: AnimationReferenceMetadata = animation(base, {\n    params: {\n        ...baseParams,\n        easing: EaseOut.quad,\n        startOpacity: 0,\n        endOpacity: 1,\n        startHeight: '0px',\n        endHeight: '*'\n    }\n});\n\nconst growVerOut: AnimationReferenceMetadata = animation(base, {\n    params: {\n        ...baseParams,\n        easing: EaseOut.quad,\n        startOpacity: 1,\n        endOpacity: 0,\n        startHeight: '*',\n        endHeight: '0px'\n    }\n});\n\nexport { growVerIn, growVerOut };\n","import { IToggleView } from './IToggleView';\nimport { Injectable } from '@angular/core';\n\n/**\n * Common service to be injected between components where those implementing common\n * ToggleView interface can register and toggle directives can call their methods.\n * TODO: Track currently active? Events?\n */\n@Injectable()\nexport class IgxNavigationService {\n    private navs: { [id: string]: IToggleView; };\n\n    constructor() {\n        this.navs = {};\n    }\n\n    public add(id: string, navItem: IToggleView) {\n        this.navs[id] = navItem;\n    }\n\n    public remove(id: string) {\n        delete this.navs[id];\n    }\n\n    public get(id: string): IToggleView {\n        if (id) {\n            return this.navs[id];\n        }\n    }\n\n    public toggle(id: string, ...args) {\n        if (this.navs[id]) {\n            return this.navs[id].toggle(...args);\n        }\n    }\n    public open(id: string, ...args) {\n        if (this.navs[id]) {\n            return this.navs[id].open(...args);\n        }\n    }\n    public close(id: string, ...args) {\n        if (this.navs[id]) {\n            return this.navs[id].close(...args);\n        }\n    }\n}\n","import { Directive, HostListener, Input, NgModule } from '@angular/core';\nimport {IgxNavigationService} from './nav.service';\n\n/**\n * Directive that can toggle targets through provided NavigationService.\n *\n * Usage:\n * ```\n * <button igxNavToggle=\"ID\"> Toggle </button>\n * ```\n * Where the `ID` matches the ID of compatible `IToggleView` component.\n */\n@Directive({ selector: '[igxNavToggle]' })\nexport class IgxNavigationToggleDirective {\n    public state: IgxNavigationService;\n\n    @Input('igxNavToggle') private target;\n\n    constructor(nav: IgxNavigationService) {\n        this.state = nav;\n    }\n\n    @HostListener('click')\n    public toggleNavigationDrawer() {\n        this.state.toggle(this.target, true);\n    }\n}\n\n/**\n * Directive that can close targets through provided NavigationService.\n *\n * Usage:\n * ```\n * <button igxNavClose=\"ID\"> Close </button>\n * ```\n * Where the `ID` matches the ID of compatible `IToggleView` component.\n */\n@Directive({ selector: '[igxNavClose]' })\nexport class IgxNavigationCloseDirective {\n    public state: IgxNavigationService;\n\n    @Input('igxNavClose') private target;\n\n    constructor(nav: IgxNavigationService) {\n        this.state = nav;\n    }\n\n    @HostListener('click')\n    public closeNavigationDrawer() {\n        this.state.close(this.target, true);\n    }\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [IgxNavigationCloseDirective, IgxNavigationToggleDirective],\n    exports: [IgxNavigationCloseDirective, IgxNavigationToggleDirective],\n    providers: [IgxNavigationService]\n})\nexport class IgxNavigationModule {}\n","import { Injectable, PLATFORM_ID, Inject } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Observable } from 'rxjs';\nimport ResizeObserver from 'resize-observer-polyfill';\n\n/**\n * @hidden\n */\nexport function cloneArray(array: any[], deep?: boolean) {\n    const arr = [];\n    if (!array) {\n        return arr;\n    }\n    let i = array.length;\n    while (i--) {\n        arr[i] = deep ? cloneValue(array[i]) : array[i];\n    }\n    return arr;\n}\n\n/**\n * Doesn't clone leaf items\n * @hidden\n */\nexport function cloneHierarchicalArray(array: any[], childDataKey: any): any[] {\n    const result: any[] = [];\n    if (!array) {\n        return result;\n    }\n\n    for (const item of array) {\n        const clonedItem = cloneValue(item);\n        if (Array.isArray(item[childDataKey])) {\n            clonedItem[childDataKey] = cloneHierarchicalArray(clonedItem[childDataKey], childDataKey);\n        }\n        result.push(clonedItem);\n    }\n    return result;\n}\n\n/**\n * Deep clones all first level keys of Obj2 and merges them to Obj1\n * @param obj1 Object to merge into\n * @param obj2 Object to merge from\n * @returns Obj1 with merged cloned keys from Obj2\n * @hidden\n */\nexport function mergeObjects(obj1: {}, obj2: {}): any {\n    if (!isObject(obj1)) {\n        throw new Error(`Cannot merge into ${obj1}. First param must be an object.`);\n    }\n\n    if (!isObject(obj2)) {\n        return obj1;\n    }\n\n    for (const key of Object.keys(obj2)) {\n        obj1[key] = cloneValue(obj2[key]);\n    }\n\n    return obj1;\n}\n\n/**\n * Creates deep clone of provided value.\n * Supports primitive values, dates and objects.\n * If passed value is array returns shallow copy of the array.\n * @param value value to clone\n * @returns Deep copy of provided value\n * @hidden\n */\nexport function cloneValue(value: any): any {\n    if (isDate(value)) {\n        return new Date(value.getTime());\n    }\n    if (Array.isArray(value)) {\n        return [...value];\n    }\n\n    if (value instanceof Map || value instanceof Set) {\n        return value;\n    }\n\n    if (isObject(value)) {\n        const result = {};\n\n        for (const key of Object.keys(value)) {\n            result[key] = cloneValue(value[key]);\n        }\n        return result;\n    }\n    return value;\n}\n\n/**\n * Checks if provided variable is Object\n * @param value Value to check\n * @returns true if provided variable is Object\n * @hidden\n */\nexport function isObject(value: any): boolean {\n    return value && value.toString() === '[object Object]';\n}\n\n/**\n * Checks if provided variable is Date\n * @param value Value to check\n * @returns true if provided variable is Date\n * @hidden\n */\nexport function isDate(value: any) {\n    return Object.prototype.toString.call(value) === '[object Date]';\n}\n\n/**\n * Checks if the two passed arguments are equal\n * Currently supports date objects\n * @param obj1\n * @param obj2\n * @returns: `boolean`\n * @hidden\n */\nexport function isEqual(obj1, obj2): boolean {\n    if (isDate(obj1) && isDate(obj2)) {\n        return obj1.getTime() === obj2.getTime();\n    }\n    return obj1 === obj2;\n}\n\n/**\n * @hidden\n */\nexport const enum KEYCODES {\n    ENTER = 13,\n    SPACE = 32,\n    ESCAPE = 27,\n    LEFT_ARROW = 37,\n    UP_ARROW = 38,\n    RIGHT_ARROW = 39,\n    DOWN_ARROW = 40,\n    F2 = 113,\n    TAB = 9,\n    CTRL = 17,\n    Z = 90,\n    Y = 89,\n    X = 88,\n    BACKSPACE = 8,\n    DELETE = 46,\n    INPUT_METHOD = 229\n}\n\n/**\n * @hidden\n */\nexport const enum KEYS {\n    ENTER = 'Enter',\n    SPACE = ' ',\n    SPACE_IE = 'Spacebar',\n    ESCAPE = 'Escape',\n    ESCAPE_IE = 'Esc',\n    LEFT_ARROW = 'ArrowLeft',\n    LEFT_ARROW_IE = 'Left',\n    UP_ARROW = 'ArrowUp',\n    UP_ARROW_IE = 'Up',\n    RIGHT_ARROW = 'ArrowRight',\n    RIGHT_ARROW_IE = 'Right',\n    DOWN_ARROW = 'ArrowDown',\n    DOWN_ARROW_IE = 'Down',\n    F2 = 'F2',\n    TAB = 'Tab',\n    SEMICOLON = ';',\n    HOME = 'Home',\n    END = 'End'\n}\n\n/**\n * @hidden\n * Returns the actual size of the node content, using Range\n * ```typescript\n * let range = document.createRange();\n * let column = this.grid.columnList.filter(c => c.field === 'ID')[0];\n *\n * let size = getNodeSizeViaRange(range, column.cells[0].nativeElement);\n * ```\n */\nexport function getNodeSizeViaRange(range: Range, node: any): number {\n    let overflow = null;\n    if (!isFirefox()) {\n        overflow = node.style.overflow;\n        // we need that hack - otherwise content won't be measured correctly in IE/Edge\n        node.style.overflow = 'visible';\n    }\n\n    range.selectNodeContents(node);\n    const width = range.getBoundingClientRect().width;\n\n    if (!isFirefox()) {\n        // we need that hack - otherwise content won't be measured correctly in IE/Edge\n        node.style.overflow = overflow;\n    }\n\n    return width;\n}\n/**\n * @hidden\n * Returns the actual size of the node content, using Canvas\n * ```typescript\n * let ctx = document.createElement('canvas').getContext('2d');\n * let column = this.grid.columnList.filter(c => c.field === 'ID')[0];\n *\n * let size = valToPxlsUsingCanvas(ctx, column.cells[0].nativeElement);\n * ```\n */\nexport function getNodeSizeViaCanvas(canvas2dCtx: any, node: any): number {\n    const s = this.grid.document.defaultView.getComputedStyle(node);\n\n    // need to set the font to get correct width\n    canvas2dCtx.font = s.fontSize + ' ' + s.fontFamily;\n\n    return canvas2dCtx.measureText(node.textContent).width;\n}\n/**\n * @hidden\n */\nexport function isIE(): boolean {\n    return navigator.appVersion.indexOf('Trident/') > 0;\n}\n/**\n * @hidden\n */\nexport function isEdge(): boolean {\n    const edgeBrowser = /Edge[\\/\\s](\\d+\\.\\d+)/.test(navigator.userAgent);\n    return edgeBrowser;\n}\n\n/**\n * @hidden\n */\nexport function isFirefox(): boolean {\n    const firefoxBrowser = /Firefox[\\/\\s](\\d+\\.\\d+)/.test(navigator.userAgent);\n    return firefoxBrowser;\n}\n\n/**\n * @hidden\n */\n@Injectable({ providedIn: 'root' })\nexport class PlatformUtil {\n    public isBrowser: boolean = isPlatformBrowser(this.platformId);\n\n    public isIOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window);\n\n    constructor(@Inject(PLATFORM_ID) private platformId: Object) {\n    }\n}\n\n/**\n * @hidden\n */\nexport function isLeftClick(event: PointerEvent) {\n    return event.button === 0;\n}\n\n/** @hidden */\nexport function isNavigationKey(key: string): boolean {\n    return [\n        'down',\n        'up',\n        'left',\n        'right',\n        'arrowdown',\n        'arrowup',\n        'arrowleft',\n        'arrowright',\n        'home',\n        'end',\n        'space',\n        'spacebar',\n        ' '\n    ].indexOf(key) !== -1;\n}\n\n/**\n * @hidden\n */\nexport function flatten(arr: any[]) {\n    let result = [];\n\n    arr.forEach(el => {\n        result.push(el);\n        if (el.children) {\n            const children = Array.isArray(el.children) ? el.children : el.children.toArray();\n            result = result.concat(flatten(children));\n        }\n    });\n    return result;\n}\n\nexport interface CancelableEventArgs {\n    /**\n     * Provides the ability to cancel the event.\n     */\n    cancel: boolean;\n}\n\nexport interface IBaseEventArgs {\n    /**\n     * Provides reference to the owner component.\n     */\n    owner?: any;\n}\n\nexport interface CancelableBrowserEventArgs extends CancelableEventArgs {\n    /** Browser event */\n    event?: Event;\n}\n\nexport const HORIZONTAL_NAV_KEYS = new Set(['arrowleft', 'left', 'arrowright', 'right', 'home', 'end']);\n\nexport const NAVIGATION_KEYS = new Set([\n    'down',\n    'up',\n    'left',\n    'right',\n    'arrowdown',\n    'arrowup',\n    'arrowleft',\n    'arrowright',\n    'home',\n    'end',\n    'space',\n    'spacebar',\n    ' '\n]);\nexport const ROW_EXPAND_KEYS = new Set('right down arrowright arrowdown'.split(' '));\nexport const ROW_COLLAPSE_KEYS = new Set('left up arrowleft arrowup'.split(' '));\nexport const SUPPORTED_KEYS = new Set([...Array.from(NAVIGATION_KEYS), 'enter', 'f2', 'escape', 'esc', 'pagedown', 'pageup']);\nexport const HEADER_KEYS = new Set([...Array.from(NAVIGATION_KEYS), 'escape', 'esc' , 'l']);\n\n/**\n * @hidden\n * @internal\n *\n * Creates a new ResizeObserver on `target` and returns it as an Observable.\n * Run the resizeObservable outside angular zone, because it patches the MutationObserver which causes an infinite loop.\n * Related issue: https://github.com/angular/angular/issues/31712\n */\nexport function resizeObservable(target: HTMLElement): Observable<ResizeObserverEntry[]> {\n    return new Observable((observer) => {\n        const instance = new ResizeObserver((entries: ResizeObserverEntry[]) => {\n            observer.next(entries);\n        });\n        instance.observe(target);\n        const unsubscribe = () => instance.disconnect();\n        return unsubscribe;\n    });\n}\n\n/**\n * @hidden\n * @internal\n *\n * Compares two maps.\n */\nexport function compareMaps(map1: Map<any, any>, map2: Map<any, any>): boolean {\n    if (!map2) {\n        return !map1 ? true : false;\n    }\n    if (map1.size !== map2.size) {\n        return false;\n    }\n    let match = true;\n    const keys = Array.from(map2.keys());\n    for (const key of keys) {\n        if (map1.has(key)) {\n            match = map1.get(key) === map2.get(key);\n        } else {\n            match = false;\n        }\n        if (!match) {\n            break;\n        }\n    }\n    return match;\n}\n","import { ISortingStrategy } from './sorting-strategy';\nimport { IBaseEventArgs } from '../core/utils';\n\n/**\n * Represents sorting expressions.\n */\nexport enum SortingDirection {\n    None = 0,\n    Asc = 1,\n    Desc = 2\n}\n\nexport interface ISortingExpression extends IBaseEventArgs {\n   fieldName: string;\n   dir: SortingDirection;\n   ignoreCase?: boolean;\n   strategy?: ISortingStrategy;\n}\n","import { IGroupByKey } from './groupby-expand-state.interface';\nimport { IGroupByRecord } from './groupby-record.interface';\n\nexport function isHierarchyMatch(h1: Array<IGroupByKey>, h2: Array<IGroupByKey>): boolean {\n    if (h1.length !== h2.length) {\n        return false;\n    }\n    return h1.every((level, index): boolean => {\n        return level.fieldName === h2[index].fieldName && level.value === h2[index].value;\n    });\n}\n\nexport function getHierarchy(gRow: IGroupByRecord): Array<IGroupByKey> {\n    const hierarchy: Array<IGroupByKey> = [];\n    if (gRow !== undefined && gRow.expression) {\n        hierarchy.push({ fieldName: gRow.expression.fieldName, value: gRow.value });\n        while (gRow.groupParent) {\n            gRow = gRow.groupParent;\n            hierarchy.unshift({ fieldName: gRow.expression.fieldName, value: gRow.value });\n        }\n    }\n    return hierarchy;\n}\n","import { cloneArray } from '../core/utils';\nimport { IGroupByRecord } from './groupby-record.interface';\nimport { ISortingExpression, SortingDirection } from './sorting-expression.interface';\nimport { IGroupingExpression } from './grouping-expression.interface';\nimport { IGroupingState } from './groupby-state.interface';\nimport { IGroupByExpandState } from './groupby-expand-state.interface';\nimport { IGroupByResult } from './grouping-result.interface';\nimport { getHierarchy, isHierarchyMatch } from './operations';\n\nexport interface ISortingStrategy {\n    sort: (data: any[],\n           fieldName: string,\n           dir: SortingDirection,\n           ignoreCase: boolean,\n           valueResolver: (obj: any, key: string) => any) => any[];\n}\n\nexport class DefaultSortingStrategy implements ISortingStrategy {\n    private static _instance: DefaultSortingStrategy = null;\n\n    protected constructor() {}\n\n    public static instance(): DefaultSortingStrategy {\n        return this._instance || (this._instance = new this());\n    }\n\n    public sort(data: any[],\n                fieldName: string,\n                dir: SortingDirection,\n                ignoreCase: boolean,\n                valueResolver: (obj: any, key: string) => any) {\n        const key = fieldName;\n        const reverse = (dir === SortingDirection.Desc ? -1 : 1);\n        const cmpFunc = (obj1, obj2) => {\n            return this.compareObjects(obj1, obj2, key, reverse, ignoreCase, valueResolver);\n        };\n        return this.arraySort(data, cmpFunc);\n    }\n\n    public compareValues(a: any, b: any) {\n        const an = (a === null || a === undefined);\n        const bn = (b === null || b === undefined);\n        if (an) {\n            if (bn) {\n                return 0;\n            }\n            return -1;\n        } else if (bn) {\n            return 1;\n        }\n        return a > b ? 1 : a < b ? -1 : 0;\n    }\n\n    protected compareObjects(obj1: object,\n                             obj2: object,\n                             key: string,\n                             reverse: number,\n                             ignoreCase: boolean,\n                             valueResolver: (obj: any, key: string) => any) {\n        let a = valueResolver(obj1, key);\n        let b = valueResolver(obj2, key);\n        if (ignoreCase) {\n            a = a && a.toLowerCase ? a.toLowerCase() : a;\n            b = b && b.toLowerCase ? b.toLowerCase() : b;\n        }\n        return reverse * this.compareValues(a, b);\n    }\n\n    protected arraySort(data: any[], compareFn?): any[] {\n        return data.sort(compareFn);\n    }\n}\n\nexport interface IGridSortingStrategy {\n    sort(data: any[], expressions: ISortingExpression[]): any[];\n}\n\nexport class NoopSortingStrategy implements IGridSortingStrategy {\n    private static _instance: NoopSortingStrategy = null;\n\n    private constructor() {  }\n\n    public static instance() {\n        return this._instance || (this._instance = new NoopSortingStrategy());\n    }\n\n    public sort(data: any[], expressions: ISortingExpression[]): any[] {\n        return data;\n    }\n}\n\nexport class IgxSorting implements IGridSortingStrategy {\n    public sort(data: any[], expressions: ISortingExpression[]): any[] {\n        return this.sortDataRecursive(data, expressions);\n    }\n\n    private groupedRecordsByExpression(data: any[],\n            index: number,\n            expression: IGroupingExpression): any[] {\n        let i;\n        let groupval;\n        const res = [];\n        const key = expression.fieldName;\n        const len = data.length;\n        res.push(data[index]);\n        groupval = this.getFieldValue(data[index], key);\n        index++;\n        const comparer = expression.groupingComparer || DefaultSortingStrategy.instance().compareValues;\n        for (i = index; i < len; i++) {\n            if (comparer(this.getFieldValue(data[i], key), groupval) === 0) {\n                res.push(data[i]);\n            } else {\n                break;\n            }\n        }\n        return res;\n    }\n    private sortDataRecursive<T>(data: T[],\n                                 expressions: ISortingExpression[],\n                                 expressionIndex: number = 0): T[] {\n        let i;\n        let j;\n        let expr: ISortingExpression;\n        let gbData;\n        let gbDataLen;\n        const exprsLen = expressions.length;\n        const dataLen = data.length;\n        expressionIndex = expressionIndex || 0;\n        if (expressionIndex >= exprsLen || dataLen <= 1) {\n            return data;\n        }\n        expr = expressions[expressionIndex];\n        if (!expr.strategy) {\n            expr.strategy = DefaultSortingStrategy.instance();\n        }\n        data = expr.strategy.sort(data, expr.fieldName, expr.dir, expr.ignoreCase, this.getFieldValue);\n        if (expressionIndex === exprsLen - 1) {\n            return data;\n        }\n        // in case of multiple sorting\n        for (i = 0; i < dataLen; i++) {\n            gbData = this.groupedRecordsByExpression(data, i, expr);\n            gbDataLen = gbData.length;\n            if (gbDataLen > 1) {\n                gbData = this.sortDataRecursive(gbData, expressions, expressionIndex + 1);\n            }\n            for (j = 0; j < gbDataLen; j++) {\n                data[i + j] = gbData[j];\n            }\n            i += gbDataLen - 1;\n        }\n        return data;\n    }\n    protected groupDataRecursive<T>(data: T[], state: IGroupingState, level: number,\n        parent: IGroupByRecord, metadata: IGroupByRecord[], grid: any = null,\n        groupsRecords: any[] = [], fullResult: IGroupByResult = { data: [], metadata: [] }): T[] {\n        const expressions = state.expressions;\n        const expansion = state.expansion;\n        let i = 0;\n        let result = [];\n        while (i < data.length) {\n            const group = this.groupedRecordsByExpression(data, i, expressions[level]);\n            const groupRow: IGroupByRecord = {\n                expression: expressions[level],\n                level,\n                records: cloneArray(group),\n                value: group[0][expressions[level].fieldName],\n                groupParent: parent,\n                groups: [],\n                height: grid ? grid.renderedRowHeight : null\n            };\n            if (parent) {\n                parent.groups.push(groupRow);\n            } else {\n                groupsRecords.push(groupRow);\n            }\n            const hierarchy = getHierarchy(groupRow);\n            const expandState: IGroupByExpandState = expansion.find((s) =>\n                isHierarchyMatch(s.hierarchy || [{ fieldName: groupRow.expression.fieldName, value: groupRow.value }], hierarchy));\n            const expanded = expandState ? expandState.expanded : state.defaultExpanded;\n            let recursiveResult;\n            result.push(groupRow);\n            metadata.push(null);\n            fullResult.data.push(groupRow);\n            fullResult.metadata.push(null);\n            if (level < expressions.length - 1) {\n                recursiveResult = this.groupDataRecursive(group, state, level + 1, groupRow,\n                    expanded ? metadata : [], grid, groupsRecords, fullResult);\n                if (expanded) {\n                    result = result.concat(recursiveResult);\n                }\n            } else {\n                for (const groupItem of group) {\n                    fullResult.metadata.push(groupRow);\n                    fullResult.data.push(groupItem);\n                }\n                if (expanded) {\n                    metadata.push(...fullResult.metadata.slice(fullResult.metadata.length - group.length));\n                    result.push(...fullResult.data.slice(fullResult.data.length - group.length));\n                }\n            }\n            i += group.length;\n        }\n        return result;\n    }\n    protected getFieldValue(obj: any, key: string): any {\n        return obj[key];\n    }\n}\n\nexport class IgxDataRecordSorting extends IgxSorting {\n    protected getFieldValue(obj: any, key: string): any {\n        return obj.data[key];\n    }\n}\n","import { IGroupByRecord } from './groupby-record.interface';\nimport { IgxSorting } from './sorting-strategy';\nimport { IGroupingState } from './groupby-state.interface';\nimport { IGroupByResult } from './grouping-result.interface';\n\nexport class IgxGrouping extends IgxSorting {\n    public groupBy(data: any[], state: IGroupingState, grid?: any,\n        groupsRecords?: any[], fullResult: IGroupByResult = { data: [], metadata: [] }): IGroupByResult {\n        const metadata: IGroupByRecord[] = [];\n        const grouping = this.groupDataRecursive(data, state, 0, null, metadata, grid, groupsRecords, fullResult);\n        return {\n            data: grouping,\n            metadata: metadata\n        };\n    }\n}\n\n","export enum PagingError {\n    None,\n    IncorrectPageIndex,\n    IncorrectRecordsPerPage\n}\n\nexport declare interface IPagingState {\n    index: number;\n    recordsPerPage: number;\n    metadata?: {\n        countPages: number;\n        error: PagingError;\n        countRecords: number;\n    };\n}\n","import { IFilteringOperation } from './filtering-condition';\n\nexport enum FilteringLogic {\n    And,\n    Or\n}\n\n/**\n * Represents filtering expressions.\n */\nexport declare interface IFilteringExpression {\n    fieldName: string;\n    condition: IFilteringOperation;\n    searchVal?: any;\n    ignoreCase?: boolean;\n}\n","import { IFilteringExpression, FilteringLogic } from './filtering-expression.interface';\nimport { IBaseEventArgs } from '../core/utils';\n\nexport enum FilteringExpressionsTreeType {\n    Regular,\n    Advanced\n}\n\nexport declare interface IFilteringExpressionsTree extends IBaseEventArgs {\n    filteringOperands: (IFilteringExpressionsTree | IFilteringExpression)[];\n    operator: FilteringLogic;\n    fieldName?: string;\n    type?: FilteringExpressionsTreeType;\n\n    find(fieldName: string): IFilteringExpressionsTree | IFilteringExpression;\n    findIndex(fieldName: string): number;\n}\n\nexport class FilteringExpressionsTree implements IFilteringExpressionsTree {\n\n    /**\n     * Sets/gets the filtering operands.\n     * ```typescript\n     * const gridExpressionsTree = new FilteringExpressionsTree(FilteringLogic.And);\n     * const expression = [\n     * {\n     *   condition: IgxStringFilteringOperand.instance().condition('contains'),\n     *   fieldName: 'Column Field',\n     *   searchVal: 'Value',\n     *   ignoreCase: false\n     * }];\n     * gridExpressionsTree.filteringOperands.push(expression);\n     * this.grid.filteringExpressionsTree = gridExpressionsTree;\n     * ```\n     * ```typescript\n     * let filteringOperands = gridExpressionsTree.filteringOperands;\n     * ```\n     * @memberof FilteringExpressionsTree\n     */\n    filteringOperands: (IFilteringExpressionsTree | IFilteringExpression)[] = [];\n\n    /**\n     * Sets/gets the operator.\n     * ```typescript\n     * gridExpressionsTree.operator = FilteringLogic.And;\n     * ```\n     * ```typescript\n     * let operator = gridExpressionsTree.operator;\n     * ```\n     * @memberof FilteringExpressionsTree\n     */\n    operator: FilteringLogic;\n\n    /**\n     * Sets/gets the field name of the column where the filtering expression is placed.\n     * ```typescript\n     *  gridExpressionTree.fieldName = 'Column Field';\n     * ```\n     * ```typescript\n     * let columnField = expressionTree.fieldName;\n     * ```\n     * @memberof FilteringExpressionsTree\n     */\n    fieldName?: string;\n\n    /**\n     * Sets/gets the type of the filtering expressions tree.\n     * ```typescript\n     *  gridExpressionTree.type = FilteringExpressionsTree.Advanced;\n     * ```\n     * ```typescript\n     * let type = expressionTree.type;\n     * ```\n     * @memberof FilteringExpressionsTree\n     */\n    type?: FilteringExpressionsTreeType;\n\n    constructor(operator: FilteringLogic, fieldName?: string) {\n        this.operator = operator;\n        this.fieldName = fieldName;\n    }\n\n\n    /**\n     * Checks if filtering expressions tree is empty.\n     * @param expressionTree filtering expressions tree.\n     */\n    public static empty(expressionTree: IFilteringExpressionsTree): boolean {\n        return !expressionTree || !expressionTree.filteringOperands || !expressionTree.filteringOperands.length;\n    }\n\n    /**\n     * Returns the filtering expression for a column with the provided fieldName.\n     * ```typescript\n     * let filteringExpression = gridExpressionTree.find('Column Field');\n     * ```\n     * @memberof FilteringExpressionsTree\n     */\n    public find(fieldName: string): IFilteringExpressionsTree | IFilteringExpression {\n        const index = this.findIndex(fieldName);\n\n        if (index > -1) {\n            return this.filteringOperands[index];\n        }\n\n        return null;\n    }\n\n    /**\n     * Returns the index of the filtering expression for a column with the provided fieldName.\n     * ```typescript\n     * let filteringExpressionIndex = gridExpressionTree.findIndex('Column Field');\n     * ```\n     * @memberof FilteringExpressionsTree\n     */\n    public findIndex(fieldName: string): number {\n        let expr;\n        for (let i = 0; i < this.filteringOperands.length; i++) {\n            expr = this.filteringOperands[i];\n            if (expr instanceof FilteringExpressionsTree) {\n                if (this.isFilteringExpressionsTreeForColumn(expr, fieldName)) {\n                    return i;\n                }\n            } else {\n                if ((expr as IFilteringExpression).fieldName === fieldName) {\n                    return i;\n                }\n            }\n        }\n\n        return -1;\n    }\n\n    protected isFilteringExpressionsTreeForColumn(expressionsTree: IFilteringExpressionsTree, fieldName: string): boolean {\n        if (expressionsTree.fieldName === fieldName) {\n            return true;\n        }\n\n        let expr;\n        for (let i = 0; i < expressionsTree.filteringOperands.length; i++) {\n            expr = expressionsTree.filteringOperands[i];\n            if ((expr instanceof FilteringExpressionsTree)) {\n                return this.isFilteringExpressionsTreeForColumn(expr, fieldName);\n            } else {\n                return (expr as IFilteringExpression).fieldName === fieldName;\n            }\n        }\n\n        return false;\n    }\n}\n","import { FilteringLogic, IFilteringExpression } from './filtering-expression.interface';\nimport { FilteringExpressionsTree, IFilteringExpressionsTree } from './filtering-expressions-tree';\n\nexport interface IFilteringStrategy {\n    filter(data: any[], expressionsTree: IFilteringExpressionsTree, advancedExpressionsTree?: IFilteringExpressionsTree): any[];\n}\n\nexport class NoopFilteringStrategy implements IFilteringStrategy {\n    private static _instance: NoopFilteringStrategy = null;\n\n    private constructor() {  }\n\n    public static instance() {\n        return this._instance || (this._instance = new NoopFilteringStrategy());\n    }\n\n    public filter(data: any[], expressionsTree: IFilteringExpressionsTree, advancedExpressionsTree?: IFilteringExpressionsTree): any[] {\n        return data;\n    }\n}\n\nexport abstract class BaseFilteringStrategy implements IFilteringStrategy  {\n    public abstract filter(data: any[], expressionsTree: IFilteringExpressionsTree,\n        advancedExpressionsTree?: IFilteringExpressionsTree): any[];\n\n    protected abstract getFieldValue(rec: object, fieldName: string): any;\n\n    public findMatchByExpression(rec: object, expr: IFilteringExpression): boolean {\n        const cond = expr.condition;\n        const val = this.getFieldValue(rec, expr.fieldName);\n        return cond.logic(val, expr.searchVal, expr.ignoreCase);\n    }\n\n    public matchRecord(rec: object, expressions: IFilteringExpressionsTree | IFilteringExpression): boolean {\n        if (expressions) {\n            if (expressions instanceof FilteringExpressionsTree) {\n                const expressionsTree = expressions as IFilteringExpressionsTree;\n                const operator = expressionsTree.operator as FilteringLogic;\n                let matchOperand, operand;\n\n                if (expressionsTree.filteringOperands && expressionsTree.filteringOperands.length) {\n                    for (let i = 0; i < expressionsTree.filteringOperands.length; i++) {\n                        operand = expressionsTree.filteringOperands[i];\n                        matchOperand = this.matchRecord(rec, operand);\n\n                        // Return false if at least one operand does not match and the filtering logic is And\n                        if (!matchOperand && operator === FilteringLogic.And) {\n                            return false;\n                        }\n\n                        // Return true if at least one operand matches and the filtering logic is Or\n                        if (matchOperand && operator === FilteringLogic.Or) {\n                            return true;\n                        }\n                    }\n\n                    return matchOperand;\n                }\n\n                return true;\n            } else {\n                const expression = expressions as IFilteringExpression;\n                return this.findMatchByExpression(rec, expression);\n            }\n        }\n\n        return true;\n    }\n}\n\nexport class FilteringStrategy extends BaseFilteringStrategy {\n    private static _instace: FilteringStrategy = null;\n\n    public constructor() { super(); }\n\n    public static instance() {\n        return this._instace || (this._instace = new this());\n    }\n\n    public filter<T>(data: T[], expressionsTree: IFilteringExpressionsTree, advancedExpressionsTree?: IFilteringExpressionsTree): T[] {\n        let i;\n        let rec;\n        const len = data.length;\n        const res: T[] = [];\n        if ((FilteringExpressionsTree.empty(expressionsTree) && FilteringExpressionsTree.empty(advancedExpressionsTree)) || !len) {\n            return data;\n        }\n        for (i = 0; i < len; i++) {\n            rec = data[i];\n            if (this.matchRecord(rec, expressionsTree) && this.matchRecord(rec, advancedExpressionsTree)) {\n                res.push(rec);\n            }\n        }\n        return res;\n    }\n\n    protected getFieldValue(rec: object, fieldName: string): any {\n        return rec[fieldName];\n    }\n}\n","import { EventEmitter } from '@angular/core';\n\nexport enum TransactionType {\n    ADD = 'add',\n    DELETE = 'delete',\n    UPDATE = 'update'\n}\n\nexport interface Transaction {\n    id: any;\n    type: TransactionType;\n    newValue: any;\n}\n\n/**\n * @experimental\n * @hidden\n */\nexport interface HierarchicalTransaction extends Transaction {\n    path?: any[];\n}\n\nexport interface State {\n    value: any;\n    recordRef: any;\n    type: TransactionType;\n}\n\n/**\n * @experimental\n * @hidden\n */\nexport interface HierarchicalState extends State {\n    path: any[];\n}\n\nexport interface TransactionService<T extends Transaction, S extends State> {\n    /**\n     * Returns whether transaction is enabled for this service\n     */\n    readonly enabled: boolean;\n\n    /**\n     * Event fired when transaction state has changed - add transaction, commit all transactions, undo and redo\n     */\n    onStateUpdate?: EventEmitter<void>;\n\n    /**\n     * @returns if there are any transactions in the Undo stack\n     */\n    canUndo: boolean;\n\n    /**\n     * @returns if there are any transactions in the Redo stack\n     */\n    canRedo: boolean;\n\n    /**\n     * Adds provided  transaction with recordRef if any\n     * @param transaction Transaction to be added\n     * @param recordRef Reference to the value of the record in the data source related to the changed item\n     */\n    add(transaction: T, recordRef?: any): void;\n\n    /**\n     * Returns all recorded transactions in chronological order\n     * @param id Optional record id to get transactions for\n     * @returns All transaction in the service or for the specified record\n     */\n    getTransactionLog(id?: any): T[];\n\n    /**\n     * Remove the last transaction if any\n     */\n    undo(): void;\n\n    /**\n     * Applies the last undone transaction if any\n     */\n    redo(): void;\n\n    /**\n     * Returns aggregated changes from all transactions\n     * @param mergeChanges If set to true will merge each state's value over relate recordRef\n     * and will record resulting value in the related transaction\n     * @returns Collection of aggregated transactions for each changed record\n     */\n    getAggregatedChanges(mergeChanges: boolean): T[];\n\n    /**\n     * Returns the state of the record with provided id\n     * @param id The id of the record\n     * @param pending Should get pending state\n     * @returns State of the record if any\n     */\n    getState(id: any, pending?: boolean): S;\n\n    /**\n     * Returns value of the required id including all uncommitted changes\n     * @param id The id of the record to return value for\n     * @param mergeChanges If set to true will merge state's value over relate recordRef\n     * and will return merged value\n     * @returns Value with changes or **null**\n     */\n    getAggregatedValue(id: any, mergeChanges: boolean): any;\n\n    /**\n     * Applies all transactions over the provided data\n     * @param data Data source to update\n     * @param id Optional record id to commit transactions for\n     */\n    commit(data: any[], id?: any): void;\n\n    /**\n     * Clears all transactions\n     * @param id Optional record id to clear transactions for\n     */\n    clear(id?: any): void;\n\n    /**\n     * Starts pending transactions. All transactions passed after call to startPending\n     * will not be added to transaction log\n     */\n    startPending(): void;\n\n    /**\n     * Clears all pending transactions and aggregated pending state. If commit is set to true\n     * commits pending states as single transaction\n     * @param commit Should commit the pending states\n     */\n    endPending(commit: boolean): void;\n}\n","import { IFilteringState } from './filtering-state.interface';\n\nimport { IgxSorting, IgxDataRecordSorting, IGridSortingStrategy } from './sorting-strategy';\nimport { IgxGrouping } from './grouping-strategy';\nimport { IGroupByResult } from './grouping-result.interface';\n\nimport { IPagingState, PagingError } from './paging-state.interface';\n\nimport { IGroupByKey } from './groupby-expand-state.interface';\nimport { IGroupByRecord } from './groupby-record.interface';\nimport { IGroupingState } from './groupby-state.interface';\nimport { ISortingExpression } from './sorting-expression.interface';\nimport { FilteringStrategy } from './filtering-strategy';\nimport { ITreeGridRecord } from '../grids/tree-grid/public_api';\nimport { cloneValue, mergeObjects } from '../core/utils';\nimport { Transaction, TransactionType, HierarchicalTransaction } from '../services/transaction/transaction';\nimport { getHierarchy, isHierarchyMatch } from './operations';\n\n/**\n * @hidden\n */\nexport enum DataType {\n    String = 'string',\n    Number = 'number',\n    Boolean = 'boolean',\n    Date = 'date'\n}\n\n/**\n * @hidden\n */\nexport class DataUtil {\n    public static sort<T>(data: T[], expressions: ISortingExpression[], sorting: IGridSortingStrategy = new IgxSorting()): T[] {\n        return sorting.sort(data, expressions);\n    }\n\n    public static treeGridSort(hierarchicalData: ITreeGridRecord[],\n        expressions: ISortingExpression[],\n        sorting: IGridSortingStrategy = new IgxDataRecordSorting(),\n        parent?: ITreeGridRecord): ITreeGridRecord[] {\n        let res: ITreeGridRecord[] = [];\n        hierarchicalData.forEach((hr: ITreeGridRecord) => {\n            const rec: ITreeGridRecord = DataUtil.cloneTreeGridRecord(hr);\n            rec.parent = parent;\n            if (rec.children) {\n                rec.children = DataUtil.treeGridSort(rec.children, expressions, sorting, rec);\n            }\n            res.push(rec);\n        });\n\n        res = DataUtil.sort(res, expressions, sorting);\n\n        return res;\n    }\n\n    public static cloneTreeGridRecord(hierarchicalRecord: ITreeGridRecord) {\n        const rec: ITreeGridRecord = {\n            rowID: hierarchicalRecord.rowID,\n            data: hierarchicalRecord.data,\n            children: hierarchicalRecord.children,\n            isFilteredOutParent: hierarchicalRecord.isFilteredOutParent,\n            level: hierarchicalRecord.level,\n            expanded: hierarchicalRecord.expanded\n        };\n        return rec;\n    }\n\n    public static group<T>(data: T[], state: IGroupingState, grid: any = null,\n        groupsRecords: any[] = [], fullResult: IGroupByResult = { data: [], metadata: [] }): IGroupByResult {\n        const grouping = new IgxGrouping();\n        groupsRecords.splice(0, groupsRecords.length);\n        return grouping.groupBy(data, state, grid, groupsRecords, fullResult);\n    }\n\n    public static page<T>(data: T[], state: IPagingState): T[] {\n        if (!state) {\n            return data;\n        }\n        const len = data.length;\n        const index = state.index;\n        const res = [];\n        const recordsPerPage = state.recordsPerPage;\n        state.metadata = {\n            countPages: 0,\n            countRecords: data.length,\n            error: PagingError.None\n        };\n        if (index < 0 || isNaN(index)) {\n            state.metadata.error = PagingError.IncorrectPageIndex;\n            return res;\n        }\n        if (recordsPerPage <= 0 || isNaN(recordsPerPage)) {\n            state.metadata.error = PagingError.IncorrectRecordsPerPage;\n            return res;\n        }\n        state.metadata.countPages = Math.ceil(len / recordsPerPage);\n        if (!len) {\n            return data;\n        }\n        if (index >= state.metadata.countPages) {\n            state.metadata.error = PagingError.IncorrectPageIndex;\n            return res;\n        }\n        return data.slice(index * recordsPerPage, (index + 1) * recordsPerPage);\n    }\n\n    public static filter<T>(data: T[], state: IFilteringState): T[] {\n        if (!state.strategy) {\n            state.strategy = new FilteringStrategy();\n        }\n        return state.strategy.filter(data, state.expressionsTree, state.advancedExpressionsTree);\n    }\n\n    public static correctPagingState(state: IPagingState, length: number) {\n        const maxPage = Math.ceil(length / state.recordsPerPage) - 1;\n        if (!isNaN(maxPage) && state.index > maxPage) {\n            state.index = maxPage;\n        }\n    }\n\n    public static getHierarchy(gRow: IGroupByRecord): Array<IGroupByKey> {\n        return getHierarchy(gRow);\n    }\n\n    public static isHierarchyMatch(h1: Array<IGroupByKey>, h2: Array<IGroupByKey>): boolean {\n        return isHierarchyMatch(h1, h2);\n    }\n\n    /**\n     * Merges all changes from provided transactions into provided data collection\n     * @param data Collection to merge\n     * @param transactions Transactions to merge into data\n     * @param primaryKey Primary key of the collection, if any\n     * @param deleteRows Should delete rows with DELETE transaction type from data\n     * @returns Provided data collections updated with all provided transactions\n     */\n    public static mergeTransactions<T>(data: T[], transactions: Transaction[], primaryKey?: any, deleteRows: boolean = false): T[] {\n        data.forEach((item: any, index: number) => {\n            const rowId = primaryKey ? item[primaryKey] : item;\n            const transaction = transactions.find(t => t.id === rowId);\n            if (transaction && transaction.type === TransactionType.UPDATE) {\n                data[index] = transaction.newValue;\n            }\n        });\n\n        if (deleteRows) {\n            transactions\n                .filter(t => t.type === TransactionType.DELETE)\n                .forEach(t => {\n                    const index = primaryKey ? data.findIndex(d => d[primaryKey] === t.id) : data.findIndex(d => d === t.id);\n                    if (0 <= index && index < data.length) {\n                        data.splice(index, 1);\n                    }\n                });\n        }\n\n        data.push(...transactions\n            .filter(t => t.type === TransactionType.ADD)\n            .map(t => t.newValue));\n\n        return data;\n    }\n\n    /**\n     * Merges all changes from provided transactions into provided hierarchical data collection\n     * @param data Collection to merge\n     * @param transactions Transactions to merge into data\n     * @param childDataKey Data key of child collections\n     * @param primaryKey Primary key of the collection, if any\n     * @param deleteRows Should delete rows with DELETE transaction type from data\n     * @returns Provided data collections updated with all provided transactions\n     */\n    public static mergeHierarchicalTransactions(\n        data: any[],\n        transactions: HierarchicalTransaction[],\n        childDataKey: any,\n        primaryKey?: any,\n        deleteRows: boolean = false): any[] {\n        for (const transaction of transactions) {\n            if (transaction.path) {\n                const parent = this.findParentFromPath(data, primaryKey, childDataKey, transaction.path);\n                let collection: any[] = parent ? parent[childDataKey] : data;\n                switch (transaction.type) {\n                    case TransactionType.ADD:\n                        //  if there is no parent this is ADD row at root level\n                        if (parent && !parent[childDataKey]) {\n                            parent[childDataKey] = collection = [];\n                        }\n                        collection.push(transaction.newValue);\n                        break;\n                    case TransactionType.UPDATE:\n                        const updateIndex = collection.findIndex(x => x[primaryKey] === transaction.id);\n                        if (updateIndex !== -1) {\n                            collection[updateIndex] = mergeObjects(cloneValue(collection[updateIndex]), transaction.newValue);\n                        }\n                        break;\n                    case TransactionType.DELETE:\n                        if (deleteRows) {\n                            const deleteIndex = collection.findIndex(r => r[primaryKey] === transaction.id);\n                            if (deleteIndex !== -1) {\n                                collection.splice(deleteIndex, 1);\n                            }\n                        }\n                        break;\n                }\n            } else {\n                //  if there is no path this is ADD row in root. Push the newValue to data\n                data.push(transaction.newValue);\n            }\n        }\n        return data;\n    }\n\n    public static parseValue(dataType: DataType, value: any): any {\n        if (dataType === DataType.Number) {\n            value = parseFloat(value);\n        }\n\n        return value;\n    }\n\n    private static findParentFromPath(data: any[], primaryKey: any, childDataKey: any, path: any[]): any {\n        let collection: any[] = data;\n        let result: any;\n\n        for (const id of path) {\n            result = collection && collection.find(x => x[primaryKey] === id);\n            if (!result) {\n                break;\n            }\n\n            collection = result[childDataKey];\n        }\n\n        return result;\n    }\n}\n","\n/**\n * @hidden\n */\nexport class ExportUtilities {\n    public static getKeysFromData(data: any[]) {\n        const length = data.length;\n        if (length === 0) {\n            return [];\n        }\n\n        const dataEntry = data[0];\n        const dataEntryMiddle = data[Math.floor(length / 2)];\n        const dataEntryLast = data[length - 1];\n\n        const keys1 = Object.keys(dataEntry);\n        const keys2 = Object.keys(dataEntryMiddle);\n        const keys3 = Object.keys(dataEntryLast);\n\n        const keys = new Set(keys1.concat(keys2).concat(keys3));\n\n        return !ExportUtilities.isSpecialData(data) ? Array.from(keys) : [ 'Column 1' ];\n    }\n\n    public static saveBlobToFile(blob: Blob, fileName) {\n        const a = document.createElement('a');\n        if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n            window.navigator.msSaveOrOpenBlob(blob, fileName);\n        } else {\n            const url = window.URL.createObjectURL(blob);\n            a.download = fileName;\n\n            a.href = url;\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            window.URL.revokeObjectURL(url);\n        }\n    }\n\n    public static stringToArrayBuffer(s: string): ArrayBuffer {\n        const buf = new ArrayBuffer(s.length);\n        const view = new Uint8Array(buf);\n        for (let i = 0; i !== s.length; ++i) {\n            /* tslint:disable no-bitwise */\n            view[i] = s.charCodeAt(i) & 0xFF;\n            /* tslint:enable no-bitwise */\n        }\n        return buf;\n    }\n\n    public static isSpecialData(data: any[]): boolean {\n        const dataEntry = data[0];\n        return (typeof dataEntry === 'string' ||\n                typeof dataEntry === 'number' ||\n                dataEntry instanceof Date);\n    }\n\n    public static hasValue(value: any): boolean {\n        return value !== undefined && value !== null;\n    }\n\n    public static isNullOrWhitespaces(value: string): boolean {\n        return value === undefined || value === null || !value.trim();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { cloneArray, isEqual, mergeObjects } from '../core/utils';\nimport { DataUtil, DataType } from '../data-operations/data-util';\nimport { IFilteringExpression } from '../data-operations/filtering-expression.interface';\nimport { ISortingExpression, SortingDirection } from '../data-operations/sorting-expression.interface';\nimport { IgxGridCellComponent } from './cell.component';\nimport { IgxGridBaseDirective } from './grid-base.directive';\nimport { IgxRowDirective } from './row.directive';\nimport { IFilteringOperation } from '../data-operations/filtering-condition';\nimport { IFilteringExpressionsTree, FilteringExpressionsTree } from '../data-operations/filtering-expressions-tree';\nimport { Transaction, TransactionType, State } from '../services/transaction/transaction';\nimport { IgxCell, IgxRow } from './selection/selection.service';\nimport { GridType } from './common/grid.interface';\nimport { ColumnType } from './common/column.interface';\nimport { IRowToggleEventArgs } from './common/events';\nimport {\n    ROW_COLLAPSE_KEYS, ROW_EXPAND_KEYS\n} from '../core/utils';\nimport { first, debounceTime } from 'rxjs/operators';\n/**\n * @hidden\n */\n@Injectable()\nexport class GridBaseAPIService <T extends IgxGridBaseDirective & GridType> {\n\n    grid: T;\n    protected destroyMap: Map<string, Subject<boolean>> = new Map<string, Subject<boolean>>();\n\n    public get_column_by_name(name: string): ColumnType {\n        return this.grid.columnList.find((col: ColumnType) => col.field === name);\n    }\n\n    public get_summary_data() {\n        const grid = this.grid;\n        let data = grid.filteredData;\n        if (data && grid.hasPinnedRecords) {\n           data = grid._filteredUnpinnedData;\n        }\n        if (!data) {\n            if (grid.transactions.enabled) {\n                data = DataUtil.mergeTransactions(\n                    cloneArray(grid.data),\n                    grid.transactions.getAggregatedChanges(true),\n                    grid.primaryKey\n                );\n                const deletedRows = grid.transactions.getTransactionLog().filter(t => t.type === TransactionType.DELETE).map(t => t.id);\n                deletedRows.forEach(rowID => {\n                    const tempData = grid.primaryKey ? data.map(rec => rec[grid.primaryKey]) : data;\n                    const index = tempData.indexOf(rowID);\n                    if (index !== -1) {\n                       data.splice(index, 1);\n                    }\n                });\n            } else {\n                data = grid.data;\n            }\n        }\n        return data;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public getRowData(rowID: any) {\n        const data = this.get_all_data(this.grid.transactions.enabled);\n        const index = this.get_row_index_in_data(rowID);\n        return data[index];\n    }\n\n    // TODO: Refactor\n    public escape_editMode() {\n        this.grid.crudService.end();\n    }\n\n    // TODO: Refactor\n    public get_cell_inEditMode(): IgxCell {\n        return this.grid.crudService.cell;\n    }\n\n    public get_row_index_in_data(rowID: any): number {\n        const grid = this.grid as IgxGridBaseDirective;\n        if (!grid) {\n            return -1;\n        }\n        const data = this.get_all_data(grid.transactions.enabled);\n        return grid.primaryKey ? data.findIndex(record => record[grid.primaryKey] === rowID) : data.indexOf(rowID);\n    }\n\n    public get_row_by_key(rowSelector: any): IgxRowDirective<IgxGridBaseDirective & GridType> {\n        if (!this.grid) {\n            return null;\n        }\n        const primaryKey = this.grid.primaryKey;\n        if (primaryKey !== undefined && primaryKey !== null) {\n            return this.grid.dataRowList.find((row) => row.rowData[primaryKey] === rowSelector);\n        } else {\n            return this.grid.dataRowList.find((row) => row.rowData === rowSelector);\n        }\n    }\n\n    public get_row_by_index(rowIndex: number): IgxRowDirective<IgxGridBaseDirective & GridType> {\n        return this.grid.rowList.find((row) => row.index === rowIndex);\n    }\n\n    public get_cell_by_key(rowSelector: any, field: string): IgxGridCellComponent {\n        const row = this.get_row_by_key(rowSelector);\n        if (row && row.cells) {\n            return row.cells.find((cell) => cell.column.field === field);\n        }\n    }\n\n    public get_cell_by_index(rowIndex: number, columnIndex: number): IgxGridCellComponent {\n        const row = this.get_row_by_index(rowIndex);\n        if (row && row.cells) {\n            return row.cells.find((cell) => cell.columnIndex === columnIndex);\n        }\n    }\n\n    public get_cell_by_visible_index(rowIndex: number, columnIndex: number): IgxGridCellComponent {\n        const row = this.get_row_by_index(rowIndex);\n        if (row && row.cells) {\n            return row.cells.find((cell) => cell.visibleColumnIndex === columnIndex);\n        }\n    }\n\n    public submit_value() {\n        const cell = this.grid.crudService.cell;\n        if (cell ) {\n            const args = this.update_cell(cell, cell.editValue);\n            if (args.cancel) {\n                return;\n            }\n            this.escape_editMode();\n        }\n    }\n\n    update_cell(cell: IgxCell, value: any) {\n        const data = this.get_all_data(this.grid.transactions.enabled);\n        const index = this.get_row_index_in_data(cell.id.rowID);\n\n        cell.editValue = value;\n\n        const args = cell.createEditEventArgs();\n\n        this.grid.onCellEdit.emit(args);\n        if (args.cancel) {\n            return args;\n        }\n\n        // Cast to number after emit\n        // TODO: Clean up this\n        args.newValue = cell.castToNumber(args.newValue);\n\n        if (isEqual(args.oldValue, args.newValue)) {\n            return args;\n        }\n\n        this.grid.summaryService.clearSummaryCache(args);\n        this.updateData(this.grid, cell.id.rowID, data[index], cell.rowData, { [cell.column.field ]: args.newValue });\n        if (this.grid.primaryKey === cell.column.field) {\n             if (this.grid.selectionService.isRowSelected(cell.id.rowID)) {\n                this.grid.selectionService.deselectRow(cell.id.rowID);\n                this.grid.selectionService.selectRowById(args.newValue);\n            }\n            if (this.grid.hasSummarizedColumns) {\n                this.grid.summaryService.removeSummaries(cell.id.rowID);\n            }\n        }\n        if (!this.grid.rowEditable || !this.grid.crudService.row ||\n                this.grid.crudService.row.id !== cell.id.rowID || !this.grid.transactions.enabled) {\n            this.grid.summaryService.clearSummaryCache(args);\n            (this.grid as any)._pipeTrigger++;\n        }\n\n        return args;\n    }\n\n    /**\n     * Updates related row of provided grid's data source with provided new row value\n     * @param grid Grid to update data for\n     * @param rowID ID of the row to update\n     * @param rowValueInDataSource Initial value of the row as it is in data source\n     * @param rowCurrentValue Current value of the row as it is with applied previous transactions\n     * @param rowNewValue New value of the row\n     */\n    protected updateData(grid, rowID, rowValueInDataSource: any, rowCurrentValue: any, rowNewValue: {[x: string]: any}) {\n        if (grid.transactions.enabled) {\n            const transaction: Transaction = {\n                id: rowID,\n                type: TransactionType.UPDATE,\n                newValue: rowNewValue\n            };\n            grid.transactions.add(transaction, rowCurrentValue);\n        } else {\n            mergeObjects(rowValueInDataSource, rowNewValue);\n        }\n    }\n\n    _update_row(row: IgxRow, value?: any) {\n        const grid = this.grid;\n\n        const rowInEditMode = grid.crudService.row;\n        row.newData = value ? value : grid.transactions.getAggregatedValue(row.id, true);\n\n\n        if (rowInEditMode && row.id === rowInEditMode.id) {\n            row.data = { ...row.data, ...rowInEditMode.transactionState };\n        // TODO: Workaround for updating a row in edit mode through the API\n        } else if (this.grid.transactions.enabled) {\n            const state = grid.transactions.getState(row.id);\n            row.data = state ? Object.assign({}, row.data, state.value) : row.data;\n        }\n    }\n\n    update_row(row: IgxRow, value: any) {\n        const grid = this.grid;\n        const selected = grid.selectionService.isRowSelected(row.id);\n        const rowInEditMode = grid.crudService.row;\n        const data = this.get_all_data(grid.transactions.enabled);\n        const index = this.get_row_index_in_data(row.id);\n        const hasSummarized = grid.hasSummarizedColumns;\n\n        this._update_row(row, value);\n\n        const args = row.createEditEventArgs();\n\n        // If no valid row is found\n        if (index === -1) {\n            return args;\n        }\n\n        grid.onRowEdit.emit(args);\n\n        if (args.cancel) {\n            return args;\n        }\n\n        if (rowInEditMode) {\n            const hasChanges = grid.transactions.getState(args.rowID, true);\n            grid.transactions.endPending(false);\n            if (!hasChanges) {\n                return args;\n            }\n        }\n\n        if (!args.newValue) {\n            return args;\n        }\n\n        if (hasSummarized) {\n            grid.summaryService.removeSummaries(args.rowID);\n        }\n\n        this.updateData(grid, row.id, data[index], args.oldValue, args.newValue);\n        const newId = grid.primaryKey ? args.newValue[grid.primaryKey] : args.newValue;\n        if (selected) {\n            grid.selectionService.deselectRow(row.id);\n            grid.selectionService.selectRowById(newId);\n        }\n        if (hasSummarized) {\n            grid.summaryService.removeSummaries(newId);\n        }\n        (grid as any)._pipeTrigger++;\n\n        return args;\n    }\n\n\n\n    protected update_row_in_array(value: any, rowID: any, index: number) {\n        const grid = this.grid;\n        grid.data[index] = value;\n    }\n\n    public sort(expression: ISortingExpression): void {\n        if (expression.dir === SortingDirection.None) {\n            this.remove_grouping_expression(expression.fieldName);\n        }\n        const sortingState = cloneArray(this.grid.sortingExpressions);\n        this.prepare_sorting_expression([sortingState], expression);\n        this.grid.sortingExpressions = sortingState;\n    }\n\n    public sort_multiple(expressions: ISortingExpression[]): void {\n        const sortingState = cloneArray(this.grid.sortingExpressions);\n\n        for (const each of expressions) {\n            if (each.dir === SortingDirection.None) {\n                this.remove_grouping_expression(each.fieldName);\n            }\n            this.prepare_sorting_expression([sortingState], each);\n        }\n\n        this.grid.sortingExpressions = sortingState;\n    }\n\n    public filter(fieldName: string, term, conditionOrExpressionsTree: IFilteringOperation | IFilteringExpressionsTree,\n        ignoreCase: boolean) {\n        const grid = this.grid;\n        const filteringTree = grid.filteringExpressionsTree;\n        grid.endEdit(false);\n\n        if (grid.paging) {\n            grid.page = 0;\n        }\n\n        const fieldFilterIndex = filteringTree.findIndex(fieldName);\n        if (fieldFilterIndex > -1) {\n            filteringTree.filteringOperands.splice(fieldFilterIndex, 1);\n        }\n\n        this.prepare_filtering_expression(filteringTree, fieldName, term, conditionOrExpressionsTree, ignoreCase, fieldFilterIndex);\n        grid.filteringExpressionsTree = filteringTree;\n    }\n\n    public filter_global(term, condition, ignoreCase) {\n        if (!condition) {\n            return;\n        }\n\n        const grid = this.grid;\n        const filteringTree = grid.filteringExpressionsTree;\n        grid.endEdit(false);\n        if (grid.paging) {\n            grid.page = 0;\n        }\n\n        filteringTree.filteringOperands = [];\n        for (const column of grid.columns) {\n            this.prepare_filtering_expression(filteringTree, column.field, term,\n                condition, ignoreCase || column.filteringIgnoreCase);\n        }\n\n        grid.filteringExpressionsTree = filteringTree;\n    }\n\n    public clear_filter(fieldName: string) {\n        const grid = this.grid;\n        grid.endEdit(false);\n        const filteringState = grid.filteringExpressionsTree;\n        const index = filteringState.findIndex(fieldName);\n\n        if (index > -1) {\n            filteringState.filteringOperands.splice(index, 1);\n        } else if (!fieldName) {\n            filteringState.filteringOperands = [];\n        }\n\n        grid.filteringExpressionsTree = filteringState;\n    }\n\n    public clear_sort(fieldName: string) {\n        const sortingState = this.grid.sortingExpressions;\n        const index = sortingState.findIndex((expr) => expr.fieldName === fieldName);\n        if (index > -1) {\n            sortingState.splice(index, 1);\n            this.grid.sortingExpressions = sortingState;\n        }\n    }\n\n    protected prepare_filtering_expression(filteringState: IFilteringExpressionsTree, fieldName: string, searchVal,\n        conditionOrExpressionsTree: IFilteringOperation | IFilteringExpressionsTree, ignoreCase: boolean, insertAtIndex = -1) {\n\n        let newExpressionsTree;\n        const oldExpressionsTreeIndex = filteringState.findIndex(fieldName);\n        const expressionsTree = conditionOrExpressionsTree instanceof FilteringExpressionsTree ?\n            conditionOrExpressionsTree as IFilteringExpressionsTree : null;\n        const condition = conditionOrExpressionsTree instanceof FilteringExpressionsTree ?\n            null : conditionOrExpressionsTree as IFilteringOperation;\n        const newExpression: IFilteringExpression = { fieldName, searchVal, condition, ignoreCase };\n\n        if (oldExpressionsTreeIndex === -1) {\n            // no expressions tree found for this field\n            if (expressionsTree) {\n                if (insertAtIndex > -1) {\n                    filteringState.filteringOperands.splice(insertAtIndex, 0, expressionsTree);\n                } else {\n                    filteringState.filteringOperands.push(expressionsTree);\n                }\n            } else if (condition) {\n                // create expressions tree for this field and add the new expression to it\n                newExpressionsTree = new FilteringExpressionsTree(filteringState.operator, fieldName);\n                newExpressionsTree.filteringOperands.push(newExpression);\n                filteringState.filteringOperands.push(newExpressionsTree);\n            }\n        }\n    }\n\n    protected prepare_sorting_expression(stateCollections: Array<Array<any>>, expression: ISortingExpression) {\n        if (expression.dir === SortingDirection.None) {\n            stateCollections.forEach(state => {\n                state.splice(state.findIndex((expr) => expr.fieldName === expression.fieldName), 1);\n            });\n            return;\n        }\n\n        /**\n         * We need to make sure the states in each collection with same fields point to the same object reference.\n         * If the different state collections provided have different sizes we need to get the largest one.\n         * That way we can get the state reference from the largest one that has the same fieldName as the expression to prepare.\n         */\n        let maxCollection = stateCollections[0];\n        for (let i = 1; i < stateCollections.length; i++) {\n            if (maxCollection.length < stateCollections[i].length) {\n                maxCollection = stateCollections[i];\n            }\n        }\n        const maxExpr = maxCollection.find((expr) => expr.fieldName === expression.fieldName);\n\n        stateCollections.forEach(collection => {\n            const myExpr = collection.find((expr) => expr.fieldName === expression.fieldName);\n            if (!myExpr && !maxExpr) {\n                // Expression with this fieldName is missing from the current and the max collection.\n                collection.push(expression);\n            } else if (!myExpr && maxExpr) {\n                // Expression with this fieldName is missing from the current and but the max collection has.\n                collection.push(maxExpr);\n                Object.assign(maxExpr, expression);\n            } else {\n                // The current collection has the expression so just update it.\n                Object.assign(myExpr, expression);\n            }\n        });\n    }\n\n    protected remove_grouping_expression(fieldName) {\n    }\n\n    public clear_groupby(name?: string | Array<string>) {\n    }\n\n    public should_apply_number_style(column: ColumnType): boolean {\n        return column.dataType === DataType.Number;\n    }\n\n    public get_data(): any[] {\n        const grid = this.grid;\n        const data = grid.data ? grid.data : [];\n        return data;\n    }\n\n    public get_all_data(includeTransactions = false): any[] {\n        const grid = this.grid;\n        let data = grid.data ? grid.data : [];\n        data = includeTransactions ? grid.dataWithAddedInTransactionRows : data;\n        return data;\n    }\n\n    public get_filtered_data(): any[] {\n        return this.grid.filteredData;\n    }\n\n    protected getSortStrategyPerColumn(fieldName: string) {\n        return this.get_column_by_name(fieldName) ?\n            this.get_column_by_name(fieldName).sortStrategy : undefined;\n    }\n\n    public addRowToData(rowData: any) {\n        // Add row goes to transactions and if rowEditable is properly implemented, added rows will go to pending transactions\n        // If there is a row in edit - > commit and close\n        const grid = this.grid;\n        if (grid.transactions.enabled) {\n            const transactionId = grid.primaryKey ? rowData[grid.primaryKey] : rowData;\n            const transaction: Transaction = { id: transactionId, type: TransactionType.ADD, newValue: rowData };\n            grid.transactions.add(transaction);\n        } else {\n            grid.data.push(rowData);\n        }\n    }\n\n    public deleteRowFromData(rowID: any, index: number) {\n        //  if there is a row (index !== 0) delete it\n        //  if there is a row in ADD or UPDATE state change it's state to DELETE\n        const grid = this.grid;\n        if (index !== -1) {\n            if (grid.transactions.enabled) {\n                const transaction: Transaction = { id: rowID, type: TransactionType.DELETE, newValue: null };\n                grid.transactions.add(transaction, grid.data[index]);\n            } else {\n                grid.data.splice(index, 1);\n            }\n        } else {\n            const state: State = grid.transactions.getState(rowID);\n            grid.transactions.add({ id: rowID, type: TransactionType.DELETE, newValue: null }, state && state.recordRef);\n        }\n    }\n\n    public deleteRowById(rowId: any) {\n        let index: number;\n        const grid = this.grid;\n        const data = this.get_all_data();\n        if (grid.primaryKey) {\n            index = data.map((record) => record[grid.primaryKey]).indexOf(rowId);\n        } else {\n            index = data.indexOf(rowId);\n        }\n        const state: State = grid.transactions.getState(rowId);\n        const hasRowInNonDeletedState = state && state.type !== TransactionType.DELETE;\n\n        //  if there is a row (index !== -1) and the we have cell in edit mode on same row exit edit mode\n        //  if there is no row (index === -1), but there is a row in ADD or UPDATE state do as above\n        //  Otherwise just exit - there is nothing to delete\n        if (index !== -1 || hasRowInNonDeletedState) {\n            // Always exit edit when row is deleted\n            grid.endEdit(true);\n        } else {\n            return;\n        }\n\n        //  TODO: should we emit this when cascadeOnDelete is true for each row?!?!\n        grid.onRowDeleted.emit({ data: data[index] });\n\n        this.deleteRowFromData(rowId, index);\n\n        grid.selectionService.isRowSelected(rowId) ? grid.selectionService.deselectRow(rowId) : grid.selectionService.clearHeaderCBState();\n        (grid as any)._pipeTrigger++;\n        grid.notifyChanges();\n        // Data needs to be recalculated if transactions are in place\n        // If no transactions, `data` will be a reference to the grid getter, otherwise it will be stale\n        const dataAfterDelete = grid.transactions.enabled ? grid.dataWithAddedInTransactionRows : data;\n        grid.refreshSearch();\n        if (dataAfterDelete.length % grid.perPage === 0 && dataAfterDelete.length / grid.perPage - 1 < grid.page && grid.page !== 0) {\n            grid.page--;\n        }\n    }\n\n    public get_row_id(rowData) {\n        return this.grid.primaryKey ? rowData[this.grid.primaryKey] : rowData;\n    }\n\n    public row_deleted_transaction(rowID: any): boolean {\n        const grid = this.grid;\n        if (!grid) {\n            return false;\n        }\n        if (!grid.transactions.enabled) {\n            return false;\n        }\n        const state = grid.transactions.getState(rowID);\n        if (state) {\n            return state.type === TransactionType.DELETE;\n        }\n\n        return false;\n    }\n\n    public atInexistingPage(): boolean {\n        return this.grid.totalPages - 1 > this.grid.page;\n    }\n\n    public get_row_expansion_state(record: any): boolean {\n        const grid = this.grid;\n        const states = grid.expansionStates;\n        const rowID = grid.primaryKey ? record[grid.primaryKey] : record;\n        const expanded = states.get(rowID);\n\n        if (expanded !== undefined) {\n            return expanded;\n        } else {\n            return grid.getDefaultExpandState(record);\n        }\n    }\n\n    public set_row_expansion_state(rowID: any, expanded: boolean, event?: Event) {\n        const grid = this.grid;\n        const expandedStates = grid.expansionStates;\n\n        if (!this.allow_expansion_state_change(rowID, expanded)) {\n            return;\n        }\n\n        const args: IRowToggleEventArgs = {\n            rowID: rowID,\n            expanded: expanded,\n            event: event,\n            cancel: false\n        };\n\n        grid.onRowToggle.emit(args);\n\n        if (args.cancel) {\n            return;\n        }\n        expandedStates.set(rowID, expanded);\n        grid.expansionStates = expandedStates;\n        if (grid.rowEditable) {\n            grid.endEdit(true);\n        }\n    }\n\n    public get_rec_by_id(rowID) {\n        return  this.grid.primaryKey ? this.getRowData(rowID) : rowID;\n    }\n\n    public allow_expansion_state_change(rowID, expanded) {\n        return this.grid.expansionStates.get(rowID) !== expanded;\n    }\n\n    private isToggleKey(key: string): boolean {\n        return ROW_COLLAPSE_KEYS.has(key) || ROW_EXPAND_KEYS.has(key);\n    }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DataUtil } from '../../data-operations/data-util';\nimport { GridBaseAPIService } from '../api.service';\nimport { IgxTreeGridComponent } from './tree-grid.component';\nimport { BaseFilteringStrategy, IFilteringStrategy } from '../../data-operations/filtering-strategy';\nimport { IFilteringExpressionsTree, FilteringExpressionsTree } from '../../data-operations/filtering-expressions-tree';\nimport { IFilteringState } from '../../data-operations/filtering-state.interface';\nimport { ITreeGridRecord } from './tree-grid.interfaces';\nimport { IgxTreeGridAPIService } from './tree-grid-api.service';\nimport { IgxGridBaseDirective } from '../grid/public_api';\nimport { GridType } from '../common/grid.interface';\n\n/** @hidden */\nexport class TreeGridFilteringStrategy extends BaseFilteringStrategy {\n    public filter(data: ITreeGridRecord[], expressionsTree: IFilteringExpressionsTree,\n        advancedExpressionsTree?: IFilteringExpressionsTree): ITreeGridRecord[] {\n        return this.filterImpl(data, expressionsTree, advancedExpressionsTree, undefined);\n    }\n\n    private filterImpl(data: ITreeGridRecord[], expressionsTree: IFilteringExpressionsTree,\n        advancedExpressionsTree: IFilteringExpressionsTree, parent: ITreeGridRecord): ITreeGridRecord[] {\n        let i: number;\n        let rec: ITreeGridRecord;\n        const len = data.length;\n        const res: ITreeGridRecord[] = [];\n        if ((FilteringExpressionsTree.empty(expressionsTree) && FilteringExpressionsTree.empty(advancedExpressionsTree)) || !len) {\n            return data;\n        }\n        for (i = 0; i < len; i++) {\n            rec = DataUtil.cloneTreeGridRecord(data[i]);\n            rec.parent = parent;\n            if (rec.children) {\n                const filteredChildren = this.filterImpl(rec.children, expressionsTree, advancedExpressionsTree, rec);\n                rec.children = filteredChildren.length > 0 ? filteredChildren : null;\n            }\n\n            if (this.matchRecord(rec, expressionsTree) && this.matchRecord(rec, advancedExpressionsTree)) {\n                res.push(rec);\n            } else if (rec.children && rec.children.length > 0) {\n                rec.isFilteredOutParent = true;\n                res.push(rec);\n            }\n        }\n        return res;\n    }\n\n    protected getFieldValue(rec: object, fieldName: string): any {\n        const hierarchicalRecord = <ITreeGridRecord>rec;\n        return hierarchicalRecord.data[fieldName];\n    }\n}\n\n/** @hidden */\n@Pipe({\n    name: 'treeGridFiltering',\n    pure: true\n})\nexport class IgxTreeGridFilteringPipe implements PipeTransform {\n    private gridAPI: IgxTreeGridAPIService;\n\n    constructor(gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>) {\n        this.gridAPI = <IgxTreeGridAPIService>gridAPI;\n     }\n\n    public transform(hierarchyData: ITreeGridRecord[], expressionsTree: IFilteringExpressionsTree,\n        filterStrategy: IFilteringStrategy,\n        advancedFilteringExpressionsTree: IFilteringExpressionsTree, id: string,\n        pipeTrigger: number, filteringPipeTrigger: number, pinned?): ITreeGridRecord[] {\n        const grid: IgxTreeGridComponent = this.gridAPI.grid;\n        const state: IFilteringState = {\n            expressionsTree: expressionsTree,\n            advancedExpressionsTree: advancedFilteringExpressionsTree,\n            strategy: new TreeGridFilteringStrategy()\n        };\n\n        if (filterStrategy) {\n            state.strategy = filterStrategy;\n        }\n\n        this.resetFilteredOutProperty(grid.records);\n\n        if (FilteringExpressionsTree.empty(state.expressionsTree) && FilteringExpressionsTree.empty(state.advancedExpressionsTree)) {\n            grid.setFilterData(null, pinned);\n            return hierarchyData;\n        }\n\n        const result = this.filter(hierarchyData, state);\n        const filteredData: any[] = [];\n        this.expandAllRecursive(grid, result, grid.expansionStates, filteredData);\n        grid.setFilterData(filteredData, pinned);\n\n        return result;\n    }\n\n    private resetFilteredOutProperty(map: Map<any, ITreeGridRecord>) {\n        const keys = Array.from(map.keys());\n        for (let i = 0; i < keys.length; i++) {\n            map.get(keys[i]).isFilteredOutParent = undefined;\n        }\n    }\n\n    private expandAllRecursive(grid: IgxTreeGridComponent, data: ITreeGridRecord[],\n        expandedStates: Map<any, boolean>, filteredData: any[]) {\n        for (let i = 0; i < data.length; i++) {\n            const rec: any = data[i];\n            filteredData.push(rec.data);\n            this.updateNonProcessedRecord(grid, rec);\n\n            if (rec.children && rec.children.length > 0) {\n                expandedStates.set(rec.rowID, true);\n                this.expandAllRecursive(grid, rec.children, expandedStates, filteredData);\n            }\n        }\n    }\n\n    private updateNonProcessedRecord(grid: IgxTreeGridComponent, record: ITreeGridRecord) {\n        const rec = grid.records.get(record.rowID);\n        rec.isFilteredOutParent = record.isFilteredOutParent;\n    }\n\n    private filter(data: ITreeGridRecord[], state: IFilteringState): ITreeGridRecord[] {\n        return state.strategy.filter(data, state.expressionsTree, state.advancedExpressionsTree);\n    }\n}\n","import { EventEmitter } from '@angular/core';\n\nimport { cloneValue, IBaseEventArgs } from '../../core/utils';\nimport { DataUtil } from '../../data-operations/data-util';\n\nimport { ExportUtilities } from './export-utilities';\nimport { IgxExporterOptionsBase } from './exporter-options-base';\nimport { ITreeGridRecord } from '../../grids/tree-grid/tree-grid.interfaces';\nimport { TreeGridFilteringStrategy } from '../../grids/tree-grid/tree-grid.filtering.pipe';\n\n/**\n * onRowExport event arguments\n * this.exporterService.onRowExport.subscribe((args: IRowExportingEventArgs) => {\n * // set args properties here\n * })\n */\nexport interface IRowExportingEventArgs extends IBaseEventArgs {\n    /**\n     * Contains the exporting row data\n     */\n    rowData: any;\n\n    /**\n     * Contains the exporting row index\n     */\n    rowIndex: number;\n\n    /**\n     * Skip the exporting row when set to true\n     */\n    cancel: boolean;\n}\n\n/**\n * onColumnExport event arguments\n * ```typescript\n * this.exporterService.onColumnExport.subscribe((args: IColumnExportingEventArgs) => {\n * // set args properties here\n * });\n * ```\n */\nexport interface IColumnExportingEventArgs extends IBaseEventArgs {\n    /**\n     * Contains the exporting column header\n     */\n    header: string;\n\n    /**\n     * Contains the exporting column field name\n     */\n    field: string;\n\n    /**\n     * Contains the exporting column index\n     */\n    columnIndex: number;\n\n    /**\n     * Skip the exporting column when set to true\n     */\n    cancel: boolean;\n\n    /**\n     * Export the column's data without applying its formatter, when set to true\n     */\n    skipFormatter: boolean;\n}\n\nexport abstract class IgxBaseExporter {\n    private _columnList: any[];\n    private flatRecords = [];\n\n    protected _isTreeGrid = false;\n    protected _indexOfLastPinnedColumn = -1;\n    protected _sort = null;\n\n    /**\n     * This event is emitted when a row is exported.\n     * ```typescript\n     * this.exporterService.onRowExport.subscribe((args: IRowExportingEventArgs) => {\n     * // put event handler code here\n     * });\n     * ```\n     * @memberof IgxBaseExporter\n     */\n    public onRowExport = new EventEmitter<IRowExportingEventArgs>();\n\n    /**\n     * This event is emitted when a column is exported.\n     * ```typescript\n     * this.exporterService.onColumnExport.subscribe((args: IColumnExportingEventArgs) => {\n     * // put event handler code here\n     * });\n     * ```\n     * @memberof IgxBaseExporter\n     */\n    public onColumnExport = new EventEmitter<IColumnExportingEventArgs>();\n\n    /**\n     * Method for exporting IgxGrid component's data.\n     * ```typescript\n     * this.exporterService.export(this.igxGridForExport, this.exportOptions);\n     * ```\n     * @memberof IgxBaseExporter\n     */\n    public export(grid: any, options: IgxExporterOptionsBase): void {\n        if (options === undefined || options === null) {\n            throw Error('No options provided!');\n        }\n\n        const columns = grid.columnList.toArray();\n        this._columnList = new Array<any>(columns.length);\n\n        const hiddenColumns = [];\n        let lastVisbleColumnIndex = -1;\n\n        columns.forEach((column) => {\n            const columnHeader = column.header !== '' ? column.header : column.field;\n            const exportColumn = !column.hidden || options.ignoreColumnsVisibility;\n            const index = options.ignoreColumnsOrder ? column.index : column.visibleIndex;\n\n            const columnInfo = {\n                header: columnHeader,\n                field: column.field,\n                skip: !exportColumn,\n                formatter: column.formatter,\n                skipFormatter: false\n            };\n\n            if (index !== -1) {\n                this._columnList[index] = columnInfo;\n                lastVisbleColumnIndex = Math.max(lastVisbleColumnIndex, index);\n            } else {\n                hiddenColumns.push(columnInfo);\n            }\n\n            if (column.pinned && exportColumn) {\n                this._indexOfLastPinnedColumn++;\n            }\n        });\n\n        // Append the hidden columns to the end of the list\n        hiddenColumns.forEach((hiddenColumn) => {\n            this._columnList[++lastVisbleColumnIndex] = hiddenColumn;\n        });\n\n        const data = this.prepareData(grid, options);\n        this.exportData(data, options);\n    }\n\n    /**\n     * Method for exporting any kind of array data.\n     * ```typescript\n     * this.exporterService.exportData(this.arrayForExport, this.exportOptions);\n     * ```\n     * @memberof IgxBaseExporter\n     */\n    public exportData(data: any[], options: IgxExporterOptionsBase): void {\n        if (options === undefined || options === null) {\n            throw Error('No options provided!');\n        }\n\n        if (!this._columnList || this._columnList.length === 0) {\n            const keys = ExportUtilities.getKeysFromData(data);\n            this._columnList = keys.map((k) => ({ header: k, field: k, skip: false }));\n        }\n\n        let skippedPinnedColumnsCount = 0;\n        let columnsWithoutHeaderCount = 1;\n        this._columnList.forEach((column, index) => {\n            if (!column.skip) {\n                const columnExportArgs = {\n                    header: ExportUtilities.isNullOrWhitespaces(column.header) ?\n                        'Column' + columnsWithoutHeaderCount++ : column.header,\n                    field: column.field,\n                    columnIndex: index,\n                    cancel: false,\n                    skipFormatter: false\n                };\n                this.onColumnExport.emit(columnExportArgs);\n\n                column.header = columnExportArgs.header;\n                column.skip = columnExportArgs.cancel;\n                column.skipFormatter = columnExportArgs.skipFormatter;\n\n                if (column.skip && index <= this._indexOfLastPinnedColumn) {\n                    skippedPinnedColumnsCount++;\n                }\n\n                if (this._sort && this._sort.fieldName === column.field) {\n                    if (column.skip) {\n                        this._sort = null;\n                    } else {\n                        this._sort.fieldName = column.header;\n                    }\n                }\n            }\n        });\n\n        this._indexOfLastPinnedColumn -= skippedPinnedColumnsCount;\n\n        const dataToExport = new Array<any>();\n        const isSpecialData = ExportUtilities.isSpecialData(data);\n\n        data.forEach((row, index) => {\n            this.exportRow(dataToExport, row, index, isSpecialData);\n        });\n\n        this.exportDataImplementation(dataToExport, options);\n        this.resetDefaults();\n    }\n\n    protected abstract exportDataImplementation(data: any[], options: IgxExporterOptionsBase): void;\n\n    private exportRow(data: any[], rowData: any, index: number, isSpecialData: boolean) {\n        let row;\n\n        if (!isSpecialData) {\n            row = this._columnList.reduce((a, e) => {\n                if (!e.skip) {\n                    const rawValue = this._isTreeGrid ? rowData.data[e.field] : rowData[e.field];\n                    a[e.header] = e.formatter && !e.skipFormatter ? e.formatter(rawValue) : rawValue;\n                }\n                return a;\n            }, {});\n        } else {\n            row = this._isTreeGrid ? rowData.data : rowData;\n        }\n\n        const rowArgs = {\n            rowData: row,\n            rowIndex: index,\n            cancel: false\n        };\n        this.onRowExport.emit(rowArgs);\n\n        if (!rowArgs.cancel) {\n            data.push({ rowData: rowArgs.rowData, originalRowData: rowData });\n        }\n    }\n\n    private prepareData(grid: any, options: IgxExporterOptionsBase): any[] {\n        this.flatRecords = [];\n        let rootRecords = grid.rootRecords;\n        this._isTreeGrid = rootRecords !== undefined;\n\n        if (this._isTreeGrid) {\n            this.prepareHierarchicalData(rootRecords);\n        }\n\n        let data = this._isTreeGrid ? this.flatRecords : grid.data;\n\n        if (((grid.filteringExpressionsTree &&\n            grid.filteringExpressionsTree.filteringOperands.length > 0) ||\n            (grid.advancedFilteringExpressionsTree &&\n            grid.advancedFilteringExpressionsTree.filteringOperands.length > 0)) &&\n            !options.ignoreFiltering) {\n            const filteringState: any = {\n                expressionsTree: grid.filteringExpressionsTree,\n                advancedExpressionsTree: grid.advancedFilteringExpressionsTree,\n                logic: grid.filteringLogic\n            };\n\n            if (this._isTreeGrid) {\n                this.flatRecords = [];\n                filteringState.strategy = (grid.filterStrategy) ? grid.filterStrategy : new TreeGridFilteringStrategy();\n                rootRecords = filteringState.strategy.filter(rootRecords,\n                    filteringState.expressionsTree, filteringState.advancedExpressionsTree);\n                this.prepareHierarchicalData(rootRecords);\n                data = this.flatRecords;\n            } else {\n                filteringState.strategy = grid.filterStrategy;\n                data = DataUtil.filter(data, filteringState);\n            }\n        }\n\n        if (grid.sortingExpressions &&\n            grid.sortingExpressions.length > 0 &&\n            !options.ignoreSorting) {\n            this._sort = cloneValue(grid.sortingExpressions[0]);\n\n            if (this._isTreeGrid) {\n                this.flatRecords = [];\n                rootRecords = DataUtil.treeGridSort(rootRecords, grid.sortingExpressions, grid.sortStrategy);\n                this.prepareHierarchicalData(rootRecords);\n                data = this.flatRecords;\n            } else {\n                data = DataUtil.sort(data, grid.sortingExpressions, grid.sortStrategy);\n            }\n        }\n\n        return data;\n    }\n\n    private prepareHierarchicalData(records: ITreeGridRecord[]) {\n        if (!records) {\n            return;\n        }\n        for (let i = 0; i < records.length; i++) {\n            const hierarchicalRecord = records[i];\n\n            this.flatRecords.push(hierarchicalRecord);\n            this.prepareHierarchicalData(hierarchicalRecord.children);\n        }\n    }\n\n    private resetDefaults() {\n        this._columnList = [];\n        this._indexOfLastPinnedColumn = -1;\n        this._sort = null;\n        this.flatRecords = [];\n    }\n}\n","import { ExportUtilities } from '../exporter-common/export-utilities';\n\n/**\n * @hidden\n */\nexport class CharSeparatedValueData {\n    private _headerRecord = '';\n    private _dataRecords = '';\n    private _eor = '\\r\\n';\n    private _delimiter;\n    private _escapeCharacters = ['\\r', '\\n', '\\r\\n'];\n    private _delimiterLength = 1;\n    private _isSpecialData = false;\n\n    constructor(private _data: any[], valueDelimiter: string)  {\n        this.setDelimiter(valueDelimiter);\n    }\n\n    public prepareData() {\n        if (!this._data || this._data.length === 0) {\n            return '';\n        }\n\n        const keys = ExportUtilities.getKeysFromData(this._data);\n\n        if (keys.length === 0) {\n            return '';\n        }\n\n        this._isSpecialData = ExportUtilities.isSpecialData(this._data);\n        this._escapeCharacters.push(this._delimiter);\n\n        this._headerRecord = this.processHeaderRecord(keys, this._escapeCharacters);\n        this._dataRecords = this.processDataRecords(this._data, keys, this._escapeCharacters);\n\n        return this._headerRecord + this._dataRecords;\n    }\n\n    private processField(value, escapeChars): string {\n        let safeValue = ExportUtilities.hasValue(value) ? String(value) : '';\n        if (escapeChars.some((v) => safeValue.includes(v))) {\n            safeValue = `\"${safeValue}\"`;\n        }\n        return safeValue + this._delimiter;\n    }\n\n    private processHeaderRecord(keys, escapeChars): string {\n        let recordData = '';\n        for (const keyName of keys) {\n            recordData += this.processField(keyName, this._escapeCharacters);\n        }\n\n        return recordData.slice(0, -this._delimiterLength) + this._eor;\n    }\n\n    private processRecord(record, keys, escapeChars): string {\n        let recordData = '';\n        for (const keyName of keys) {\n\n            const value = (record[keyName] !== undefined) ? record[keyName] : this._isSpecialData ? record : '';\n            recordData += this.processField(value, this._escapeCharacters);\n        }\n\n        return recordData.slice(0, -this._delimiterLength) + this._eor;\n    }\n\n    private processDataRecords(currentData, keys, escapeChars) {\n        let dataRecords = '';\n        for (const row of currentData) {\n            dataRecords += this.processRecord(row, keys, escapeChars);\n        }\n\n        return dataRecords;\n    }\n\n    private setDelimiter(value) {\n        this._delimiter = value;\n        this._delimiterLength = value.length;\n    }\n}\n","export abstract class IgxExporterOptionsBase {\n    private _fileName: string;\n\n    /**\n     * Specifies whether hidden columns should be exported.\n     * ```typescript\n     * let ignoreColumnsVisibility = this.exportOptions.ignoreColumnsVisibility;\n     * this.exportOptions.ignoreColumnsVisibility = true;\n     * ```\n     * @memberof IgxExporterOptionsBase\n     */\n    public ignoreColumnsVisibility = false;\n\n    /**\n     * Specifies whether filtered out rows should be exported.\n     * ```typescript\n     * let ignoreFiltering = this.exportOptions.ignoreFiltering;\n     * this.exportOptions.ignoreFiltering = true;\n     * ```\n     * @memberof IgxExporterOptionsBase\n     */\n    public ignoreFiltering = false;\n\n    /**\n     * Specifies if the exporter should ignore the current column order in the IgxGrid.\n     * ```typescript\n     * let ignoreColumnsOrder = this.exportOptions.ignoreColumnsOrder;\n     * this.exportOptions.ignoreColumnsOrder = true;\n     * ```\n     * @memberof IgxExporterOptionsBase\n     */\n    public ignoreColumnsOrder = false;\n\n    /**\n     * Specifies whether the exported data should be sorted as in the provided IgxGrid.\n     * ```typescript\n     * let ignoreSorting = this.exportOptions.ignoreSorting;\n     * this.exportOptions.ignoreSorting = true;\n     * ```\n     * @memberof IgxExporterOptionsBase\n     */\n    public ignoreSorting = false;\n\n    constructor(fileName: string, protected _fileExtension: string) {\n        this.setFileName(fileName);\n    }\n\n    private setFileName(fileName: string): void {\n        this._fileName = fileName + (fileName.endsWith(this._fileExtension) === false ? this._fileExtension : '');\n    }\n\n    /**\n     * Gets the file name which will be used for the exporting operation.\n     * ```typescript\n     * let fileName = this.exportOptions.fileName;\n     * ```\n     * @memberof IgxExporterOptionsBase\n     */\n    get fileName() {\n        return this._fileName;\n    }\n\n    /**\n     * Sets the file name which will be used for the exporting operation.\n     * ```typescript\n     * this.exportOptions.fileName = 'exportedData01';\n     * ```\n     * @memberof IgxExporterOptionsBase\n     */\n    set fileName(value) {\n        this.setFileName(value);\n    }\n\n}\n","import { IgxExporterOptionsBase } from '../exporter-common/exporter-options-base';\n\n/**\n * Objects of this class are used to configure the CSV exporting process.\n */\nexport class IgxCsvExporterOptions extends IgxExporterOptionsBase {\n\n    private _valueDelimiter;\n    private _fileType;\n\n    constructor(fileName: string, fileType: CsvFileTypes) {\n        super(fileName, IgxCsvExporterOptions.getExtensionFromFileType(fileType));\n        this.setFileType(fileType);\n        this.setDelimiter();\n    }\n\n    private static getExtensionFromFileType(fType: CsvFileTypes) {\n        let extension = '';\n        switch (fType) {\n            case CsvFileTypes.CSV:\n                extension = '.csv';\n                break;\n            case CsvFileTypes.TSV:\n                extension = '.tsv';\n                break;\n            case CsvFileTypes.TAB:\n                extension = '.tab';\n                break;\n            default:\n                throw Error('Unsupported CSV file type!');\n        }\n        return extension;\n    }\n\n    /**\n     * Gets the value delimiter which will be used for the exporting operation.\n     * ```typescript\n     * let delimiter = this.exportOptions.valueDelimiter;\n     * ```\n     * @memberof IgxCsvExporterOptions\n     */\n    get valueDelimiter() {\n        return this._valueDelimiter;\n    }\n\n    /**\n     * Sets a value delimiter which will overwrite the default delimiter of the selected export format.\n     * ```typescript\n     * this.exportOptions.valueDelimiter = '|';\n     * ```\n     * @memberof IgxCsvExporterOptions\n     */\n    set valueDelimiter(value) {\n        this.setDelimiter(value);\n    }\n\n    /**\n     * Gets the CSV export format.\n     * ```typescript\n     * let filetype = this.exportOptions.fileType;\n     * ```\n     * @memberof IgxCsvExporterOptions\n     */\n    get fileType() {\n        return this._fileType;\n    }\n\n    /**\n     * Sets the CSV export format.\n     * ```typescript\n     * this.exportOptions.fileType = CsvFileTypes.TAB;\n     * ```\n     * @memberof IgxCsvExporterOptions\n     */\n    set fileType(value) {\n        this.setFileType(value);\n    }\n\n    private setFileType(value) {\n        if (value !== undefined && value !== null && value !== this._fileType) {\n            this._fileType = value;\n            const extension = IgxCsvExporterOptions.getExtensionFromFileType(value);\n            if (!this.fileName.endsWith(extension)) {\n                const oldExt = '.' + this.fileName.split('.').pop();\n                const newName = this.fileName.replace(oldExt, extension);\n                this._fileExtension = extension;\n                this.fileName = newName;\n            }\n        }\n    }\n\n    private setDelimiter(value?) {\n        if (value !== undefined && value !== '' && value !== null) {\n            this._valueDelimiter = value;\n        } else {\n            switch (this.fileType) {\n                case CsvFileTypes.CSV:\n                    this._valueDelimiter = ',';\n                    break;\n                case CsvFileTypes.TSV:\n                case CsvFileTypes.TAB:\n                    this._valueDelimiter = '\\t';\n                    break;\n            }\n        }\n    }\n}\n\n/**\n * This enumeration is used to configure the default value separator\n * as well as the default file extension used when performing CSV exporting.\n */\nexport enum CsvFileTypes {\n    /**\n     * Character Separated Values, default separator is \"comma\", default file extension is .csv\n     */\n    CSV,\n    /**\n     * Tab Separated Values, default separator is tab, default file extension is .tsv\n     */\n    TSV,\n    /**\n     * Tab Separated Values, default separator is tab, default file extension is .tab\n     */\n    TAB\n}\n","import { EventEmitter, Injectable, Output } from '@angular/core';\nimport { IgxBaseExporter } from '../exporter-common/base-export-service';\nimport { ExportUtilities } from '../exporter-common/export-utilities';\nimport { CharSeparatedValueData } from './char-separated-value-data';\nimport { CsvFileTypes, IgxCsvExporterOptions } from './csv-exporter-options';\nimport { IBaseEventArgs } from '../../core/utils';\n\nexport interface ICsvExportEndedEventArgs extends IBaseEventArgs {\n    csvData: string;\n}\n\n/**\n * **Ignite UI for Angular CSV Exporter Service** -\n * [Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/exporter_csv.html)\n *\n * The Ignite UI for Angular CSV Exporter service can export data in a Character Separated Values format from\n * both raw data (array) or from an `IgxGrid`.\n *\n * Example:\n * ```typescript\n * public localData = [\n *   { Name: \"Eric Ridley\", Age: \"26\" },\n *   { Name: \"Alanis Brook\", Age: \"22\" },\n *   { Name: \"Jonathan Morris\", Age: \"23\" }\n * ];\n *\n * constructor(private csvExportService: IgxCsvExporterService) {\n * }\n *\n * const opt: IgxCsvExporterOptions = new IgxCsvExporterOptions(\"FileName\", CsvFileTypes.CSV);\n * this.csvExportService.exportData(this.localData, opt);\n * ```\n */\n@Injectable()\nexport class IgxCsvExporterService extends IgxBaseExporter {\n    private _stringData: string;\n\n    /**\n     * This event is emitted when the export process finishes.\n     * ```typescript\n     * this.exporterService.onExportEnded.subscribe((args: ICsvExportEndedEventArgs) => {\n     * // put event handler code here\n     * });\n     * ```\n     * @memberof IgxCsvExporterService\n     */\n    @Output()\n    public onExportEnded = new EventEmitter<ICsvExportEndedEventArgs>();\n\n    protected exportDataImplementation(data: any[], options: IgxCsvExporterOptions) {\n        data = data.map((item) => item.rowData);\n        const csvData = new CharSeparatedValueData(data, options.valueDelimiter);\n        this._stringData = csvData.prepareData();\n\n        this.saveFile(options);\n        this.onExportEnded.emit({ csvData: this._stringData });\n    }\n\n    private saveFile(options: IgxCsvExporterOptions) {\n        switch (options.fileType) {\n            case CsvFileTypes.CSV:\n                this.exportFile(this._stringData, options.fileName, 'text/csv;charset=utf-8;');\n                break;\n            case CsvFileTypes.TSV:\n            case CsvFileTypes.TAB:\n                this.exportFile(this._stringData, options.fileName, 'text/tab-separated-values;charset=utf-8;');\n                break;\n        }\n    }\n\n    private exportFile(data: string, fileName: string, fileType: string): void {\n        const blob = new Blob(['\\ufeff', data], { type: fileType });\n        ExportUtilities.saveBlobToFile(blob, fileName);\n    }\n}\n","/**\n * @hidden\n */\nexport enum ExcelFolderTypes {\n    RootExcelFolder,\n    RootRelsExcelFolder,\n    DocPropsExcelFolder,\n    XLExcelFolder,\n    XLRelsExcelFolder,\n    ThemeExcelFolder,\n    WorksheetsExcelFolder,\n    WorksheetsRelsExcelFolder,\n    TablesExcelFolder\n}\n/**\n * @hidden\n */\nexport enum ExcelFileTypes {\n    RootRelsFile,\n    AppFile,\n    CoreFile,\n    WorkbookRelsFile,\n    ThemeFile,\n    WorksheetFile,\n    StyleFile,\n    WorkbookFile,\n    ContentTypesFile,\n    SharedStringsFile,\n    WorksheetRelsFile,\n    TablesFile\n}\n","/** @hidden */\nexport class ExcelStrings {\n    /* tslint:disable max-line-length */\n    private static XML_STRING = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\r\\n';\n    private static SHARED_STRING_RELATIONSHIP = '<Relationship Id=\"rId4\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings\" Target=\"sharedStrings.xml\" />';\n\n    public static getRels(): string {\n        return ExcelStrings.XML_STRING + '<Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\"><Relationship Id=\"rId3\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties\" Target=\"docProps/app.xml\"/><Relationship Id=\"rId2\" Type=\"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\" Target=\"docProps/core.xml\"/><Relationship Id=\"rId1\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\" Target=\"xl/workbook.xml\"/></Relationships>';\n    }\n\n    public static getApp(): string {\n        return ExcelStrings.XML_STRING + '<Properties xmlns=\"http://schemas.openxmlformats.org/officeDocument/2006/extended-properties\" xmlns:vt=\"http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes\"><Application>Microsoft Excel</Application><DocSecurity>0</DocSecurity><ScaleCrop>false</ScaleCrop><HeadingPairs><vt:vector size=\"2\" baseType=\"variant\"><vt:variant><vt:lpstr>Worksheets</vt:lpstr></vt:variant><vt:variant><vt:i4>1</vt:i4></vt:variant></vt:vector></HeadingPairs><TitlesOfParts><vt:vector size=\"1\" baseType=\"lpstr\"><vt:lpstr>Sheet1</vt:lpstr></vt:vector></TitlesOfParts><Company></Company><LinksUpToDate>false</LinksUpToDate><SharedDoc>false</SharedDoc><HyperlinksChanged>false</HyperlinksChanged><AppVersion>16.0300</AppVersion></Properties>';\n    }\n\n    public static getCore(): string {\n        return ExcelStrings.XML_STRING + '<cp:coreProperties xmlns:cp=\"http://schemas.openxmlformats.org/package/2006/metadata/core-properties\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:dcterms=\"http://purl.org/dc/terms/\" xmlns:dcmitype=\"http://purl.org/dc/dcmitype/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><dc:creator></dc:creator><cp:lastModifiedBy></cp:lastModifiedBy><dcterms:created xsi:type=\"dcterms:W3CDTF\">2015-06-05T18:17:20Z</dcterms:created><dcterms:modified xsi:type=\"dcterms:W3CDTF\">2015-06-05T18:17:26Z</dcterms:modified></cp:coreProperties>';\n    }\n\n    public static getTheme(): string {\n        return ExcelStrings.XML_STRING + '<a:theme xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" name=\"Office Theme\"><a:themeElements><a:clrScheme name=\"Office\"><a:dk1><a:sysClr val=\"windowText\" lastClr=\"000000\"/></a:dk1><a:lt1><a:sysClr val=\"window\" lastClr=\"FFFFFF\"/></a:lt1><a:dk2><a:srgbClr val=\"44546A\"/></a:dk2><a:lt2><a:srgbClr val=\"E7E6E6\"/></a:lt2><a:accent1><a:srgbClr val=\"5B9BD5\"/></a:accent1><a:accent2><a:srgbClr val=\"ED7D31\"/></a:accent2><a:accent3><a:srgbClr val=\"A5A5A5\"/></a:accent3><a:accent4><a:srgbClr val=\"FFC000\"/></a:accent4><a:accent5><a:srgbClr val=\"4472C4\"/></a:accent5><a:accent6><a:srgbClr val=\"70AD47\"/></a:accent6><a:hlink><a:srgbClr val=\"0563C1\"/></a:hlink><a:folHlink><a:srgbClr val=\"954F72\"/></a:folHlink></a:clrScheme><a:fontScheme name=\"Office\"><a:majorFont><a:latin typeface=\"Calibri Light\" panose=\"020F0302020204030204\"/><a:ea typeface=\"\"/><a:cs typeface=\"\"/><a:font script=\"Jpan\" typeface=\"游ゴシック Light\"/><a:font script=\"Hang\" typeface=\"맑은 고딕\"/><a:font script=\"Hans\" typeface=\"等线 Light\"/><a:font script=\"Hant\" typeface=\"新細明體\"/><a:font script=\"Arab\" typeface=\"Times New Roman\"/><a:font script=\"Hebr\" typeface=\"Times New Roman\"/><a:font script=\"Thai\" typeface=\"Tahoma\"/><a:font script=\"Ethi\" typeface=\"Nyala\"/><a:font script=\"Beng\" typeface=\"Vrinda\"/><a:font script=\"Gujr\" typeface=\"Shruti\"/><a:font script=\"Khmr\" typeface=\"MoolBoran\"/><a:font script=\"Knda\" typeface=\"Tunga\"/><a:font script=\"Guru\" typeface=\"Raavi\"/><a:font script=\"Cans\" typeface=\"Euphemia\"/><a:font script=\"Cher\" typeface=\"Plantagenet Cherokee\"/><a:font script=\"Yiii\" typeface=\"Microsoft Yi Baiti\"/><a:font script=\"Tibt\" typeface=\"Microsoft Himalaya\"/><a:font script=\"Thaa\" typeface=\"MV Boli\"/><a:font script=\"Deva\" typeface=\"Mangal\"/><a:font script=\"Telu\" typeface=\"Gautami\"/><a:font script=\"Taml\" typeface=\"Latha\"/><a:font script=\"Syrc\" typeface=\"Estrangelo Edessa\"/><a:font script=\"Orya\" typeface=\"Kalinga\"/><a:font script=\"Mlym\" typeface=\"Kartika\"/><a:font script=\"Laoo\" typeface=\"DokChampa\"/><a:font script=\"Sinh\" typeface=\"Iskoola Pota\"/><a:font script=\"Mong\" typeface=\"Mongolian Baiti\"/><a:font script=\"Viet\" typeface=\"Times New Roman\"/><a:font script=\"Uigh\" typeface=\"Microsoft Uighur\"/><a:font script=\"Geor\" typeface=\"Sylfaen\"/></a:majorFont><a:minorFont><a:latin typeface=\"Calibri\" panose=\"020F0502020204030204\"/><a:ea typeface=\"\"/><a:cs typeface=\"\"/><a:font script=\"Jpan\" typeface=\"游ゴシック\"/><a:font script=\"Hang\" typeface=\"맑은 고딕\"/><a:font script=\"Hans\" typeface=\"等线\"/><a:font script=\"Hant\" typeface=\"新細明體\"/><a:font script=\"Arab\" typeface=\"Arial\"/><a:font script=\"Hebr\" typeface=\"Arial\"/><a:font script=\"Thai\" typeface=\"Tahoma\"/><a:font script=\"Ethi\" typeface=\"Nyala\"/><a:font script=\"Beng\" typeface=\"Vrinda\"/><a:font script=\"Gujr\" typeface=\"Shruti\"/><a:font script=\"Khmr\" typeface=\"DaunPenh\"/><a:font script=\"Knda\" typeface=\"Tunga\"/><a:font script=\"Guru\" typeface=\"Raavi\"/><a:font script=\"Cans\" typeface=\"Euphemia\"/><a:font script=\"Cher\" typeface=\"Plantagenet Cherokee\"/><a:font script=\"Yiii\" typeface=\"Microsoft Yi Baiti\"/><a:font script=\"Tibt\" typeface=\"Microsoft Himalaya\"/><a:font script=\"Thaa\" typeface=\"MV Boli\"/><a:font script=\"Deva\" typeface=\"Mangal\"/><a:font script=\"Telu\" typeface=\"Gautami\"/><a:font script=\"Taml\" typeface=\"Latha\"/><a:font script=\"Syrc\" typeface=\"Estrangelo Edessa\"/><a:font script=\"Orya\" typeface=\"Kalinga\"/><a:font script=\"Mlym\" typeface=\"Kartika\"/><a:font script=\"Laoo\" typeface=\"DokChampa\"/><a:font script=\"Sinh\" typeface=\"Iskoola Pota\"/><a:font script=\"Mong\" typeface=\"Mongolian Baiti\"/><a:font script=\"Viet\" typeface=\"Arial\"/><a:font script=\"Uigh\" typeface=\"Microsoft Uighur\"/><a:font script=\"Geor\" typeface=\"Sylfaen\"/></a:minorFont></a:fontScheme><a:fmtScheme name=\"Office\"><a:fillStyleLst><a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill><a:gradFill rotWithShape=\"1\"><a:gsLst><a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:lumMod val=\"110000\"/><a:satMod val=\"105000\"/><a:tint val=\"67000\"/></a:schemeClr></a:gs><a:gs pos=\"50000\"><a:schemeClr val=\"phClr\"><a:lumMod val=\"105000\"/><a:satMod val=\"103000\"/><a:tint val=\"73000\"/></a:schemeClr></a:gs><a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:lumMod val=\"105000\"/><a:satMod val=\"109000\"/><a:tint val=\"81000\"/></a:schemeClr></a:gs></a:gsLst><a:lin ang=\"5400000\" scaled=\"0\"/></a:gradFill><a:gradFill rotWithShape=\"1\"><a:gsLst><a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:satMod val=\"103000\"/><a:lumMod val=\"102000\"/><a:tint val=\"94000\"/></a:schemeClr></a:gs><a:gs pos=\"50000\"><a:schemeClr val=\"phClr\"><a:satMod val=\"110000\"/><a:lumMod val=\"100000\"/><a:shade val=\"100000\"/></a:schemeClr></a:gs><a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:lumMod val=\"99000\"/><a:satMod val=\"120000\"/><a:shade val=\"78000\"/></a:schemeClr></a:gs></a:gsLst><a:lin ang=\"5400000\" scaled=\"0\"/></a:gradFill></a:fillStyleLst><a:lnStyleLst><a:ln w=\"6350\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill><a:prstDash val=\"solid\"/><a:miter lim=\"800000\"/></a:ln><a:ln w=\"12700\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill><a:prstDash val=\"solid\"/><a:miter lim=\"800000\"/></a:ln><a:ln w=\"19050\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill><a:prstDash val=\"solid\"/><a:miter lim=\"800000\"/></a:ln></a:lnStyleLst><a:effectStyleLst><a:effectStyle><a:effectLst/></a:effectStyle><a:effectStyle><a:effectLst/></a:effectStyle><a:effectStyle><a:effectLst><a:outerShdw blurRad=\"57150\" dist=\"19050\" dir=\"5400000\" algn=\"ctr\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"63000\"/></a:srgbClr></a:outerShdw></a:effectLst></a:effectStyle></a:effectStyleLst><a:bgFillStyleLst><a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill><a:solidFill><a:schemeClr val=\"phClr\"><a:tint val=\"95000\"/><a:satMod val=\"170000\"/></a:schemeClr></a:solidFill><a:gradFill rotWithShape=\"1\"><a:gsLst><a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"93000\"/><a:satMod val=\"150000\"/><a:shade val=\"98000\"/><a:lumMod val=\"102000\"/></a:schemeClr></a:gs><a:gs pos=\"50000\"><a:schemeClr val=\"phClr\"><a:tint val=\"98000\"/><a:satMod val=\"130000\"/><a:shade val=\"90000\"/><a:lumMod val=\"103000\"/></a:schemeClr></a:gs><a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:shade val=\"63000\"/><a:satMod val=\"120000\"/></a:schemeClr></a:gs></a:gsLst><a:lin ang=\"5400000\" scaled=\"0\"/></a:gradFill></a:bgFillStyleLst></a:fmtScheme></a:themeElements><a:objectDefaults/><a:extraClrSchemeLst/><a:extLst><a:ext uri=\"{05A4C25C-085E-4340-85A3-A5531E510DB2}\"><thm15:themeFamily xmlns:thm15=\"http://schemas.microsoft.com/office/thememl/2012/main\" name=\"Office Theme\" id=\"{62F939B6-93AF-4DB8-9C6B-D6C7DFDC589F}\" vid=\"{4A3C46E8-61CC-4603-A589-7422A47A8E4A}\"/></a:ext></a:extLst></a:theme>';\n    }\n\n    public static getStyles(hasNonStringValues: boolean): string {\n        const additionalCellXF = '<xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\" xfId=\"0\" applyNumberFormat=\"1\"/>';\n        const cellXFCount = hasNonStringValues ? 2 : 1;\n        return ExcelStrings.XML_STRING + '<styleSheet xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" mc:Ignorable=\"x14ac x16r2\" xmlns:x14ac=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac\" xmlns:x16r2=\"http://schemas.microsoft.com/office/spreadsheetml/2015/02/main\"><fonts count=\"1\" x14ac:knownFonts=\"1\"><font><sz val=\"11\"/><color theme=\"1\"/><name val=\"Calibri\"/><family val=\"2\"/><scheme val=\"minor\"/></font></fonts><fills count=\"2\"><fill><patternFill patternType=\"none\"/></fill><fill><patternFill patternType=\"gray125\"/></fill></fills><borders count=\"1\"><border><left/><right/><top/><bottom/><diagonal/></border></borders><cellStyleXfs count=\"1\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\"/></cellStyleXfs><cellXfs count=\"' + cellXFCount + '\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\" xfId=\"0\"/>' + additionalCellXF + '</cellXfs><cellStyles count=\"1\"><cellStyle name=\"Normal\" xfId=\"0\" builtinId=\"0\"/></cellStyles><dxfs count=\"0\"/><tableStyles count=\"0\" defaultTableStyle=\"TableStyleMedium2\" defaultPivotStyle=\"PivotStyleLight16\"/><extLst><ext uri=\"{EB79DEF2-80B8-43e5-95BD-54CBDDF9020C}\" xmlns:x14=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/main\"><x14:slicerStyles defaultSlicerStyle=\"SlicerStyleLight1\"/></ext><ext uri=\"{9260A510-F301-46a8-8635-F512D64BE5F5}\" xmlns:x15=\"http://schemas.microsoft.com/office/spreadsheetml/2010/11/main\"><x15:timelineStyles defaultTimelineStyle=\"TimeSlicerStyleLight1\"/></ext></extLst></styleSheet>';\n    }\n\n    public static getWorkbook(): string {\n        return ExcelStrings.XML_STRING + '<workbook xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" mc:Ignorable=\"x15\" xmlns:x15=\"http://schemas.microsoft.com/office/spreadsheetml/2010/11/main\"><fileVersion appName=\"xl\" lastEdited=\"6\" lowestEdited=\"6\" rupBuild=\"14420\"/><workbookPr filterPrivacy=\"1\" defaultThemeVersion=\"164011\"/><bookViews><workbookView xWindow=\"0\" yWindow=\"0\" windowWidth=\"22260\" windowHeight=\"12645\"/></bookViews><sheets><sheet name=\"Sheet1\" sheetId=\"1\" r:id=\"rId1\"/></sheets><calcPr calcId=\"162913\"/><extLst><ext uri=\"{140A7094-0E35-4892-8432-C4D2E57EDEB5}\" xmlns:x15=\"http://schemas.microsoft.com/office/spreadsheetml/2010/11/main\"><x15:workbookPr chartTrackingRefBase=\"1\"/></ext></extLst></workbook>';\n    }\n\n    public static getWorksheetRels(): string {\n        return ExcelStrings.XML_STRING + `<Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\"><Relationship Id=\"rId1\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/table\" Target=\"../tables/table1.xml\"/></Relationships>`;\n    }\n\n    public static getWorkbookRels(hasSharedStrings): string {\n        let retVal = ExcelStrings.XML_STRING + '<Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\"><Relationship Id=\"rId3\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\" Target=\"styles.xml\"/><Relationship Id=\"rId2\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme\" Target=\"theme/theme1.xml\"/><Relationship Id=\"rId1\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\" Target=\"worksheets/sheet1.xml\"/>';\n\n        if (hasSharedStrings) {\n            retVal += ExcelStrings.SHARED_STRING_RELATIONSHIP;\n        }\n\n        retVal += '</Relationships>';\n\n        return retVal;\n    }\n\n    public static getSheetXML(dimension: string, freezePane: string, cols: string, sheetData: string, hasTable: boolean, hasGroupedRows = false, outlineLevel = 0): string {\n        const tableParts = hasTable ? '<tableParts count=\"1\"><tablePart r:id=\"rId1\"/></tableParts>' : '';\n        const sheetOutlineProp = hasGroupedRows ? '<sheetPr><outlinePr summaryBelow=\"0\"/></sheetPr>' : '';\n        const sOutlineLevel = outlineLevel > 0 ? `outlineLevelRow=\"${outlineLevel}\"` : '';\n        // return ExcelStrings.XML_STRING +\n        //     '<worksheet xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" mc:Ignorable=\"x14ac\" xmlns:x14ac=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac\"><dimension ref=\"' + dimension + '\"/><sheetViews><sheetView tabSelected=\"1\" workbookViewId=\"0\">' + freezePane + '</sheetView></sheetViews><sheetFormatPr defaultRowHeight=\"15\" x14ac:dyDescent=\"0.25\"/>' + cols + sheetData + '<pageMargins left=\"0.7\" right=\"0.7\" top=\"0.75\" bottom=\"0.75\" header=\"0.3\" footer=\"0.3\"/>' + tableParts + '</worksheet>';\n\n        return `${ExcelStrings.XML_STRING}\n<worksheet xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" mc:Ignorable=\"x14ac\" xmlns:x14ac=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac\">\n${sheetOutlineProp}\n<dimension ref=\"${dimension}\"/>\n<sheetViews><sheetView tabSelected=\"1\" workbookViewId=\"0\">${freezePane}</sheetView></sheetViews>\n<sheetFormatPr defaultRowHeight=\"15\" ${sOutlineLevel} x14ac:dyDescent=\"0.25\"/>\n${cols}\n${sheetData}\n<pageMargins left=\"0.7\" right=\"0.7\" top=\"0.75\" bottom=\"0.75\" header=\"0.3\" footer=\"0.3\"/>\n${tableParts}</worksheet>`;\n\n    }\n\n    public static getSharedStringXML(count: number, uniqueCount: number, table: string): string {\n        return ExcelStrings.XML_STRING + '<sst xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" count=\"' + count + '\" uniqueCount=\"' + uniqueCount + '\">' + table + '</sst>';\n    }\n\n    public static getContentTypesXML(hasSharedStrings: boolean, hasTable: boolean): string {\n        let contentTypes = ExcelStrings.XML_STRING +\n        `<Types xmlns=\"http://schemas.openxmlformats.org/package/2006/content-types\\\">\n            <Default Extension=\"rels\" ContentType=\"application/vnd.openxmlformats-package.relationships+xml\"/>\n            <Default Extension=\"xml\" ContentType=\"application/xml\"/>\n            <Override PartName=\"/xl/workbook.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\"/>\n            <Override PartName=\"/xl/worksheets/sheet1.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\"/>\n            <Override PartName=\"/xl/theme/theme1.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.theme+xml\"/>\n            <Override PartName=\"/xl/styles.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\"/>\n            <Override PartName=\"/docProps/core.xml\" ContentType=\"application/vnd.openxmlformats-package.core-properties+xml\"/>\n            <Override PartName=\"/docProps/app.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.extended-properties+xml\"/>`;\n\n        contentTypes += hasSharedStrings ?\n        `\t<Override PartName=\"/xl/sharedStrings.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml\"/>` : '';\n\n        contentTypes += hasTable ?\n            `<Override PartName=\"/xl/tables/table1.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml\"/>` : '';\n        contentTypes += `</Types>`;\n\n        return contentTypes;\n    }\n\n    public static getTablesXML(dimension: string, tableColumns: string, sort: string): string {\n        return `${ExcelStrings.XML_STRING}<table xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" id=\"1\" name=\"Table1\" displayName=\"Table1\" ref=\"${dimension}\" totalsRowShown=\"0\">\n    <autoFilter ref=\"${dimension}\"/>${sort}${tableColumns}<tableStyleInfo name=\"TableStyleMedium2\" showFirstColumn=\"0\" showLastColumn=\"0\" showRowStripes=\"1\" showColumnStripes=\"0\"/>\n</table>`;\n    }\n    /* tslint:enable max-line-length */\n\n    public static getExcelColumn(index: number): string {\n        // Returns the excel column name for given 0-based index\n        // For example 27 should return \"AB\"\n        let returnString = '';\n        while (index >= 0) {\n            const char = index % 26;\n            returnString = String.fromCharCode(65 + char) + returnString;\n            index = Math.floor(index / 26) - 1;\n        }\n        return returnString;\n    }\n}\n","import { IExcelFile } from './excel-interfaces';\nimport { ExcelStrings } from './excel-strings';\nimport { WorksheetData } from './worksheet-data';\n\nimport * as JSZip from 'jszip';\n\n/**\n * @hidden\n */\nexport class RootRelsFile implements IExcelFile {\n    public writeElement(folder: JSZip, worksheetData: WorksheetData) {\n        folder.file('.rels', ExcelStrings.getRels());\n    }\n}\n\n/**\n * @hidden\n */\nexport class AppFile implements IExcelFile {\n    public writeElement(folder: JSZip, worksheetData: WorksheetData) {\n        folder.file('app.xml', ExcelStrings.getApp());\n    }\n}\n\n/**\n * @hidden\n */\nexport class CoreFile implements IExcelFile {\n    public writeElement(folder: JSZip, worksheetData: WorksheetData) {\n        folder.file('core.xml', ExcelStrings.getCore());\n    }\n}\n\n/**\n * @hidden\n */\nexport class WorkbookRelsFile implements IExcelFile {\n    public writeElement(folder: JSZip, worksheetData: WorksheetData) {\n        const hasSharedStrings = worksheetData.isEmpty === false;\n        folder.file('workbook.xml.rels', ExcelStrings.getWorkbookRels(hasSharedStrings));\n    }\n}\n\n/**\n * @hidden\n */\nexport class ThemeFile implements IExcelFile {\n    public writeElement(folder: JSZip, worksheetData: WorksheetData) {\n        folder.file('theme1.xml', ExcelStrings.getTheme());\n    }\n}\n\n/**\n * @hidden\n */\nexport class WorksheetFile implements IExcelFile {\n    private static MIN_WIDTH = 8.34;\n\n    public writeElement(folder: JSZip, worksheetData: WorksheetData) {\n        const sheetData = [];\n        const cols = [];\n        let dimension: string;\n        const dictionary = worksheetData.dataDictionary;\n        let freezePane = '';\n        let maxOutlineLevel = 0;\n\n        if (worksheetData.isEmpty) {\n            sheetData.push('<sheetData/>');\n            dimension = 'A1';\n        } else {\n            sheetData.push('<sheetData>');\n            const height =  worksheetData.options.rowHeight;\n            const rowHeight = height ? ' ht=\"' + height + '\" customHeight=\"1\"' : '';\n\n            sheetData.push(`<row r=\"1\"${rowHeight}>`);\n            for (let i = 0; i < worksheetData.columnCount; i++) {\n                const column = ExcelStrings.getExcelColumn(i) + 1;\n                const value = dictionary.saveValue(worksheetData.keys[i], i, true);\n                sheetData.push(`<c r=\"${column}\" t=\"s\"><v>${value}</v></c>`);\n            }\n            sheetData.push('</row>');\n\n            for (let i = 1; i < worksheetData.rowCount; i++) {\n                if (!worksheetData.isTreeGridData) {\n                    sheetData.push(`<row r=\"${(i + 1)}\"${rowHeight}>`);\n                } else {\n                    const rowData = worksheetData.data[i - 1].originalRowData;\n                    const sCollapsed = (!rowData.expanded) ? '' : (rowData.expanded === true) ? '' : ` collapsed=\"1\"`;\n                    const sHidden = (rowData.parent && this.hasCollapsedParent(rowData)) ? ` hidden=\"1\"` : '';\n                    const rowOutlineLevel = rowData.level ? rowData.level : 0;\n                    const sOutlineLevel = rowOutlineLevel > 0 ? ` outlineLevel=\"${rowOutlineLevel}\"` : '';\n                    maxOutlineLevel = maxOutlineLevel < rowOutlineLevel ? rowOutlineLevel : maxOutlineLevel;\n\n                    sheetData.push(`<row r=\"${(i + 1)}\"${rowHeight}${sOutlineLevel}${sCollapsed}${sHidden}>`);\n                }\n                for (let j = 0; j < worksheetData.columnCount; j++) {\n                    const cellData = WorksheetFile.getCellData(worksheetData, i, j);\n                    sheetData.push(cellData);\n                }\n                sheetData.push('</row>');\n            }\n            sheetData.push('</sheetData>');\n            dimension = 'A1:' + ExcelStrings.getExcelColumn(worksheetData.columnCount - 1) + worksheetData.rowCount;\n\n            cols.push('<cols>');\n\n            for (let i = 0; i < worksheetData.columnCount; i++) {\n                const width = dictionary.columnWidths[i];\n                // Use the width provided in the options if it exists\n                const widthInTwips = worksheetData.options.columnWidth ?\n                                    worksheetData.options.columnWidth :\n                                    Math.max(((width / 96) * 14.4), WorksheetFile.MIN_WIDTH);\n\n                cols.push(`<col min=\"${(i + 1)}\" max=\"${(i + 1)}\" width=\"${widthInTwips}\" customWidth=\"1\"/>`);\n            }\n\n            cols.push('</cols>');\n\n            if (worksheetData.indexOfLastPinnedColumn !== -1 &&\n                !worksheetData.options.ignorePinning &&\n                !worksheetData.options.ignoreColumnsOrder) {\n                const frozenColumnCount = worksheetData.indexOfLastPinnedColumn + 1;\n                const firstCell = ExcelStrings.getExcelColumn(frozenColumnCount) + '1';\n                freezePane = `<pane xSplit=\"${frozenColumnCount}\" topLeftCell=\"${firstCell}\" activePane=\"topRight\" state=\"frozen\"/>`;\n            }\n        }\n        const hasTable = !worksheetData.isEmpty && worksheetData.options.exportAsTable;\n\n        folder.file('sheet1.xml',\n                    ExcelStrings.getSheetXML(dimension, freezePane, cols.join(''), sheetData.join(''), hasTable,\n                    worksheetData.isTreeGridData, maxOutlineLevel));\n    }\n\n    private hasCollapsedParent(rowData) {\n        let result = !rowData.parent.expanded;\n        while (rowData.parent) {\n            result = result || !rowData.parent.expanded;\n            rowData = rowData.parent;\n        }\n\n        return result;\n    }\n    /* tslint:disable member-ordering */\n    private static getCellData(worksheetData: WorksheetData, row: number, column: number): string {\n        const dictionary = worksheetData.dataDictionary;\n        const columnName = ExcelStrings.getExcelColumn(column) + (row + 1);\n        const columnHeader = worksheetData.keys[column];\n\n        const rowData = worksheetData.data[row - 1].rowData;\n\n        const cellValue = worksheetData.isSpecialData ? rowData : rowData[columnHeader];\n\n        if (cellValue === undefined || cellValue === null) {\n            return `<c r=\"${columnName}\" s=\"1\"/>`;\n        } else {\n            const savedValue = dictionary.saveValue(cellValue, column, false);\n            const isSavedAsString = savedValue !== -1;\n\n            const value = isSavedAsString ? savedValue : cellValue;\n            const type = isSavedAsString ? ` t=\"s\"` : '';\n            const format = isSavedAsString ? '' : ` s=\"1\"`;\n\n            return `<c r=\"${columnName}\"${type}${format}><v>${value}</v></c>`;\n        }\n    }\n    /* tslint:enable member-ordering */\n}\n\n/**\n * @hidden\n */\nexport class StyleFile implements IExcelFile {\n    public writeElement(folder: JSZip, worksheetData: WorksheetData) {\n        folder.file('styles.xml', ExcelStrings.getStyles(worksheetData.dataDictionary && worksheetData.dataDictionary.hasNonStringValues));\n    }\n}\n\n/**\n * @hidden\n */\nexport class WorkbookFile implements IExcelFile {\n    public writeElement(folder: JSZip, worksheetData: WorksheetData) {\n        folder.file('workbook.xml', ExcelStrings.getWorkbook());\n    }\n}\n\n/**\n * @hidden\n */\nexport class ContentTypesFile implements IExcelFile {\n    public writeElement(folder: JSZip, worksheetData: WorksheetData) {\n        folder.file('[Content_Types].xml', ExcelStrings.getContentTypesXML(!worksheetData.isEmpty, worksheetData.options.exportAsTable));\n    }\n}\n\n/**\n * @hidden\n */\nexport class SharedStringsFile implements IExcelFile {\n    public writeElement(folder: JSZip, worksheetData: WorksheetData) {\n        const dict = worksheetData.dataDictionary;\n        const sortedValues = dict.getKeys();\n        const sharedStrings = new Array<string>(sortedValues.length);\n\n        for (const value of sortedValues) {\n            sharedStrings[dict.getSanitizedValue(value)] = '<si><t>' + value + '</t></si>';\n        }\n\n        folder.file('sharedStrings.xml', ExcelStrings.getSharedStringXML(\n                        dict.stringsCount,\n                        sortedValues.length,\n                        sharedStrings.join(''))\n                    );\n    }\n}\n\n/**\n * @hidden\n */\nexport class TablesFile implements IExcelFile {\n    public writeElement(folder: JSZip, worksheetData: WorksheetData) {\n        const columnCount = worksheetData.columnCount;\n        const lastColumn = ExcelStrings.getExcelColumn(columnCount - 1) + worksheetData.rowCount;\n        const dimension = 'A1:' + lastColumn;\n        const values = worksheetData.keys;\n        let sortString = '';\n\n        let tableColumns = '<tableColumns count=\"' + columnCount + '\">';\n        for (let i = 0; i < columnCount; i++) {\n            const value =  values[i];\n            tableColumns += '<tableColumn id=\"' + (i + 1) + '\" name=\"' + value + '\"/>';\n        }\n\n        tableColumns += '</tableColumns>';\n\n        if (worksheetData.sort) {\n            const sortingExpression = worksheetData.sort;\n            const sc = ExcelStrings.getExcelColumn(values.indexOf(sortingExpression.fieldName));\n            const dir = sortingExpression.dir - 1;\n            sortString = `<sortState ref=\"A2:${lastColumn}\"><sortCondition descending=\"${dir}\" ref=\"${sc}1:${sc}15\"/></sortState>`;\n        }\n\n        folder.file('table1.xml', ExcelStrings.getTablesXML(dimension, tableColumns, sortString));\n    }\n}\n\n/**\n * @hidden\n */\nexport class WorksheetRelsFile implements IExcelFile {\n    public writeElement(folder: JSZip, worksheetData: WorksheetData) {\n        folder.file('sheet1.xml.rels', ExcelStrings.getWorksheetRels());\n    }\n}\n","import {\n    ExcelFileTypes,\n    ExcelFolderTypes\n} from './excel-enums';\n\nimport { IExcelFolder } from './excel-interfaces';\nimport { WorksheetData } from './worksheet-data';\n\n/** @hidden */\nexport class RootExcelFolder implements IExcelFolder {\n    public get folderName() {\n        return  '';\n    }\n\n    childFiles(data: WorksheetData) {\n        return [ExcelFileTypes.ContentTypesFile];\n    }\n\n    childFolders(data: WorksheetData) {\n        return [\n            ExcelFolderTypes.RootRelsExcelFolder,\n            ExcelFolderTypes.DocPropsExcelFolder,\n            ExcelFolderTypes.XLExcelFolder\n        ];\n    }\n}\n\n/** @hidden */\nexport class RootRelsExcelFolder implements IExcelFolder {\n    public get folderName() {\n        return  '_rels';\n    }\n\n    childFiles(data: WorksheetData) {\n        return [ExcelFileTypes.RootRelsFile];\n    }\n\n    childFolders(data: WorksheetData) {\n        return [];\n    }\n}\n\n/** @hidden */\nexport class DocPropsExcelFolder implements IExcelFolder {\n    public get folderName() {\n        return  'docProps';\n    }\n\n    childFiles(data: WorksheetData) {\n        return [\n            ExcelFileTypes.AppFile,\n            ExcelFileTypes.CoreFile\n        ];\n    }\n\n    childFolders(data: WorksheetData) {\n        return [];\n    }\n}\n\n/** @hidden */\nexport class XLExcelFolder implements IExcelFolder {\n    public get folderName() {\n        return  'xl';\n    }\n\n    childFiles(data: WorksheetData) {\n        const retVal = [\n            ExcelFileTypes.StyleFile,\n            ExcelFileTypes.WorkbookFile\n        ];\n\n        if (!data.isEmpty) {\n            retVal.push(ExcelFileTypes.SharedStringsFile);\n        }\n\n        return retVal;\n    }\n\n    childFolders(data: WorksheetData) {\n        const retVal = [\n            ExcelFolderTypes.XLRelsExcelFolder,\n            ExcelFolderTypes.ThemeExcelFolder,\n            ExcelFolderTypes.WorksheetsExcelFolder\n        ];\n\n        if (!data.isEmpty && data.options.exportAsTable) {\n            retVal.push(ExcelFolderTypes.TablesExcelFolder);\n        }\n\n        return retVal;\n    }\n}\n\n/** @hidden */\nexport class XLRelsExcelFolder implements IExcelFolder {\n    public get folderName() {\n        return  '_rels';\n    }\n\n    childFiles(data: WorksheetData) {\n        return [ExcelFileTypes.WorkbookRelsFile];\n    }\n\n    childFolders(data: WorksheetData) {\n        return [];\n    }\n}\n\n/** @hidden */\nexport class ThemeExcelFolder implements IExcelFolder {\n    public get folderName() {\n        return  'theme';\n    }\n\n    childFiles(data: WorksheetData) {\n        return [ExcelFileTypes.ThemeFile];\n    }\n\n    childFolders(data: WorksheetData) {\n        return [];\n    }\n}\n\n/** @hidden */\nexport class WorksheetsExcelFolder implements IExcelFolder {\n    public get folderName() {\n        return  'worksheets';\n    }\n\n    childFiles(data: WorksheetData) {\n        return [ExcelFileTypes.WorksheetFile];\n    }\n\n    childFolders(data: WorksheetData) {\n        return data.isEmpty || !data.options.exportAsTable ? [] : [ExcelFolderTypes.WorksheetsRelsExcelFolder];\n    }\n}\n\n/** @hidden */\nexport class TablesExcelFolder implements IExcelFolder {\n    public get folderName() {\n        return 'tables';\n    }\n\n    childFiles(data: WorksheetData) {\n        return [ExcelFileTypes.TablesFile];\n    }\n\n    childFolders(data: WorksheetData) {\n        return [];\n    }\n}\n\n/** @hidden */\nexport class WorksheetsRelsExcelFolder implements IExcelFolder {\n    public get folderName() {\n        return '_rels';\n    }\n\n    childFiles(data: WorksheetData) {\n        return [ExcelFileTypes.WorksheetRelsFile];\n    }\n\n    childFolders(data: WorksheetData) {\n        return [];\n    }\n}\n","import {\n    ExcelFileTypes,\n    ExcelFolderTypes\n} from './excel-enums';\n\nimport {\n    AppFile,\n    ContentTypesFile,\n    CoreFile,\n    RootRelsFile,\n    SharedStringsFile,\n    StyleFile,\n    TablesFile,\n    ThemeFile,\n    WorkbookFile,\n    WorkbookRelsFile,\n    WorksheetFile,\n    WorksheetRelsFile\n} from './excel-files';\n\nimport {\n    DocPropsExcelFolder,\n    RootExcelFolder,\n    RootRelsExcelFolder,\n    TablesExcelFolder,\n    ThemeExcelFolder,\n    WorksheetsExcelFolder,\n    WorksheetsRelsExcelFolder,\n    XLExcelFolder,\n    XLRelsExcelFolder\n} from './excel-folders';\n\nimport {\n    IExcelFile,\n    IExcelFolder\n} from './excel-interfaces';\n\n/** @hidden */\nexport class ExcelElementsFactory {\n\n    public static getExcelFolder(type: ExcelFolderTypes): IExcelFolder {\n        switch (type) {\n            case ExcelFolderTypes.RootExcelFolder:\n                return new RootExcelFolder();\n            case ExcelFolderTypes.RootRelsExcelFolder:\n                return new RootRelsExcelFolder();\n            case ExcelFolderTypes.DocPropsExcelFolder:\n                return new DocPropsExcelFolder();\n            case ExcelFolderTypes.XLExcelFolder:\n                return new XLExcelFolder();\n            case ExcelFolderTypes.XLRelsExcelFolder:\n                return new XLRelsExcelFolder();\n            case ExcelFolderTypes.ThemeExcelFolder:\n                return new ThemeExcelFolder();\n            case ExcelFolderTypes.WorksheetsExcelFolder:\n                return  new WorksheetsExcelFolder();\n            case ExcelFolderTypes.WorksheetsRelsExcelFolder:\n                return new WorksheetsRelsExcelFolder();\n            case ExcelFolderTypes.TablesExcelFolder:\n                return new TablesExcelFolder();\n            default:\n                throw new Error('Unknown excel folder type!');\n        }\n    }\n\n    public static getExcelFile(type: ExcelFileTypes): IExcelFile {\n        switch (type) {\n            case ExcelFileTypes.RootRelsFile:\n                return  new RootRelsFile();\n            case ExcelFileTypes.AppFile:\n                return  new AppFile();\n            case ExcelFileTypes.CoreFile:\n                return new CoreFile();\n            case ExcelFileTypes.WorkbookRelsFile:\n                return new WorkbookRelsFile();\n            case ExcelFileTypes.ThemeFile:\n                return new ThemeFile();\n            case ExcelFileTypes.WorksheetFile:\n                return new WorksheetFile();\n            case ExcelFileTypes.StyleFile:\n                return new StyleFile();\n            case ExcelFileTypes.WorkbookFile:\n                return new WorkbookFile();\n            case ExcelFileTypes.ContentTypesFile:\n                return new ContentTypesFile();\n            case ExcelFileTypes.SharedStringsFile:\n                return new SharedStringsFile();\n            case ExcelFileTypes.WorksheetRelsFile:\n                return new WorksheetRelsFile();\n            case ExcelFileTypes.TablesFile:\n                return new TablesFile();\n            default:\n                throw Error('Unknown excel file type!');\n        }\n    }\n}\n","import { ExportUtilities } from '../exporter-common/export-utilities';\n\n/** @hidden */\nexport class WorksheetDataDictionary {\n    private static DEFAULT_FONT = '11pt Calibri';\n    private static TEXT_PADDING = 5;\n\n    private _dictionary: any;\n    private _widthsDictionary: any;\n\n    private _sortedKeysByValue: string[];\n    private _sortedKeysByValueAreValid: boolean;\n\n    private _keys: string[];\n    private _keysAreValid: boolean;\n\n    private _counter: number;\n    private _calculateColumnWidth: boolean;\n    private _columnWidths: number[];\n    private _context: any;\n\n    private _columnTypeInfo: boolean[];\n    public hasNonStringValues = false;\n\n    public stringsCount: number;\n\n    constructor(columnCount: number, columnWidth: number) {\n        this._dictionary = {};\n        this._widthsDictionary = {};\n        this._counter = 0;\n        this.dirtyKeyCollections();\n\n        this._calculateColumnWidth = !columnWidth;\n        this._columnWidths = new Array<number>(columnCount);\n        this._columnTypeInfo = new Array<boolean>(columnCount);\n\n        if (!this._calculateColumnWidth) {\n            this._columnWidths.fill(columnWidth);\n        }\n\n        this.stringsCount = 0;\n    }\n\n    public get columnWidths() {\n        return this._columnWidths;\n    }\n\n    public saveValue(value: any, column: number, isHeader: boolean): number {\n        if (this._columnTypeInfo[column] === undefined && isHeader === false) {\n            this._columnTypeInfo[column] = typeof value === 'string' ||\n                                            typeof value === 'boolean' ||\n                                            value instanceof Date;\n        }\n\n        let sanitizedValue = '';\n        const isSavedAsString = this._columnTypeInfo[column] || isHeader;\n\n        if (isSavedAsString) {\n            sanitizedValue = this.sanitizeValue(value);\n\n            if (this._dictionary[sanitizedValue] === undefined) {\n                this._dictionary[sanitizedValue] = this._counter++;\n                this.dirtyKeyCollections();\n            }\n\n            this.stringsCount ++;\n        } else {\n            this.hasNonStringValues = true;\n        }\n\n        if (this._calculateColumnWidth) {\n            const width = this.getTextWidth(value);\n            const maxWidth = Math.max(this._columnWidths[column] || 0, width);\n            this._columnWidths[column] = maxWidth;\n        }\n\n        return isSavedAsString ? this.getSanitizedValue(sanitizedValue) : -1;\n    }\n\n    public getValue(value: string): number {\n        return this.getSanitizedValue(this.sanitizeValue(value));\n    }\n\n    public getSanitizedValue(sanitizedValue: string): number {\n        return this._dictionary[sanitizedValue];\n    }\n\n    public getKeys(): string[] {\n        if (!this._keysAreValid) {\n            this._keys = Object.keys(this._dictionary);\n            this._keysAreValid = true;\n        }\n\n        return this._keys;\n    }\n\n    private getTextWidth(value: any): number {\n        if (this._widthsDictionary[value] === undefined) {\n            const context = this.getContext();\n            const metrics = context.measureText(value);\n            this._widthsDictionary[value] = metrics.width + WorksheetDataDictionary.TEXT_PADDING;\n        }\n\n        return this._widthsDictionary[value];\n    }\n\n    private getContext(): any {\n        if (!this._context) {\n            const canvas = document.createElement('canvas');\n            this._context = canvas.getContext('2d');\n            this._context.font = WorksheetDataDictionary.DEFAULT_FONT;\n        }\n\n        return this._context;\n    }\n\n    private sanitizeValue(value: any): string {\n        if (ExportUtilities.hasValue(value) === false) {\n            return '';\n        } else {\n            const stringValue = String(value);\n            return stringValue.replace(/&/g, '&amp;')\n                            .replace(/</g, '&lt;')\n                            .replace(/>/g, '&gt;')\n                            .replace(/\"/g, '&quot;')\n                            .replace(/'/g, '&apos;');\n        }\n    }\n\n    private dirtyKeyCollections(): void {\n        this._keysAreValid = false;\n    }\n}\n","import { ExportUtilities } from '../exporter-common/export-utilities';\nimport { IgxExcelExporterOptions } from './excel-exporter-options';\nimport { WorksheetDataDictionary } from './worksheet-data-dictionary';\n\n/** @hidden */\nexport class WorksheetData {\n    private _columnCount: number;\n    private _rowCount: number;\n    private _dataDictionary: WorksheetDataDictionary;\n    private _keys: string[];\n    private _isSpecialData: boolean;\n\n    constructor(private _data: any[], public options: IgxExcelExporterOptions, public indexOfLastPinnedColumn,\n                public sort: any, public isTreeGridData = false) {\n        this.initializeData();\n    }\n\n    public get data() {\n        return this._data;\n    }\n\n    public get columnCount(): number {\n        return this._columnCount;\n    }\n\n    public get rowCount(): number {\n        return this._rowCount;\n    }\n\n    public get isEmpty() {\n        return !this.rowCount || !this._columnCount;\n    }\n\n    public get keys(): string[] {\n        return this._keys;\n    }\n\n    public get isSpecialData(): boolean {\n        return this._isSpecialData;\n    }\n\n    public get dataDictionary() {\n        return this._dataDictionary;\n    }\n\n    private initializeData() {\n        if (!this._data || this._data.length === 0) {\n            return;\n        }\n\n        const actualData = this._data.map((item) => item.rowData);\n\n        this._keys = ExportUtilities.getKeysFromData(actualData);\n        if (this._keys.length === 0) {\n            return;\n        }\n\n        this._isSpecialData = ExportUtilities.isSpecialData(actualData);\n\n        this._columnCount = this._keys.length;\n        this._rowCount = this._data.length + 1;\n\n        this._dataDictionary = new WorksheetDataDictionary(this._columnCount, this.options.columnWidth);\n    }\n}\n","import * as JSZip from 'jszip';\n\nimport { EventEmitter, Injectable, Output } from '@angular/core';\nimport { ExcelElementsFactory } from './excel-elements-factory';\nimport { ExcelFolderTypes } from './excel-enums';\nimport { IgxExcelExporterOptions } from './excel-exporter-options';\nimport { IExcelFolder } from './excel-interfaces';\nimport { IgxBaseExporter } from '../exporter-common/base-export-service';\nimport { ExportUtilities } from '../exporter-common/export-utilities';\nimport { WorksheetData } from './worksheet-data';\nimport { IBaseEventArgs } from '../../core/utils';\n\nexport interface IExcelExportEndedEventArgs extends IBaseEventArgs {\n    xlsx: JSZip;\n}\n\n/**\n * **Ignite UI for Angular Excel Exporter Service** -\n * [Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/exporter_excel.html)\n *\n * The Ignite UI for Angular Excel Exporter service can export data in Microsoft® Excel® format from both raw data\n * (array) or from an `IgxGrid`.\n *\n * Example:\n * ```typescript\n * public localData = [\n *   { Name: \"Eric Ridley\", Age: \"26\" },\n *   { Name: \"Alanis Brook\", Age: \"22\" },\n *   { Name: \"Jonathan Morris\", Age: \"23\" }\n * ];\n *\n * constructor(private excelExportService: IgxExcelExporterService) {\n * }\n *\n * this.excelExportService.exportData(this.localData, new IgxExcelExporterOptions(\"FileName\"));\n * ```\n */\n@Injectable()\nexport class IgxExcelExporterService extends IgxBaseExporter {\n\n    private static ZIP_OPTIONS = { compression: 'DEFLATE', type: 'base64' } as JSZip.JSZipGeneratorOptions<'base64'>;\n    private _xlsx: JSZip;\n\n    /**\n     * This event is emitted when the export process finishes.\n     * ```typescript\n     * this.exporterService.onExportEnded.subscribe((args: IExcelExportEndedEventArgs) => {\n     * // put event handler code here\n     * });\n     * ```\n     * @memberof IgxExcelExporterService\n     */\n    @Output()\n    public onExportEnded = new EventEmitter<IExcelExportEndedEventArgs>();\n\n    private static populateFolder(folder: IExcelFolder, zip: JSZip, worksheetData: WorksheetData): any {\n        for (const childFolder of folder.childFolders(worksheetData)) {\n            const folderIntance = ExcelElementsFactory.getExcelFolder(childFolder);\n            const zipFolder = zip.folder(folderIntance.folderName);\n            IgxExcelExporterService.populateFolder(folderIntance, zipFolder, worksheetData);\n        }\n\n        for (const childFile of folder.childFiles(worksheetData)) {\n            const fileInstance = ExcelElementsFactory.getExcelFile(childFile);\n            fileInstance.writeElement(zip, worksheetData);\n        }\n    }\n\n    protected exportDataImplementation(data: any[], options: IgxExcelExporterOptions): void {\n        if (this._isTreeGrid) {\n            let maxLevel = 0;\n            data.forEach((r) => {\n                maxLevel = Math.max(maxLevel, r.originalRowData.level);\n            });\n            if (maxLevel > 7) {\n                throw Error('Can create an outline of up to eight levels!');\n            }\n        }\n\n        const worksheetData = new WorksheetData(data, options, this._indexOfLastPinnedColumn, this._sort, this._isTreeGrid);\n        this._xlsx = new JSZip();\n\n        const rootFolder = ExcelElementsFactory.getExcelFolder(ExcelFolderTypes.RootExcelFolder);\n        IgxExcelExporterService.populateFolder(rootFolder, this._xlsx, worksheetData);\n\n        this._xlsx.generateAsync(IgxExcelExporterService.ZIP_OPTIONS).then((result) => {\n            this.saveFile(result, options.fileName);\n\n            this.onExportEnded.emit({ xlsx: this._xlsx });\n        });\n    }\n\n    private saveFile(data: string, fileName: string): void {\n        const blob = new Blob([ExportUtilities.stringToArrayBuffer(atob(data))], {\n            type: ''\n        });\n\n        ExportUtilities.saveBlobToFile(blob, fileName);\n    }\n}\n","import { IgxExporterOptionsBase } from '../exporter-common/exporter-options-base';\n\n/**\n * Objects of this class are used to configure the Excel exporting process.\n */\nexport class IgxExcelExporterOptions extends IgxExporterOptionsBase {\n    private _columnWidth: number;\n    private _rowHeight: number;\n\n    /**\n     * Specifies if column pinning should be ignored. If ignoreColumnsOrder is set to true,\n     * this option will always be considered as set to true.\n     * ```typescript\n     * let ignorePinning = this.exportOptions.ignorePinning;\n     * this.exportOptions.ignorePinning = true;\n     * ```\n     * @memberof IgxExcelExporterOptions\n     */\n    public ignorePinning = false;\n\n    /**\n     * Specifies whether the exported data should be formatted as Excel table. (True by default)\n     * ```typescript\n     * let exportAsTable = this.exportOptions.exportAsTable;\n     * this.exportOptions.exportAsTable = false;\n     * ```\n     * @memberof IgxExcelExporterOptions\n     */\n    public exportAsTable = true;\n\n    constructor(fileName: string) {\n        super(fileName, '.xlsx');\n    }\n\n    /**\n     * Gets the width of the columns in the exported excel file.\n     * ```typescript\n     * let width = this.exportOptions.columnWidth;\n     * ```\n     * @memberof IgxExcelExporterOptions\n     */\n    public get columnWidth(): number {\n        return this._columnWidth;\n    }\n\n    /**\n     * Sets the width of the columns in the exported excel file. If left unspecified or 0,\n     * the width of the largest string in the column will be used.\n     * ```typescript\n     * this.exportOptions.columnWidth = 55;\n     * ```\n     * @memberof IgxExcelExporterOptions\n     */\n    public set columnWidth(value: number) {\n        if (value < 0) {\n            throw Error('Invalid value for column width!');\n        }\n\n        this._columnWidth = value;\n    }\n\n    /**\n     * Gets the height of the rows in the exported excel file.\n     * ```typescript\n     * let height = this.exportOptions.rowHeight;\n     * ```\n     * @memberof IgxExcelExporterOptions\n     */\n    public get rowHeight(): number {\n        return this._rowHeight;\n    }\n\n    /**\n     * Sets the height of the rows in the exported excel file. If left unspecified or 0,\n     * the default height of the excel rows will be used.\n     * ```typescript\n     * this.exportOptions.rowHeight = 25;\n     * ```\n     * @memberof IgxExcelExporterOptions\n     */\n    public set rowHeight(value: number) {\n        if (value < 0) {\n            throw Error('Invalid value for row height!');\n        }\n\n        this._rowHeight = value;\n    }\n}\n","import { IPositionStrategy } from './position/IPositionStrategy';\n\nimport { IScrollStrategy } from './scroll';\nimport { AnimationReferenceMetadata, AnimationPlayer } from '@angular/animations';\nimport { ComponentRef, ElementRef, NgZone } from '@angular/core';\nimport { IgxOverlayOutletDirective } from '../../directives/toggle/toggle.directive';\nimport { CancelableEventArgs, CancelableBrowserEventArgs, cloneValue, IBaseEventArgs } from '../../core/utils';\n\nexport enum HorizontalAlignment {\n    Left = -1,\n    Center = -0.5,\n    Right = 0\n}\n\nexport enum VerticalAlignment {\n    Top = -1,\n    Middle = -0.5,\n    Bottom = 0\n}\n\nexport class Point {\n    constructor(public x: number, public y: number) { }\n}\n\n/** @hidden */\nexport interface OutOfViewPort {\n    /** Out of view port at Top or Left */\n    back: number;\n    /** Out of view port at Bottom or Right */\n    forward: number;\n}\n\nexport interface PositionSettings {\n    /** Attaching target for the component to show */\n    target?: Point | HTMLElement;\n    /** Direction in which the component should show */\n    horizontalDirection?: HorizontalAlignment;\n    /** Direction in which the component should show */\n    verticalDirection?: VerticalAlignment;\n    /** Target's starting point */\n    horizontalStartPoint?: HorizontalAlignment;\n    /** Target's starting point */\n    verticalStartPoint?: VerticalAlignment;\n    /** Animation applied while overlay opens */\n    openAnimation?: AnimationReferenceMetadata;\n    /** Animation applied while overlay closes */\n    closeAnimation?: AnimationReferenceMetadata;\n    /** The size up to which element may shrink when shown in elastic position strategy */\n    minSize?: Size;\n}\n\nexport interface OverlaySettings {\n    /** Position strategy to use with this settings */\n    positionStrategy?: IPositionStrategy;\n    /** Scroll strategy to use with this settings */\n    scrollStrategy?: IScrollStrategy;\n    /** Set if the overlay should be in modal mode */\n    modal?: boolean;\n    /** Set if the overlay should closed on outside click */\n    closeOnOutsideClick?: boolean;\n    /** Set the outlet container to attach the overlay to */\n    outlet?: IgxOverlayOutletDirective | ElementRef;\n    /**\n     * @hidden @internal\n     * Exclude the position strategy target for outside clicks\n     */\n    excludePositionTarget?: boolean;\n}\n\nexport interface OverlayEventArgs extends IBaseEventArgs {\n    /** Id of the overlay generated with `attach()` method */\n    id: string;\n    /** Available when `Type<T>` is provided to the `attach()` method and allows access to the created Component instance */\n    componentRef?: ComponentRef<{}>;\n}\n\nexport interface OverlayCancelableEventArgs extends OverlayEventArgs, CancelableEventArgs {\n}\n\nexport interface OverlayClosingEventArgs extends OverlayEventArgs, CancelableBrowserEventArgs {\n}\n\nexport interface OverlayAnimationEventArgs extends IBaseEventArgs {\n    /** Id of the overlay generated with `attach()` method */\n    id: string;\n    /** Animation player that will play the animation */\n    animationPlayer: AnimationPlayer;\n    /** Type of animation to be played. It should be either 'open' or 'close' */\n    animationType: 'open' | 'close';\n}\n\nexport interface Size {\n    /** Gets or sets the horizontal component of Size */\n    width: number;\n\n    /** Gets or sets the vertical component of Size */\n    height: number;\n}\n\n/** @hidden */\nexport interface OverlayInfo {\n    id?: string;\n    elementRef?: ElementRef;\n    componentRef?: ComponentRef<{}>;\n    settings?: OverlaySettings;\n    initialSize?: Size;\n    hook?: HTMLElement;\n    openAnimationPlayer?: AnimationPlayer;\n    closeAnimationPlayer?: AnimationPlayer;\n    openAnimationInnerPlayer?: any;\n    closeAnimationInnerPlayer?: any;\n    ngZone: NgZone;\n    transformX?: number;\n    transformY?: number;\n}\n\n/** @hidden */\nexport interface ConnectedFit {\n    contentElementRect?: ClientRect;\n    targetRect?: ClientRect;\n    viewPortRect?: ClientRect;\n    fitHorizontal?: OutOfViewPort;\n    fitVertical?: OutOfViewPort;\n    left?: number;\n    right?: number;\n    top?: number;\n    bottom?: number;\n    horizontalOffset?: number;\n    verticalOffset?: number;\n}\n\n/** @hidden */\nexport class Util {\n    /**\n     * @hidden\n     * Calculates the rectangle of target for provided overlay settings. Defaults to 0,0,0,0,0,0 rectangle\n     * if no target is provided\n     * @param settings Overlay settings for which to calculate target rectangle\n     */\n    static getTargetRect(settings: PositionSettings): ClientRect {\n        let targetRect: ClientRect = {\n            bottom: 0,\n            height: 0,\n            left: 0,\n            right: 0,\n            top: 0,\n            width: 0\n        };\n\n        if (settings.target instanceof HTMLElement) {\n            targetRect = (settings.target as HTMLElement).getBoundingClientRect();\n        } else if (settings.target instanceof Point) {\n            const targetPoint = settings.target as Point;\n            targetRect = {\n                bottom: targetPoint.y,\n                height: 0,\n                left: targetPoint.x,\n                right: targetPoint.x,\n                top: targetPoint.y,\n                width: 0\n            };\n        }\n\n        return targetRect;\n    }\n\n    /** @hidden @internal */\n    static getViewportRect(document: Document): ClientRect {\n        const width = document.documentElement.clientWidth;\n        const height = document.documentElement.clientHeight;\n        const scrollPosition = Util.getViewportScrollPosition(document);\n\n        return {\n            top: scrollPosition.y,\n            left: scrollPosition.x,\n            right: scrollPosition.x + width,\n            bottom: scrollPosition.y + height,\n            width: width,\n            height: height,\n        };\n    }\n\n    /** @hidden @internal */\n    static getViewportScrollPosition(document: Document): Point {\n        const documentElement = document.documentElement;\n        const documentRect = documentElement.getBoundingClientRect();\n\n        const horizontalScrollPosition =\n            -documentRect.left || document.body.scrollLeft || window.scrollX || documentElement.scrollLeft || 0;\n        const verticalScrollPosition = -documentRect.top || document.body.scrollTop || window.scrollY || documentElement.scrollTop || 0;\n\n        return new Point(horizontalScrollPosition, verticalScrollPosition);\n    }\n\n    /** @hidden @internal */\n    static cloneInstance(object) {\n        const clonedObj = Object.assign(Object.create(Object.getPrototypeOf(object)), object);\n        clonedObj.settings = cloneValue(clonedObj.settings);\n        return clonedObj;\n    }\n}\n","import { IPositionStrategy } from './IPositionStrategy';\nimport { PositionSettings, HorizontalAlignment, VerticalAlignment, Size, Util, OverlaySettings } from './../utilities';\nimport { fadeIn, fadeOut } from '../../../animations/main';\n\n/**\n * Positions the element based on the directions passed in trough PositionSettings.\n * These are Top/Middle/Bottom for verticalDirection and Left/Center/Right for horizontalDirection\n */\nexport class GlobalPositionStrategy implements IPositionStrategy {\n    protected _defaultSettings: PositionSettings = {\n        horizontalDirection: HorizontalAlignment.Center,\n        verticalDirection: VerticalAlignment.Middle,\n        horizontalStartPoint: HorizontalAlignment.Center,\n        verticalStartPoint: VerticalAlignment.Middle,\n        openAnimation: fadeIn,\n        closeAnimation: fadeOut,\n        minSize: { width: 0, height: 0 }\n    };\n\n    /** @inheritdoc */\n    public settings: PositionSettings;\n\n    constructor(settings?: PositionSettings) {\n        this.settings = Object.assign({}, this._defaultSettings, settings);\n    }\n\n    /** @inheritdoc */\n    position(contentElement: HTMLElement, size?: Size, document?: Document, initialCall?: boolean): void {\n        contentElement.classList.add('igx-overlay__content--relative');\n        contentElement.parentElement.classList.add('igx-overlay__wrapper--flex');\n        this.setPosition(contentElement, this.settings);\n    }\n\n    protected setPosition(contentElement: HTMLElement, settings: PositionSettings) {\n        switch (this.settings.horizontalDirection) {\n            case HorizontalAlignment.Left:\n                contentElement.parentElement.style.justifyContent = 'flex-start';\n                break;\n            case HorizontalAlignment.Center:\n                contentElement.parentElement.style.justifyContent = 'center';\n                break;\n            case HorizontalAlignment.Right:\n                contentElement.parentElement.style.justifyContent = 'flex-end';\n                break;\n            default:\n                break;\n        }\n\n        switch (this.settings.verticalDirection) {\n            case VerticalAlignment.Top:\n                contentElement.parentElement.style.alignItems = 'flex-start';\n                break;\n            case VerticalAlignment.Middle:\n                contentElement.parentElement.style.alignItems = 'center';\n                break;\n            case VerticalAlignment.Bottom:\n                contentElement.parentElement.style.alignItems = 'flex-end';\n                break;\n            default:\n                break;\n        }\n    }\n\n    /** @inheritdoc */\n    clone(): IPositionStrategy {\n        return Util.cloneInstance(this);\n    }\n}\n\n","import { IScrollStrategy } from './IScrollStrategy';\nimport { IgxOverlayService } from '../overlay';\n\nexport abstract class ScrollStrategy implements IScrollStrategy {\n    constructor(scrollContainer?: HTMLElement) { }\n    /** @inheritdoc */\n    abstract initialize(document: Document, overlayService: IgxOverlayService, id: string);\n\n    /** @inheritdoc */\n    abstract attach(): void;\n\n    /** @inheritdoc */\n    abstract detach(): void;\n}\n","import { IgxOverlayService } from '../overlay';\nimport { ScrollStrategy } from './scroll-strategy';\n\n/**\n * Empty scroll strategy. Does nothing.\n */\nexport class NoOpScrollStrategy extends ScrollStrategy {\n    constructor(scrollContainer?: HTMLElement) {\n        super(scrollContainer);\n    }\n    /** @inheritdoc */\n    public initialize(document: Document, overlayService: IgxOverlayService, id: string) { }\n\n    /** @inheritdoc */\n    attach(): void { }\n\n    /** @inheritdoc */\n    detach(): void { }\n}\n","import { isDevMode } from '@angular/core';\n\n/**\n * @hidden\n */\nexport function DeprecateMethod(message: string): MethodDecorator {\n    let isMessageShown = false;\n\n    return function (target: any, key: string, descriptor: PropertyDescriptor) {\n        if (descriptor && descriptor.value) {\n            const originalMethod = descriptor.value;\n\n            descriptor.value = function () {\n                const targetName = typeof target === 'function' ? target.name : target.constructor.name;\n                isMessageShown = showMessage(`${targetName}.${key}: ${message}`, isMessageShown);\n\n                return originalMethod.call(this, arguments);\n            };\n\n            return descriptor;\n        }\n    };\n}\n\n/**\n * @hidden\n */\nexport function DeprecateProperty(message: string): PropertyDecorator {\n    return function(target: any, key: string) {\n        let isMessageShown = false;\n        const messageToDisplay = `${target.constructor.name}.${key}: ${message}`;\n\n        // if the target already has the property defined\n        const originalDescriptor = Object.getOwnPropertyDescriptor(target, key);\n        if (originalDescriptor) {\n            let getter, setter;\n            getter = originalDescriptor.get;\n            setter = originalDescriptor.set;\n\n            if (getter) {\n                originalDescriptor.get = function() {\n                    isMessageShown = showMessage(messageToDisplay, isMessageShown);\n                    return getter.call(this);\n                };\n            }\n\n            if (setter) {\n                originalDescriptor.set = function (value) {\n                    isMessageShown = showMessage(messageToDisplay, isMessageShown);\n                    setter.call(this, value);\n                };\n            }\n\n            return originalDescriptor;\n        }\n\n        // the target doesn't contain a descriptor for that property, so create one\n        // use backing field to set/get the value of the property to ensure there won't be infinite recursive calls\n        const newKey = generateUniqueKey(target, key);\n        Object.defineProperty(target, key, {\n            configurable: true,\n            enumerable: true,\n            set: function(value) {\n                isMessageShown = showMessage(messageToDisplay, isMessageShown);\n                this[newKey] = value;\n            },\n            get: function() {\n                isMessageShown = showMessage(messageToDisplay, isMessageShown);\n                return this[newKey];\n            }\n        });\n    };\n}\n\n/**\n * @hidden\n */\nfunction generateUniqueKey(target: any, key: string): string {\n    let newKey = '_' + key;\n    while (target.hasOwnProperty(newKey)) {\n        newKey = '_' + newKey;\n    }\n\n    return newKey;\n}\n\n/**\n * @hidden\n */\nexport function showMessage(message: string, isMessageShown: boolean): boolean {\n    if (!isMessageShown && isDevMode()) {\n        console.warn(message);\n    }\n\n    return true;\n}\n","import { DOCUMENT } from '@angular/common';\nimport { GlobalPositionStrategy } from './position/global-position-strategy';\nimport { NoOpScrollStrategy } from './scroll/NoOpScrollStrategy';\nimport {\n    OverlaySettings,\n    OverlayEventArgs,\n    OverlayInfo,\n    OverlayAnimationEventArgs,\n    OverlayCancelableEventArgs,\n    OverlayClosingEventArgs\n} from './utilities';\n\nimport {\n    ApplicationRef,\n    ComponentFactory,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Injectable,\n    Injector,\n    Type,\n    OnDestroy,\n    NgModuleRef,\n    NgZone\n} from '@angular/core';\nimport { AnimationBuilder, AnimationReferenceMetadata, AnimationMetadataType, AnimationAnimateRefMetadata } from '@angular/animations';\nimport { fromEvent, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { IAnimationParams } from '../../animations/main';\nimport { showMessage } from '../../core/deprecateDecorators';\n\nlet warningShown = false;\n\n/**\n * [Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/overlay_main.html)\n * The overlay service allows users to show components on overlay div above all other elements in the page.\n */\n@Injectable({ providedIn: 'root' })\nexport class IgxOverlayService implements OnDestroy {\n    private _componentId = 0;\n    private _overlayInfos: OverlayInfo[] = [];\n    private _overlayElement: HTMLElement;\n    private _document: Document;\n    private destroy$ = new Subject<boolean>();\n\n    private _defaultSettings: OverlaySettings = {\n        positionStrategy: new GlobalPositionStrategy(),\n        scrollStrategy: new NoOpScrollStrategy(),\n        modal: true,\n        closeOnOutsideClick: true\n    };\n\n    /**\n     * Emitted before the component is opened.\n     * ```typescript\n     * onOpening(event: OverlayCancelableEventArgs){\n     *     const onOpening = event;\n     * }\n     * ```\n     */\n    public onOpening = new EventEmitter<OverlayCancelableEventArgs>();\n\n    /**\n     * Emitted after the component is appended to the overlay, and before animations are started.\n     * ```typescript\n     * onAppended(event: OverlayEventArgs){\n     *     const onAppended = event;\n     * }\n     * ```\n     */\n    public onAppended = new EventEmitter<OverlayEventArgs>();\n\n    /**\n     * Emitted after the component is opened and all animations are finished.\n     * ```typescript\n     * onOpened(event: OverlayEventArgs){\n     *     const onOpened = event;\n     * }\n     * ```\n     */\n    public onOpened = new EventEmitter<OverlayEventArgs>();\n\n    /**\n     * Emitted before the component is closed.\n     * ```typescript\n     * onClosing(event: OverlayCancelableEventArgs){\n     *     const onClosing = event;\n     * }\n     * ```\n     */\n    public onClosing = new EventEmitter<OverlayClosingEventArgs>();\n\n    /**\n     * Emitted after the component is closed and all animations are finished.\n     * ```typescript\n     * onClosed(event: OverlayEventArgs){\n     *     const onClosed = event;\n     * }\n     * ```\n     */\n    public onClosed = new EventEmitter<OverlayEventArgs>();\n\n    /**\n     * Emitted before animation is started\n     * ```typescript\n     * onAnimation(event: OverlayAnimationEventArgs){\n     *     const onAnimation = event;\n     * }\n     * ```\n     */\n    public onAnimation = new EventEmitter<OverlayAnimationEventArgs>();\n\n    constructor(\n        private _factoryResolver: ComponentFactoryResolver,\n        private _appRef: ApplicationRef,\n        private _injector: Injector,\n        private builder: AnimationBuilder,\n        @Inject(DOCUMENT) private document: any,\n        private _zone: NgZone) {\n        this._document = <Document>this.document;\n    }\n\n    /**\n     * Generates Id. Provide this Id when call `show(id, settings?)` method\n     * @param component ElementRef to show in overlay\n     * @param settings Display settings for the overlay, such as positioning and scroll/close behavior.\n     * @returns Id of the created overlay. Valid until `onClosed` is emitted.\n     */\n    attach(element: ElementRef, settings?: OverlaySettings): string;\n    /**\n     * Generates Id. Provide this Id when call `show(id, settings?)` method\n     * @param component Component Type to show in overlay\n     * @param settings Display settings for the overlay, such as positioning and scroll/close behavior.\n     * @param moduleRef Optional reference to an object containing Injector and ComponentFactoryResolver\n     * that can resolve the component's factory\n     * @returns Id of the created overlay. Valid until `onClosed` is emitted.\n     */\n    attach(component: Type<any>, settings?: OverlaySettings,\n        moduleRef?: Pick<NgModuleRef<any>, 'injector' | 'componentFactoryResolver'>): string;\n    attach(component: ElementRef | Type<any>, settings?: OverlaySettings,\n        moduleRef?: Pick<NgModuleRef<any>, 'injector' | 'componentFactoryResolver'>): string {\n        let info: OverlayInfo;\n        info = this.getOverlayInfo(component, moduleRef);\n\n        //  if there is no info most probably wrong type component was provided and we just go out\n        if (!info) {\n            return null;\n        }\n\n        info.id = (this._componentId++).toString();\n        settings = Object.assign({}, this._defaultSettings, settings);\n        info.settings = settings;\n        this._overlayInfos.push(info);\n        return info.id;\n    }\n\n    /**\n     * Shows the overlay for provided id.\n     * @param id Id to show overlay for\n     * @param settings Display settings for the overlay, such as positioning and scroll/close behavior.\n     */\n    show(id: string, settings?: OverlaySettings): string;\n    /**\n     * Shows the provided component.\n     * @param component ElementRef or Component Type to show in overlay\n     * @param settings Display settings for the overlay, such as positioning and scroll/close behavior.\n     * @returns Id of the created overlay. Valid until `onClosed` is emitted.\n     * ```typescript\n     * this.overlay.show(element, settings);\n     * ```\n     * @deprecated Use `attach(component)` to obtain an Id. Then `show(id, settings?)` with provided Id.\n     */\n    // tslint:disable-next-line:unified-signatures\n    show(component: ElementRef | Type<any>, settings?: OverlaySettings): string;\n    show(compOrId: string | ElementRef | Type<any>, settings?: OverlaySettings): string {\n        let info: OverlayInfo;\n        let id: string;\n        if (typeof compOrId === 'string') {\n            id = compOrId;\n            info = this.getOverlayById(compOrId);\n            if (!info) {\n                console.warn('igxOverlay.show was called with wrong id: ' + compOrId);\n                return null;\n            }\n        } else {\n            warningShown = showMessage(\n                '`show(component, settings?)` overload is deprecated. Use `attach(component)` to obtain an Id.' +\n                'Then `show(id, settings?)` with provided Id.',\n                warningShown);\n            id = (this._componentId++).toString();\n            info = this.getOverlayInfo(compOrId);\n\n            //  if there is no info most probably wrong type component was provided and we just go out\n            if (!info) {\n                return;\n            }\n\n            info.id = id;\n        }\n\n        settings = Object.assign({}, this._defaultSettings, info.settings, settings);\n        info.settings = settings;\n\n        this._show(info);\n        return id;\n    }\n\n    /**\n     * Hides the component with the ID provided as a parameter.\n     * ```typescript\n     * this.overlay.hide(id);\n     * ```\n     */\n    hide(id: string) {\n        this._hide(id);\n    }\n\n    /**\n     * Hides all the components and the overlay.\n     * ```typescript\n     * this.overlay.hideAll();\n     * ```\n     */\n    hideAll() {\n        // since overlays are removed on animation done, que all hides\n        for (let i = this._overlayInfos.length; i--;) {\n            this.hide(this._overlayInfos[i].id);\n        }\n    }\n\n    /**\n     * Repositions the component with ID provided as a parameter.\n     * ```typescript\n     * this.overlay.reposition(id);\n     * ```\n     */\n    reposition(id: string) {\n        const overlayInfo = this.getOverlayById(id);\n        if (!overlayInfo || !overlayInfo.settings) {\n            console.error('Wrong id provided in overlay.reposition method. Id: ' + id);\n            return;\n        }\n\n        const contentElement = overlayInfo.elementRef.nativeElement.parentElement;\n        const contentElementRect = contentElement.getBoundingClientRect();\n        overlayInfo.settings.positionStrategy.position(\n            contentElement,\n            {\n                width: contentElementRect.width,\n                height: contentElementRect.height\n            },\n            this._document,\n            false);\n    }\n\n    /**\n     * Offsets the content along the corresponding axis by the provided amount\n     * ```typescript\n     * this.overlay.setOffset(id, deltaX, deltaY);\n     * ```\n     */\n    setOffset(id: string, deltaX: number, deltaY: number) {\n        const info: OverlayInfo = this.getOverlayById(id);\n\n        if (!info) {\n           return;\n        }\n\n        info.transformX += deltaX;\n        info.transformY += deltaY;\n\n        const transformX = info.transformX;\n        const transformY = info.transformY;\n\n        const translate = `translate(${transformX}px, ${transformY}px)`;\n        info.elementRef.nativeElement.parentElement.style.transform = translate;\n    }\n\n    private _show(info: OverlayInfo) {\n        const eventArgs: OverlayCancelableEventArgs = { id: info.id, componentRef: info.componentRef, cancel: false };\n        this.onOpening.emit(eventArgs);\n        if (eventArgs.cancel) {\n            if (info.componentRef) {\n                this._appRef.detachView(info.componentRef.hostView);\n                info.componentRef.destroy();\n            }\n\n            return;\n        }\n\n        //  if there is no close animation player, or there is one but it is not started yet we are in clear\n        //  opening. Otherwise, if there is close animation player playing animation now we should not setup\n        //  overlay this is already done\n        if (!info.closeAnimationPlayer || (info.closeAnimationPlayer && !info.closeAnimationPlayer.hasStarted())) {\n            const elementRect = info.elementRef.nativeElement.getBoundingClientRect();\n            info.initialSize = { width: elementRect.width, height: elementRect.height };\n            info.hook = this.placeElementHook(info.elementRef.nativeElement);\n\n            this.moveElementToOverlay(info);\n            if (info.componentRef) {\n                info.componentRef.changeDetectorRef.detectChanges();\n            }\n\n            this.onAppended.emit({ id: info.id, componentRef: info.componentRef });\n\n            this.updateSize(info);\n            if (this._overlayInfos.indexOf(info) === -1) {\n                this._overlayInfos.push(info);\n            }\n\n            info.settings.positionStrategy.position(\n                info.elementRef.nativeElement.parentElement,\n                { width: info.initialSize.width, height: info.initialSize.height },\n                document,\n                true);\n            info.settings.scrollStrategy.initialize(this._document, this, info.id);\n            info.settings.scrollStrategy.attach();\n        }\n\n        this.addOutsideClickListener(info);\n        this.addResizeHandler(info.id);\n\n        if (info.settings.modal) {\n            this.setupModalWrapper(info);\n        }\n\n        if (info.settings.positionStrategy.settings.openAnimation) {\n            this.playOpenAnimation(info);\n        } else {\n            //  to eliminate flickering show the element just before onOpened fire\n            info.elementRef.nativeElement.parentElement.style.visibility = '';\n            this.onOpened.emit({ id: info.id, componentRef: info.componentRef });\n        }\n    }\n\n    private _hide(id: string, event?: Event) {\n        const info: OverlayInfo = this.getOverlayById(id);\n\n        if (!info) {\n            console.warn('igxOverlay.hide was called with wrong id: ' + id);\n            return;\n        }\n\n        const eventArgs = { id, componentRef: info.componentRef, cancel: false, event };\n        this.onClosing.emit(eventArgs);\n        if (eventArgs.cancel) {\n            return;\n        }\n\n        //  TODO: synchronize where these are added/attached and where removed/detached\n        info.settings.scrollStrategy.detach();\n        this.removeOutsideClickListener(info);\n        this.removeResizeHandler(info.id);\n\n        const child: HTMLElement = info.elementRef.nativeElement;\n        if (info.settings.modal) {\n            const parent = child.parentNode.parentNode as HTMLElement;\n            this.applyAnimationParams(parent, info.settings.positionStrategy.settings.closeAnimation);\n            parent.classList.remove('igx-overlay__wrapper--modal');\n            parent.classList.add('igx-overlay__wrapper');\n        }\n\n        if (info.settings.positionStrategy.settings.closeAnimation) {\n            this.playCloseAnimation(info);\n        } else {\n            this.onCloseDone(info);\n        }\n    }\n\n    private getOverlayInfo(component: any, moduleRef?: Pick<NgModuleRef<any>, 'injector' | 'componentFactoryResolver'>): OverlayInfo {\n        const info: OverlayInfo = { ngZone: this._zone, transformX: 0, transformY: 0 };\n        if (component instanceof ElementRef) {\n            info.elementRef = <ElementRef>component;\n        } else {\n            let dynamicFactory: ComponentFactory<{}>;\n            const factoryResolver = moduleRef ? moduleRef.componentFactoryResolver : this._factoryResolver;\n            try {\n                dynamicFactory = factoryResolver.resolveComponentFactory(component);\n            } catch (error) {\n                console.error(error);\n                return null;\n            }\n\n            const injector = moduleRef ? moduleRef.injector : this._injector;\n            const dynamicComponent: ComponentRef<{}> = dynamicFactory.create(injector);\n            this._appRef.attachView(dynamicComponent.hostView);\n\n            // If the element is newly created from a Component, it is wrapped in 'ng-component' tag - we do not want that.\n            const element = dynamicComponent.location.nativeElement;\n            info.elementRef = <ElementRef>{ nativeElement: element };\n            info.componentRef = dynamicComponent;\n        }\n\n        return info;\n    }\n\n    private placeElementHook(element: HTMLElement): HTMLElement {\n        if (!element.parentElement) {\n            return null;\n        }\n\n        const hook = this._document.createElement('div');\n        element.parentElement.insertBefore(hook, element);\n        return hook;\n    }\n\n    private moveElementToOverlay(info: OverlayInfo) {\n        const wrapperElement = this.getWrapperElement();\n        const contentElement = this.getContentElement(wrapperElement, info.settings.modal);\n        this.getOverlayElement(info).appendChild(wrapperElement);\n        contentElement.appendChild(info.elementRef.nativeElement);\n    }\n\n    private getWrapperElement(): HTMLElement {\n        const wrapper: HTMLElement = this._document.createElement('div');\n        wrapper.classList.add('igx-overlay__wrapper');\n        return wrapper;\n    }\n\n    private getContentElement(wrapperElement: HTMLElement, modal: boolean): HTMLElement {\n        const content: HTMLElement = this._document.createElement('div');\n        if (modal) {\n            content.classList.add('igx-overlay__content--modal');\n            content.addEventListener('click', (ev: Event) => {\n                ev.stopPropagation();\n            });\n        } else {\n            content.classList.add('igx-overlay__content');\n        }\n\n        content.addEventListener('scroll', (ev: Event) => {\n            ev.stopPropagation();\n        });\n\n        //  hide element to eliminate flickering. Show the element exactly before animation starts\n        content.style.visibility = 'hidden';\n\n        wrapperElement.appendChild(content);\n        return content;\n    }\n\n    private getOverlayElement(info: OverlayInfo): HTMLElement {\n        if (info.settings.outlet) {\n            return info.settings.outlet.nativeElement;\n        }\n        if (!this._overlayElement) {\n            this._overlayElement = this._document.createElement('div');\n            this._overlayElement.classList.add('igx-overlay');\n            this._document.body.appendChild(this._overlayElement);\n        }\n\n        return this._overlayElement;\n    }\n\n    private updateSize(info: OverlayInfo) {\n        if (info.componentRef) {\n            //  if we are positioning component this is first time it gets visible\n            //  and we can finally get its size\n            info.initialSize = info.elementRef.nativeElement.getBoundingClientRect();\n        }\n\n        // set content div width only if element to show has width\n        if (info.initialSize.width !== 0) {\n            info.elementRef.nativeElement.parentElement.style.width = info.initialSize.width + 'px';\n        }\n    }\n\n    private setupModalWrapper(info: OverlayInfo) {\n        const wrapperElement = info.elementRef.nativeElement.parentElement.parentElement;\n        fromEvent(wrapperElement, 'keydown').pipe(\n            filter((ev: KeyboardEvent) => ev.key === 'Escape' || ev.key === 'Esc'),\n            takeUntil(this.destroy$)\n        ).subscribe(() => this.hide(info.id));\n        wrapperElement.classList.remove('igx-overlay__wrapper');\n        this.applyAnimationParams(wrapperElement, info.settings.positionStrategy.settings.openAnimation);\n        wrapperElement.classList.add('igx-overlay__wrapper--modal');\n    }\n\n    private onCloseDone(info: OverlayInfo) {\n        this.cleanUp(info);\n        this.onClosed.emit({ id: info.id, componentRef: info.componentRef });\n    }\n\n    private cleanUp(info: OverlayInfo) {\n        const child: HTMLElement = info.elementRef.nativeElement;\n        const outlet = this.getOverlayElement(info);\n        if (!outlet.contains(child)) {\n            console.warn('Component with id:' + info.id + ' is already removed!');\n            return;\n        }\n\n        outlet.removeChild(child.parentNode.parentNode);\n        if (info.componentRef) {\n            this._appRef.detachView(info.componentRef.hostView);\n            info.componentRef.destroy();\n        }\n\n        if (info.hook) {\n            info.hook.parentElement.insertBefore(info.elementRef.nativeElement, info.hook);\n            info.hook.parentElement.removeChild(info.hook);\n        }\n\n        const index = this._overlayInfos.indexOf(info);\n        this._overlayInfos.splice(index, 1);\n\n        // this._overlayElement.parentElement check just for tests that manually delete the element\n        if (this._overlayInfos.length === 0 && this._overlayElement && this._overlayElement.parentElement) {\n            this._overlayElement.parentElement.removeChild(this._overlayElement);\n            this._overlayElement = null;\n        }\n    }\n\n    private playOpenAnimation(info: OverlayInfo) {\n        if (!info.openAnimationPlayer) {\n            const animationBuilder = this.builder.build(info.settings.positionStrategy.settings.openAnimation);\n            info.openAnimationPlayer = animationBuilder.create(info.elementRef.nativeElement);\n\n            //  AnimationPlayer.getPosition returns always 0. To workaround this we are getting inner WebAnimationPlayer\n            //  and then getting the positions from it.\n            //  This is logged in Angular here - https://github.com/angular/angular/issues/18891\n            //  As soon as this is resolved we can remove this hack\n            const innerRenderer = (<any>info.openAnimationPlayer)._renderer;\n            info.openAnimationInnerPlayer = innerRenderer.engine.players[innerRenderer.engine.players.length - 1];\n            info.openAnimationPlayer.onDone(() => {\n                this.onOpened.emit({ id: info.id, componentRef: info.componentRef });\n                if (info.openAnimationPlayer) {\n                    info.openAnimationPlayer.reset();\n                    info.openAnimationPlayer = null;\n                }\n\n                if (info.closeAnimationPlayer && info.closeAnimationPlayer.hasStarted()) {\n                    info.closeAnimationPlayer.reset();\n                }\n            });\n        }\n\n        //  if there is opening animation already started do nothing\n        if (info.openAnimationPlayer.hasStarted()) {\n            return;\n        }\n\n        //  if there is closing animation already started start open animation from where close one has reached\n        //  and remove close animation\n        if (info.closeAnimationPlayer && info.closeAnimationPlayer.hasStarted()) {\n            //  getPosition() returns what part of the animation is passed, e.g. 0.5 if half the animation\n            //  is done, 0.75 if 3/4 of the animation is done. As we need to start next animation from where\n            //  the previous has finished we need the amount up to 1, therefore we are subtracting what\n            //  getPosition() returns from one\n            const position = 1 - info.closeAnimationInnerPlayer.getPosition();\n            info.closeAnimationPlayer.reset();\n            info.closeAnimationPlayer = null;\n            info.openAnimationPlayer.init();\n            info.openAnimationPlayer.setPosition(position);\n        }\n\n        this.onAnimation.emit({ id: info.id, animationPlayer: info.openAnimationPlayer, animationType: 'open' });\n\n        //  to eliminate flickering show the element just before animation start\n        info.elementRef.nativeElement.parentElement.style.visibility = '';\n        info.openAnimationPlayer.play();\n    }\n\n    private playCloseAnimation(info: OverlayInfo) {\n        if (!info.closeAnimationPlayer) {\n            const animationBuilder = this.builder.build(info.settings.positionStrategy.settings.closeAnimation);\n            info.closeAnimationPlayer = animationBuilder.create(info.elementRef.nativeElement);\n\n            //  AnimationPlayer.getPosition returns always 0. To workaround this we are getting inner WebAnimationPlayer\n            //  and then getting the positions from it.\n            //  This is logged in Angular here - https://github.com/angular/angular/issues/18891\n            //  As soon as this is resolved we can remove this hack\n            const innerRenderer = (<any>info.closeAnimationPlayer)._renderer;\n            info.closeAnimationInnerPlayer = innerRenderer.engine.players[innerRenderer.engine.players.length - 1];\n\n            info.closeAnimationPlayer.onDone(() => {\n                if (info.closeAnimationPlayer) {\n                    info.closeAnimationPlayer.reset();\n                    info.closeAnimationPlayer = null;\n                }\n\n                if (info.openAnimationPlayer && info.openAnimationPlayer.hasStarted()) {\n                    info.openAnimationPlayer.reset();\n                }\n                this.onCloseDone(info);\n            });\n        }\n\n        //  if there is closing animation already started do nothing\n        if (info.closeAnimationPlayer.hasStarted()) {\n            return;\n        }\n\n        //  if there is opening animation already started start close animation from where open one has reached\n        //  and remove open animation\n        if (info.openAnimationPlayer && info.openAnimationPlayer.hasStarted()) {\n            //  getPosition() returns what part of the animation is passed, e.g. 0.5 if half the animation\n            //  is done, 0.75 if 3/4 of the animation is done. As we need to start next animation from where\n            //  the previous has finished we need the amount up to 1, therefore we are subtracting what\n            //  getPosition() returns from one\n            const position = 1 - info.openAnimationInnerPlayer.getPosition();\n            info.openAnimationPlayer.reset();\n            info.openAnimationPlayer = null;\n            info.closeAnimationPlayer.init();\n            info.closeAnimationPlayer.setPosition(position);\n        }\n\n        this.onAnimation.emit({ id: info.id, animationPlayer: info.closeAnimationPlayer, animationType: 'close' });\n        info.closeAnimationPlayer.play();\n    }\n\n    //  TODO: check if applyAnimationParams will work with complex animations\n    private applyAnimationParams(wrapperElement: HTMLElement, animationOptions: AnimationReferenceMetadata) {\n        if (!animationOptions) {\n            wrapperElement.style.transitionDuration = '0ms';\n            return;\n        }\n        if (animationOptions.type === AnimationMetadataType.AnimateRef) {\n            animationOptions = (animationOptions as AnimationAnimateRefMetadata).animation;\n        }\n        if (!animationOptions.options || !animationOptions.options.params) {\n            return;\n        }\n        const params = animationOptions.options.params as IAnimationParams;\n        if (params.duration) {\n            wrapperElement.style.transitionDuration = params.duration;\n        }\n        if (params.easing) {\n            wrapperElement.style.transitionTimingFunction = params.easing;\n        }\n    }\n\n    /** @hidden @internal */\n    public getOverlayById(id: string): OverlayInfo {\n        if (!id) {\n            return null;\n        }\n\n        const info = this._overlayInfos.find(e => e.id === id);\n        return info;\n    }\n\n    private documentClicked = (ev: MouseEvent) => {\n        //  if we get to modal overlay just return - we should not close anything under it\n        //  if we get to non-modal overlay do the next:\n        //   1. Check it has close on outside click. If not go on to next overlay;\n        //   2. If true check if click is on the element. If it is on the element we have closed\n        //  already all previous non-modal with close on outside click elements, so we return. If\n        //  not close the overlay and check next\n        for (let i = this._overlayInfos.length; i--;) {\n            const info = this._overlayInfos[i];\n            if (info.settings.modal) {\n                return;\n            }\n            if (info.settings.closeOnOutsideClick) {\n                const target = ev.target as any;\n                //  if the click is on the element do not close this overlay\n                if (!info.elementRef.nativeElement.contains(target)) {\n                    // if we should exclude position target check if the click is over it. If so do not close overlay\n                    const positionTarget = info.settings.positionStrategy.settings.target as HTMLElement;\n                    let clickOnPositionTarget = false;\n                    if (positionTarget) {\n                        clickOnPositionTarget = positionTarget.contains(target);\n                    }\n\n                    if (!(info.settings.excludePositionTarget && clickOnPositionTarget)) {\n                        //  if the click is outside click, but close animation has started do nothing\n                        if (!(info.closeAnimationPlayer && info.closeAnimationPlayer.hasStarted())) {\n                            this._hide(info.id, ev);\n                        }\n                    }\n                } else {\n                    //  TODO: should we return here, or continue with next overlays\n                    return;\n                }\n            }\n        }\n    }\n\n    private addOutsideClickListener(info: OverlayInfo) {\n        if (info.settings.closeOnOutsideClick) {\n            if (info.settings.modal) {\n                fromEvent(info.elementRef.nativeElement.parentElement.parentElement, 'click')\n                    .pipe(takeUntil(this.destroy$))\n                    .subscribe((e: Event) => this._hide(info.id, e));\n            } else if (\n                //  if all overlays minus closing overlays equals one add the handler\n                this._overlayInfos.filter(x => x.settings.closeOnOutsideClick && !x.settings.modal).length -\n                this._overlayInfos.filter(x => x.settings.closeOnOutsideClick && !x.settings.modal &&\n                    x.closeAnimationPlayer &&\n                    x.closeAnimationPlayer.hasStarted()).length === 1) {\n                this._document.addEventListener('click', this.documentClicked, true);\n            }\n        }\n    }\n\n    private removeOutsideClickListener(info: OverlayInfo) {\n        if (info.settings.modal === false) {\n            let shouldRemoveClickEventListener = true;\n            this._overlayInfos.forEach(o => {\n                if (o.settings.modal === false && o.id !== info.id) {\n                    shouldRemoveClickEventListener = false;\n                }\n            });\n\n            if (shouldRemoveClickEventListener) {\n                this._document.removeEventListener('click', this.documentClicked, true);\n            }\n        }\n    }\n\n    private addResizeHandler(id: string) {\n        const closingOverlaysCount =\n            this._overlayInfos\n                .filter(o => o.closeAnimationPlayer && o.closeAnimationPlayer.hasStarted())\n                .length;\n        if (this._overlayInfos.length - closingOverlaysCount === 1) {\n            this._document.defaultView.addEventListener('resize', this.repositionAll);\n        }\n    }\n\n    private removeResizeHandler(id: string) {\n        const closingOverlaysCount =\n            this._overlayInfos\n                .filter(o => o.closeAnimationPlayer && o.closeAnimationPlayer.hasStarted())\n                .length;\n        if (this._overlayInfos.length - closingOverlaysCount === 1) {\n            this._document.defaultView.removeEventListener('resize', this.repositionAll);\n        }\n    }\n\n    /** @hidden */\n    public repositionAll = () => {\n        for (let i = this._overlayInfos.length; i--;) {\n            this.reposition(this._overlayInfos[i].id);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public ngOnDestroy(): void {\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n}\n","import { PositionSettings, Size } from '../utilities';\nimport { GlobalPositionStrategy } from './global-position-strategy';\n\n/**\n * Positions the element inside the containing outlet based on the directions passed in trough PositionSettings.\n * These are Top/Middle/Bottom for verticalDirection and Left/Center/Right for horizontalDirection\n */\nexport class ContainerPositionStrategy extends GlobalPositionStrategy {\n    constructor(settings?: PositionSettings) {\n        super(settings);\n    }\n\n    /** @inheritdoc */\n    position(contentElement: HTMLElement, size?: Size, document?: Document, initialCall?: boolean): void {\n        contentElement.classList.add('igx-overlay__content--relative');\n        contentElement.parentElement.classList.add('igx-overlay__wrapper--flex-container');\n        this.setPosition(contentElement, this.settings);\n    }\n}\n\n","import { IPositionStrategy } from './IPositionStrategy';\nimport {\n  HorizontalAlignment,\n  Point,\n  PositionSettings,\n  Size,\n  Util,\n  VerticalAlignment\n} from './../utilities';\nimport { scaleInVerTop, scaleOutVerTop } from '../../../animations/main';\nimport { ConnectedFit } from '../utilities';\n\n/**\n * Positions the element based on the directions and start point passed in trough PositionSettings.\n * It is possible to either pass a start point or an HTMLElement as a positioning base.\n */\nexport class ConnectedPositioningStrategy implements IPositionStrategy {\n  private _defaultSettings: PositionSettings = {\n    // default Point(0, 0) in getPointFromPositionsSettings\n    target: null,\n    horizontalDirection: HorizontalAlignment.Right,\n    verticalDirection: VerticalAlignment.Bottom,\n    horizontalStartPoint: HorizontalAlignment.Left,\n    verticalStartPoint: VerticalAlignment.Bottom,\n    openAnimation: scaleInVerTop,\n    closeAnimation: scaleOutVerTop,\n    minSize: { width: 0, height: 0 }\n  };\n\n  /** @inheritdoc */\n  public settings: PositionSettings;\n\n  constructor(settings?: PositionSettings) {\n    this.settings = Object.assign({}, this._defaultSettings, settings);\n  }\n\n  /**\n   * Obtains the ClientRect objects for the required elements - target and element to position\n   * @returns target and element ClientRect objects\n   */\n  protected calculateElementRectangles(contentElement): { targetRect: ClientRect, elementRect: ClientRect } {\n      return {\n          targetRect: Util.getTargetRect(this.settings),\n          elementRect: contentElement.getBoundingClientRect() as ClientRect\n      };\n  }\n\n  /** @inheritdoc */\n  position(contentElement: HTMLElement, size: Size, document?: Document, initialCall?: boolean): void {\n    const rects =  this.calculateElementRectangles(contentElement);\n    this.setStyle(contentElement, rects.targetRect, rects.elementRect, {});\n  }\n\n  /**\n   * @inheritdoc\n   * Creates clone of this position strategy\n   * @returns clone of this position strategy\n   */\n  clone(): IPositionStrategy {\n    return Util.cloneInstance(this);\n  }\n\n  /**\n   * Sets element's style which effectively positions provided element according\n   * to provided position settings\n   * @param element Element to position\n   * @param targetRect Bounding rectangle of strategy target\n   * @param elementRect Bounding rectangle of the element\n   */\n  protected setStyle(element: HTMLElement, targetRect: ClientRect, elementRect: ClientRect, connectedFit: ConnectedFit) {\n      const horizontalOffset = connectedFit.horizontalOffset ? connectedFit.horizontalOffset : 0;\n      const verticalOffset = connectedFit.verticalOffset ? connectedFit.verticalOffset : 0;\n    const startPoint: Point = {\n      x: targetRect.right + targetRect.width * this.settings.horizontalStartPoint + horizontalOffset,\n      y: targetRect.bottom + targetRect.height * this.settings.verticalStartPoint + verticalOffset\n    };\n    const wrapperRect: ClientRect = element.parentElement.getBoundingClientRect();\n\n    //  clean up styles - if auto position strategy is chosen we may pass here several times\n    element.style.right = '';\n    element.style.left = '';\n    element.style.bottom = '';\n    element.style.top = '';\n\n    switch (this.settings.horizontalDirection) {\n      case HorizontalAlignment.Left:\n        element.style.right = `${Math.round(wrapperRect.right - startPoint.x)}px`;\n        break;\n      case HorizontalAlignment.Center:\n        element.style.left = `${Math.round(startPoint.x - wrapperRect.left - elementRect.width / 2)}px`;\n        break;\n      case HorizontalAlignment.Right:\n        element.style.left = `${Math.round(startPoint.x - wrapperRect.left)}px`;\n        break;\n    }\n\n    switch (this.settings.verticalDirection) {\n      case VerticalAlignment.Top:\n        element.style.bottom = `${Math.round(wrapperRect.bottom - startPoint.y)}px`;\n        break;\n      case VerticalAlignment.Middle:\n        element.style.top = `${Math.round(startPoint.y - wrapperRect.top - elementRect.height / 2)}px`;\n        break;\n      case VerticalAlignment.Bottom:\n        element.style.top = `${Math.round(startPoint.y - wrapperRect.top)}px`;\n        break;\n    }\n  }\n}\n","import { ConnectedPositioningStrategy } from './connected-positioning-strategy';\nimport { HorizontalAlignment, VerticalAlignment, PositionSettings, Size, Util, ConnectedFit, OutOfViewPort } from '../utilities';\n\nexport abstract class BaseFitPositionStrategy extends ConnectedPositioningStrategy {\n    protected _initialSize: Size;\n    protected _initialSettings: PositionSettings;\n\n    /** @inheritdoc */\n    position(contentElement: HTMLElement, size: Size, document?: Document, initialCall?: boolean): void {\n        const rects = super.calculateElementRectangles(contentElement);\n        const connectedFit: ConnectedFit = {};\n        if (initialCall) {\n            connectedFit.targetRect = rects.targetRect;\n            connectedFit.contentElementRect = rects.elementRect;\n            this._initialSettings = this._initialSettings || Object.assign({}, this.settings);\n            this.settings = Object.assign({}, this._initialSettings);\n            connectedFit.viewPortRect = Util.getViewportRect(document);\n            this.updateViewPortFit(connectedFit);\n            if (this.shouldFitInViewPort(connectedFit)) {\n                this.fitInViewport(contentElement, connectedFit);\n            }\n        }\n        this.setStyle(contentElement, rects.targetRect, rects.elementRect, connectedFit);\n    }\n\n    /**\n     * Checks if element can fit in viewport and updates provided connectedFit\n     * with the result\n     * @param connectedFit connectedFit to update\n     */\n    protected updateViewPortFit(connectedFit: ConnectedFit) {\n        connectedFit.left = this.calculateLeft(\n            connectedFit.targetRect,\n            connectedFit.contentElementRect,\n            this.settings.horizontalStartPoint,\n            this.settings.horizontalDirection,\n            connectedFit.horizontalOffset ? connectedFit.horizontalOffset : 0);\n        connectedFit.right = connectedFit.left + connectedFit.contentElementRect.width;\n        connectedFit.fitHorizontal = {\n                back: Math.round(connectedFit.left),\n                forward: Math.round(connectedFit.viewPortRect.width - connectedFit.right)\n            };\n\n        connectedFit.top = this.calculateTop(\n            connectedFit.targetRect,\n            connectedFit.contentElementRect,\n            this.settings.verticalStartPoint,\n            this.settings.verticalDirection,\n            connectedFit.verticalOffset ? connectedFit.verticalOffset : 0);\n        connectedFit.bottom = connectedFit.top + connectedFit.contentElementRect.height;\n        connectedFit.fitVertical = {\n            back: Math.round(connectedFit.top),\n            forward: Math.round(connectedFit.viewPortRect.height - connectedFit.bottom)\n        };\n    }\n\n    /**\n     * Calculates the position of the left border of the element if it gets positioned\n     * with provided start point and direction\n     * @param targetRect Rectangle of the target where element is attached\n     * @param elementRect Rectangle of the element\n     * @param startPoint Start point of the target\n     * @param direction Direction in which to show the element\n     */\n    protected calculateLeft(\n        targetRect: ClientRect, elementRect: ClientRect, startPoint: HorizontalAlignment, direction: HorizontalAlignment, offset?: number):\n        number {\n        return targetRect.right + targetRect.width * startPoint + elementRect.width * direction + offset;\n    }\n\n    /**\n     * Calculates the position of the top border of the element if it gets positioned\n     * with provided position settings related to the target\n     * @param targetRect Rectangle of the target where element is attached\n     * @param elementRect Rectangle of the element\n     * @param startPoint Start point of the target\n     * @param direction Direction in which to show the element\n     */\n    protected calculateTop(\n        targetRect: ClientRect, elementRect: ClientRect, startPoint: VerticalAlignment, direction: VerticalAlignment, offset?: number):\n        number {\n        return targetRect.bottom + targetRect.height * startPoint + elementRect.height * direction + offset;\n    }\n\n    /**\n     * Returns whether the element should fit in viewport\n     * @param connectedFit connectedFit object containing all necessary parameters\n     */\n    protected shouldFitInViewPort(connectedFit: ConnectedFit) {\n        return connectedFit.fitHorizontal.back < 0 || connectedFit.fitHorizontal.forward < 0 ||\n            connectedFit.fitVertical.back < 0 || connectedFit.fitVertical.forward < 0;\n    }\n\n    /**\n     * Fits the element into viewport according to the position settings\n     * @param element element to fit in viewport\n     * @param connectedFit connectedFit object containing all necessary parameters\n     */\n    protected abstract fitInViewport(\n        element: HTMLElement,\n        connectedFit: ConnectedFit);\n}\n","import { VerticalAlignment, HorizontalAlignment, ConnectedFit } from './../utilities';\nimport { BaseFitPositionStrategy } from './base-fit-position-strategy';\n\n/**\n * Positions the element as in **Connected** positioning strategy and re-positions the element in\n * the view port (calculating a different start point) in case the element is partially getting out of view\n */\nexport class AutoPositionStrategy extends BaseFitPositionStrategy {\n\n    /** @inheritdoc */\n    protected fitInViewport(element: HTMLElement, connectedFit: ConnectedFit) {\n        const transformString: string[] = [];\n        if (connectedFit.fitHorizontal.back < 0 || connectedFit.fitHorizontal.forward < 0) {\n            if (this.canFlipHorizontal(connectedFit)) {\n                this.flipHorizontal();\n            } else {\n                const horizontalPush = this.horizontalPush(connectedFit);\n                transformString.push(`translateX(${horizontalPush}px)`);\n            }\n        }\n\n        if (connectedFit.fitVertical.back < 0 || connectedFit.fitVertical.forward < 0) {\n            if (this.canFlipVertical(connectedFit)) {\n                this.flipVertical();\n            } else {\n                const verticalPush = this.verticalPush(connectedFit);\n                transformString.push(`translateY(${verticalPush}px)`);\n            }\n        }\n\n        element.style.transform = transformString.join(' ').trim();\n    }\n\n    /**\n     * Checks if element can be flipped without get off the viewport\n     * @param connectedFit connectedFit object containing all necessary parameters\n     * @returns true if element can be flipped and stain in viewport\n     */\n    private canFlipHorizontal(connectedFit: ConnectedFit): boolean {\n        //  HorizontalAlignment can be Left = -1; Center = -0.5 or Right = 0.\n        //  To virtually flip direction and start point (both are HorizontalAlignment) we can do this:\n        //  flippedAlignment = (-1) * (HorizontalAlignment + 1)\n        //  this way:\n        //  (-1) * (Left + 1) = 0 = Right\n        //  (-1) * (Center + 1) = -0.5 = Center\n        //  (-1) * (Right + 1) = -1 = Left\n        const flippedStartPoint = (-1) * (this.settings.horizontalStartPoint + 1);\n        const flippedDirection = (-1) * (this.settings.horizontalDirection + 1);\n\n        const leftBorder = this.calculateLeft(\n            connectedFit.targetRect, connectedFit.contentElementRect, flippedStartPoint, flippedDirection, 0);\n        const rightBorder = leftBorder + connectedFit.contentElementRect.width;\n        return 0 < leftBorder && rightBorder < connectedFit.viewPortRect.width;\n    }\n\n    /**\n     * Checks if element can be flipped without get off the viewport\n     * @param connectedFit connectedFit object containing all necessary parameters\n     * @returns true if element can be flipped and stain in viewport\n     */\n    private canFlipVertical(connectedFit: ConnectedFit): boolean {\n        const flippedStartPoint = (-1) * (this.settings.verticalStartPoint + 1);\n        const flippedDirection = (-1) * (this.settings.verticalDirection + 1);\n\n        const topBorder = this.calculateTop(\n            connectedFit.targetRect, connectedFit.contentElementRect, flippedStartPoint, flippedDirection, 0);\n        const bottomBorder = topBorder + connectedFit.contentElementRect.height;\n        return 0 < topBorder && bottomBorder < connectedFit.viewPortRect.height;\n    }\n\n    /**\n     * Flips direction and start point of the position settings\n     */\n    private flipHorizontal() {\n        switch (this.settings.horizontalDirection) {\n            case HorizontalAlignment.Left:\n                this.settings.horizontalDirection = HorizontalAlignment.Right;\n                break;\n            case HorizontalAlignment.Right:\n                this.settings.horizontalDirection = HorizontalAlignment.Left;\n                break;\n        }\n        switch (this.settings.horizontalStartPoint) {\n            case HorizontalAlignment.Left:\n                this.settings.horizontalStartPoint = HorizontalAlignment.Right;\n                break;\n            case HorizontalAlignment.Right:\n                this.settings.horizontalStartPoint = HorizontalAlignment.Left;\n                break;\n        }\n    }\n\n    /**\n     * Flips direction and start point of the position settings\n     */\n    private flipVertical() {\n        switch (this.settings.verticalDirection) {\n            case VerticalAlignment.Top:\n                this.settings.verticalDirection = VerticalAlignment.Bottom;\n                break;\n            case VerticalAlignment.Bottom:\n                this.settings.verticalDirection = VerticalAlignment.Top;\n                break;\n        }\n        switch (this.settings.verticalStartPoint) {\n            case VerticalAlignment.Top:\n                this.settings.verticalStartPoint = VerticalAlignment.Bottom;\n                break;\n            case VerticalAlignment.Bottom:\n                this.settings.verticalStartPoint = VerticalAlignment.Top;\n                break;\n        }\n    }\n\n    /**\n     * Calculates necessary horizontal push according to provided connectedFit\n     * @param connectedFit connectedFit object containing all necessary parameters\n     * @returns amount of necessary translation which will push the element into viewport\n     */\n    private horizontalPush(connectedFit: ConnectedFit): number {\n        const leftExtend = connectedFit.left;\n        const rightExtend = connectedFit.right - connectedFit.viewPortRect.right;\n        //  if leftExtend < 0 overlay goes beyond left end of the screen. We should push it back with exactly\n        //  as much as it is beyond the screen.\n        //  if rightExtend > 0 overlay goes beyond right end of the screen. We should push it back with the\n        //  extend but with amount not bigger than what left between left border of screen and left border of\n        //  overlay, e.g. leftExtend\n        if (leftExtend < 0) {\n            return Math.abs(leftExtend);\n        } else if (rightExtend > 0) {\n            return - Math.min(rightExtend, leftExtend);\n        } else {\n            return 0;\n        }\n    }\n\n    /**\n     * Calculates necessary vertical push according to provided connectedFit\n     * @param connectedFit connectedFit object containing all necessary parameters\n     * @returns amount of necessary translation which will push the element into viewport\n     */\n    private verticalPush(connectedFit: ConnectedFit): number {\n        const topExtend = connectedFit.top;\n        const bottomExtend = connectedFit.bottom - connectedFit.viewPortRect.bottom;\n        if (topExtend < 0) {\n            return Math.abs(topExtend);\n        } else if (bottomExtend > 0) {\n            return - Math.min(bottomExtend, topExtend);\n        } else {\n            return 0;\n        }\n    }\n}\n","import { BaseFitPositionStrategy } from './base-fit-position-strategy';\nimport { HorizontalAlignment, VerticalAlignment, ConnectedFit } from '../utilities';\n\n/**\n * Positions the element as in **Connected** positioning strategy and resize the element\n * to fit in the view port in case the element is partially getting out of view\n */\nexport class ElasticPositionStrategy extends BaseFitPositionStrategy {\n    /** @inheritdoc */\n    protected fitInViewport(element: HTMLElement, connectedFit: ConnectedFit) {\n        element.classList.add('igx-overlay__content--elastic');\n        const transformString: string[] = [];\n        if (connectedFit.fitHorizontal.back < 0 || connectedFit.fitHorizontal.forward < 0) {\n            const maxReduction = Math.max(0, connectedFit.contentElementRect.width - this.settings.minSize.width);\n            const leftExtend = Math.max(0, -connectedFit.fitHorizontal.back);\n            const rightExtend = Math.max(0, -connectedFit.fitHorizontal.forward);\n            const reduction = Math.min(maxReduction, leftExtend + rightExtend);\n            element.style.width = `${connectedFit.contentElementRect.width - reduction}px`;\n\n            //  if direction is center and element goes off the screen in left direction we should push the\n            //  element to the right. Prevents left still going out of view when normally positioned\n            if (this.settings.horizontalDirection === HorizontalAlignment.Center) {\n                //  the amount of translation depends on whether element goes off the screen to the left,\n                //  to the right or in both directions, as well as how much it goes of the screen and finally\n                //  on the minSize. The translation should be proportional between left and right extend\n                //  taken from the reduction\n                const translation = leftExtend * reduction / (leftExtend + rightExtend);\n                if (translation > 0) {\n                    transformString.push(`translateX(${translation}px)`);\n                }\n            }\n        }\n\n        if (connectedFit.fitVertical.back < 0 || connectedFit.fitVertical.forward < 0) {\n            const maxReduction = Math.max(0, connectedFit.contentElementRect.height - this.settings.minSize.height);\n            const topExtend = Math.max(0, -connectedFit.fitVertical.back);\n            const bottomExtend = Math.max(0, -connectedFit.fitVertical.forward);\n            const reduction = Math.min(maxReduction, topExtend + bottomExtend);\n            element.style.height = `${connectedFit.contentElementRect.height - reduction}px`;\n\n            //  if direction is middle and element goes off the screen in top direction we should push the\n            //  element to the bottom. Prevents top still going out of view when normally positioned\n            if (this.settings.verticalDirection === VerticalAlignment.Middle) {\n                //  the amount of translation depends on whether element goes off the screen to the top,\n                //  to the bottom or in both directions, as well as how much it goes of the screen and finally\n                //  on the minSize. The translation should be proportional between top and bottom extend\n                //  taken from the reduction\n                const translation = topExtend * reduction / (topExtend + bottomExtend);\n                if (translation > 0) {\n                    transformString.push(`translateY(${translation}px)`);\n                }\n            }\n        }\n        element.style.transform = transformString.join(' ').trim();\n    }\n}\n","import { IgxOverlayService } from '../overlay';\nimport { ScrollStrategy } from './scroll-strategy';\nimport { NgZone } from '@angular/core';\n\n/**\n * On scroll reposition the overlay content.\n */\nexport class AbsoluteScrollStrategy extends ScrollStrategy {\n    private _initialized = false;\n    private _document: Document;\n    private _overlayService: IgxOverlayService;\n    private _id: string;\n    private _scrollContainer: HTMLElement;\n    private _zone: NgZone;\n\n    constructor(scrollContainer?: HTMLElement) {\n        super(scrollContainer);\n        this._scrollContainer = scrollContainer;\n    }\n\n    /** @inheritdoc */\n    public initialize(document: Document, overlayService: IgxOverlayService, id: string) {\n        if (this._initialized) {\n            return;\n        }\n        this._overlayService = overlayService;\n        this._id = id;\n        this._document = document;\n        this._zone = overlayService.getOverlayById(id).ngZone;\n        this._initialized = true;\n    }\n\n    /** @inheritdoc */\n    public attach(): void {\n        if (this._zone) {\n            this._zone.runOutsideAngular(() => {\n                this.addScrollEventListener();\n            });\n        } else {\n            this.addScrollEventListener();\n        }\n    }\n\n    /** @inheritdoc */\n    public detach(): void {\n        if (this._scrollContainer) {\n            this._scrollContainer.removeEventListener('scroll', this.onScroll, true);\n        } else {\n            this._document.removeEventListener('scroll', this.onScroll, true);\n        }\n\n        this._initialized = false;\n    }\n\n    private addScrollEventListener() {\n        if (this._scrollContainer) {\n            this._scrollContainer.addEventListener('scroll', this.onScroll, true);\n        } else {\n            this._document.addEventListener('scroll', this.onScroll, true);\n        }\n    }\n\n    private onScroll = (e: Event) => {\n        const overlayInfo = this._overlayService.getOverlayById(this._id);\n        if (!overlayInfo) {\n            return;\n        }\n        if (!overlayInfo.elementRef.nativeElement.contains(e.target)) {\n            this._overlayService.reposition(this._id);\n        }\n    }\n}\n","import { IgxOverlayService } from '../overlay';\nimport { ScrollStrategy } from './scroll-strategy';\n\n/**\n * Prevents scrolling while the overlay content is shown.\n */\nexport class BlockScrollStrategy extends ScrollStrategy {\n    private _initialized = false;\n    private _document: Document;\n    private _initialScrollTop: number;\n    private _initialScrollLeft: number;\n    private _sourceElement: Element;\n\n    constructor(scrollContainer?: HTMLElement) {\n        super(scrollContainer);\n    }\n\n    /** @inheritdoc */\n    public initialize(document: Document, overlayService: IgxOverlayService, id: string) {\n        if (this._initialized) {\n            return;\n        }\n\n        this._document = document;\n        this._initialized = true;\n    }\n\n    /** @inheritdoc */\n    public attach(): void {\n        this._document.addEventListener('scroll', this.onScroll, true);\n    }\n\n    /** @inheritdoc */\n    public detach(): void {\n        this._document.removeEventListener('scroll', this.onScroll, true);\n        this._sourceElement = null;\n        this._initialScrollTop = 0;\n        this._initialScrollLeft = 0;\n        this._initialized = false;\n    }\n\n    private onScroll = (ev: Event) => {\n        ev.preventDefault();\n        if (!this._sourceElement || this._sourceElement !== ev.target) {\n            this._sourceElement = ev.target as Element;\n            this._initialScrollTop = this._sourceElement.scrollTop;\n            this._initialScrollLeft = this._sourceElement.scrollLeft;\n        }\n\n        this._sourceElement.scrollTop = this._initialScrollTop;\n        this._sourceElement.scrollLeft = this._initialScrollLeft;\n    }\n}\n","import { IgxOverlayService } from '../overlay';\nimport { ScrollStrategy } from './scroll-strategy';\n\n/**\n * Uses a tolerance and closes the shown component upon scrolling if the tolerance is exceeded\n */\nexport class CloseScrollStrategy extends ScrollStrategy {\n    private _document: Document;\n    private _overlayService: IgxOverlayService;\n    private _id: string;\n    private initialScrollTop: number;\n    private initialScrollLeft: number;\n    private cumulativeScrollTop: number;\n    private cumulativeScrollLeft: number;\n    private _threshold: number;\n    private _initialized = false;\n    private _sourceElement: Element;\n    private _scrollContainer: HTMLElement;\n\n    constructor(scrollContainer?: HTMLElement) {\n        super(scrollContainer);\n        this._scrollContainer = scrollContainer;\n        this._threshold = 10;\n        this.cumulativeScrollTop = 0;\n        this.cumulativeScrollLeft = 0;\n    }\n\n    /** @inheritdoc */\n    public initialize(document: Document, overlayService: IgxOverlayService, id: string) {\n        if (this._initialized) {\n            return;\n        }\n        this._overlayService = overlayService;\n        this._id = id;\n        this._document = document;\n        this._initialized = true;\n    }\n\n    /** @inheritdoc */\n    public attach(): void {\n        if (this._scrollContainer) {\n            this._scrollContainer.addEventListener('scroll', this.onScroll);\n            this._sourceElement = this._scrollContainer;\n        } else {\n            this._document.addEventListener('scroll', this.onScroll);\n            if (document.documentElement.scrollHeight > document.documentElement.clientHeight) {\n                this._sourceElement = document.documentElement as Element;\n            } else if (document.body.scrollHeight > document.body.clientHeight) {\n                this._sourceElement = document.body as Element;\n            }\n        }\n\n        if (!this._sourceElement) {\n            return;\n        }\n\n        this.cumulativeScrollTop = 0;\n        this.cumulativeScrollLeft = 0;\n        this.initialScrollTop = this._sourceElement.scrollTop;\n        this.initialScrollLeft = this._sourceElement.scrollLeft;\n    }\n\n    /** @inheritdoc */\n    public detach(): void {\n        // TODO: check why event listener removes only on first call and remains on each next!!!\n        if (this._scrollContainer) {\n            this._scrollContainer.removeEventListener('scroll', this.onScroll);\n        } else {\n            this._document.removeEventListener('scroll', this.onScroll);\n        }\n        this._sourceElement = null;\n        this.cumulativeScrollTop = 0;\n        this.cumulativeScrollLeft = 0;\n        this.initialScrollTop = 0;\n        this.initialScrollLeft = 0;\n        this._initialized = false;\n    }\n\n    private onScroll = (ev: Event) => {\n        if (!this._sourceElement) {\n            return;\n        }\n\n        this.cumulativeScrollTop += this._sourceElement.scrollTop;\n        this.cumulativeScrollLeft += this._sourceElement.scrollLeft;\n\n        if (Math.abs(this.cumulativeScrollTop - this.initialScrollTop) > this._threshold ||\n            Math.abs(this.cumulativeScrollLeft - this.initialScrollLeft) > this._threshold) {\n            this._document.removeEventListener('scroll', this.onScroll, true);\n            this._overlayService.hide(this._id);\n        }\n    }\n}\n","\n// Export scroll strategies\nexport * from './scroll-strategy';\nexport * from './IScrollStrategy';\nexport * from './absolute-scroll-strategy';\nexport * from './block-scroll-strategy';\nexport * from './close-scroll-strategy';\nexport * from './NoOpScrollStrategy';\n\n","import { TransactionService, Transaction, State } from './transaction';\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { isObject, mergeObjects, cloneValue } from '../../core/utils';\n\n@Injectable()\nexport class IgxBaseTransactionService<T extends Transaction, S extends State> implements TransactionService<T, S> {\n    protected _isPending = false;\n    protected _pendingTransactions: T[] = [];\n    protected _pendingStates: Map<any, S> = new Map();\n\n    /**\n     * @inheritdoc\n     */\n    public get canRedo(): boolean {\n        return false;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public get canUndo(): boolean {\n        return false;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public get enabled(): boolean {\n        return this._isPending;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public onStateUpdate = new EventEmitter<void>();\n\n    /**\n     * @inheritdoc\n     */\n    public add(transaction: T, recordRef?: any): void {\n        if (this._isPending) {\n            this.updateState(this._pendingStates, transaction, recordRef);\n            this._pendingTransactions.push(transaction);\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getTransactionLog(id?: any): T[] { return []; }\n\n    /**\n     * @inheritdoc\n     */\n    undo(): void { }\n\n    /**\n     * @inheritdoc\n     */\n    redo(): void { }\n\n    /**\n     * @inheritdoc\n     */\n    getAggregatedChanges(mergeChanges: boolean): T[] {\n        const result: T[] = [];\n        this._pendingStates.forEach((state: S, key: any) => {\n            const value = mergeChanges ? this.getAggregatedValue(key, mergeChanges) : state.value;\n            result.push({ id: key, newValue: value, type: state.type } as T);\n        });\n        return result;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public getState(id: any): S {\n        return this._pendingStates.get(id);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public getAggregatedValue(id: any, mergeChanges: boolean): any {\n        const state = this._pendingStates.get(id);\n        if (!state) {\n            return null;\n        }\n        if (mergeChanges) {\n            return this.updateValue(state);\n        }\n        return state.value;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    commit(data: any[], id?: any): void { }\n\n    /**\n     * @inheritdoc\n     */\n    clear(id?: any): void {\n        this._pendingStates.clear();\n        this._pendingTransactions = [];\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public startPending(): void {\n        this._isPending = true;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public endPending(commit: boolean): void {\n        this._isPending = false;\n        this._pendingStates.clear();\n        this._pendingTransactions = [];\n    }\n\n\n    /**\n     * Updates the provided states collection according to passed transaction and recordRef\n     * @param states States collection to apply the update to\n     * @param transaction Transaction to apply to the current state\n     * @param recordRef Reference to the value of the record in data source, if any, where transaction should be applied\n     */\n    protected updateState(states: Map<any, S>, transaction: T, recordRef?: any): void {\n        let state = states.get(transaction.id);\n        if (state) {\n            if (isObject(state.value)) {\n                mergeObjects(state.value, transaction.newValue);\n            } else {\n                state.value = transaction.newValue;\n            }\n        } else {\n            state = { value: cloneValue(transaction.newValue), recordRef: recordRef, type: transaction.type } as S;\n            states.set(transaction.id, state);\n        }\n    }\n\n    /**\n     * Updates the recordRef of the provided state with all the changes in the state. Accepts primitive and object value types\n     * @param state State to update value for\n     * @returns updated value including all the changes in provided state\n     */\n    protected updateValue(state: S) {\n        return this.mergeValues(state.recordRef, state.value);\n    }\n\n    /**\n     * Merges second values in first value and the result in empty object. If values are primitive type\n     * returns second value if exists, or first value.\n     * @param first Value to merge into\n     * @param second Value to merge\n     */\n    protected mergeValues<U>(first: U, second: U): U {\n        let result: U;\n        if (isObject(first) || isObject(second)) {\n            result = mergeObjects(mergeObjects({}, first), second);\n        } else {\n            result = second ? second : first;\n        }\n        return result;\n    }\n}\n","import { Transaction, State, TransactionType } from './transaction';\nimport { IgxBaseTransactionService } from './base-transaction';\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { isObject, mergeObjects, cloneValue } from '../../core/utils';\n\n@Injectable()\nexport class IgxTransactionService<T extends Transaction, S extends State> extends IgxBaseTransactionService<T, S> {\n    protected _transactions: T[] = [];\n    protected _redoStack: { transaction: T, recordRef: any }[][] = [];\n    protected _undoStack: { transaction: T, recordRef: any }[][] = [];\n    protected _states: Map<any, S> = new Map();\n\n    /**\n     * @inheritdoc\n     */\n    get canUndo(): boolean {\n        return this._undoStack.length > 0;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    get canRedo(): boolean {\n        return this._redoStack.length > 0;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public onStateUpdate = new EventEmitter<void>();\n\n    /**\n     * @inheritdoc\n     */\n    public add(transaction: T, recordRef?: any): void {\n        const states = this._isPending ? this._pendingStates : this._states;\n        this.verifyAddedTransaction(states, transaction, recordRef);\n        this.addTransaction(transaction, states, recordRef);\n    }\n\n    protected addTransaction(transaction: T, states: Map<any, S>, recordRef?: any) {\n        this.updateState(states, transaction, recordRef);\n\n        const transactions = this._isPending ? this._pendingTransactions : this._transactions;\n        transactions.push(transaction);\n\n        if (!this._isPending) {\n            this._undoStack.push([{ transaction, recordRef }]);\n            this._redoStack = [];\n            this.onStateUpdate.emit();\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public getTransactionLog(id?: any): T[] {\n        if (id !== undefined) {\n            return this._transactions.filter(t => t.id === id);\n        }\n        return [...this._transactions];\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public getAggregatedChanges(mergeChanges: boolean): T[] {\n        const result: T[] = [];\n        this._states.forEach((state: S, key: any) => {\n            const value = mergeChanges ? this.mergeValues(state.recordRef, state.value) : state.value;\n            result.push({ id: key, newValue: value, type: state.type } as T);\n        });\n        return result;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public getState(id: any, pending: boolean = false): S {\n        return pending ? this._pendingStates.get(id) : this._states.get(id);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public get enabled(): boolean {\n        return true;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public getAggregatedValue(id: any, mergeChanges: boolean): any {\n        const state = this._states.get(id);\n        const pendingState = super.getState(id);\n\n        //  if there is no state and there is no pending state return null\n        if (!state && !pendingState) {\n            return null;\n        }\n\n        const pendingChange = super.getAggregatedValue(id, false);\n        const change = state && state.value;\n        let aggregatedValue = this.mergeValues(change, pendingChange);\n        if (mergeChanges) {\n            const originalValue = state ? state.recordRef : pendingState.recordRef;\n            aggregatedValue = this.mergeValues(originalValue, aggregatedValue);\n        }\n        return aggregatedValue;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public endPending(commit: boolean): void {\n        this._isPending = false;\n        if (commit) {\n            const actions: { transaction: T, recordRef: any }[] = [];\n            // don't use addTransaction due to custom undo handling\n            for (const transaction of this._pendingTransactions) {\n                const pendingState = this._pendingStates.get(transaction.id);\n                this._transactions.push(transaction);\n                this.updateState(this._states, transaction, pendingState.recordRef);\n                actions.push({ transaction, recordRef: pendingState.recordRef });\n            }\n\n            this._undoStack.push(actions);\n            this._redoStack = [];\n\n            this.onStateUpdate.emit();\n        }\n        super.endPending(commit);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public commit(data: any[], id?: any): void {\n        if (id !== undefined) {\n            const state = this.getState(id);\n            if (state) {\n                this.updateRecord(data, state);\n            }\n        } else {\n            this._states.forEach((s: S) => {\n                this.updateRecord(data, s);\n            });\n        }\n        this.clear(id);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public clear(id?: any): void {\n        if (id !== undefined) {\n            this._transactions = this._transactions.filter(t => t.id !== id);\n            this._states.delete(id);\n            //  Undo stack is an array of actions. Each action is array of transaction like objects\n            //  We are going trough all the actions. For each action we are filtering out transactions\n            //  with provided id. Finally if any action ends up as empty array we are removing it from\n            //  undo stack\n            this._undoStack = this._undoStack.map(a => a.filter(t => t.transaction.id !== id)).filter(a => a.length > 0);\n        } else {\n            this._transactions = [];\n            this._states.clear();\n            this._undoStack = [];\n        }\n        this._redoStack = [];\n        this.onStateUpdate.emit();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public undo(): void {\n        if (this._undoStack.length <= 0) {\n            return;\n        }\n\n        const lastActions: { transaction: T, recordRef: any }[] = this._undoStack.pop();\n        this._transactions.splice(this._transactions.length - lastActions.length);\n        this._redoStack.push(lastActions);\n\n        this._states.clear();\n        for (const currentActions of this._undoStack) {\n            for (const transaction of currentActions) {\n                this.updateState(this._states, transaction.transaction, transaction.recordRef);\n            }\n        }\n\n        this.onStateUpdate.emit();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public redo(): void {\n        if (this._redoStack.length > 0) {\n            let actions: { transaction: T, recordRef: any, useInUndo?: boolean }[];\n            actions = this._redoStack.pop();\n            for (const action of actions) {\n                this.updateState(this._states, action.transaction, action.recordRef);\n                this._transactions.push(action.transaction);\n            }\n\n            this._undoStack.push(actions);\n            this.onStateUpdate.emit();\n        }\n    }\n\n    /**\n     * Verifies if the passed transaction is correct. If not throws an exception.\n     * @param transaction Transaction to be verified\n     */\n    protected verifyAddedTransaction(states: Map<any, S>, transaction: T, recordRef?: any): void {\n        const state = states.get(transaction.id);\n        switch (transaction.type) {\n            case TransactionType.ADD:\n                if (state) {\n                    //  cannot add same item twice\n                    throw new Error(`Cannot add this transaction. Transaction with id: ${transaction.id} has been already added.`);\n                }\n                break;\n            case TransactionType.DELETE:\n            case TransactionType.UPDATE:\n                if (state && state.type === TransactionType.DELETE) {\n                    //  cannot delete or update deleted items\n                    throw new Error(`Cannot add this transaction. Transaction with id: ${transaction.id} has been already deleted.`);\n                }\n                if (!state && !recordRef && !this._isPending) {\n                    //  cannot initially add transaction or delete item with no recordRef\n                    throw new Error(`Cannot add this transaction. This is first transaction of type ${transaction.type} ` +\n                        `for id ${transaction.id}. For first transaction of this type recordRef is mandatory.`);\n                }\n                break;\n        }\n    }\n\n    /**\n     * Updates the provided states collection according to passed transaction and recordRef\n     * @param states States collection to apply the update to\n     * @param transaction Transaction to apply to the current state\n     * @param recordRef Reference to the value of the record in data source, if any, where transaction should be applied\n     */\n    protected updateState(states: Map<any, S>, transaction: T, recordRef?: any): void {\n        let state = states.get(transaction.id);\n        //  if TransactionType is ADD simply add transaction to states;\n        //  if TransactionType is DELETE:\n        //    - if there is state with this id of type ADD remove it from the states;\n        //    - if there is state with this id of type UPDATE change its type to DELETE;\n        //    - if there is no state with this id add transaction to states;\n        //  if TransactionType is UPDATE:\n        //    - if there is state with this id of type ADD merge new value and state recordRef into state new value\n        //    - if there is state with this id of type UPDATE merge new value into state new value\n        //    - if there is state with this id and state type is DELETE change its type to UPDATE\n        //    - if there is no state with this id add transaction to states;\n        if (state) {\n            switch (transaction.type) {\n                case TransactionType.DELETE:\n                    if (state.type === TransactionType.ADD) {\n                        states.delete(transaction.id);\n                    } else if (state.type === TransactionType.UPDATE) {\n                        state.value = transaction.newValue;\n                        state.type = TransactionType.DELETE;\n                    }\n                    break;\n                case TransactionType.UPDATE:\n                    if (isObject(state.value)) {\n                        if (state.type === TransactionType.ADD) {\n                            state.value = this.mergeValues(state.value, transaction.newValue);\n                        }\n                        if (state.type === TransactionType.UPDATE) {\n                            mergeObjects(state.value, transaction.newValue);\n                        }\n                    } else {\n                        state.value = transaction.newValue;\n                    }\n            }\n        } else {\n            state = { value: cloneValue(transaction.newValue), recordRef: recordRef, type: transaction.type } as S;\n            states.set(transaction.id, state);\n        }\n\n        //  should not clean pending state. This will happen automatically on endPending call\n        if (!this._isPending) {\n            this.cleanState(transaction.id, states);\n        }\n    }\n\n    /**\n     * Compares the state with recordRef and clears all duplicated values. If any state ends as\n     * empty object removes it from states.\n     * @param state State to clean\n     */\n    protected cleanState(id: any, states: Map<any, S>): void {\n        const state = states.get(id);\n        //  do nothing if\n        //  there is no state, or\n        //  there is no state value (e.g. DELETED transaction), or\n        //  there is no recordRef (e.g. ADDED transaction)\n        if (state && state.value && state.recordRef) {\n            //  if state's value is object compare each key with the ones in recordRef\n            //  if values in any key are the same delete it from state's value\n            //  if state's value is not object, simply compare with recordRef and remove\n            //  the state if they are equal\n            if (isObject(state.recordRef)) {\n                for (const key of Object.keys(state.value)) {\n                    if (JSON.stringify(state.recordRef[key]) === JSON.stringify(state.value[key])) {\n                        delete state.value[key];\n                    }\n                }\n\n                //  if state's value is empty remove the state from the states, only if state is not DELETE type\n                if (state.type !== TransactionType.DELETE && Object.keys(state.value).length === 0) {\n                    states.delete(id);\n                }\n            } else {\n                if (state.recordRef === state.value) {\n                    states.delete(id);\n                }\n            }\n        }\n    }\n\n    /**\n     * Updates state related record in the provided data\n     * @param data Data source to update\n     * @param state State to update data from\n     */\n    protected updateRecord(data: any[], state: S) {\n        const index = data.findIndex(i => JSON.stringify(i) === JSON.stringify(state.recordRef || {}));\n        switch (state.type) {\n            case TransactionType.ADD:\n                data.push(state.value);\n                break;\n            case TransactionType.DELETE:\n                if (0 <= index && index < data.length) {\n                    data.splice(index, 1);\n                }\n                break;\n            case TransactionType.UPDATE:\n                if (0 <= index && index < data.length) {\n                    data[index] = this.updateValue(state);\n                }\n                break;\n        }\n    }\n}\n","import { HierarchicalTransaction, HierarchicalState, TransactionType } from './transaction';\nimport { Injectable } from '@angular/core';\nimport { IgxTransactionService } from './igx-transaction';\nimport { DataUtil } from '../../data-operations/data-util';\nimport { cloneValue } from '../../core/utils';\n\n/** @experimental @hidden */\n@Injectable()\nexport class IgxHierarchicalTransactionService<T extends HierarchicalTransaction, S extends HierarchicalState>\n    extends IgxTransactionService<T, S> {\n\n    public getAggregatedChanges(mergeChanges: boolean): T[] {\n        const result: T[] = [];\n        this._states.forEach((state: S, key: any) => {\n            const value = mergeChanges ? this.mergeValues(state.recordRef, state.value) : cloneValue(state.value);\n            this.clearArraysFromObject(value);\n            result.push({ id: key, path: state.path, newValue: value, type: state.type } as T);\n        });\n        return result;\n    }\n\n    protected updateState(states: Map<any, S>, transaction: T, recordRef?: any): void {\n        super.updateState(states, transaction, recordRef);\n\n        //  if transaction has no path, e.g. flat data source, get out\n        if (!transaction.path) {\n            return;\n        }\n\n        const currentState = states.get(transaction.id);\n        if (currentState) {\n            currentState.path = transaction.path;\n        }\n\n        //  if transaction has path, Hierarchical data source, and it is DELETE\n        //  type transaction for all child rows remove ADD states and update\n        //  transaction type and value of UPDATE states\n        if (transaction.type === TransactionType.DELETE) {\n            states.forEach((v: S, k: any) => {\n                if (v.path && v.path.indexOf(transaction.id) !== -1) {\n                    switch (v.type) {\n                        case TransactionType.ADD:\n                            states.delete(k);\n                            break;\n                        case TransactionType.UPDATE:\n                            states.get(k).type = TransactionType.DELETE;\n                            states.get(k).value = null;\n                    }\n                }\n            });\n        }\n    }\n\n    /**\n     * Applies all transactions over the provided data\n     * @param data Data source to update\n     * @param primaryKey Primary key of the hierarchical data\n     * @param childDataKey Kye of child data collection\n     * @param id Optional record id to commit transactions for\n     */\n    public commit(data: any[], primaryKey?: any, childDataKey?: any, id?: any): void {\n        if (childDataKey !== undefined) {\n            let transactions = this.getAggregatedChanges(true);\n            if (id !== undefined) {\n                transactions = transactions.filter(t => t.id === id);\n            }\n            DataUtil.mergeHierarchicalTransactions(data, transactions, childDataKey, primaryKey, true);\n        } else {\n            super.commit(data, id);\n        }\n        this.clear(id);\n    }\n\n    //  TODO: remove this method. Force cloning to strip child arrays when needed instead\n    private clearArraysFromObject(obj: {}) {\n        if (obj) {\n            for (const prop of Object.keys(obj)) {\n                if (Array.isArray(obj[prop])) {\n                    delete obj[prop];\n                }\n            }\n        }\n    }\n}\n\n","// Export services\nexport * from './csv/csv-exporter';\nexport * from './csv/csv-exporter-options';\nexport * from './excel/excel-exporter';\nexport * from './excel/excel-exporter-options';\nexport * from './exporter-common/base-export-service';\nexport * from './exporter-common/exporter-options-base';\nexport * from './overlay/overlay';\nexport * from './overlay/position';\nexport {\n    HorizontalAlignment, VerticalAlignment, Point,\n    OverlayEventArgs, OverlayAnimationEventArgs, OverlayCancelableEventArgs, OverlayClosingEventArgs,\n    OverlaySettings, PositionSettings\n} from './overlay/utilities';\nexport * from './overlay/scroll';\nexport * from './transaction/igx-transaction';\nexport * from './transaction/base-transaction';\nexport * from './transaction/transaction';\nexport * from './transaction/igx-hierarchical-transaction';\n","import {\n    ChangeDetectorRef,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    HostListener,\n    Input,\n    NgModule,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    Inject\n} from '@angular/core';\nimport { IgxNavigationService, IToggleView } from '../../core/navigation';\nimport { IgxOverlayService } from '../../services/overlay/overlay';\nimport {\n    AbsoluteScrollStrategy,\n    ConnectedPositioningStrategy,\n    IPositionStrategy,\n    OverlayEventArgs,\n    OverlaySettings\n} from '../../services/public_api';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { Subscription, Subject, MonoTypeOperatorFunction } from 'rxjs';\nimport { OverlayClosingEventArgs } from '../../services/overlay/utilities';\nimport { CancelableEventArgs, CancelableBrowserEventArgs, IBaseEventArgs } from '../../core/utils';\n\n@Directive({\n    exportAs: 'toggle',\n    selector: '[igxToggle]'\n})\nexport class IgxToggleDirective implements IToggleView, OnInit, OnDestroy {\n    protected _overlayId: string;\n    private destroy$ = new Subject<boolean>();\n    private _overlaySubFilter: [MonoTypeOperatorFunction<OverlayEventArgs>, MonoTypeOperatorFunction<OverlayEventArgs>] = [\n        filter(x => x.id === this._overlayId),\n        takeUntil(this.destroy$)\n    ];\n    private _overlayOpenedSub: Subscription;\n    private _overlayClosingSub: Subscription;\n    private _overlayClosedSub: Subscription;\n    private _overlayAppendedSub: Subscription;\n\n    /**\n     * Emits an event after the toggle container is opened.\n     *\n     * ```typescript\n     * onToggleOpened(event) {\n     *    alert(\"Toggle opened!\");\n     * }\n     * ```\n     *\n     * ```html\n     * <div\n     *   igxToggle\n     *   (onOpened)='onToggleOpened($event)'>\n     * </div>\n     * ```\n     */\n    @Output()\n    public onOpened = new EventEmitter();\n\n    /**\n     * Emits an event before the toggle container is opened.\n     *\n     * ```typescript\n     * onToggleOpening(event) {\n     *  alert(\"Toggle opening!\");\n     * }\n     * ```\n     *\n     * ```html\n     * <div\n     *   igxToggle\n     *   (onOpening)='onToggleOpening($event)'>\n     * </div>\n     * ```\n     */\n    @Output()\n    public onOpening = new EventEmitter<CancelableEventArgs & IBaseEventArgs>();\n\n    /**\n     * Emits an event after the toggle container is closed.\n     *\n     * ```typescript\n     * onToggleClosed(event) {\n     *  alert(\"Toggle closed!\");\n     * }\n     * ```\n     *\n     * ```html\n     * <div\n     *   igxToggle\n     *   (onClosed)='onToggleClosed($event)'>\n     * </div>\n     * ```\n     */\n    @Output()\n    public onClosed = new EventEmitter();\n\n    /**\n     * Emits an event before the toggle container is closed.\n     *\n     * ```typescript\n     * onToggleClosing(event) {\n     *  alert(\"Toggle closing!\");\n     * }\n     * ```\n     *\n     * ```html\n     * <div\n     *  igxToggle\n     *  (onClosing)='onToggleClosing($event)'>\n     * </div>\n     * ```\n     */\n    @Output()\n    public onClosing = new EventEmitter<CancelableBrowserEventArgs & IBaseEventArgs>();\n\n    private _collapsed = true;\n    /**\n     * @hidden\n     */\n    public get collapsed(): boolean {\n        return this._collapsed;\n    }\n\n    /**\n     * Identifier which is registered into `IgxNavigationService`\n     *\n     * ```typescript\n     * let myToggleId = this.toggle.id;\n     * ```\n     */\n    @Input()\n    public id: string;\n\n    /**\n     * @hidden\n     */\n    public get element(): HTMLElement {\n        return this.elementRef.nativeElement;\n    }\n\n    /**\n     * @hidden\n     */\n    @HostBinding('class.igx-toggle--hidden')\n    @HostBinding('attr.aria-hidden')\n    public get hiddenClass() {\n        return this.collapsed;\n    }\n\n    /**\n     * @hidden\n     */\n    @HostBinding('class.igx-toggle')\n    public get defaultClass() {\n        return !this.collapsed;\n    }\n\n    /**\n     * @hidden\n     */\n    constructor(\n        private elementRef: ElementRef,\n        private cdr: ChangeDetectorRef,\n        @Inject(IgxOverlayService) protected overlayService: IgxOverlayService,\n        @Optional() private navigationService: IgxNavigationService) {\n    }\n\n    /**\n     * Emits an event after the toggle element is appended to the overlay container.\n     *\n     * ```typescript\n     * onAppended() {\n     *  alert(\"Content appended!\");\n     * }\n     * ```\n     *\n     * ```html\n     * <div\n     *   igxToggle\n     *   (onAppended)='onToggleAppended()'>\n     * </div>\n     * ```\n     */\n    @Output()\n    public onAppended = new EventEmitter();\n\n    /**\n     * Opens the toggle.\n     *\n     * ```typescript\n     * this.myToggle.open();\n     * ```\n     */\n    public open(overlaySettings?: OverlaySettings) {\n        //  if there is open animation do nothing\n        //  if toggle is not collapsed and there is no close animation do nothing\n        const info = this.overlayService.getOverlayById(this._overlayId);\n        const hasOpenAnimation = info ? info.openAnimationPlayer : false;\n        const hasCloseAnimation = info ? info.closeAnimationPlayer : false;\n        if (hasOpenAnimation || !(this._collapsed || hasCloseAnimation)) {\n            return;\n        }\n\n        if (!info) {\n            this._overlayId = this.overlayService.attach(this.elementRef, overlaySettings);\n        }\n\n        this._collapsed = false;\n        this.cdr.detectChanges();\n\n        const openEventArgs: CancelableEventArgs = { cancel: false };\n        this.onOpening.emit(openEventArgs);\n        if (openEventArgs.cancel) {\n            this._collapsed = true;\n            this.cdr.detectChanges();\n            return;\n        }\n\n        this.unsubscribe();\n\n        this._overlayAppendedSub = this.overlayService.onAppended.pipe(...this._overlaySubFilter).subscribe(() => {\n            this.onAppended.emit();\n        });\n\n        this._overlayOpenedSub = this.overlayService.onOpened.pipe(...this._overlaySubFilter).subscribe(() => {\n            this.onOpened.emit();\n        });\n\n        this._overlayClosingSub = this.overlayService\n        .onClosing\n        .pipe(...this._overlaySubFilter)\n        .subscribe((e: OverlayClosingEventArgs) => {\n            const eventArgs: CancelableBrowserEventArgs = { cancel: false, event: e.event };\n            this.onClosing.emit(eventArgs);\n            e.cancel = eventArgs.cancel;\n\n            //  in case event is not canceled this will close the toggle and we need to unsubscribe.\n            //  Otherwise if for some reason, e.g. close on outside click, close() gets called before\n            //  onClosed was fired we will end with calling onClosing more than once\n            if (!e.cancel) {\n                this.clearSubscription(this._overlayClosingSub);\n            }\n        });\n\n        this._overlayClosedSub = this.overlayService.onClosed\n        .pipe(...this._overlaySubFilter)\n        .subscribe(this.overlayClosed);\n\n        this.overlayService.show(this._overlayId, overlaySettings);\n    }\n\n    /**\n     * Closes the toggle.\n     *\n     * ```typescript\n     * this.myToggle.close();\n     * ```\n     */\n    public close() {\n        //  if toggle is collapsed do nothing\n        //  if there is close animation do nothing, toggle will close anyway\n        const info = this.overlayService.getOverlayById(this._overlayId);\n        const hasCloseAnimation = info ? info.closeAnimationPlayer : false;\n        if (this._collapsed || hasCloseAnimation) {\n            return;\n        }\n\n        this.overlayService.hide(this._overlayId);\n    }\n\n    /**\n     * Opens or closes the toggle, depending on its current state.\n     *\n     * ```typescript\n     * this.myToggle.toggle();\n     * ```\n     */\n    public toggle(overlaySettings?: OverlaySettings) {\n        //  if toggle is collapsed call open\n        //  if there is close animation call open\n        if (this.collapsed || this.isClosing) {\n            this.open(overlaySettings);\n        } else {\n            this.close();\n        }\n    }\n\n    /** @hidden @internal */\n    public get isClosing() {\n        const info = this.overlayService.getOverlayById(this._overlayId);\n        return info ? info.closeAnimationPlayer : false;\n    }\n\n    /**\n     * Repositions the toggle.\n     * ```typescript\n     * this.myToggle.reposition();\n     * ```\n     */\n    public reposition() {\n        this.overlayService.reposition(this._overlayId);\n    }\n\n    /**\n     * Offsets the content along the corresponding axis by the provided amount\n     */\n    setOffset(deltaX: number, deltaY: number) {\n        this.overlayService.setOffset(this._overlayId, deltaX, deltaY);\n    }\n\n    /**\n     * @hidden\n     */\n    public ngOnInit() {\n        if (this.navigationService && this.id) {\n            this.navigationService.add(this.id, this);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public ngOnDestroy() {\n        if (this.navigationService && this.id) {\n            this.navigationService.remove(this.id);\n        }\n        if (!this.collapsed && this._overlayId) {\n            this.overlayService.hide(this._overlayId);\n        }\n        this.unsubscribe();\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n\n    private overlayClosed = () => {\n        this._collapsed = true;\n        this.cdr.detectChanges();\n        delete this._overlayId;\n        this.unsubscribe();\n        this.onClosed.emit();\n    }\n\n    private unsubscribe() {\n        this.clearSubscription(this._overlayOpenedSub);\n        this.clearSubscription(this._overlayClosingSub);\n        this.clearSubscription(this._overlayClosedSub);\n        this.clearSubscription(this._overlayAppendedSub);\n    }\n\n    private clearSubscription(subscription: Subscription) {\n        if (subscription && !subscription.closed) {\n            subscription.unsubscribe();\n        }\n    }\n}\n\n@Directive({\n    exportAs: 'toggle-action',\n    selector: '[igxToggleAction]'\n})\nexport class IgxToggleActionDirective implements OnInit {\n    protected _overlayDefaults: OverlaySettings;\n\n    /**\n     * Provide settings that control the toggle overlay positioning, interaction and scroll behavior.\n     * ```typescript\n     * const settings: OverlaySettings = {\n     *      closeOnOutsideClick: false,\n     *      modal: false\n     *  }\n     * ```\n     * ---\n     * ```html\n     * <!--set-->\n     * <div igxToggleAction [overlaySettings]=\"settings\"></div>\n     * ```\n     */\n    @Input()\n    public overlaySettings: OverlaySettings;\n\n    /**\n     * Determines where the toggle element overlay should be attached.\n     *\n     * ```html\n     * <!--set-->\n     * <div igxToggleAction [igxToggleOutlet]=\"outlet\"></div>\n     * ```\n     * Where `outlet` in an instance of `IgxOverlayOutletDirective` or an `ElementRef`\n     */\n    @Input('igxToggleOutlet')\n    public outlet: IgxOverlayOutletDirective | ElementRef;\n\n    /**\n     * @hidden\n     */\n    @Input('igxToggleAction')\n    set target(target: any) {\n        if (target !== null && target !== '') {\n            this._target = target;\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    get target(): any {\n        if (typeof this._target === 'string') {\n            return this.navigationService.get(this._target);\n        }\n        return this._target;\n    }\n\n    protected _target: IToggleView | string;\n\n    constructor(private element: ElementRef, @Optional() private navigationService: IgxNavigationService) { }\n\n    /**\n     * @hidden\n     */\n    public ngOnInit() {\n        this._overlayDefaults = {\n            positionStrategy: new ConnectedPositioningStrategy({ target: this.element.nativeElement }),\n            scrollStrategy: new AbsoluteScrollStrategy(),\n            closeOnOutsideClick: true,\n            modal: false,\n            excludePositionTarget: true\n        };\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('click')\n    public onClick() {\n        if (this.outlet) {\n            this._overlayDefaults.outlet = this.outlet;\n        }\n\n        const clonedSettings = Object.assign({}, this._overlayDefaults, this.overlaySettings);\n        this.updateOverlaySettings(clonedSettings);\n        this.target.toggle(clonedSettings);\n    }\n\n    /**\n     * Updates provided overlay settings\n     * @param settings settings to update\n     * @returns returns updated copy of provided overlay settings\n     */\n    protected updateOverlaySettings(settings: OverlaySettings): OverlaySettings {\n        if (settings && settings.positionStrategy) {\n            const positionStrategyClone: IPositionStrategy = settings.positionStrategy.clone();\n            positionStrategyClone.settings.target = this.element.nativeElement;\n            settings.positionStrategy = positionStrategyClone;\n        }\n\n        return settings;\n    }\n}\n\n/**\n * Mark an element as an igxOverlay outlet container.\n * Directive instance is exported as `overlay-outlet` to be assigned to templates variables:\n * ```html\n * <div igxOverlayOutlet #outlet=\"overlay-outlet\"></div>\n * ```\n */\n@Directive({\n    exportAs: 'overlay-outlet',\n    selector: '[igxOverlayOutlet]'\n})\nexport class IgxOverlayOutletDirective {\n    constructor(public element: ElementRef) { }\n\n    /** @hidden */\n    public get nativeElement() {\n        return this.element.nativeElement;\n    }\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [IgxToggleDirective, IgxToggleActionDirective, IgxOverlayOutletDirective],\n    exports: [IgxToggleDirective, IgxToggleActionDirective, IgxOverlayOutletDirective],\n    providers: [IgxNavigationService]\n})\nexport class IgxToggleModule { }\n","import { CancelableEventArgs, CancelableBrowserEventArgs, IBaseEventArgs } from '../core/utils';\nimport { IgxDropDownItemBaseDirective } from './drop-down-item.base';\nimport { IToggleView } from '../core/navigation/IToggleView';\nimport { EventEmitter, InjectionToken } from '@angular/core';\nimport { DisplayDensityBase } from '../core/density';\n\n/** @hidden */\nexport enum Navigate {\n    Up = -1,\n    Down = 1\n}\n\n/** Key actions that have designated handlers in IgxDropDownComponent */\nexport enum DropDownActionKey {\n    ESCAPE = 'escape',\n    ENTER = 'enter',\n    SPACE = 'space'\n}\n\n/**\n * Interface that encapsulates onSelection event arguments - old selection, new selection and cancel selection.\n * @export\n */\nexport interface ISelectionEventArgs extends CancelableEventArgs, IBaseEventArgs {\n    oldSelection: IgxDropDownItemBaseDirective;\n    newSelection: IgxDropDownItemBaseDirective;\n}\n\n/**\n * Interface for an instance of IgxDropDownNavigationDirective\n * @export\n */\nexport interface IDropDownNavigationDirective {\n    target: any;\n    handleKeyDown(event: KeyboardEvent): void;\n    onArrowDownKeyDown(event?: KeyboardEvent): void;\n    onArrowUpKeyDown(event?: KeyboardEvent): void;\n    onEndKeyDown(event?: KeyboardEvent): void;\n    onHomeKeyDown(event?: KeyboardEvent): void;\n}\n\nexport const IGX_DROPDOWN_BASE = new InjectionToken<IDropDownBase>('IgxDropDownBaseToken');\n\n/**\n * @hidden\n */\nexport interface IDropDownList extends DisplayDensityBase {\n    onSelection: EventEmitter<ISelectionEventArgs>;\n    width: string;\n    height: string;\n    id: string;\n    maxHeight: string;\n    collapsed: boolean;\n    items: IgxDropDownItemBaseDirective[];\n    headers: IgxDropDownItemBaseDirective[];\n    focusedItem: IgxDropDownItemBaseDirective;\n    navigateFirst(): void;\n    navigateLast(): void;\n    navigateNext(): void;\n    navigatePrev(): void;\n    navigateItem(newIndex: number, direction?: Navigate): void;\n    onItemActionKey(key: DropDownActionKey, event?: Event): void;\n}\n\n/**\n * @hidden\n */\nexport interface IDropDownBase extends IDropDownList, IToggleView {\n    selectedItem: any;\n    onOpening: EventEmitter<CancelableEventArgs>;\n    onOpened: EventEmitter<void>;\n    onClosing: EventEmitter<CancelableBrowserEventArgs>;\n    onClosed: EventEmitter<void>;\n    allowItemsFocus?: boolean;\n    setSelectedItem(index: number): void;\n    selectItem(item: IgxDropDownItemBaseDirective, event?: Event): void;\n}\n\n","import { Injectable } from '@angular/core';\n\n/** @hidden */\n@Injectable({\n    providedIn: 'root',\n})\nexport class IgxSelectionAPIService {\n    /**\n     * If primaryKey is defined, then multiple selection is based on the primaryKey, and it is array of numbers, strings, etc.\n     * If the primaryKey is omitted, then selection is based on the item data\n     */\n    protected selection: Map<string,  Set<any>> = new Map<string, Set<any>>();\n\n    /**\n     * Get current component selection.\n     * @param componentID ID of the component.\n     */\n    public get(componentID: string): Set<any> {\n        return this.selection.get(componentID);\n    }\n\n    /**\n     * Set new component selection.\n     * @param componentID ID of the component.\n     * @param newSelection The new component selection to be set.\n     */\n    public set(componentID: string, newSelection: Set<any>) {\n        if (!componentID) {\n            throw Error('Invalid value for component id!');\n        }\n        this.selection.set(componentID, newSelection);\n    }\n\n    /**\n     * Clears selection for component.\n     * @param componentID ID of the component.\n     */\n    public clear(componentID: string) {\n        this.selection.set(componentID, this.get_empty());\n    }\n\n    /**\n     * Get current component selection length.\n     * @param componentID ID of the component.\n     */\n    public size(componentID: string): number {\n        const sel = this.get(componentID);\n        return sel ? sel.size : 0;\n    }\n\n    /**\n     * Creates new selection that consist of the new item added to the current component selection.\n     * The returned collection is new Set,\n     * therefore if you want to update component selection you need to call in addition the set_selection() method\n     * or instead use the select_item() one.\n     * @param componentID ID of the component, which we add new item to.\n     * @param itemID ID of the item to add to component selection.\n     * @param sel Used internally only by the selection (add_items method) to accumulate selection for multiple items.\n     *\n     * @returns Selection after the new item is added.\n     */\n    public add_item(componentID: string, itemID, sel?: Set<any>): Set<any> {\n        if (!sel) {\n            sel = new Set(this.get(componentID));\n        }\n        if (sel === undefined) {\n            sel = this.get_empty();\n        }\n        if (!itemID && itemID !== 0) {\n            throw Error('Invalid value for item id!');\n        }\n        sel.add(itemID);\n        return sel;\n    }\n\n    /**\n     * Creates new selection that consist of the new items added to the current component selection.\n     * The returned collection is new Set,\n     * therefore if you want to update component selection you need to call in addition the set_selection() method\n     * or instead use the select_items() one.\n     * @param componentID ID of the component, which we add new items to.\n     * @param itemIDs Array of IDs of the items to add to component selection.\n     * @param clearSelection If true it will clear previous selection.\n     *\n     * @returns Selection after the new items are added.\n     */\n    public add_items(componentID: string, itemIDs: any[], clearSelection?: boolean): Set<any> {\n        let selection: Set<any>;\n        if (clearSelection) {\n            selection = this.get_empty();\n        } else if (itemIDs && itemIDs.length === 0) {\n            selection = new Set(this.get(componentID));\n        }\n        itemIDs.forEach((item) => selection = this.add_item(componentID, item, selection));\n        return selection;\n    }\n\n    /**\n     * Add item to the current component selection.\n     * @param componentID ID of the component, which we add new item to.\n     * @param itemID ID of the item to add to component selection.\n     * @param sel Used internally only by the selection (select_items method) to accumulate selection for multiple items.\n     */\n    public select_item(componentID: string, itemID, sel?: Set<any>) {\n        this.set(componentID, this.add_item(componentID, itemID, sel));\n    }\n\n    /**\n     * Add items to the current component selection.\n     * @param componentID ID of the component, which we add new items to.\n     * @param itemIDs Array of IDs of the items to add to component selection.\n     * @param clearSelection If true it will clear previous selection.\n     */\n    public select_items(componentID: string, itemID: any[], clearSelection?: boolean) {\n        this.set(componentID, this.add_items(componentID, itemID, clearSelection));\n    }\n\n    /**\n     * Creates new selection that consist of the new items excluded from the current component selection.\n     * The returned collection is new Set,\n     * therefore if you want to update component selection you need to call in addition the set_selection() method\n     * or instead use the deselect_item() one.\n     * @param componentID ID of the component, which we remove items from.\n     * @param itemID ID of the item to remove from component selection.\n     * @param sel Used internally only by the selection (delete_items method) to accumulate deselected items.\n     *\n     * @returns Selection after the item is removed.\n     */\n    public delete_item(componentID: string, itemID, sel?: Set<any>) {\n        if (!sel) {\n            sel = new Set(this.get(componentID));\n        }\n        if (sel === undefined) {\n            return;\n        }\n        sel.delete(itemID);\n        return sel;\n    }\n\n    /**\n     * Creates new selection that consist of the new items removed to the current component selection.\n     * The returned collection is new Set,\n     * therefore if you want to update component selection you need to call in addition the set_selection() method\n     * or instead use the deselect_items() one.\n     * @param componentID ID of the component, which we remove items from.\n     * @param itemID ID of the items to remove from component selection.\n     *\n     * @returns Selection after the items are removed.\n     */\n    public delete_items(componentID: string, itemIDs: any[]): Set<any> {\n        let selection: Set<any>;\n        itemIDs.forEach((deselectedItem) => selection = this.delete_item(componentID, deselectedItem, selection));\n        return selection;\n    }\n\n    /**\n     * Remove item from the current component selection.\n     * @param componentID ID of the component, which we remove item from.\n     * @param itemID ID of the item to remove from component selection.\n     * @param sel Used internally only by the selection (deselect_items method) to accumulate selection for multiple items.\n     */\n    public deselect_item(componentID: string, itemID, sel?: Set<any>) {\n        this.set(componentID, this.delete_item(componentID, itemID, sel));\n    }\n\n    /**\n     * Remove items to the current component selection.\n     * @param componentID ID of the component, which we add new items to.\n     * @param itemIDs Array of IDs of the items to add to component selection.\n     */\n    public deselect_items(componentID: string, itemID: any[], clearSelection?: boolean) {\n        this.set(componentID, this.delete_items(componentID, itemID));\n    }\n\n    /**\n     * Check if the item is selected in the component selection.\n     * @param componentID ID of the component.\n     * @param itemID ID of the item to search.\n     *\n     * @returns If item is selected.\n     */\n    public is_item_selected(componentID: string, itemID): boolean {\n        const sel = this.get(componentID);\n        if (!sel) {\n            return false;\n        }\n        return sel.has(itemID);\n    }\n\n    /**\n     * Get first element in the selection.\n     * This is correct when we have only one item in the collection (for single selection purposes)\n     * and the method returns that item.\n     * @param componentID ID of the component.\n     *\n     * @returns First element in the set.\n     */\n    public first_item(componentID: string) {\n        const sel = this.get(componentID);\n        if (sel && sel.size > 0) {\n            return sel.values().next().value;\n       }\n    }\n\n    /**\n     * Returns whether all items are selected.\n     * @param componentID ID of the component.\n     * @param dataCount: number Number of items in the data.\n     *\n     * @returns If all items are selected.\n     */\n    public are_all_selected(componentID: string, dataCount: number): boolean {\n        return dataCount > 0 && dataCount === this.size(componentID);\n    }\n\n    /**\n     * Returns whether any of the items is selected.\n     * @param componentID ID of the component.\n     * @param data Entire data array.\n     *\n     * @returns If there is any item selected.\n     */\n    public are_none_selected(componentID: string): boolean {\n        return this.size(componentID) === 0;\n    }\n\n    /**\n     * Get all primary key values from a data array. If there isn't a primary key defined that the entire data is returned instead.\n     * @param data Entire data array.\n     * @param primaryKey Data primary key.\n     *\n     * @returns Array of identifiers, either primary key values or the entire data array.\n     */\n    public get_all_ids(data, primaryKey?) {\n        // If primaryKey is 0, this should still map to the property\n        return primaryKey !== undefined && primaryKey !== null ? data.map((x) => x[primaryKey]) : data;\n    }\n\n    /**\n     * Returns empty selection collection.\n     * @returns empty set.\n     */\n    public get_empty() {\n        return new Set();\n    }\n}\n","import { Component, Input, HostBinding } from '@angular/core';\n\nlet NEXT_ID = 0;\n/**\n * The `<igx-drop-down-item>` is a container intended for row items in\n * a `<igx-drop-down>` container.\n */\n@Component({\n    selector: 'igx-drop-down-item-group',\n    template: `\n        <label id=\"{{labelId}}\">{{ label }}</label>\n        <ng-content select=\"igx-drop-down-item\"></ng-content>\n    `\n})\nexport class IgxDropDownGroupComponent {\n    private _id = NEXT_ID++;\n\n    /**\n     * @hidden @internal\n     */\n    public get labelId(): string {\n        return `igx-item-group-label-${this._id}`;\n    }\n\n    @HostBinding(`attr.aria-labelledby`)\n    public get labelledBy(): string {\n        return this.labelId;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    @HostBinding('attr.role')\n    public role = 'group';\n\n    /** @hidden @internal */\n    @HostBinding('class.igx-drop-down__group')\n    public groupClass = true;\n    /**\n     * Sets/gets if the item group is disabled\n     *\n     * ```typescript\n     * const myDropDownGroup: IgxDropDownGroupComponent = this.dropdownGroup;\n     * // get\n     * ...\n     * const groupState: boolean = myDropDownGroup.disabled;\n     * ...\n     * //set\n     * ...\n     * myDropDownGroup,disabled = false;\n     * ...\n     * ```\n     *\n     * ```html\n     * <igx-drop-down-item-group [label]=\"'My Items'\" [disabled]=\"true\">\n     *     <igx-drop-down-item *ngFor=\"let item of items[index]\" [value]=\"item.value\">\n     *         {{ item.text }}\n     *     </igx-drop-down-item>\n     * </igx-drop-down-item-group>\n     * ```\n     *\n     * **NOTE:** All items inside of a disabled drop down group will be treated as disabled\n     */\n    @Input()\n    @HostBinding(`attr.aria-disabled`)\n    @HostBinding('class.igx-drop-down__group--disabled')\n    public disabled = false;\n\n    /**\n     * Sets/gets the label of the item group\n     *\n     * ```typescript\n     * const myDropDownGroup: IgxDropDownGroupComponent = this.dropdownGroup;\n     * // get\n     * ...\n     * const myLabel: string = myDropDownGroup.label;\n     * ...\n     * // set\n     * ...\n     * myDropDownGroup.label = 'My New Label';\n     * ...\n     * ```\n     *\n     * ```html\n     * <igx-drop-down-item-group [label]=\"'My new Label'\">\n     *      ...\n     * </igx-drop-down-item-group>\n     * ```\n     */\n    @Input()\n    public label: string;\n}\n","import { IDropDownBase, IGX_DROPDOWN_BASE } from './drop-down.common';\nimport { Directive, Input, HostBinding, HostListener, ElementRef, Optional, Inject, DoCheck, Output, EventEmitter } from '@angular/core';\nimport { IgxSelectionAPIService } from '../core/selection';\nimport { DeprecateProperty, showMessage } from '../core/deprecateDecorators';\nimport { IgxDropDownGroupComponent } from './drop-down-group.component';\n\nlet NEXT_ID = 0;\nlet warningShown = false;\n\n/**\n * An abstract class defining a drop-down item:\n * With properties / styles for selection, highlight, height\n * Bindable property for passing data (`value: any`)\n * Parent component (has to be used under a parent with type `IDropDownBase`)\n * Method for handling click on Host()\n */\n@Directive({\n    selector: '[igxDropDownItemBase]'\n})\nexport class IgxDropDownItemBaseDirective implements DoCheck {\n    /**\n     * @hidden\n     */\n    protected _focused = false;\n    protected _selected = false;\n    protected _index = null;\n    protected _disabled = false;\n    protected get hasIndex(): boolean {\n        return this._index !== null && this._index !== undefined;\n    }\n\n    /**\n     * Sets/gets the `id` of the item.\n     * ```html\n     * <igx-drop-down-item [id] = 'igx-drop-down-item-0'></igx-drop-down-item>\n     * ```\n     * ```typescript\n     * let itemId =  this.item.id;\n     * ```\n     * @memberof IgxSelectItemComponent\n     */\n    @HostBinding('attr.id')\n    @Input()\n    public id = `igx-drop-down-item-${NEXT_ID++}`;\n\n    /**\n     * @hidden @internal\n     */\n    public get itemID() {\n        return this;\n    }\n\n    /**\n     * The data index of the dropdown item.\n     *\n     * ```typescript\n     * // get the data index of the selected dropdown item\n     * let selectedItemIndex = this.dropdown.selectedItem.index\n     * ```\n     */\n    @Input()\n    public get index(): number {\n        if (this._index === null) {\n            warningShown = showMessage(\n                'IgxDropDownItemBaseDirective: Automatic index is deprecated.' +\n                'Bind in the template instead using `<igx-drop-down-item [index]=\"i\"` instead.`',\n                warningShown);\n            return this.itemIndex;\n        }\n        return this._index;\n    }\n\n    public set index(value) {\n        this._index = value;\n    }\n\n    /**\n     * Gets/sets the value of the item if the item is databound\n     *\n     * ```typescript\n     * // usage in IgxDropDownItemComponent\n     * // get\n     * let mySelectedItemValue = this.dropdown.selectedItem.value;\n     *\n     * // set\n     * let mySelectedItem = this.dropdown.selectedItem;\n     * mySelectedItem.value = { id: 123, name: 'Example Name' }\n     *\n     * // usage in IgxComboItemComponent\n     * // get\n     * let myComboItemValue = this.combo.items[0].value;\n     * ```\n     */\n    @Input()\n    public value: any;\n\n    /**\n     * @hidden @internal\n     */\n    @HostBinding('class.igx-drop-down__item')\n    get itemStyle(): boolean {\n        return !this.isHeader;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    @HostBinding('class.igx-drop-down__item--cosy')\n    public get itemStyleCosy() {\n        return this.dropDown.displayDensity === 'cosy' && !this.isHeader;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    @HostBinding('class.igx-drop-down__item--compact')\n    public get itemStyleCompact() {\n        return this.dropDown.displayDensity === 'compact' && !this.isHeader;\n    }\n\n    /**\n     * Sets/Gets if the item is the currently selected one in the dropdown\n     *\n     * ```typescript\n     *  let mySelectedItem = this.dropdown.selectedItem;\n     *  let isMyItemSelected = mySelectedItem.selected; // true\n     * ```\n     *\n     * Two-way data binding\n     * ```html\n     * <igx-drop-down-item [(selected)]='model.isSelected'></igx-drop-down-item>\n     * ```\n     */\n    @Input()\n    @HostBinding('attr.aria-selected')\n    @HostBinding('class.igx-drop-down__item--selected')\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    set selected(value: boolean) {\n        if (this.isHeader) {\n            return;\n        }\n        this._selected = value;\n        this.selectedChange.emit(this._selected);\n    }\n\n    /**\n     * @hidden\n     */\n    @Output()\n    public selectedChange = new EventEmitter<boolean>();\n\n    /**\n     * Sets/gets if the given item is focused\n     * ```typescript\n     *  let mySelectedItem = this.dropdown.selectedItem;\n     *  let isMyItemFocused = mySelectedItem.focused;\n     * ```\n     */\n    @HostBinding('class.igx-drop-down__item--focused')\n    get focused(): boolean {\n        return this.isSelectable && this._focused;\n    }\n\n    /**\n     * ```html\n     *  <igx-drop-down-item *ngFor=\"let item of items\" focused={{!item.focused}}>\n     *      <div>\n     *          {{item.field}}\n     *      </div>\n     *  </igx-drop-down-item>\n     * ```\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    /**\n     * Sets/gets if the given item is header\n     * ```typescript\n     *  // get\n     *  let mySelectedItem = this.dropdown.selectedItem;\n     *  let isMyItemHeader = mySelectedItem.isHeader;\n     * ```\n     *\n     * ```html\n     *  <!--set-->\n     *  <igx-dropdown-item *ngFor=\"let item of items\">\n     *      <div *ngIf=\"items.indexOf(item) === 5; then item.isHeader = true\">\n     *          {{item.field}}\n     *      </div>\n     *  </igx-drop-down-item>\n     * ```\n     */\n    @Input()\n    @HostBinding('class.igx-drop-down__header')\n    public isHeader: boolean;\n\n    /**\n     * @hidden @internal\n     */\n    @HostBinding('class.igx-drop-down__header--cosy')\n    public get headerClassCosy() {\n        return this.isHeader && this.dropDown.displayDensity === 'cosy';\n    }\n\n    /**\n     * @hidden @internal\n     */\n    @HostBinding('class.igx-drop-down__header--compact')\n    public get headerClassCompact() {\n        return this.isHeader && this.dropDown.displayDensity === 'compact';\n    }\n\n    /**\n     * Sets/gets if the given item is disabled\n     *\n     * ```typescript\n     *  // get\n     *  let mySelectedItem = this.dropdown.selectedItem;\n     *  let myItemIsDisabled = mySelectedItem.disabled;\n     * ```\n     *\n     * ```html\n     *  <igx-drop-down-item *ngFor=\"let item of items\" disabled={{!item.disabled}}>\n     *      <div>\n     *          {{item.field}}\n     *      </div>\n     *  </igx-drop-down-item>\n     * ```\n     * **NOTE:** Drop-down items inside of a disabled `IgxDropDownGroup` will always count as disabled\n     */\n    @Input()\n    @HostBinding('attr.aria-disabled')\n    @HostBinding('class.igx-drop-down__item--disabled')\n    public get disabled(): boolean {\n        return this.group ? this.group.disabled || this._disabled : this._disabled;\n    }\n\n    public set disabled(value: boolean) {\n        this._disabled = value;\n    }\n\n    /**\n     * Gets/sets the `role` attribute of the item. Default is 'option'.\n     *\n     * ```html\n     *  <igx-drop-down-item [role]=\"customRole\"></igx-drop-down-item>\n     * ```\n     */\n    @Input()\n    @HostBinding('attr.role')\n    public role = 'option';\n\n    /**\n     * Gets item index\n     * @hidden @internal\n     */\n    public get itemIndex(): number {\n        return this.dropDown.items.indexOf(this);\n    }\n\n    /**\n     * Gets item element height\n     * @hidden @internal\n     */\n    public get elementHeight(): number {\n        return this.elementRef.nativeElement.clientHeight;\n    }\n\n    /**\n     * Get item html element\n     * @hidden @internal\n     */\n    public get element(): ElementRef {\n        return this.elementRef;\n    }\n\n    constructor(\n        @Inject(IGX_DROPDOWN_BASE) protected dropDown: IDropDownBase,\n        protected elementRef: ElementRef,\n        @Optional() protected group: IgxDropDownGroupComponent,\n        @Optional() @Inject(IgxSelectionAPIService) protected selection?: IgxSelectionAPIService\n    ) { }\n\n    ngDoCheck(): void {\n        if (this._selected) {\n            const dropDownSelectedItem = this.dropDown.selectedItem;\n            if (!dropDownSelectedItem) {\n                this.dropDown.selectItem(this);\n            } else if (this.hasIndex\n                ? this._index !== dropDownSelectedItem.index || this.value !== dropDownSelectedItem.value :\n                this !== dropDownSelectedItem) {\n                this.dropDown.selectItem(this);\n            }\n        }\n    }\n\n    /** Returns true if the items is not a header or disabled  */\n    protected get isSelectable(): boolean {\n        return  !(this.disabled || this.isHeader);\n    }\n\n    /** If `allowItemsFocus` is enabled, keep the browser focus on the active item */\n    protected ensureItemFocus() {\n        if (this.dropDown.allowItemsFocus) {\n            const focusedItem = this.dropDown.items.find((item) => item.focused);\n            if (!focusedItem) { return; }\n            focusedItem.element.nativeElement.focus({ preventScroll: true });\n        }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @HostListener('click', ['$event'])\n    clicked(event): void {\n    }\n}\n","import {\n    Component,\n    HostBinding\n} from '@angular/core';\nimport { IgxDropDownItemBaseDirective } from './drop-down-item.base';\n\n/**\n * The `<igx-drop-down-item>` is a container intended for row items in\n * a `<igx-drop-down>` container.\n */\n@Component({\n    selector: 'igx-drop-down-item',\n    templateUrl: 'drop-down-item.component.html'\n})\nexport class IgxDropDownItemComponent extends IgxDropDownItemBaseDirective {\n    /**\n     * @inheritdoc\n     */\n    get focused(): boolean {\n        let focusedState = this._focused;\n        if (this.hasIndex) {\n            const focusedItem = this.selection.first_item(`${this.dropDown.id}-active`);\n            const focusedIndex = focusedItem ? focusedItem.index : -1;\n            focusedState = this._index === focusedIndex;\n        }\n        return this.isSelectable && focusedState;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n    /**\n     * @inheritdoc\n     */\n    get selected(): boolean {\n        if (this.hasIndex) {\n            const item = this.selection.first_item(`${this.dropDown.id}`);\n            return item ? item.index === this._index && item.value === this.value : false;\n        }\n        return this._selected;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    set selected(value: boolean) {\n        if (this.isHeader) {\n            return;\n        }\n        this._selected = value;\n        this.selectedChange.emit(this._selected);\n    }\n    /**\n     * @hidden @internal\n     */\n    @HostBinding('attr.tabindex')\n    get setTabIndex() {\n        const shouldSetTabIndex = this.dropDown.allowItemsFocus && this.isSelectable;\n        if (shouldSetTabIndex) {\n            return 0;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    clicked(event): void {\n        if (!this.isSelectable) {\n            this.ensureItemFocus();\n            return;\n        }\n        if (this.selection) {\n            this.dropDown.selectItem(this, event);\n        }\n    }\n}\n","import { InjectionToken, Input, Output, EventEmitter, DoCheck, OnInit, Directive, NgModule, Optional, Inject } from '@angular/core';\nimport { IBaseEventArgs } from './utils';\n\n\n/**\n * Defines the posible values of the components' display density.\n */\nexport enum DisplayDensity {\n    comfortable = 'comfortable',\n    cosy = 'cosy',\n    compact = 'compact'\n}\n\n/**\n * Describes the object used to configure the DisplayDensity in Angular DI.\n */\nexport interface IDisplayDensityOptions {\n    displayDensity: DisplayDensity;\n}\n\nexport interface IDensityChangedEventArgs extends IBaseEventArgs {\n    oldDensity: DisplayDensity;\n    newDensity: DisplayDensity;\n}\n\n/**\n * Defines the DisplayDensity DI token.\n */\nexport const DisplayDensityToken = new InjectionToken<IDisplayDensityOptions>('DisplayDensity');\n\n/**\n * Base class containing all logic required for implementing DisplayDensity.\n */\n@Directive({\n    selector: '[igxDisplayDensityBase]'\n})\n// tslint:disable-next-line: directive-class-suffix\nexport class DisplayDensityBase implements DoCheck, OnInit {\n    protected _displayDensity: DisplayDensity;\n\n    /**\n     * @hidden\n     */\n    public initialDensity: DisplayDensity;\n\n    /**\n     * Returns the theme of the component.\n     * The default theme is `comfortable`.\n     * Available options are `comfortable`, `cosy`, `compact`.\n     * ```typescript\n     * let componentTheme = this.component.displayDensity;\n     * ```\n     */\n    @Input()\n    public get displayDensity(): DisplayDensity | string {\n        return this._displayDensity ||\n            ((this.displayDensityOptions && this.displayDensityOptions.displayDensity) || DisplayDensity.comfortable);\n    }\n\n    /**\n     * Sets the theme of the component.\n     */\n    public set displayDensity(val: DisplayDensity | string) {\n        const currentDisplayDensity = this._displayDensity;\n        this._displayDensity = val as DisplayDensity;\n\n        if (currentDisplayDensity !== this._displayDensity) {\n            const densityChangedArgs: IDensityChangedEventArgs = {\n                oldDensity: currentDisplayDensity,\n                newDensity: this._displayDensity\n            };\n\n            this.onDensityChanged.emit(densityChangedArgs);\n        }\n    }\n\n    @Output()\n    public onDensityChanged = new EventEmitter<IDensityChangedEventArgs>();\n\n    protected oldDisplayDensityOptions: IDisplayDensityOptions = { displayDensity: DisplayDensity.comfortable };\n\n\n    constructor(@Optional() @Inject(DisplayDensityToken) protected displayDensityOptions: IDisplayDensityOptions) {\n        Object.assign(this.oldDisplayDensityOptions, displayDensityOptions);\n    }\n\n    /**\n     * @hidden\n     */\n    public ngOnInit(): void {\n        this.initialDensity = this._displayDensity;\n    }\n\n    public ngDoCheck() {\n        if (!this._displayDensity && this.displayDensityOptions &&\n                this.oldDisplayDensityOptions.displayDensity !== this.displayDensityOptions.displayDensity) {\n            const densityChangedArgs: IDensityChangedEventArgs = {\n                oldDensity: this.oldDisplayDensityOptions.displayDensity,\n                newDensity: this.displayDensityOptions.displayDensity\n            };\n\n            this.onDensityChanged.emit(densityChangedArgs);\n            this.oldDisplayDensityOptions = Object.assign(this.oldDisplayDensityOptions, this.displayDensityOptions);\n        }\n    }\n\n    /**\n     * Given a style class of a component/element returns the modified version of it based\n     * on the current display density.\n     */\n    protected getComponentDensityClass(baseStyleClass: string): string {\n        switch (this.displayDensity) {\n            case DisplayDensity.cosy:\n                return `${baseStyleClass}--${DisplayDensity.cosy}`;\n            case DisplayDensity.compact:\n                return `${baseStyleClass}--${DisplayDensity.compact}`;\n            default:\n                return baseStyleClass;\n        }\n    }\n}\n\n@NgModule({\n    declarations: [\n        DisplayDensityBase\n    ],\n    exports: [\n        DisplayDensityBase\n    ]\n})\nexport class IgxDisplayDensityModule {}\n","import {\n    Input, HostBinding, ElementRef, QueryList, Output, EventEmitter, ChangeDetectorRef, Optional, Inject, Directive\n} from '@angular/core';\n\nimport { Navigate, ISelectionEventArgs } from './drop-down.common';\nimport { IDropDownList } from './drop-down.common';\nimport { DropDownActionKey } from './drop-down.common';\nimport { IgxDropDownItemBaseDirective } from './drop-down-item.base';\nimport { DisplayDensityBase, DisplayDensityToken, IDisplayDensityOptions } from '../core/density';\n\nlet NEXT_ID = 0;\n\n/**\n * An abstract class, defining a drop-down component, with:\n * Properties for display styles and classes\n * A collection items of type `IgxDropDownItemBaseDirective`\n * Properties and methods for navigating (highlighting/focusing) items from the collection\n * Properties and methods for selecting items from the collection\n */\n@Directive({\n    selector: '[igxDropDownBase]'\n})\nexport class IgxDropDownBaseDirective extends DisplayDensityBase implements IDropDownList {\n    protected _width;\n    protected _height;\n    protected _focusedItem: any = null;\n    protected _id = `igx-drop-down-${NEXT_ID++}`;\n\n    /**\n     * @hidden @internal\n     * Get dropdown's html element of its scroll container\n     */\n    public get scrollContainer(): HTMLElement {\n        return this.element;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public children: QueryList<IgxDropDownItemBaseDirective>;\n\n    /**\n     * Emitted when item selection is changing, before the selection completes\n     *\n     * ```html\n     * <igx-drop-down (onSelection)='handleSelection()'></igx-drop-down>\n     * ```\n     */\n    @Output()\n    public onSelection = new EventEmitter<ISelectionEventArgs>();\n\n    /**\n     *  Gets/Sets the width of the drop down\n     *\n     * ```typescript\n     * // get\n     * let myDropDownCurrentWidth = this.dropdown.width;\n     * ```\n     * ```html\n     * <!--set-->\n     * <igx-drop-down [width]='160px'></igx-drop-down>\n     * ```\n     */\n    @Input()\n    public width: string;\n\n    /**\n     * Gets/Sets the height of the drop down\n     *\n     * ```typescript\n     * // get\n     * let myDropDownCurrentHeight = this.dropdown.height;\n     * ```\n     * ```html\n     * <!--set-->\n     * <igx-drop-down [height]='400px'></igx-drop-down>\n     * ```\n     */\n    @Input()\n    public height: string;\n\n    /**\n     * Gets/Sets the drop down's id\n     *\n     * ```typescript\n     * // get\n     * let myDropDownCurrentId = this.dropdown.id;\n     * ```\n     * ```html\n     * <!--set-->\n     * <igx-drop-down [id]='newDropDownId'></igx-drop-down>\n     * ```\n     */\n    @Input()\n    public id: string;\n\n    /**\n     * Gets/Sets the drop down's container max height.\n     *\n     * ```typescript\n     * // get\n     * let maxHeight = this.dropdown.maxHeight;\n     * ```\n     * ```html\n     * <!--set-->\n     * <igx-drop-down [maxHeight]='200px'></igx-drop-down>\n     * ```\n     */\n    @Input()\n    @HostBinding('style.maxHeight')\n    public maxHeight = null;\n\n    /**\n     * @hidden @internal\n     */\n    @HostBinding('class.igx-drop-down')\n    public cssClass = true;\n\n    /**\n     * Get all non-header items\n     *\n     * ```typescript\n     * let myDropDownItems = this.dropdown.items;\n     * ```\n     */\n    public get items(): IgxDropDownItemBaseDirective[] {\n        const items: IgxDropDownItemBaseDirective[] = [];\n        if (this.children !== undefined) {\n            for (const child of this.children.toArray()) {\n                if (!child.isHeader) {\n                    items.push(child);\n                }\n            }\n        }\n\n        return items;\n    }\n\n    /**\n     * Get all header items\n     *\n     * ```typescript\n     * let myDropDownHeaderItems = this.dropdown.headers;\n     * ```\n     */\n    public get headers(): IgxDropDownItemBaseDirective[] {\n        const headers: IgxDropDownItemBaseDirective[] = [];\n        if (this.children !== undefined) {\n            for (const child of this.children.toArray()) {\n                if (child.isHeader) {\n                    headers.push(child);\n                }\n            }\n        }\n\n        return headers;\n    }\n\n    /**\n     * Get dropdown html element\n     *\n     * ```typescript\n     * let myDropDownElement = this.dropdown.element;\n     * ```\n     */\n    public get element() {\n        return this.elementRef.nativeElement;\n    }\n\n    /**\n     * Gets if the dropdown is collapsed\n     */\n    public collapsed: boolean;\n\n    constructor(\n        protected elementRef: ElementRef,\n        protected cdr: ChangeDetectorRef,\n        @Optional() @Inject(DisplayDensityToken) protected _displayDensityOptions: IDisplayDensityOptions) {\n            super(_displayDensityOptions);\n        }\n\n    /** Keydown Handler */\n    public onItemActionKey(key: DropDownActionKey, event?: Event) {\n        switch (key) {\n            case DropDownActionKey.ENTER:\n            case DropDownActionKey.SPACE:\n                this.selectItem(this.focusedItem, event);\n                break;\n            case DropDownActionKey.ESCAPE:\n        }\n    }\n\n    /**\n     * Emits onSelection with the target item & event\n     * @hidden @internal\n     * @param newSelection the item selected\n     * @param event the event that triggered the call\n     */\n    public selectItem(newSelection?: IgxDropDownItemBaseDirective, event?: Event) {\n        this.onSelection.emit({\n            newSelection,\n            oldSelection: null,\n            cancel: false\n        });\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public get focusedItem(): IgxDropDownItemBaseDirective {\n        return this._focusedItem;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public set focusedItem(item: IgxDropDownItemBaseDirective) {\n        this._focusedItem = item;\n    }\n\n    protected navigate(direction: Navigate, currentIndex?: number) {\n        let index = -1;\n        if (this._focusedItem) {\n            index = currentIndex ? currentIndex : this.focusedItem.itemIndex;\n        }\n        const newIndex = this.getNearestSiblingFocusableItemIndex(index, direction);\n        this.navigateItem(newIndex);\n    }\n\n    protected getNearestSiblingFocusableItemIndex(startIndex: number, direction: Navigate): number {\n        let index = startIndex;\n        const items = this.items;\n        while (items[index + direction] && items[index + direction].disabled) {\n            index += direction;\n        }\n\n        index += direction;\n        if (index >= 0 && index < items.length) {\n            return index;\n        } else {\n            return -1;\n        }\n    }\n\n    /**\n     * Navigates to the item on the specified index\n     * @param newIndex number - the index of the item in the `items` collection\n     */\n    public navigateItem(newIndex: number) {\n        if (newIndex !== -1) {\n            const oldItem = this._focusedItem;\n            const newItem = this.items[newIndex];\n            if (oldItem) {\n                oldItem.focused = false;\n            }\n            this.focusedItem = newItem;\n            this.scrollToHiddenItem(newItem);\n            this.focusedItem.focused = true;\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public navigateFirst() {\n        this.navigate(Navigate.Down, -1);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public navigateLast() {\n        this.navigate(Navigate.Up, this.items.length);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public navigateNext() {\n        this.navigate(Navigate.Down);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public navigatePrev() {\n        this.navigate(Navigate.Up);\n    }\n\n    protected scrollToHiddenItem(newItem: IgxDropDownItemBaseDirective) {\n        const elementRect = newItem.element.nativeElement.getBoundingClientRect();\n        const parentRect = this.scrollContainer.getBoundingClientRect();\n        if (parentRect.top > elementRect.top) {\n            this.scrollContainer.scrollTop -= (parentRect.top - elementRect.top);\n        }\n\n        if (parentRect.bottom < elementRect.bottom) {\n            this.scrollContainer.scrollTop += (elementRect.bottom - parentRect.bottom);\n        }\n    }\n}\n","import {\n    ChangeDetectorRef,\n    Component,\n    HostBinding,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\n\n@Component({\n    selector: 'igx-display-container',\n    template: `\n        <ng-template\n            #display_container\n            igxScrollInertia\n            [IgxScrollInertiaScrollContainer]=\"scrollContainer\"\n            [IgxScrollInertiaDirection]=\"scrollDirection\">\n        </ng-template>\n    `\n})\nexport class DisplayContainerComponent {\n    @ViewChild('display_container', { read: ViewContainerRef, static: true })\n    public _vcr;\n\n    public scrollDirection: string;\n\n    @HostBinding('class')\n    public cssClass = 'igx-display-container';\n\n    @HostBinding('class.igx-display-container--inactive')\n    public notVirtual = true;\n\n    public scrollContainer;\n\n    constructor(public cdr: ChangeDetectorRef, public _viewContainer: ViewContainerRef) { }\n}\n","import {\n    EventEmitter,\n    Output,\n    HostListener,\n    ElementRef,\n    ChangeDetectorRef,\n    OnDestroy,\n    Directive,\n    AfterViewInit\n} from '@angular/core';\n\n@Directive({\n    selector: '[igxVirtualHelperBase]'\n})\nexport class VirtualHelperBaseDirective implements OnDestroy, AfterViewInit {\n    public scrollAmount = 0;\n\n    public _size = 0;\n\n    public destroyed;\n\n    private _afterViewInit = false;\n\n    ngAfterViewInit() {\n        this._afterViewInit = true;\n    }\n\n    @HostListener('scroll', ['$event'])\n    onScroll(event) {\n        this.scrollAmount = event.target.scrollTop || event.target.scrollLeft;\n    }\n    constructor(public elementRef: ElementRef, public cdr: ChangeDetectorRef) { }\n\n    get nativeElement() {\n        return this.elementRef.nativeElement;\n    }\n\n    public ngOnDestroy() {\n        this.destroyed = true;\n    }\n\n    public set size(value) {\n        if (this.destroyed) {\n            return;\n        }\n        this._size = value;\n        if (this._afterViewInit) {\n            this.cdr.detectChanges();\n        }\n    }\n\n    public get size() {\n        return this._size;\n    }\n}\n","import { Component, ElementRef, HostBinding, Input, ViewChild, ViewContainerRef, ChangeDetectorRef } from '@angular/core';\nimport { VirtualHelperBaseDirective } from './base.helper.component';\n\n/**\n * @hidden\n */\n@Component({\n    selector: 'igx-horizontal-virtual-helper',\n    template: '<div #horizontal_container class=\"igx-vhelper__placeholder-content\" [style.width.px]=\"size\"></div>'\n})\nexport class HVirtualHelperComponent extends VirtualHelperBaseDirective {\n    @ViewChild('horizontal_container', { read: ViewContainerRef, static: true }) public _vcr;\n    @Input() public width: number;\n    @HostBinding('class')\n    public cssClasses = 'igx-vhelper--horizontal';\n\n    constructor(public elementRef: ElementRef, public cdr: ChangeDetectorRef) {\n        super(elementRef, cdr);\n     }\n}\n","import { Component, ElementRef, HostBinding, Input, ViewChild, ViewContainerRef,\n     ChangeDetectorRef, OnDestroy, OnInit } from '@angular/core';\nimport { VirtualHelperBaseDirective } from './base.helper.component';\n\n@Component({\n    selector: 'igx-virtual-helper',\n    template: '<div #container class=\"igx-vhelper__placeholder-content\" [style.height.px]=\"size\"></div>'\n})\nexport class VirtualHelperComponent extends VirtualHelperBaseDirective implements OnInit, OnDestroy  {\n    @HostBinding('scrollTop')\n    public scrollTop;\n\n    @HostBinding('style.width.px')\n    public scrollWidth;\n\n    @ViewChild('container', { read: ViewContainerRef, static: true }) public _vcr;\n    @Input() public itemsLength: number;\n\n\n    @HostBinding('class')\n    public cssClasses = 'igx-vhelper--vertical';\n\n    constructor(public elementRef: ElementRef, public cdr: ChangeDetectorRef) {\n        super(elementRef, cdr);\n    }\n\n    ngOnInit() {\n        this.scrollWidth = this.getScrollWidth();\n    }\n\n    private getScrollWidth() {\n        const div = document.createElement('div');\n        const style = div.style;\n        style.width = '100px';\n        style.height = '100px';\n        style.position = 'absolute';\n        style.top = '-10000px';\n        style.top = '-10000px';\n        style.overflow = 'scroll';\n        document.body.appendChild(div);\n        const scrollWidth = div.offsetWidth - div.clientWidth;\n        document.body.removeChild(div);\n        return scrollWidth ? scrollWidth + 1 : 0;\n    }\n\n}\n","import { Directive, Input, ElementRef, NgZone, OnInit, NgModule, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @hidden\n */\n@Directive({ selector: '[igxScrollInertia]' })\nexport class IgxScrollInertiaDirective implements OnInit, OnDestroy {\n\n    constructor(private element: ElementRef, private _zone: NgZone) {\n\n    }\n\n    @Input()\n    public IgxScrollInertiaDirection: string;\n\n    @Input()\n    public IgxScrollInertiaScrollContainer: any;\n\n    @Input()\n    public wheelStep = 50;\n\n    @Input()\n    public inertiaStep = 1.5;\n\n    @Input()\n    public swipeToleranceX = 20;\n\n    @Input()\n    public inertiaDeltaY = 3;\n\n    @Input()\n    public inertiaDeltaX = 2;\n\n    @Input()\n    public inertiaDuration = 0.5;\n\n    private _touchInertiaAnimID;\n    private _startX;\n    private _startY;\n    private _touchStartX;\n    private _touchStartY;\n    private _lastTouchEnd;\n    private _lastTouchX;\n    private _lastTouchY;\n    private _savedSpeedsX = [];\n    private _savedSpeedsY;\n    private _totalMovedX;\n    private _offsetRecorded;\n    private _offsetDirection;\n    private _touchPrevented;\n    private _lastMovedX;\n    private _lastMovedY;\n    private _gestureObject;\n    private setPointerCaptureFName = typeof Element.prototype['msSetPointerCapture'] === 'function' ?\n    'msSetPointerCapture' :\n    'setPointerCapture';\n    private releasePointerCaptureFName = typeof Element.prototype['msReleasePointerCapture'] === 'function' ?\n    'msReleasePointerCapture' :\n    'releasePointerCapture';\n    private _pointer;\n    private _nextX;\n    private _nextY;\n    private parentElement;\n\n    ngOnInit(): void {\n        this._zone.runOutsideAngular(() => {\n            this.parentElement = this.element.nativeElement.parentElement || this.element.nativeElement.parentNode;\n            const targetElem = this.parentElement;\n            targetElem.addEventListener('wheel',\n                    (evt) => { this.onWheel(evt); });\n            targetElem.addEventListener('touchstart',\n                    (evt) => { this.onTouchStart(evt); });\n            targetElem.addEventListener('touchmove',\n                    (evt) => { this.onTouchMove(evt); });\n            targetElem.addEventListener('touchend',\n                    (evt) => { this.onTouchEnd(evt); });\n            targetElem.addEventListener('pointerdown',\n                    (evt) => { this.onPointerDown(evt); });\n            targetElem.addEventListener('pointerup',\n                     (evt) => { this.onPointerUp(evt); });\n            targetElem.addEventListener('MSGestureStart',\n                    (evt) => { this.onMSGestureStart(evt); });\n            targetElem.addEventListener('MSGestureChange',\n                    (evt) => { this.onMSGestureChange(evt); });\n        });\n    }\n\n    /**\n     * @hidden\n     * Function that is called when scrolling with the mouse wheel or using touchpad\n     */\n    protected onWheel(evt) {\n        // if no scrollbar return\n        if (!this.IgxScrollInertiaScrollContainer) {\n            return;\n        }\n        let scrollDeltaX;\n        let scrollDeltaY;\n        const scrollStep = this.wheelStep;\n        const minWheelStep = 1 / this.wheelStep;\n\n        this._startX = this.IgxScrollInertiaScrollContainer.scrollLeft;\n        this._startY = this.IgxScrollInertiaScrollContainer.scrollTop;\n\n        if (evt.wheelDeltaX) {\n            /* Option supported on Chrome, Safari, Opera.\n            /* 120 is default for mousewheel on these browsers. Other values are for trackpads */\n            scrollDeltaX = -evt.wheelDeltaX / 120;\n\n            if (-minWheelStep < scrollDeltaX && scrollDeltaX < minWheelStep) {\n                scrollDeltaX = Math.sign(scrollDeltaX) * minWheelStep;\n            }\n        } else if (evt.deltaX) {\n            /* For other browsers that don't provide wheelDelta, use the deltaY to determine direction and pass default values. */\n            scrollDeltaX = this.calcAxisCoords(evt.deltaX, -1, 1);\n        }\n\n        /** Get delta for the Y axis */\n        if (evt.wheelDeltaY) {\n            /* Option supported on Chrome, Safari, Opera.\n            /* 120 is default for mousewheel on these browsers. Other values are for trackpads */\n            scrollDeltaY = -evt.wheelDeltaY / 120;\n\n            if (-minWheelStep < scrollDeltaY && scrollDeltaY < minWheelStep) {\n                scrollDeltaY = Math.sign(scrollDeltaY) * minWheelStep;\n            }\n        } else if (evt.deltaY) {\n            /* For other browsers that don't provide wheelDelta, use the deltaY to determine direction and pass default values. */\n            scrollDeltaY = this.calcAxisCoords(evt.deltaY, -1, 1);\n        }\n        if (scrollDeltaX && this.IgxScrollInertiaDirection === 'horizontal') {\n            this._scrollToX(\n                this._startX + scrollDeltaX * scrollStep\n            );\n            const curScrollLeft = this.IgxScrollInertiaScrollContainer.scrollLeft;\n            const maxScrollLeft = parseInt(this.IgxScrollInertiaScrollContainer.children[0].style.width, 10);\n            if (0 < curScrollLeft && curScrollLeft < maxScrollLeft) {\n                // Prevent navigating through pages when scrolling on Mac\n                evt.preventDefault();\n            }\n        } else if (scrollDeltaY && this.IgxScrollInertiaDirection === 'vertical') {\n            this._scrollToY(\n                this._startY + scrollDeltaY * scrollStep\n            );\n            this.preventParentScroll(evt, true);\n        }\n    }\n\n    /**\n     * @hidden\n     * When there is still room to scroll up/down prevent the parent elements from scrolling too.\n     */\n    protected preventParentScroll(evt, preventDefault) {\n        const curScrollTop = this.IgxScrollInertiaScrollContainer.scrollTop;\n        const maxScrollTop = this.IgxScrollInertiaScrollContainer.children[0].scrollHeight -\n            this.IgxScrollInertiaScrollContainer.offsetHeight;\n        if (0 < curScrollTop && curScrollTop < maxScrollTop) {\n            if (preventDefault) {\n                 evt.preventDefault();\n            }\n            if (evt.stopPropagation) {\n                evt.stopPropagation();\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     * Function that is called the first moment we start interacting with the content on a touch device\n     */\n    protected onTouchStart(event) {\n        if (typeof MSGesture === 'function' || !this.IgxScrollInertiaScrollContainer) {\n            return false;\n        }\n\n        // stops any current ongoing inertia\n        cancelAnimationFrame(this._touchInertiaAnimID);\n\n        const touch = event.touches[ 0 ];\n\n        this._startX = this.IgxScrollInertiaScrollContainer.scrollLeft;\n\n        this._startY = this.IgxScrollInertiaScrollContainer.scrollTop;\n\n        this._touchStartX = touch.pageX;\n        this._touchStartY = touch.pageY;\n\n        this._lastTouchEnd = new Date().getTime();\n        this._lastTouchX = touch.pageX;\n        this._lastTouchY = touch.pageY;\n        this._savedSpeedsX = [];\n        this._savedSpeedsY = [];\n\n        // Vars regarding swipe offset\n        this._totalMovedX = 0;\n        this._offsetRecorded = false;\n        this._offsetDirection = 0;\n\n        this._touchPrevented = false;\n        if (this.IgxScrollInertiaDirection === 'vertical') {\n            this.preventParentScroll(event, false);\n        }\n    }\n\n    /**\n     * @hidden\n     * Function that is called when we need to scroll the content based on touch interactions\n     */\n    protected onTouchMove(event) {\n        if (typeof MSGesture === 'function') {\n            this._touchPrevented = false;\n            return false;\n        }\n        if (!this.IgxScrollInertiaScrollContainer) {\n            return;\n        }\n\n        const touch = event.touches[ 0 ];\n        const destX = this._startX + (this._touchStartX - touch.pageX) * Math.sign(this.inertiaStep);\n        const destY = this._startY + (this._touchStartY - touch.pageY) * Math.sign(this.inertiaStep);\n\n        /* Handle complex touchmoves when swipe stops but the toch doesn't end and then a swipe is initiated again */\n        /* **********************************************************/\n\n\n        const timeFromLastTouch = (new Date().getTime()) - this._lastTouchEnd;\n        if (timeFromLastTouch !== 0 && timeFromLastTouch < 100) {\n            const speedX = (this._lastTouchX - touch.pageX) / timeFromLastTouch;\n            const speedY = (this._lastTouchY - touch.pageY) / timeFromLastTouch;\n\n            // Save the last 5 speeds between two touchmoves on X axis\n            if (this._savedSpeedsX.length < 5) {\n                this._savedSpeedsX.push(speedX);\n            } else {\n                this._savedSpeedsX.shift();\n                this._savedSpeedsX.push(speedX);\n            }\n\n            // Save the last 5 speeds between two touchmoves on Y axis\n            if (this._savedSpeedsY.length < 5) {\n                this._savedSpeedsY.push(speedY);\n            } else {\n                this._savedSpeedsY.shift();\n                this._savedSpeedsY.push(speedY);\n            }\n        }\n        this._lastTouchEnd = new Date().getTime();\n        this._lastMovedX = this._lastTouchX - touch.pageX;\n        this._lastMovedY = this._lastTouchY - touch.pageY;\n        this._lastTouchX = touch.pageX;\n        this._lastTouchY = touch.pageY;\n\n        this._totalMovedX += this._lastMovedX;\n\n        let scrolledXY; // Object: {x, y}\n        /*\tDo not scroll using touch untill out of the swipeToleranceX bounds */\n        if (Math.abs(this._totalMovedX) < this.swipeToleranceX && !this._offsetRecorded) {\n            scrolledXY = this._scrollTo(this._startX, destY);\n        } else {\n            /*\tRecord the direction the first time we are out of the swipeToleranceX bounds.\n\t\t\t*\tThat way we know which direction we apply the offset so it doesn't hickup when moving out of the swipeToleranceX bounds */\n            if (!this._offsetRecorded) {\n                this._offsetDirection = Math.sign(destX - this._startX);\n                this._offsetRecorded = true;\n            }\n\n            /*\tScroll with offset ammout of swipeToleranceX in the direction we have exited the bounds and\n            don't change it after that ever until touchend and again touchstart */\n            scrolledXY = this._scrollTo(destX - this._offsetDirection * this.swipeToleranceX,\n                destY);\n        }\n\n        if (scrolledXY.x === 0 && scrolledXY.y === 0) {\n            this._touchPrevented = true;\n        }\n\n        // On Safari preventing the touchmove would prevent default page scroll behaviour even if there is the element doesn't have overflow\n        if (this.IgxScrollInertiaDirection === 'vertical') {\n            this.preventParentScroll(event, true);\n        }\n    }\n\n    protected onTouchEnd(event) {\n        if (typeof MSGesture === 'function') {\n            return;\n        }\n        let speedX = 0;\n        let speedY = 0;\n\n        // savedSpeedsX and savedSpeedsY have same length\n        for (let i = 0; i < this._savedSpeedsX.length; i++) {\n            speedX += this._savedSpeedsX[ i ];\n            speedY += this._savedSpeedsY[ i ];\n        }\n        speedX = this._savedSpeedsX.length ? speedX / this._savedSpeedsX.length : 0;\n        speedY = this._savedSpeedsX.length ? speedY / this._savedSpeedsY.length : 0;\n\n         // Use the lastMovedX and lastMovedY to determine if the swipe stops without lifting the finger so we don't start inertia\n        if ((Math.abs(speedX) > 0.1 || Math.abs(speedY) > 0.1) &&\n                        (Math.abs(this._lastMovedX) > 2 || Math.abs(this._lastMovedY) > 2)) {\n                    this._inertiaInit(speedX, speedY);\n        }\n        if (this.IgxScrollInertiaDirection === 'vertical') {\n            this.preventParentScroll(event, false);\n        }\n    }\n\n    /**\n     * @hidden\n     * Function that is called when we need to detect touch starting on a touch device on IE/Edge\n     */\n    protected onPointerDown(event) {\n        if (!event || (event.pointerType !== 2 && event.pointerType !== 'touch') ||\n            typeof MSGesture !== 'function') {\n            return true;\n        }\n        if (!this.IgxScrollInertiaScrollContainer) {\n            return;\n        }\n        // setPointerCaptureFName is the name of the function that is supported\n        event.target[this.setPointerCaptureFName](this._pointer = event.pointerId);\n\n        // create gestureObject only one time to prevent overlapping during intertia\n        if (!this._gestureObject) {\n            this._gestureObject = new MSGesture();\n            this._gestureObject.target = this.parentElement;\n        }\n        this._gestureObject.addPointer(this._pointer);\n    }\n\n    /**\n     * @hidden\n     * Function that is called when we need to detect touch ending on a touch device on IE/Edge\n     */\n    protected onPointerUp(event) {\n        if (!this._pointer) {\n            return true;\n        }\n        if (!this.IgxScrollInertiaScrollContainer) {\n            return;\n        }\n        /* releasePointerCaptureFName is the name of the function that is supported */\n        event.target[ this.releasePointerCaptureFName ](this._pointer);\n\n        delete this._pointer;\n    }\n\n    /**\n     * @hidden\n     *  Function that is called when a gesture begins on IE/Edge\n     */\n    protected onMSGestureStart(event) {\n        if (!this.IgxScrollInertiaScrollContainer) {\n            return;\n        }\n        this._startX = this.IgxScrollInertiaScrollContainer.scrollLeft;\n        this._startY = this.IgxScrollInertiaScrollContainer.scrollTop;\n\n\n        this._touchStartX = event.screenX;\n        this._touchStartY = event.screenY;\n\n        // Vars regarding swipe offset\n        this._totalMovedX = 0;\n        this._offsetRecorded = false;\n        this._offsetDirection = 0;\n        return false;\n    }\n\n    /**\n     * @hidden\n     * Function that is called when a we need to scroll based on the gesture performed on IE/Edge\n     */\n    protected onMSGestureChange(event) {\n        if (!this.IgxScrollInertiaScrollContainer) {\n            return;\n        }\n        const touchPos = event,\n            destX = this._startX + this._touchStartX - touchPos.screenX,\n            destY = this._startY + this._touchStartY - touchPos.screenY;\n        /* Logic regarding x tolerance to prevent accidental horizontal scrolling when scrolling vertically */\n        this._totalMovedX = this._touchStartX - touchPos.screenX;\n        if (Math.abs(this._totalMovedX) < this.swipeToleranceX && !this._offsetRecorded) {\n            /* Do not scroll horizontally yet while in the tolerance range */\n            this._scrollToY(destY);\n        } else {\n            if (!this._offsetRecorded) {\n                this._offsetDirection = Math.sign(destX - this._startX);\n                this._offsetRecorded = true;\n            }\n            /* Once the tolerance is exceeded it can be scrolled horizontally */\n            this._scrollTo(destX - this._offsetDirection * this.swipeToleranceX, destY);\n        }\n\n        return false;\n    }\n\n    private calcAxisCoords(target, min, max) {\n        if (target === undefined || target < min) {\n            target = min;\n        } else if (target > max) {\n            target = max;\n        }\n\n        return target;\n    }\n\n    private _scrollTo(destX, destY) {\n        const curPosX = this.IgxScrollInertiaScrollContainer.scrollLeft;\n        const curPosY = this.IgxScrollInertiaScrollContainer.scrollTop;\n\n         // TODO Trigger scrolling event?\n        const scrolledX = this._scrollToX(destX);\n        const scrolledY = this._scrollToY(destY);\n\n        return { x: scrolledX, y: scrolledY };\n    }\n    private _scrollToX(dest) {\n        this.IgxScrollInertiaScrollContainer.scrollLeft = dest;\n    }\n    private _scrollToY(dest) {\n        this.IgxScrollInertiaScrollContainer.scrollTop = dest;\n    }\n\n   protected _inertiaInit(speedX, speedY) {\n    const stepModifer = this.inertiaStep,\n        inertiaDuration = this.inertiaDuration;\n    let x = 0;\n    this._nextX = this.IgxScrollInertiaScrollContainer.scrollLeft;\n    this._nextY = this.IgxScrollInertiaScrollContainer.scrollTop;\n\n    // Sets timeout until executing next movement iteration of the inertia\n    const inertiaStep = () => {\n        if (x > 6) {\n            cancelAnimationFrame(this._touchInertiaAnimID);\n            return;\n        }\n\n        if (Math.abs(speedX) > Math.abs(speedY)) {\n            x += 0.05 / (1 * inertiaDuration);\n        } else {\n            x += 0.05 / (1 * inertiaDuration);\n        }\n\n        if (x <= 1) {\n            // We use constant quation to determine the offset without speed falloff befor x reaches 1\n            if (Math.abs(speedY) <= Math.abs(speedX) * this.inertiaDeltaY) {\n                this._nextX += 1 * speedX * 15 * stepModifer;\n            }\n            if (Math.abs(speedY) >= Math.abs(speedX) * this.inertiaDeltaX) {\n                this._nextY += 1 * speedY * 15 * stepModifer;\n            }\n        } else {\n            // We use the quation \"y = 2 / (x + 0.55) - 0.3\" to determine the offset\n            if (Math.abs(speedY) <= Math.abs(speedX) * this.inertiaDeltaY) {\n                this._nextX += Math.abs(2 / (x + 0.55) - 0.3) * speedX * 15 * stepModifer;\n            }\n            if (Math.abs(speedY) >= Math.abs(speedX) * this.inertiaDeltaX) {\n                this._nextY += Math.abs(2 / (x + 0.55) - 0.3) * speedY * 15 * stepModifer;\n            }\n        }\n\n        // If we have mixed environment we use the default behaviour. i.e. touchscreen + mouse\n        this._scrollTo(this._nextX, this._nextY);\n\n        this._touchInertiaAnimID = requestAnimationFrame(inertiaStep);\n    };\n\n    // Start inertia and continue it recursively\n    this._touchInertiaAnimID = requestAnimationFrame(inertiaStep);\n   }\n\n    ngOnDestroy() {\n        this._zone.runOutsideAngular(() => {\n            const targetElem = this.parentElement;\n            targetElem.removeEventListener('wheel',\n                (evt) => { this.onWheel(evt); });\n            targetElem.removeEventListener('touchstart',\n                (evt) => { this.onTouchStart(evt); });\n            targetElem.removeEventListener('touchmove',\n                (evt) => { this.onTouchMove(evt); });\n            targetElem.removeEventListener('touchend',\n                (evt) => { this.onTouchEnd(evt); });\n            targetElem.removeEventListener('pointerdown',\n                (evt) => { this.onPointerDown(evt); });\n            targetElem.removeEventListener('pointerup',\n                (evt) => { this.onPointerUp(evt); });\n            targetElem.removeEventListener('MSGestureStart',\n                (evt) => { this.onMSGestureStart(evt); });\n            targetElem.removeEventListener('MSGestureChange',\n                (evt) => { this.onMSGestureChange(evt); });\n        });\n    }\n\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [IgxScrollInertiaDirective],\n    exports: [IgxScrollInertiaDirective],\n    imports: [CommonModule]\n})\n\nexport class IgxScrollInertiaModule {\n}\n\n","import { Injectable, Component } from '@angular/core';\nimport { IgxGridForOfDirective } from './for_of.directive';\nimport { VirtualHelperBaseDirective } from './base.helper.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class IgxForOfSyncService {\n\n    private _master: Map<string, IgxGridForOfDirective<any>> = new Map<string, IgxGridForOfDirective<any>>();\n\n    /**\n     * @hidden\n     */\n    public isMaster(directive: IgxGridForOfDirective<any>): boolean {\n        return this._master.get(directive.igxForScrollOrientation) === directive;\n    }\n\n    /**\n     * @hidden\n     */\n    public setMaster(directive: IgxGridForOfDirective<any>, forced = false) {\n        const orientation = directive.igxForScrollOrientation;\n        if (orientation && (forced || !this._master.has(orientation))) {\n            this._master.set(orientation, directive);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public resetMaster() {\n        this._master.clear();\n    }\n\n    /**\n     * @hidden\n     */\n    public sizesCache(dir: string): number[] {\n        return this._master.get(dir).sizesCache;\n    }\n\n    /**\n     * @hidden\n     */\n    public chunkSize(dir: string): number {\n        return this._master.get(dir).state.chunkSize;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class IgxForOfScrollSyncService {\n    private _masterScroll: Map<string, VirtualHelperBaseDirective> = new Map<string, any>();\n    public setScrollMaster(dir: string, scroll: VirtualHelperBaseDirective) {\n        this._masterScroll.set(dir, scroll);\n    }\n\n    public getScrollMaster(dir: string) {\n        return this._masterScroll.get(dir);\n    }\n}\n","import { CommonModule, NgForOfContext } from '@angular/common';\nimport {\n    ChangeDetectorRef,\n    ComponentFactory,\n    ComponentFactoryResolver,\n    ComponentRef,\n    Directive,\n    DoCheck,\n    EmbeddedViewRef,\n    EventEmitter,\n    Input,\n    IterableChanges,\n    IterableDiffer,\n    IterableDiffers,\n    NgModule,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    TrackByFunction,\n    ViewContainerRef,\n    AfterViewInit\n} from '@angular/core';\n\nimport { DisplayContainerComponent } from './display.container';\nimport { HVirtualHelperComponent } from './horizontal.virtual.helper.component';\nimport { VirtualHelperComponent } from './virtual.helper.component';\nimport { IgxScrollInertiaModule } from './../scroll-inertia/scroll_inertia.directive';\nimport { IgxForOfSyncService, IgxForOfScrollSyncService } from './for_of.sync.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil, filter, throttleTime, first } from 'rxjs/operators';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport { IBaseEventArgs } from '../../core/utils';\nimport { VirtualHelperBaseDirective } from './base.helper.component';\n\n/**\n *  @publicApi\n */\nexport class IgxForOfContext<T> {\n    constructor(\n       public $implicit: T,\n       public index: number,\n       public count: number\n    ) {}\n\n    /**\n     * A function that returns whether the element is the first or not\n     */\n    get first(): boolean { return this.index === 0; }\n\n    /**\n     * A function that returns whether the element is the last or not\n     */\n    get last(): boolean { return this.index === this.count - 1; }\n\n    /**\n     * A function that returns whether the element is even or not\n     */\n    get even(): boolean { return this.index % 2 === 0; }\n\n    /**\n     * A function that returns whether the element is odd or not\n     */\n    get odd(): boolean { return !this.even; }\n\n}\n\n@Directive({ selector: '[igxFor][igxForOf]' })\nexport class IgxForOfDirective<T> implements OnInit, OnChanges, DoCheck, OnDestroy, AfterViewInit {\n\n    /**\n     * An @Input property that sets the data to be rendered.\n     * ```html\n     * <ng-template igxFor let-item [igxForOf]=\"data\" [igxForScrollOrientation]=\"'horizontal'\"></ng-template>\n     * ```\n     */\n    @Input()\n    public igxForOf: any[];\n\n    /**\n     * An @Input property that sets the property name from which to read the size in the data object.\n     */\n    @Input()\n    public igxForSizePropName;\n\n    /**\n     * An @Input property that specifies the scroll orientation.\n     * Scroll orientation can be \"vertical\" or \"horizontal\".\n     * ```html\n     * <ng-template igxFor let-item [igxForOf]=\"data\" [igxForScrollOrientation]=\"'horizontal'\"></ng-template>\n     * ```\n     */\n    @Input()\n    public igxForScrollOrientation = 'vertical';\n\n    /**\n     * Optionally pass the parent `igxFor` instance to create a virtual template scrolling both horizontally and vertically.\n     * ```html\n     * <ng-template #scrollContainer igxFor let-rowData [igxForOf]=\"data\"\n     *       [igxForScrollOrientation]=\"'vertical'\"\n     *       [igxForContainerSize]=\"'500px'\"\n     *       [igxForItemSize]=\"'50px'\"\n     *       let-rowIndex=\"index\">\n     *       <div [style.display]=\"'flex'\" [style.height]=\"'50px'\">\n     *           <ng-template #childContainer igxFor let-item [igxForOf]=\"data\"\n     *               [igxForScrollOrientation]=\"'horizontal'\"\n     *               [igxForScrollContainer]=\"parentVirtDir\"\n     *               [igxForContainerSize]=\"'500px'\">\n     *                   <div [style.min-width]=\"'50px'\">{{rowIndex}} : {{item.text}}</div>\n     *           </ng-template>\n     *       </div>\n     * </ng-template>\n     * ```\n     */\n    @Input()\n    public igxForScrollContainer: any;\n\n    /**\n     * An @Input property that sets the px-affixed size of the container along the axis of scrolling.\n     * For \"horizontal\" orientation this value is the width of the container and for \"vertical\" is the height.\n     * ```html\n     * <ng-template igxFor let-item [igxForOf]=\"data\" [igxForContainerSize]=\"'500px'\"\n     *      [igxForScrollOrientation]=\"'horizontal'\">\n     * </ng-template>\n     * ```\n     */\n    @Input()\n    public igxForContainerSize: any;\n\n    /**\n     * An @Input property that sets the px-affixed size of the item along the axis of scrolling.\n     * For \"horizontal\" orientation this value is the width of the column and for \"vertical\" is the height or the row.\n     * ```html\n     * <ng-template igxFor let-item [igxForOf]=\"data\" [igxForScrollOrientation]=\"'horizontal'\" [igxForItemSize]=\"'50px'\"></ng-template>\n     * ```\n     */\n    @Input()\n    public igxForItemSize: any;\n\n    /**\n     * The total count of the virtual data items, when using remote service.\n     * Similar to the property totalItemCount, but this will allow setting the data count into the template.\n     * ```html\n     * <ng-template igxFor let-item [igxForOf]=\"data | async\" [igxForTotalItemCount]=\"count | async\"\n     *  [igxForContainerSize]=\"'500px'\" [igxForItemSize]=\"'50px'\"></ng-template>\n     * ```\n     */\n    @Input()\n    get igxForTotalItemCount(): number {\n        return this.totalItemCount;\n    }\n    set igxForTotalItemCount(value: number) {\n        this.totalItemCount = value;\n    }\n    /**\n     * @hidden\n     */\n    public dc: ComponentRef<DisplayContainerComponent>;\n\n    /**\n     * The current state of the directive. It contains `startIndex` and `chunkSize`.\n     * state.startIndex - The index of the item at which the current visible chunk begins.\n     * state.chunkSize - The number of items the current visible chunk holds.\n     * These options can be used when implementing remote virtualization as they provide the necessary state information.\n     * ```typescript\n     * const gridState = this.parentVirtDir.state;\n     * ```\n     */\n    public state: IForOfState = {\n        startIndex: 0,\n        chunkSize: 0\n    };\n    /**\n     * The total count of the virtual data items, when using remote service.\n     * ```typescript\n     * this.parentVirtDir.totalItemCount = data.Count;\n     * ```\n     */\n    public totalItemCount: number = null;\n\n    /**\n     * An event that is emitted after a new chunk has been loaded.\n     * ```html\n     * <ng-template igxFor [igxForOf]=\"data\" [igxForScrollOrientation]=\"'horizontal'\" (onChunkLoad)=\"chunkLoad($event)\"></ng-template>\n     * ```\n     * ```typescript\n     * chunkLoad(e){\n     * alert(\"chunk loaded!\");\n     * }\n     * ```\n     */\n    @Output()\n    public onChunkLoad = new EventEmitter<IForOfState>();\n\n    /**\n     * @hidden @internal\n     * An event that is emitted when scrollbar visibility has changed.\n     */\n    @Output()\n    public onScrollbarVisibilityChanged = new EventEmitter<any>();\n\n    /**\n     * An event that is emitted after the rendered content size of the igxForOf has been changed.\n     */\n    @Output()\n    public onContentSizeChange = new EventEmitter<any>();\n\n    /**\n     * An event that is emitted after data has been changed.\n     * ```html\n     * <ng-template igxFor [igxForOf]=\"data\" [igxForScrollOrientation]=\"'horizontal'\" (onDataChanged)=\"dataChanged($event)\"></ng-template>\n     * ```\n     * ```typescript\n     * dataChanged(e){\n     * alert(\"data changed!\");\n     * }\n     * ```\n     */\n    @Output()\n    public onDataChanged = new EventEmitter<any>();\n\n    @Output()\n    public onBeforeViewDestroyed = new EventEmitter<EmbeddedViewRef<any>>();\n\n    /**\n     * An event that is emitted on chunk loading to emit the current state information - startIndex, endIndex, totalCount.\n     * Can be used for implementing remote load on demand for the igxFor data.\n     * ```html\n     * <ng-template igxFor [igxForOf]=\"data\" [igxForScrollOrientation]=\"'horizontal'\" (onChunkPreload)=\"chunkPreload($event)\"></ng-template>\n     * ```\n     * ```typescript\n     * chunkPreload(e){\n     * alert(\"chunk is loading!\");\n     * }\n     * ```\n     */\n    @Output()\n    public onChunkPreload = new EventEmitter<IForOfState>();\n    protected func;\n    protected _sizesCache: number[] = [];\n    protected scrollComponent: VirtualHelperBaseDirective;\n    protected _differ: IterableDiffer<T> | null = null;\n    protected _trackByFn: TrackByFunction<T>;\n    protected heightCache = [];\n    private _adjustToIndex;\n    private MAX_PERF_SCROLL_DIFF = 4;\n\n\n    public get displayContainer(): HTMLElement | undefined {\n        return this.dc.instance._viewContainer.element.nativeElement;\n    }\n\n    public get virtualHelper() {\n        return this.scrollComponent.nativeElement;\n    }\n\n    protected get sizesCache(): number[] {\n        return this._sizesCache;\n    }\n    protected set sizesCache(value: number[]) {\n        this._sizesCache = value;\n    }\n\n    private get _isScrolledToBottom() {\n        if (!this.getScroll()) {\n            return true;\n        }\n        const scrollHeight = this.getScroll().scrollHeight;\n        // Use === and not >= because `scrollTop + container size` can't be bigger than `scrollHeight`, unless something isn't updated.\n        // Also use Math.round because Chrome has some inconsistencies and `scrollTop + container` can be float when zooming the page.\n        return Math.round(this.getScroll().scrollTop + this.igxForContainerSize) === scrollHeight;\n    }\n\n    private get _isAtBottomIndex() {\n        return this.igxForOf && this.state.startIndex + this.state.chunkSize > this.igxForOf.length;\n    }\n\n    // Start properties related to virtual height handling due to browser limitation\n    /** Maximum height for an element of the browser. */\n    private _maxHeight;\n\n    /** Height that is being virtualized. */\n    protected _virtHeight = 0;\n\n    /**\n     * Ratio for height that's being virtualizaed and the one visible\n     * If _virtHeightRatio = 1, the visible height and the virtualized are the same, also _maxHeight > _virtHeight.\n     */\n    private _virtHeightRatio = 1;\n\n    /** Internal track for scroll top that is being virtualized */\n    protected _virtScrollTop = 0;\n\n    /** If the next onScroll event is triggered due to internal setting of scrollTop */\n    protected _bScrollInternal = false;\n    // End properties related to virtual height handling\n\n    protected _embeddedViews: Array<EmbeddedViewRef<any>> = [];\n\n    protected contentResizeNotify = new Subject();\n    protected contentObserver: ResizeObserver;\n\n    /**\n     * @hidden\n     */\n    protected destroy$ = new Subject<any>();\n\n    constructor(\n        private _viewContainer: ViewContainerRef,\n        protected _template: TemplateRef<NgForOfContext<T>>,\n        protected _differs: IterableDiffers,\n        private resolver: ComponentFactoryResolver,\n        public cdr: ChangeDetectorRef,\n        protected _zone: NgZone,\n        protected syncScrollService: IgxForOfScrollSyncService) { }\n\n    /**\n     * @hidden\n     */\n    protected get isRemote(): boolean {\n        return this.totalItemCount !== null;\n    }\n\n    /**\n     *\n     * Gets/Sets the scroll position.\n     * ```typescript\n     * const position = directive.scrollPosition;\n     * directive.scrollPosition = value;\n     * ```\n     */\n    public get scrollPosition(): number {\n        return this.scrollComponent.scrollAmount;\n    }\n    public set scrollPosition(val: number) {\n        if (val === this.scrollComponent.scrollAmount) {\n            return;\n        }\n        if (this.igxForScrollOrientation === 'horizontal' && this.scrollComponent) {\n            this.scrollComponent.nativeElement.scrollLeft = val;\n        } else if (this.scrollComponent) {\n            this.scrollComponent.nativeElement.scrollTop = val;\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    protected removeScrollEventListeners() {\n        if (this.igxForScrollOrientation === 'horizontal') {\n            this._zone.runOutsideAngular(() =>\n                this.scrollComponent.nativeElement.removeEventListener('scroll', this.func)\n            );\n        } else {\n            this._zone.runOutsideAngular(() =>\n                this.scrollComponent.nativeElement.removeEventListener('scroll', this.verticalScrollHandler)\n            );\n        }\n    }\n\n    public verticalScrollHandler(event) {\n        this.onScroll(event);\n    }\n\n    public isScrollable() {\n        return this.scrollComponent.size > parseInt(this.igxForContainerSize, 10);\n    }\n\n    /**\n     * @hidden\n     */\n    public ngOnInit(): void {\n        let totalSize = 0;\n        const vc = this.igxForScrollContainer ? this.igxForScrollContainer._viewContainer : this._viewContainer;\n        this.igxForSizePropName = this.igxForSizePropName || 'width';\n\n        const dcFactory: ComponentFactory<DisplayContainerComponent> = this.resolver.resolveComponentFactory(DisplayContainerComponent);\n        this.dc = this._viewContainer.createComponent(dcFactory, 0);\n        this.dc.instance.scrollDirection = this.igxForScrollOrientation;\n        if (typeof MSGesture === 'function') {\n            // On Edge and IE when scrolling on touch the page scroll instead of the grid.\n            this.dc.instance._viewContainer.element.nativeElement.style.touchAction = 'none';\n        }\n        if (this.igxForOf && this.igxForOf.length) {\n            totalSize = this.initSizesCache(this.igxForOf);\n            this.scrollComponent = this.syncScrollService.getScrollMaster(this.igxForScrollOrientation);\n            this.state.chunkSize = this._calculateChunkSize();\n            this.dc.instance.notVirtual = !(this.igxForContainerSize && this.state.chunkSize < this.igxForOf.length);\n            if (this.scrollComponent && !this.scrollComponent.destroyed) {\n                this.state.startIndex = Math.min(this.getIndexAt(this.scrollPosition, this.sizesCache, 0),\n                    this.igxForOf.length - this.state.chunkSize);\n            }\n            for (let i = this.state.startIndex; i < this.state.startIndex + this.state.chunkSize &&\n                    this.igxForOf[i] !== undefined; i++) {\n                const input = this.igxForOf[i];\n                const embeddedView = this.dc.instance._vcr.createEmbeddedView(\n                    this._template,\n                    new IgxForOfContext<T>(input, this.getContextIndex(input), this.igxForOf.length)\n                );\n                this._embeddedViews.push(embeddedView);\n            }\n        }\n\n        if (this.igxForScrollOrientation === 'vertical') {\n            this.dc.instance._viewContainer.element.nativeElement.style.top = '0px';\n            const factory: ComponentFactory<VirtualHelperComponent> = this.resolver.resolveComponentFactory(VirtualHelperComponent);\n            this.scrollComponent = vc.createComponent(factory).instance;\n            this._maxHeight = this._calcMaxBrowserHeight();\n            this.scrollComponent.size = this.igxForOf ? this._calcHeight() : 0;\n            this.syncScrollService.setScrollMaster(this.igxForScrollOrientation, this.scrollComponent);\n            this._zone.runOutsideAngular(() => {\n                this.verticalScrollHandler = this.verticalScrollHandler.bind(this);\n                this.scrollComponent.nativeElement.addEventListener('scroll', this.verticalScrollHandler);\n                this.dc.instance.scrollContainer = this.scrollComponent.nativeElement;\n            });\n            const destructor = takeUntil<any>(this.destroy$);\n            this.contentResizeNotify.pipe(destructor,\n            filter(() => this.igxForContainerSize && this.igxForOf && this.igxForOf.length > 0),\n            throttleTime(40, undefined, {leading: true, trailing: true}))\n            .subscribe(() => {\n                this._zone.runTask(() => {\n                    this.updateSizes();\n                });\n            });\n        }\n\n        if (this.igxForScrollOrientation === 'horizontal') {\n            this.func = (evt) => { this.onHScroll(evt); };\n            this.scrollComponent = this.syncScrollService.getScrollMaster(this.igxForScrollOrientation);\n            if (!this.scrollComponent) {\n                const hvFactory: ComponentFactory<HVirtualHelperComponent> =\n                    this.resolver.resolveComponentFactory(HVirtualHelperComponent);\n                this.scrollComponent = vc.createComponent(hvFactory).instance;\n                this.scrollComponent.size = totalSize;\n                this.syncScrollService.setScrollMaster(this.igxForScrollOrientation, this.scrollComponent);\n                this._zone.runOutsideAngular(() => {\n                    this.scrollComponent.nativeElement.addEventListener('scroll', this.func);\n                    this.dc.instance.scrollContainer = this.scrollComponent.nativeElement;\n                });\n            } else {\n                this._zone.runOutsideAngular(() => {\n                    this.scrollComponent.nativeElement.addEventListener('scroll', this.func);\n                    this.dc.instance.scrollContainer = this.scrollComponent.nativeElement;\n                });\n            }\n            this._updateHScrollOffset();\n        }\n    }\n\n    ngAfterViewInit(): void {\n        if (this.igxForScrollOrientation === 'vertical') {\n            this._zone.runOutsideAngular(() => {\n                this.contentObserver = new ResizeObserver(() => this.contentResizeNotify.next());\n                this.contentObserver.observe(this.dc.instance._viewContainer.element.nativeElement);\n            });\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public ngOnDestroy() {\n        this.removeScrollEventListeners();\n        this.destroy$.next(true);\n        this.destroy$.complete();\n        if (this.contentObserver) {\n            this.contentObserver.disconnect();\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public ngOnChanges(changes: SimpleChanges): void {\n        const forOf = 'igxForOf';\n        if (forOf in changes) {\n            const value = changes[forOf].currentValue;\n            if (!this._differ && value) {\n                try {\n                    this._differ = this._differs.find(value).create(this.igxForTrackBy);\n                } catch (e) {\n                    throw new Error(\n                        `Cannot find a differ supporting object \"${value}\" of type \"${getTypeNameForDebugging(value)}\".\n                     NgFor only supports binding to Iterables such as Arrays.`);\n                }\n            }\n        }\n        const defaultItemSize = 'igxForItemSize';\n        if (defaultItemSize in changes && !changes[defaultItemSize].firstChange &&\n            this.igxForScrollOrientation === 'vertical' && this.igxForOf) {\n            // handle default item size changed.\n            this.initSizesCache(this.igxForOf);\n            this._applyChanges();\n        }\n        const containerSize = 'igxForContainerSize';\n        if (containerSize in changes && !changes[containerSize].firstChange && this.igxForOf) {\n            this._recalcOnContainerChange(changes);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public ngDoCheck(): void {\n        if (this._differ) {\n            const changes = this._differ.diff(this.igxForOf);\n            if (changes) {\n                //  re-init cache.\n                if (!this.igxForOf) {\n                    this.igxForOf = [];\n                }\n                this._updateSizeCache();\n                this._zone.run(() => {\n                    this._applyChanges();\n                    this.cdr.markForCheck();\n                    this._updateScrollOffset();\n                    this.onDataChanged.emit();\n                });\n            }\n        }\n    }\n\n    /**\n     * Shifts the scroll thumb position.\n     * ```typescript\n     * this.parentVirtDir.addScrollTop(5);\n     * ```\n     * @param addTop negative value to scroll up and positive to scroll down;\n     */\n    public addScrollTop(addTop: number): boolean {\n        if (addTop === 0 && this.igxForScrollOrientation === 'horizontal') {\n            return false;\n        }\n        const originalVirtScrollTop = this._virtScrollTop;\n        const containerSize = parseInt(this.igxForContainerSize, 10);\n        const maxVirtScrollTop = this._virtHeight - containerSize;\n\n        this._bScrollInternal = true;\n        this._virtScrollTop += addTop;\n        this._virtScrollTop = this._virtScrollTop > 0 ?\n            (this._virtScrollTop < maxVirtScrollTop ? this._virtScrollTop : maxVirtScrollTop) :\n            0;\n\n        this.scrollPosition += addTop / this._virtHeightRatio;\n        if (Math.abs(addTop / this._virtHeightRatio) < 1) {\n            // Actual scroll delta that was added is smaller than 1 and onScroll handler doesn't trigger when scrolling < 1px\n            const scrollOffset = this.fixedUpdateAllElements(this._virtScrollTop);\n            // scrollOffset = scrollOffset !== parseInt(this.igxForItemSize, 10) ? scrollOffset : 0;\n            this.dc.instance._viewContainer.element.nativeElement.style.top = -(scrollOffset) + 'px';\n        }\n\n        const maxRealScrollTop = this.scrollComponent.nativeElement.scrollHeight - containerSize;\n        if ((this._virtScrollTop > 0 && this.scrollPosition === 0) ||\n            (this._virtScrollTop < maxVirtScrollTop && this.scrollPosition === maxRealScrollTop)) {\n            // Actual scroll position is at the top or bottom, but virtual one is not at the top or bottom (there's more to scroll)\n            // Recalculate actual scroll position based on the virtual scroll.\n            this.scrollPosition = this._virtScrollTop / this._virtHeightRatio;\n        } else if (this._virtScrollTop === 0 && this.scrollPosition > 0) {\n            // Actual scroll position is not at the top, but virtual scroll is. Just update the actual scroll\n            this.scrollPosition = 0;\n        } else if (this._virtScrollTop === maxVirtScrollTop && this.scrollPosition < maxRealScrollTop) {\n            // Actual scroll position is not at the bottom, but virtual scroll is. Just update the acual scroll\n            this.scrollPosition = maxRealScrollTop;\n        }\n        return this._virtScrollTop !== originalVirtScrollTop;\n    }\n\n    /**\n     * Scrolls to the specified index.\n     * ```typescript\n     * this.parentVirtDir.scrollTo(5);\n     * ```\n     * @param index\n     */\n    public scrollTo(index) {\n        if (index < 0 || index > (this.isRemote ? this.totalItemCount : this.igxForOf.length) - 1) {\n            return;\n        }\n        const containerSize = parseInt(this.igxForContainerSize, 10);\n        const isPrevItem = index < this.state.startIndex || this.scrollPosition > this.sizesCache[index];\n        let nextScroll = isPrevItem ? this.sizesCache[index] : this.sizesCache[index + 1] - containerSize;\n        if (nextScroll < 0) {\n            return;\n        }\n        if (this.igxForScrollOrientation === 'horizontal') {\n            this.scrollPosition = nextScroll;\n        } else {\n            const maxVirtScrollTop = this._virtHeight - containerSize;\n            if (nextScroll > maxVirtScrollTop) {\n                nextScroll = maxVirtScrollTop;\n            }\n            this._bScrollInternal = true;\n            this._virtScrollTop = nextScroll;\n            this.scrollPosition = this._virtScrollTop / this._virtHeightRatio;\n            this._adjustToIndex = !isPrevItem ? index : null;\n        }\n    }\n\n    /**\n     * Scrolls by one item into the appropriate next direction.\n     * For \"horizontal\" orientation that will be the right column and for \"vertical\" that is the lower row.\n     * ```typescript\n     * this.parentVirtDir.scrollNext();\n     * ```\n     */\n    public scrollNext() {\n        const scr = Math.ceil(this.scrollPosition);\n        const endIndex = this.getIndexAt(\n            scr + parseInt(this.igxForContainerSize, 10),\n            this.sizesCache,\n            0\n        );\n        this.scrollTo(endIndex);\n    }\n\n    /**\n     * Scrolls by one item into the appropriate previous direction.\n     * For \"horizontal\" orientation that will be the left column and for \"vertical\" that is the upper row.\n     * ```typescript\n     * this.parentVirtDir.scrollPrev();\n     * ```\n     */\n    public scrollPrev() {\n        this.scrollTo(this.state.startIndex - 1);\n    }\n\n    /**\n     * Scrolls by one page into the appropriate next direction.\n     * For \"horizontal\" orientation that will be one view to the right and for \"vertical\" that is one view to the bottom.\n     * ```typescript\n     * this.parentVirtDir.scrollNextPage();\n     * ```\n     */\n    public scrollNextPage() {\n        if (this.igxForScrollOrientation === 'horizontal') {\n            this.scrollPosition += parseInt(this.igxForContainerSize, 10);\n        } else {\n            this.addScrollTop(parseInt(this.igxForContainerSize, 10));\n        }\n    }\n\n    /**\n     * Scrolls by one page into the appropriate previous direction.\n     * For \"horizontal\" orientation that will be one view to the left and for \"vertical\" that is one view to the top.\n     * ```typescript\n     * this.parentVirtDir.scrollPrevPage();\n     * ```\n     */\n    public scrollPrevPage() {\n        if (this.igxForScrollOrientation === 'horizontal') {\n            this.scrollPosition -= parseInt(this.igxForContainerSize, 10);\n        } else {\n            const containerSize = (parseInt(this.igxForContainerSize, 10));\n            this.addScrollTop(-containerSize);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public getColumnScrollLeft(colIndex) {\n        return this.sizesCache[colIndex];\n    }\n\n    /**\n     * Returns the total number of items that are fully visible.\n     * ```typescript\n     * this.parentVirtDir.getItemCountInView();\n     * ```\n     */\n    public getItemCountInView() {\n        let startIndex = this.getIndexAt(\n            this.scrollPosition,\n            this.sizesCache,\n            0\n        );\n        if (this.scrollPosition - this.sizesCache[startIndex] > 0) {\n            // fisrt item is not fully in view\n            startIndex++;\n        }\n        const endIndex = this.getIndexAt(\n            this.scrollPosition + parseInt(this.igxForContainerSize, 10),\n            this.sizesCache,\n            0\n        );\n        return endIndex - startIndex;\n    }\n\n    /**\n     * Returns a reference to the scrollbar DOM element.\n     * This is either a vertical or horizontal scrollbar depending on the specified igxForScrollOrientation.\n     * ```typescript\n     * dir.getScroll();\n     * ```\n     */\n    public getScroll() {\n        return this.scrollComponent.nativeElement;\n    }\n    /**\n     * Returns the size of the element at the specified index.\n     * ```typescript\n     * this.parentVirtDir.getSizeAt(1);\n     * ```\n     */\n    public getSizeAt(index: number) {\n        return this.sizesCache[index + 1] - this.sizesCache[index];\n    }\n\n    public getScrollbarWidth() {\n        return this.scrollComponent ? (this.scrollComponent as VirtualHelperComponent).scrollWidth : 0;\n    }\n\n    /**\n     * Returns the scroll offset of the element at the specified index.\n     * ```typescript\n     * this.parentVirtDir.getScrollForIndex(1);\n     * ```\n     */\n    public getScrollForIndex(index: number, bottom?: boolean) {\n        const containerSize = parseInt(this.igxForContainerSize, 10);\n        const scroll = bottom ? Math.max(0, this.sizesCache[index + 1] - containerSize) : this.sizesCache[index];\n        return scroll;\n    }\n\n    /**\n     * @hidden\n     * Function that is called when scrolling vertically\n     */\n    protected onScroll(event) {\n        /* in certain situations this may be called when no scrollbar is visible */\n        if (!parseInt(this.scrollComponent.nativeElement.style.height, 10)) {\n            return;\n        }\n        if (!this._bScrollInternal) {\n            this._calcVirtualScrollTop(event.target.scrollTop);\n        } else {\n            this._bScrollInternal = false;\n        }\n        const prevStartIndex = this.state.startIndex;\n        const scrollOffset = this.fixedUpdateAllElements(this._virtScrollTop);\n\n        this.dc.instance._viewContainer.element.nativeElement.style.top = -(scrollOffset) + 'px';\n\n        this.dc.changeDetectorRef.detectChanges();\n        if (prevStartIndex !== this.state.startIndex) {\n            this.onChunkLoad.emit(this.state);\n        }\n    }\n\n    protected updateSizes() {\n        this.recalcUpdateSizes();\n        this._applyChanges();\n        this._updateScrollOffset();\n        this.onContentSizeChange.emit();\n    }\n\n    /**\n     * @hidden\n     * Function that recaculates and updates cache sizes.\n     */\n    public recalcUpdateSizes() {\n        const dimension = this.igxForScrollOrientation === 'horizontal' ?\n            this.igxForSizePropName : 'height';\n        const diffs = [];\n        let totalDiff = 0;\n        const l = this._embeddedViews.length;\n        const rNodes = this._embeddedViews.map(view =>\n            view.rootNodes.find(node => node.nodeType === Node.ELEMENT_NODE) || view.rootNodes[0].nextElementSibling);\n        for (let i = 0; i < l; i++) {\n            const rNode = rNodes[i];\n            if (rNode) {\n                const h = rNode.offsetHeight || parseInt(this.igxForItemSize, 10);\n                const index = this.state.startIndex + i;\n                if (!this.isRemote && !this.igxForOf[index]) {\n                    continue;\n                }\n                const oldVal = dimension === 'height' ? this.heightCache[index] : this.igxForOf[index][dimension];\n                const newVal = dimension === 'height' ? h : rNode.clientWidth;\n                if (dimension === 'height') {\n                    this.heightCache[index] = newVal;\n                } else {\n                    this.igxForOf[index][dimension] = newVal;\n                }\n                const currDiff = newVal - oldVal;\n                diffs.push(currDiff);\n                totalDiff += currDiff;\n                this.sizesCache[index + 1] += totalDiff;\n            }\n        }\n        // update cache\n        if (Math.abs(totalDiff) > 0) {\n            for (let j = this.state.startIndex + this.state.chunkSize + 1; j < this.sizesCache.length; j++) {\n                this.sizesCache[j] += totalDiff;\n            }\n\n            // update scrBar heights/widths\n            if (this.igxForScrollOrientation === 'horizontal') {\n                const totalWidth = parseInt(this.scrollComponent.nativeElement.children[0].style.width, 10) + totalDiff;\n                this.scrollComponent.nativeElement.children[0].style.width = totalWidth + 'px';\n            }\n            const reducer = (acc, val) => acc + val;\n            if (this.igxForScrollOrientation === 'vertical') {\n                const scrToBottom = this._isScrolledToBottom && !this.dc.instance.notVirtual;\n                const hSum = this.heightCache.reduce(reducer);\n                if (hSum > this._maxHeight) {\n                    this._virtHeightRatio = hSum / this._maxHeight;\n                }\n                this.scrollComponent.size = Math.min(this.scrollComponent.size + totalDiff, this._maxHeight);\n                this._virtHeight = hSum;\n                if (!this.scrollComponent.destroyed) {\n                    this.scrollComponent.cdr.detectChanges();\n                }\n                if (scrToBottom && !this._isAtBottomIndex) {\n                    const containerSize = parseInt(this.igxForContainerSize, 10);\n                    const maxVirtScrollTop = this._virtHeight - containerSize;\n                    this._bScrollInternal = true;\n                    this._virtScrollTop = maxVirtScrollTop;\n                    this.scrollPosition = maxVirtScrollTop;\n                    return;\n                }\n                if (this._adjustToIndex) {\n                    // in case scrolled to specific index where after scroll heights are changed\n                    // need to adjust the offsets so that item is last in view.\n                    const updatesToIndex = this._adjustToIndex - this.state.startIndex + 1;\n                    const sumDiffs = diffs.slice(0, updatesToIndex).reduce(reducer);\n                    if (sumDiffs !== 0) {\n                        this.addScrollTop(sumDiffs);\n                    }\n                    this._adjustToIndex = null;\n                }\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    protected fixedUpdateAllElements(inScrollTop: number): number {\n        const count = this.isRemote ? this.totalItemCount : this.igxForOf.length;\n        let newStart = this.getIndexAt(\n            inScrollTop,\n            this.sizesCache,\n            0\n        );\n\n        if (newStart + this.state.chunkSize > count) {\n            newStart = count - this.state.chunkSize;\n        }\n\n        const prevStart = this.state.startIndex;\n        const diff = newStart - this.state.startIndex;\n        this.state.startIndex = newStart;\n\n        if (diff) {\n            this.onChunkPreload.emit(this.state);\n            if (!this.isRemote) {\n\n                // recalculate and apply page size.\n                if (diff && Math.abs(diff) <= this.MAX_PERF_SCROLL_DIFF) {\n                    diff > 0 ? this.moveApplyScrollNext(prevStart) : this.moveApplyScrollPrev(prevStart);\n                } else {\n                    this.fixedApplyScroll();\n                }\n            }\n        }\n\n        return inScrollTop - this.sizesCache[this.state.startIndex];\n    }\n\n    /**\n     * @hidden\n     * The function applies an optimized state change for scrolling down/right employing context change with view rearrangement\n     */\n    protected moveApplyScrollNext(prevIndex: number): void {\n        const start = prevIndex + this.state.chunkSize;\n        const end = start + this.state.startIndex - prevIndex;\n        const container = this.dc.instance._vcr as ViewContainerRef;\n\n        for (let i = start; i < end && this.igxForOf[i] !== undefined; i++) {\n            const embView = this._embeddedViews.shift();\n            this.scrollFocus(embView.rootNodes.find(node => node.nodeType === Node.ELEMENT_NODE)\n                || embView.rootNodes[0].nextElementSibling);\n            const view = container.detach(0);\n\n            this.updateTemplateContext(embView.context, i);\n            container.insert(view);\n            this._embeddedViews.push(embView);\n        }\n    }\n\n    /**\n     * @hidden\n     * The function applies an optimized state change for scrolling up/left employing context change with view rearrangement\n     */\n    protected moveApplyScrollPrev(prevIndex: number): void {\n        const container = this.dc.instance._vcr as ViewContainerRef;\n        for (let i = prevIndex - 1; i >= this.state.startIndex && this.igxForOf[i] !== undefined; i--) {\n            const embView = this._embeddedViews.pop();\n            this.scrollFocus(embView.rootNodes.find(node => node.nodeType === Node.ELEMENT_NODE)\n                || embView.rootNodes[0].nextElementSibling);\n            const view = container.detach(container.length - 1);\n\n            this.updateTemplateContext(embView.context, i);\n            container.insert(view, 0);\n            this._embeddedViews.unshift(embView);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    protected getContextIndex(input) {\n        return this.isRemote ? this.state.startIndex + this.igxForOf.indexOf(input) : this.igxForOf.indexOf(input);\n    }\n\n    /**\n     * @hidden\n     * Function which updates the passed context of an embedded view with the provided index\n     * from the view container.\n     * Often, called while handling a scroll event.\n     */\n    protected updateTemplateContext(context: any, index: number = 0): void {\n        context.$implicit = this.igxForOf[index];\n        context.index = this.getContextIndex(this.igxForOf[index]);\n        context.count = this.igxForOf.length;\n    }\n\n    /**\n     * @hidden\n     * The function applies an optimized state change through context change for each view\n     */\n    protected fixedApplyScroll(): void {\n        let j = 0;\n        const endIndex = this.state.startIndex + this.state.chunkSize;\n        for (let i = this.state.startIndex; i < endIndex && this.igxForOf[i] !== undefined; i++) {\n            const embView = this._embeddedViews[j++];\n            this.updateTemplateContext(embView.context, i);\n        }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     *\n     * Clears focus inside the virtualized container on small scroll swaps.\n     */\n    protected scrollFocus(node?: HTMLElement): void {\n        const activeElement = document.activeElement as HTMLElement;\n\n        // Remove focus in case the the active element is inside the view container.\n        // Otherwise we hit an exception while doing the 'small' scrolls swapping.\n        // For more information:\n        //\n        // https://developer.mozilla.org/en-US/docs/Web/API/Node/removeChild\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=432392\n        if (node && node.contains(document.activeElement)) {\n            activeElement.blur();\n        }\n    }\n\n    /**\n     * @hidden\n     * Function that is called when scrolling horizontally\n     */\n    protected onHScroll(event) {\n        /* in certain situations this may be called when no scrollbar is visible */\n        if (!parseInt(this.scrollComponent.nativeElement.children[0].style.width, 10)) {\n            return;\n        }\n        const prevStartIndex = this.state.startIndex;\n        // Updating horizontal chunks\n        const scrollOffset = this.fixedUpdateAllElements(event.target.scrollLeft);\n        this.dc.instance._viewContainer.element.nativeElement.style.left = -scrollOffset + 'px';\n\n        this.dc.changeDetectorRef.detectChanges();\n        if (prevStartIndex !== this.state.startIndex) {\n            this.onChunkLoad.emit(this.state);\n        }\n    }\n\n    /**\n     * Gets the function used to track changes in the items collection.\n     * By default the object references are compared. However this can be optimized if you have unique identifier\n     * value that can be used for the comparison instead of the object ref or if you have some other property values\n     * in the item object that should be tracked for changes.\n     * This option is similar to ngForTrackBy.\n     * ```typescript\n     * const trackFunc = this.parentVirtDir.igxForTrackBy;\n     * ```\n     */\n    @Input()\n    get igxForTrackBy(): TrackByFunction<T> { return this._trackByFn; }\n\n    /**\n     * Sets the function used to track changes in the items collection.\n     * This function can be set in scenarios where you want to optimize or\n     * customize the tracking of changes for the items in the collection.\n     * The igxForTrackBy function takes the index and the current item as arguments and needs to return the unique identifier for this item.\n     * ```typescript\n     * this.parentVirtDir.igxForTrackBy = (index, item) => {\n     *      return item.id + item.width;\n     * };\n     * ```\n     */\n    set igxForTrackBy(fn: TrackByFunction<T>) { this._trackByFn = fn; }\n\n    /**\n     * @hidden\n     */\n    protected _applyChanges() {\n        const prevChunkSize = this.state.chunkSize;\n        this.applyChunkSizeChange();\n        this._recalcScrollBarSize();\n        if (this.igxForOf && this.igxForOf.length && this.dc) {\n            const embeddedViewCopy = Object.assign([], this._embeddedViews);\n            let startIndex = this.state.startIndex;\n            let endIndex = this.state.chunkSize + this.state.startIndex;\n            if (this.isRemote) {\n                startIndex = 0;\n                endIndex = this.igxForOf.length;\n            }\n            for (let i = startIndex; i < endIndex && this.igxForOf[i] !== undefined; i++) {\n                const embView = embeddedViewCopy.shift();\n                this.updateTemplateContext(embView.context, i);\n            }\n            if (prevChunkSize !== this.state.chunkSize) {\n                this.onChunkLoad.emit(this.state);\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    protected _calcMaxBrowserHeight(): number {\n        const div = document.createElement('div');\n        const style = div.style;\n        style.position = 'absolute';\n        style.top = '9999999999999999px';\n        document.body.appendChild(div);\n        const size = Math.abs(div.getBoundingClientRect()['top']);\n        document.body.removeChild(div);\n        return size;\n    }\n\n    /**\n     * @hidden\n     * Recalculates the chunkSize based on current startIndex and returns the new size.\n     * This should be called after this.state.startIndex is updated, not before.\n     */\n    protected _calculateChunkSize(): number {\n        let chunkSize = 0;\n        if (this.igxForContainerSize !== null && this.igxForContainerSize !== undefined) {\n            if (!this.sizesCache) {\n                this.initSizesCache(this.igxForOf);\n            }\n            chunkSize = this._calcMaxChunkSize();\n            if (this.igxForOf && chunkSize > this.igxForOf.length) {\n                chunkSize = this.igxForOf.length;\n            }\n        } else {\n            if (this.igxForOf) {\n                chunkSize = this.igxForOf.length;\n            }\n        }\n        return chunkSize;\n    }\n\n    /**\n     * @hidden\n     */\n    protected getElement(viewref, nodeName) {\n        const elem = viewref.element.nativeElement.parentNode.getElementsByTagName(nodeName);\n        return elem.length > 0 ? elem[0] : null;\n    }\n\n    /**\n     * @hidden\n     */\n    protected initSizesCache(items: any[]): number {\n        let totalSize = 0;\n        let size = 0;\n        const dimension = this.igxForScrollOrientation === 'horizontal' ?\n            this.igxForSizePropName : 'height';\n        let i = 0;\n        this.sizesCache = [];\n        this.heightCache = [];\n        this.sizesCache.push(0);\n        const count = this.isRemote ? this.totalItemCount : items.length;\n        for (i; i < count; i++) {\n            if (dimension === 'height') {\n                // cols[i][dimension] = parseInt(this.igxForItemSize, 10) || 0;\n                size = parseInt(this.igxForItemSize, 10) || 0;\n                this.heightCache.push(size);\n            } else {\n                size = this._getItemSize(items[i], dimension);\n            }\n            totalSize += size;\n            this.sizesCache.push(totalSize);\n        }\n        return totalSize;\n    }\n\n    protected _updateSizeCache() {\n        if (this.igxForScrollOrientation === 'horizontal') {\n            this.initSizesCache(this.igxForOf);\n            return;\n        }\n        const oldHeight = this.heightCache.length > 0 ? this.heightCache.reduce((acc, val) => acc + val) : 0;\n        const newHeight = this.initSizesCache(this.igxForOf);\n\n        const diff = oldHeight - newHeight;\n\n        // if data has been changed while container is scrolled\n        // should update scroll top/left according to change so that same startIndex is in view\n        if (Math.abs(diff) > 0 && this.scrollPosition > 0) {\n            this.recalcUpdateSizes();\n            const offset = parseInt(this.dc.instance._viewContainer.element.nativeElement.style.top, 10);\n            this.scrollPosition = this.sizesCache[this.state.startIndex] - offset;\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    protected _calcMaxChunkSize(): number {\n        let i = 0;\n        let length = 0;\n        let maxLength = 0;\n        const arr = [];\n        let sum = 0;\n        const availableSize = parseInt(this.igxForContainerSize, 10);\n        if (!availableSize) {\n            return 0;\n        }\n        const dimension = this.igxForScrollOrientation === 'horizontal' ?\n            this.igxForSizePropName : 'height';\n        const reducer = (accumulator, currentItem) => accumulator + this._getItemSize(currentItem, dimension);\n        for (i; i < this.igxForOf.length; i++) {\n            let item = this.igxForOf[i];\n            if (dimension === 'height') {\n                item = { value: this.igxForOf[i], height: this.heightCache[i] };\n            }\n            const size = dimension === 'height' ?\n                this.heightCache[i] :\n                this._getItemSize(item, dimension);\n            sum = arr.reduce(reducer, size);\n            if (sum < availableSize) {\n                arr.push(item);\n                length = arr.length;\n                if (i === this.igxForOf.length - 1) {\n                    // reached end without exceeding\n                    // include prev items until size is filled or first item is reached.\n                    let curItem = dimension === 'height' ? arr[0].value : arr[0];\n                    let prevIndex = this.igxForOf.indexOf(curItem) - 1;\n                    while (prevIndex >= 0 && sum <= availableSize) {\n                        curItem = dimension === 'height' ? arr[0].value : arr[0];\n                        prevIndex = this.igxForOf.indexOf(curItem) - 1;\n                        const prevItem = this.igxForOf[prevIndex];\n                        const prevSize = dimension === 'height' ?\n                            this.heightCache[prevIndex] :\n                            parseInt(prevItem[dimension], 10);\n                        sum = arr.reduce(reducer, prevSize);\n                        arr.unshift(prevItem);\n                        length = arr.length;\n                    }\n                }\n            } else {\n                arr.push(item);\n                length = arr.length + 1;\n                arr.shift();\n            }\n            if (length > maxLength) {\n                maxLength = length;\n            }\n        }\n        return maxLength;\n    }\n\n    /**\n     * @hidden\n     */\n    protected getIndexAt(left, set, index) {\n        let start = 0;\n        let end = set.length - 1;\n        if (left === 0) {\n            return 0;\n        }\n        while (start <= end) {\n            const midIdx = Math.floor((start + end) / 2);\n            const midLeft = set[midIdx];\n            const cmp = left - midLeft;\n            if (cmp > 0) {\n                start = midIdx + 1;\n            } else if (cmp < 0) {\n                end = midIdx - 1;\n            } else {\n                return midIdx;\n            }\n        }\n        return end;\n    }\n\n    protected _recalcScrollBarSize() {\n        const count = this.isRemote ? this.totalItemCount : (this.igxForOf ? this.igxForOf.length : 0);\n        this.dc.instance.notVirtual = !(this.igxForContainerSize && this.dc && this.state.chunkSize < count);\n        const scrollable = this.isScrollable();\n        if (this.igxForScrollOrientation === 'horizontal') {\n            const totalWidth = this.igxForContainerSize ? this.initSizesCache(this.igxForOf) : 0;\n            this.scrollComponent.nativeElement.style.width = this.igxForContainerSize + 'px';\n            this.scrollComponent.size = totalWidth;\n            if (totalWidth <= parseInt(this.igxForContainerSize, 10)) {\n                this.scrollPosition = 0;\n                // Need to reset the scrollAmount value here, because horizontalScrollBar is hidden, therefore\n                // onScroll event handler for VirtualHelperBaseDirective will not be called\n                this.scrollComponent.scrollAmount = 0;\n            }\n        }\n        if (this.igxForScrollOrientation === 'vertical') {\n            this.scrollComponent.nativeElement.style.height = parseInt(this.igxForContainerSize, 10) + 'px';\n            this.scrollComponent.size = this._calcHeight();\n            if ( this.scrollComponent.size <= parseInt(this.igxForContainerSize, 10)) {\n                this.scrollPosition = 0;\n                // Need to reset the scrollAmount value here, because verticalScrollBar is hidden, therefore\n                // onScroll event handler for VirtualHelperBaseDirective will not be called\n                this.scrollComponent.scrollAmount = 0;\n            }\n        }\n        if (scrollable !== this.isScrollable()) {\n            // scrollbar visibility has changed\n            this.onScrollbarVisibilityChanged.emit();\n        }\n    }\n\n    protected _calcHeight(): number {\n        let height;\n        if (this.heightCache) {\n            height = this.heightCache.reduce((acc, val) => acc + val, 0);\n        } else {\n            height = this.initSizesCache(this.igxForOf);\n        }\n        this._virtHeight = height;\n        if (height > this._maxHeight) {\n            this._virtHeightRatio = height / this._maxHeight;\n            height = this._maxHeight;\n        }\n        return height;\n    }\n\n    protected _recalcOnContainerChange(changes: SimpleChanges) {\n        this.dc.instance._viewContainer.element.nativeElement.style.top = '0px';\n        this.dc.instance._viewContainer.element.nativeElement.style.left = '0px';\n        const prevChunkSize = this.state.chunkSize;\n        this.applyChunkSizeChange();\n        this._recalcScrollBarSize();\n        if (prevChunkSize !== this.state.chunkSize) {\n            this.onChunkLoad.emit(this.state);\n        }\n        if (this.sizesCache && this.igxForScrollOrientation === 'horizontal') {\n            // Updating horizontal chunks and offsets based on the new scrollLeft\n            const scrollOffset = this.fixedUpdateAllElements(this.scrollPosition);\n            this.dc.instance._viewContainer.element.nativeElement.style.left = -scrollOffset + 'px';\n        }\n    }\n\n    /**\n     * @hidden\n     * Removes an elemenet from the embedded views and updates chunkSize.\n     */\n    protected removeLastElem() {\n        const oldElem = this._embeddedViews.pop();\n        this.onBeforeViewDestroyed.emit(oldElem);\n        // also detach from ViewContainerRef to make absolutely sure this is removed from the view container.\n        this.dc.instance._vcr.detach(this.dc.instance._vcr.length - 1);\n        oldElem.destroy();\n\n        this.state.chunkSize--;\n    }\n\n    /**\n     * @hidden\n     * If there exists an element that we can create embedded view for creates it, appends it and updates chunkSize\n     */\n    protected addLastElem() {\n        let elemIndex = this.state.startIndex + this.state.chunkSize;\n        if (!this.isRemote && !this.igxForOf) {\n            return;\n        }\n\n        if (elemIndex >= this.igxForOf.length) {\n            elemIndex = this.igxForOf.length - this.state.chunkSize;\n        }\n        const input = this.igxForOf[elemIndex];\n        const embeddedView = this.dc.instance._vcr.createEmbeddedView(\n            this._template,\n            new IgxForOfContext<T>(input, this.getContextIndex(input), this.igxForOf.length)\n        );\n\n        this._embeddedViews.push(embeddedView);\n        this.state.chunkSize++;\n\n        this._zone.run(() => {\n            this.cdr.markForCheck();\n        });\n    }\n\n    /**\n     * Recalculates chunkSize and adds/removes elements if need due to the change.\n     * this.state.chunkSize is updated in @addLastElem() or @removeLastElem()\n     */\n    protected applyChunkSizeChange() {\n        const chunkSize = this.isRemote ? (this.igxForOf ? this.igxForOf.length : 0) : this._calculateChunkSize();\n        if (chunkSize > this.state.chunkSize) {\n            const diff = chunkSize - this.state.chunkSize;\n            for (let i = 0; i < diff; i++) {\n                this.addLastElem();\n            }\n        } else if (chunkSize < this.state.chunkSize) {\n            const diff = this.state.chunkSize - chunkSize;\n            for (let i = 0; i < diff; i++) {\n                this.removeLastElem();\n            }\n        }\n    }\n\n    protected _updateScrollOffset() {\n        if (this.igxForScrollOrientation === 'horizontal') {\n            this._updateHScrollOffset();\n        } else {\n            this._updateVScrollOffset();\n        }\n    }\n    private _updateVScrollOffset() {\n        let scrollOffset = 0;\n        let currentScrollTop = this.scrollPosition;\n        if (this._virtHeightRatio !== 1) {\n            this._calcVirtualScrollTop(this.scrollPosition);\n            currentScrollTop = this._virtScrollTop;\n        }\n        const vScroll =  this.scrollComponent.nativeElement;\n        scrollOffset = vScroll && this.scrollComponent.size ?\n        currentScrollTop - this.sizesCache[this.state.startIndex] : 0;\n        this.dc.instance._viewContainer.element.nativeElement.style.top = -(scrollOffset) + 'px';\n    }\n\n    protected _calcVirtualScrollTop(scrollTop: number) {\n        const containerSize = parseInt(this.igxForContainerSize, 10);\n        const maxRealScrollTop = this.scrollComponent.size - containerSize;\n        const realPercentScrolled = maxRealScrollTop !== 0 ?  scrollTop / maxRealScrollTop : 0;\n        const maxVirtScrollTop = this._virtHeight - containerSize;\n        this._virtScrollTop = realPercentScrolled * maxVirtScrollTop;\n    }\n\n    private _updateHScrollOffset() {\n        let scrollOffset = 0;\n        scrollOffset =  this.scrollComponent.nativeElement &&\n            this.scrollComponent.size ?\n            this.scrollPosition - this.sizesCache[this.state.startIndex] : 0;\n        this.dc.instance._viewContainer.element.nativeElement.style.left = -scrollOffset + 'px';\n    }\n\n    private _getItemSize(item, dimension: string): number {\n        const dim = item[dimension];\n        return typeof dim === 'number' ? dim : parseInt(this.igxForItemSize, 10) || 0;\n    }\n}\n\nexport function getTypeNameForDebugging(type: any): string {\n    const name = 'name';\n    return type[name] || typeof type;\n}\n\nexport interface IForOfState extends IBaseEventArgs {\n    startIndex?: number;\n    chunkSize?: number;\n}\n\nexport interface IForOfDataChangingEventArgs extends IBaseEventArgs {\n    containerSize: number;\n}\n\n@Directive({\n    selector: '[igxGridFor][igxGridForOf]'\n})\nexport class IgxGridForOfDirective<T> extends IgxForOfDirective<T> implements OnInit, OnChanges, DoCheck {\n\n    constructor(\n        _viewContainer: ViewContainerRef,\n        _template: TemplateRef<NgForOfContext<T>>,\n        _differs: IterableDiffers,\n        resolver: ComponentFactoryResolver,\n        cdr: ChangeDetectorRef,\n        _zone: NgZone,\n        protected syncScrollService: IgxForOfScrollSyncService,\n        protected syncService: IgxForOfSyncService) {\n        super(_viewContainer, _template, _differs, resolver, cdr, _zone, syncScrollService);\n    }\n\n    @Input()\n    set igxGridForOf(value) {\n        this.igxForOf = value;\n    }\n\n    get igxGridForOf() {\n        return this.igxForOf;\n    }\n\n    /**\n     * @hidden @internal\n     * An event that is emitted after data has been changed but before the view is refreshed\n     */\n    @Output()\n    public onDataChanging = new EventEmitter<IForOfDataChangingEventArgs>();\n\n    ngOnInit() {\n        this.syncService.setMaster(this);\n        super.ngOnInit();\n        this.removeScrollEventListeners();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const forOf = 'igxGridForOf';\n        this.syncService.setMaster(this);\n        if (forOf in changes) {\n            const value = changes[forOf].currentValue;\n            if (!this._differ && value) {\n                try {\n                    this._differ = this._differs.find(value).create(this.igxForTrackBy);\n                } catch (e) {\n                    throw new Error(\n                        `Cannot find a differ supporting object \"${value}\" of type \"${getTypeNameForDebugging(value)}\".\n                     NgFor only supports binding to Iterables such as Arrays.`);\n                }\n            }\n        }\n        const defaultItemSize = 'igxForItemSize';\n        if (defaultItemSize in changes && !changes[defaultItemSize].firstChange &&\n             this.igxForScrollOrientation === 'vertical' && this.igxForOf) {\n            // handle default item size changed.\n            this.initSizesCache(this.igxForOf);\n        }\n        const containerSize = 'igxForContainerSize';\n        if (containerSize in changes && !changes[containerSize].firstChange && this.igxForOf) {\n            this._recalcOnContainerChange(changes);\n        }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public get sizesCache(): number[] {\n        if (this.syncService.isMaster(this)) {\n            return this._sizesCache;\n        }\n        return this.syncService.sizesCache(this.igxForScrollOrientation);\n    }\n    /**\n     * @hidden\n     * @internal\n     */\n    public set sizesCache(value: number[]) {\n        this._sizesCache = value;\n    }\n\n    protected get itemsDimension() {\n        return this.igxForScrollOrientation === 'horizontal' ? this.igxForSizePropName : 'height';\n    }\n\n    protected getItemSize(item) {\n        let size = 0;\n        const dimension = this.igxForScrollOrientation === 'horizontal' ?\n            this.igxForSizePropName : 'height';\n        if (dimension === 'height') {\n            size = parseInt(this.igxForItemSize, 10) || 0;\n            if (item && item.summaries) {\n                size = item.max;\n            } else if (item && item.groups && item.height) {\n                size = item.height;\n            }\n        } else {\n            size = parseInt(item[dimension], 10) || 0;\n        }\n        return size;\n    }\n\n    protected initSizesCache(items: any[]): number {\n        if (!this.syncService.isMaster(this)) {\n            const masterSizesCache = this.syncService.sizesCache(this.igxForScrollOrientation);\n            return masterSizesCache[masterSizesCache.length - 1];\n        }\n        let totalSize = 0;\n        let size = 0;\n        let i = 0;\n        this.sizesCache = [];\n        this.heightCache = [];\n        this.sizesCache.push(0);\n        const count = this.isRemote ? this.totalItemCount : items.length;\n        for (i; i < count; i++) {\n            size = this.getItemSize(items[i]);\n            if (this.itemsDimension === 'height') {\n                this.heightCache.push(size);\n            }\n            totalSize += size;\n            this.sizesCache.push(totalSize);\n        }\n        return totalSize;\n    }\n\n    protected _updateSizeCache(changes: IterableChanges<T> = null) {\n        if (this.igxForScrollOrientation === 'horizontal') {\n            this.initSizesCache(this.igxForOf);\n            return;\n        }\n\n        const oldHeight = this.heightCache.length > 0 ? this.heightCache.reduce((acc, val) => acc + val) : 0;\n        let newHeight = oldHeight;\n        if (changes && !this.isRemote) {\n            newHeight = this.handleCacheChanges(changes);\n        } else {\n            newHeight = this.initSizesCache(this.igxForOf);\n        }\n\n        const diff = oldHeight - newHeight;\n\n        // if data has been changed while container is scrolled\n        // should update scroll top/left according to change so that same startIndex is in view\n        if (Math.abs(diff) > 0) {\n            // TODO: This code can be removed. However tests need to be rewritten in a way that they wait for ResizeObserved to complete.\n            // So leaving as is for the moment.\n            requestAnimationFrame(() => {\n                this.recalcUpdateSizes();\n                const offset = parseInt(this.dc.instance._viewContainer.element.nativeElement.style.top, 10);\n                if (this.scrollPosition !== 0) {\n                    this.scrollPosition = this.sizesCache[this.state.startIndex] - offset;\n                } else {\n                    this._updateScrollOffset();\n                }\n            });\n        }\n    }\n\n    protected handleCacheChanges(changes: IterableChanges<T>) {\n        const identityChanges = [];\n        const newHeightCache = [];\n        const newSizesCache = [];\n        newSizesCache.push(0);\n        let newHeight = 0;\n\n        // When there are more than one removed items the changes are not reliable so those with identity change should be default size.\n        let numRemovedItems = 0;\n        changes.forEachRemovedItem(() => numRemovedItems++);\n\n        // Get the identity changes to determine later if those that have changed their indexes should be assigned default item size.\n        changes.forEachIdentityChange((item) => {\n            if (item.currentIndex !== item.previousIndex) {\n                // Filter out ones that have not changed their index.\n                identityChanges[item.currentIndex] = item;\n            }\n        });\n\n        // Processing each item that is passed to the igxForOf so far seem to be most reliable. We parse the updated list of items.\n        changes.forEachItem((item) => {\n            if (item.previousIndex !== null &&\n                (numRemovedItems < 2 || !identityChanges.length || identityChanges[item.currentIndex])) {\n                // Reuse cache on those who have previousIndex.\n                // When there are more than one removed items currently the changes are not readable so ones with identity change\n                // should be racalculated.\n                newHeightCache[item.currentIndex] = this.heightCache[item.previousIndex];\n            } else {\n                // Assign default item size.\n                newHeightCache[item.currentIndex] = this.getItemSize(item.item);\n            }\n            newSizesCache[item.currentIndex + 1] = newSizesCache[item.currentIndex] + newHeightCache[item.currentIndex];\n            newHeight += newHeightCache[item.currentIndex];\n        });\n        this.heightCache = newHeightCache;\n        this.sizesCache = newSizesCache;\n        return newHeight;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public assumeMaster(): void {\n        this._sizesCache = this.syncService.sizesCache(this.igxForScrollOrientation);\n        this.syncService.setMaster(this, true);\n    }\n\n    ngDoCheck() {\n        if (this._differ) {\n            const changes = this._differ.diff(this.igxForOf);\n            if (changes) {\n                const args: IForOfDataChangingEventArgs = {\n                    containerSize: this.igxForContainerSize\n                };\n                this.onDataChanging.emit(args);\n                //  re-init cache.\n                if (!this.igxForOf) {\n                    this.igxForOf = [];\n                }\n                /* we need to reset the master dir if all rows are removed\n                (e.g. because of filtering); if all columns are hidden, rows are\n                still rendered empty, so we should not reset master */\n                if (!this.igxForOf.length &&\n                    this.igxForScrollOrientation === 'vertical') {\n                    this.syncService.resetMaster();\n                }\n                this.syncService.setMaster(this);\n                this.igxForContainerSize = args.containerSize;\n                this._updateSizeCache(changes);\n                this._applyChanges();\n                this._updateScrollOffset();\n                this.onDataChanged.emit();\n            }\n        }\n    }\n\n    onScroll(event) {\n        if (!parseInt(this.scrollComponent.nativeElement.style.height, 10)) {\n            return;\n        }\n        if (!this._bScrollInternal) {\n            this._calcVirtualScrollTop(event.target.scrollTop);\n        } else {\n            this._bScrollInternal = false;\n        }\n        const scrollOffset = this.fixedUpdateAllElements(this._virtScrollTop);\n\n        this.dc.instance._viewContainer.element.nativeElement.style.top = -(scrollOffset) + 'px';\n\n        this._zone.onStable.pipe(first()).subscribe( () => {\n            this.recalcUpdateSizes();\n        });\n        this.cdr.markForCheck();\n    }\n\n    onHScroll(scrollAmount) {\n        /* in certain situations this may be called when no scrollbar is visible */\n        if (!this.scrollComponent || !parseInt(this.scrollComponent.nativeElement.children[0].style.width, 10)) {\n            return;\n        }\n        // Updating horizontal chunks\n        const scrollOffset = this.fixedUpdateAllElements(scrollAmount);\n        this.dc.instance._viewContainer.element.nativeElement.style.left = -scrollOffset + 'px';\n    }\n\n    protected addLastElem() {\n        let elemIndex = this.state.startIndex + this.state.chunkSize;\n        if (!this.isRemote && !this.igxForOf) {\n            return;\n        }\n\n        if (elemIndex >= this.igxForOf.length) {\n            elemIndex = this.igxForOf.length - this.state.chunkSize;\n        }\n        const input = this.igxForOf[elemIndex];\n        const embeddedView = this.dc.instance._vcr.createEmbeddedView(\n            this._template,\n            new IgxForOfContext<T>(input, this.getContextIndex(input), this.igxForOf.length)\n        );\n\n        this._embeddedViews.push(embeddedView);\n        this.state.chunkSize++;\n    }\n\n    protected _updateViews(prevChunkSize) {\n        if (this.igxForOf && this.igxForOf.length && this.dc) {\n            const embeddedViewCopy = Object.assign([], this._embeddedViews);\n            let startIndex;\n            let endIndex;\n            if (this.isRemote) {\n                startIndex = 0;\n                endIndex = this.igxForOf.length;\n            } else {\n                startIndex = this.getIndexAt(\n                    this.scrollPosition,\n                    this.sizesCache,\n                    0\n                );\n                if (startIndex + this.state.chunkSize > this.igxForOf.length) {\n                    startIndex = this.igxForOf.length - this.state.chunkSize;\n                }\n                this.state.startIndex = startIndex;\n                endIndex = this.state.chunkSize + this.state.startIndex;\n            }\n\n            for (let i = startIndex; i < endIndex && this.igxForOf[i] !== undefined; i++) {\n                const embView = embeddedViewCopy.shift();\n                this.updateTemplateContext(embView.context, i);\n            }\n            if (prevChunkSize !== this.state.chunkSize) {\n                this.onChunkLoad.emit(this.state);\n            }\n        }\n    }\n    protected _applyChanges() {\n        const prevChunkSize = this.state.chunkSize;\n        this.applyChunkSizeChange();\n        this._recalcScrollBarSize();\n        this._updateViews(prevChunkSize);\n    }\n\n    /**\n     * @hidden\n     */\n    protected _calcMaxChunkSize(): number {\n        if (this.syncService.isMaster(this)) {\n            return super._calcMaxChunkSize();\n        }\n        return this.syncService.chunkSize(this.igxForScrollOrientation);\n    }\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [IgxForOfDirective, IgxGridForOfDirective, DisplayContainerComponent, VirtualHelperComponent,\n         HVirtualHelperComponent, VirtualHelperBaseDirective],\n    entryComponents: [DisplayContainerComponent, VirtualHelperComponent, HVirtualHelperComponent],\n    exports: [IgxForOfDirective, IgxGridForOfDirective],\n    imports: [IgxScrollInertiaModule, CommonModule]\n})\n\nexport class IgxForOfModule {\n}\n","import {\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    forwardRef,\n    QueryList,\n    OnChanges,\n    Input,\n    OnDestroy,\n    ViewChild,\n    ContentChild,\n    AfterViewInit,\n    Output,\n    EventEmitter,\n    Optional,\n    Inject,\n    SimpleChanges\n} from '@angular/core';\nimport { IgxToggleDirective } from '../directives/toggle/toggle.directive';\nimport { IgxDropDownItemComponent } from './drop-down-item.component';\nimport { IgxDropDownBaseDirective } from './drop-down.base';\nimport { DropDownActionKey, Navigate } from './drop-down.common';\nimport { IGX_DROPDOWN_BASE, IDropDownBase } from './drop-down.common';\nimport { ISelectionEventArgs } from './drop-down.common';\nimport { CancelableEventArgs, CancelableBrowserEventArgs, isIE, IBaseEventArgs } from '../core/utils';\nimport { IgxSelectionAPIService } from '../core/selection';\nimport { Subject } from 'rxjs';\nimport { IgxDropDownItemBaseDirective } from './drop-down-item.base';\nimport { OverlaySettings } from '../services/public_api';\nimport { IgxForOfDirective } from '../directives/for-of/for_of.directive';\nimport { take } from 'rxjs/operators';\nimport { DisplayDensityToken, IDisplayDensityOptions } from '../core/density';\n\n/**\n * **Ignite UI for Angular DropDown** -\n * [Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/drop_down.html)\n *\n * The Ignite UI for Angular Drop Down displays a scrollable list of items which may be visually grouped and\n * supports selection of a single item. Clicking or tapping an item selects it and closes the Drop Down\n *\n * Example:\n * ```html\n * <igx-drop-down>\n *   <igx-drop-down-item *ngFor=\"let item of items\" disabled={{item.disabled}} isHeader={{item.header}}>\n *     {{ item.value }}\n *   </igx-drop-down-item>\n * </igx-drop-down>\n * ```\n */\n@Component({\n    selector: 'igx-drop-down',\n    templateUrl: './drop-down.component.html',\n    providers: [{ provide: IGX_DROPDOWN_BASE, useExisting: IgxDropDownComponent }]\n})\nexport class IgxDropDownComponent extends IgxDropDownBaseDirective implements IDropDownBase, OnChanges, AfterViewInit, OnDestroy {\n    protected destroy$ = new Subject<boolean>();\n    protected _scrollPosition: number;\n\n    @ContentChild(IgxForOfDirective, { read: IgxForOfDirective })\n    protected virtDir: IgxForOfDirective<any>;\n\n    @ViewChild(IgxToggleDirective, { static: true })\n    protected toggleDirective: IgxToggleDirective;\n\n    @ViewChild('scrollContainer', { static: true })\n    protected scrollContainerRef: ElementRef;\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @ContentChildren(forwardRef(() => IgxDropDownItemComponent), { descendants: true })\n    public children: QueryList<IgxDropDownItemBaseDirective>;\n\n    /**\n     * Emitted before the dropdown is opened\n     *\n     * ```html\n     * <igx-drop-down (onOpening)='handleOpening()'></igx-drop-down>\n     * ```\n     */\n    @Output()\n    public onOpening = new EventEmitter<CancelableEventArgs & IBaseEventArgs>();\n\n    /**\n     * Emitted after the dropdown is opened\n     *\n     * ```html\n     * <igx-drop-down (onOpened)='handleOpened()'></igx-drop-down>\n     * ```\n     */\n    @Output()\n    public onOpened = new EventEmitter<void>();\n\n    /**\n     * Emitted before the dropdown is closed\n     *\n     * ```html\n     * <igx-drop-down (onClosing)='handleClosing()'></igx-drop-down>\n     * ```\n     */\n    @Output()\n    public onClosing = new EventEmitter<CancelableBrowserEventArgs & IBaseEventArgs>();\n\n    /**\n     * Emitted after the dropdown is closed\n     *\n     * ```html\n     * <igx-drop-down (onClosed)='handleClosed()'></igx-drop-down>\n     * ```\n     */\n    @Output()\n    public onClosed = new EventEmitter<void>();\n\n    /**\n     * Gets/sets whether items take focus. Disabled by default.\n     * When enabled, drop down items gain tab index and are focused when active -\n     * this includes activating the selected item when opening the drop down and moving with keyboard navigation.\n     *\n     * Note: Keep that focus shift in mind when using the igxDropDownItemNavigation directive\n     * and ensure it's placed either on each focusable item or a common ancestor to allow it to handle keyboard events.\n     *\n     * ```typescript\n     * // get\n     * let dropDownAllowsItemFocus = this.dropdown.allowItemsFocus;\n     * ```\n     *\n     * ```html\n     * <!--set-->\n     * <igx-drop-down [allowItemsFocus]='true'></igx-drop-down>\n     * ```\n     */\n    @Input()\n    public allowItemsFocus = false;\n\n    /**\n     * @hidden @internal\n     */\n    public get focusedItem(): IgxDropDownItemBaseDirective {\n        if (this.virtDir) {\n            return this._focusedItem && this._focusedItem.index !== -1 ?\n                (this.children.find(e => e.index === this._focusedItem.index) || null) :\n                null;\n        }\n        return this._focusedItem;\n    }\n\n    public set focusedItem(value: IgxDropDownItemBaseDirective) {\n        if (!value) {\n            this.selection.clear(`${this.id}-active`);\n            this._focusedItem = null;\n            return;\n        }\n        this._focusedItem = value;\n        if (this.virtDir) {\n            this._focusedItem = {\n                value: value.value,\n                index: value.index\n            } as IgxDropDownItemBaseDirective;\n        }\n        this.selection.set(`${this.id}-active`, new Set([this._focusedItem]));\n    }\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n    set id(value: string) {\n        this.selection.set(value, this.selection.get(this.id));\n        this.selection.clear(this.id);\n        this.selection.set(value, this.selection.get(`${this.id}-active`));\n        this.selection.clear(`${this.id}-active`);\n        this._id = value;\n    }\n\n    /** Id of the internal listbox of the drop down */\n    public get listId() {\n        return this.id + '-list';\n    }\n\n    /**\n     * Get currently selected item\n     *\n     * ```typescript\n     * let currentItem = this.dropdown.selectedItem;\n     * ```\n     */\n    public get selectedItem(): IgxDropDownItemBaseDirective {\n        const selectedItem = this.selection.first_item(this.id);\n        if (selectedItem) {\n            return selectedItem;\n        }\n        return null;\n    }\n\n    /**\n     * Gets if the dropdown is collapsed\n     *\n     * ```typescript\n     * let isCollapsed = this.dropdown.collapsed;\n     * ```\n     */\n    public get collapsed(): boolean {\n        return this.toggleDirective.collapsed;\n    }\n\n    /** @hidden @internal */\n    public get scrollContainer(): HTMLElement {\n        return this.scrollContainerRef.nativeElement;\n    }\n\n    protected get collectionLength() {\n        if (this.virtDir) {\n            return this.virtDir.totalItemCount || this.virtDir.igxForOf.length;\n        }\n    }\n\n    constructor(\n        protected elementRef: ElementRef,\n        protected cdr: ChangeDetectorRef,\n        protected selection: IgxSelectionAPIService,\n        @Optional() @Inject(DisplayDensityToken) protected _displayDensityOptions: IDisplayDensityOptions) {\n        super(elementRef, cdr, _displayDensityOptions);\n    }\n\n    /**\n     * Opens the dropdown\n     *\n     * ```typescript\n     * this.dropdown.open();\n     * ```\n     */\n    public open(overlaySettings?: OverlaySettings) {\n        this.toggleDirective.open(overlaySettings);\n        this.updateScrollPosition();\n    }\n\n    /**\n     * Closes the dropdown\n     *\n     * ```typescript\n     * this.dropdown.close();\n     * ```\n     */\n    public close() {\n        this.toggleDirective.close();\n    }\n\n    /**\n     * Toggles the dropdown\n     *\n     * ```typescript\n     * this.dropdown.toggle();\n     * ```\n     */\n    public toggle(overlaySettings?: OverlaySettings) {\n        if (this.collapsed || this.toggleDirective.isClosing) {\n            this.open(overlaySettings);\n        } else {\n            this.close();\n        }\n    }\n\n    /**\n     * Select an item by index\n     * @param index of the item to select; If the drop down uses *igxFor, pass the index in data\n     */\n    public setSelectedItem(index: number) {\n        if (index < 0 || index >= this.items.length) {\n            return;\n        }\n        let newSelection: IgxDropDownItemBaseDirective;\n        if (this.virtDir) {\n            newSelection = {\n                value: this.virtDir.igxForOf[index],\n                index\n            } as IgxDropDownItemBaseDirective;\n        } else {\n            newSelection = this.items[index];\n        }\n        this.selectItem(newSelection);\n    }\n\n    /**\n     * Navigates to the item on the specified index\n     * If the data in the drop-down is virtualized, pass the index of the item in the virtualized data.\n     * @param newIndex number\n     */\n    public navigateItem(index: number) {\n        if (this.virtDir) {\n            if (index === -1 || index >= this.collectionLength) {\n                return;\n            }\n            const direction = index > (this.focusedItem ? this.focusedItem.index : -1) ? Navigate.Down : Navigate.Up;\n            const subRequired = this.isIndexOutOfBounds(index, direction);\n            this.focusedItem = {\n                value: this.virtDir.igxForOf[index],\n                index: index\n            } as IgxDropDownItemBaseDirective;\n            if (subRequired) {\n                this.virtDir.scrollTo(index);\n            }\n            if (subRequired) {\n                this.virtDir.onChunkLoad.pipe(take(1)).subscribe(() => {\n                    this.skipHeader(direction);\n                });\n            } else {\n                this.skipHeader(direction);\n            }\n        } else {\n            super.navigateItem(index);\n        }\n        if (this.allowItemsFocus && this.focusedItem) {\n            this.focusedItem.element.nativeElement.focus();\n            this.cdr.markForCheck();\n        }\n    }\n\n    private isIndexOutOfBounds(index: number, direction: Navigate) {\n        const virtState = this.virtDir.state;\n        const currentPosition = this.virtDir.getScroll().scrollTop;\n        const itemPosition = this.virtDir.getScrollForIndex(index, direction === Navigate.Down);\n        const indexOutOfChunk = index < virtState.startIndex || index > virtState.chunkSize + virtState.startIndex;\n        const scrollNeeded = direction === Navigate.Down ? currentPosition < itemPosition : currentPosition > itemPosition;\n        const subRequired = indexOutOfChunk || scrollNeeded;\n        return subRequired;\n    }\n\n    protected skipHeader(direction: Navigate) {\n        if (!this.focusedItem) {\n            return;\n        }\n        if (this.focusedItem.isHeader || this.focusedItem.disabled) {\n            if (direction === Navigate.Up) {\n                this.navigatePrev();\n            } else {\n                this.navigateNext();\n            }\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    updateScrollPosition() {\n        if (!this.virtDir) {\n            return;\n        }\n        if (!this.selectedItem) {\n            this.virtDir.scrollTo(0);\n            return;\n        }\n        let targetScroll = this.virtDir.getScrollForIndex(this.selectedItem.index);\n        const itemsInView = this.virtDir.igxForContainerSize / this.virtDir.igxForItemSize;\n        targetScroll -= (itemsInView / 2 - 1) * this.virtDir.igxForItemSize;\n        this.virtDir.getScroll().scrollTop = targetScroll;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onToggleOpening(e: CancelableEventArgs) {\n        this.onOpening.emit(e);\n        if (e.cancel) {\n            return;\n        }\n\n        if (this.virtDir) {\n            this.virtDir.scrollPosition = this._scrollPosition;\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onToggleContentAppended() {\n        if (!this.virtDir && this.selectedItem) {\n           this.scrollToItem(this.selectedItem);\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onToggleOpened() {\n        if (this.selectedItem) {\n            this.focusedItem = this.selectedItem;\n            this._focusedItem.focused = true;\n        } else if (this.allowItemsFocus) {\n            this.navigateFirst();\n        }\n        this.onOpened.emit();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onToggleClosing(e: CancelableBrowserEventArgs) {\n        this.onClosing.emit(e);\n        if (this.virtDir) {\n            this._scrollPosition = this.virtDir.scrollPosition;\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onToggleClosed() {\n        if (this._focusedItem) {\n            this._focusedItem.focused = false;\n        }\n        this.onClosed.emit();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public ngOnDestroy() {\n        this.destroy$.next(true);\n        this.destroy$.complete();\n        this.selection.clear(this.id);\n        this.selection.clear(`${this.id}-active`);\n    }\n\n    protected scrollToItem(item: IgxDropDownItemBaseDirective) {\n        const itemPosition = this.calculateScrollPosition(item);\n\n        //  in IE11 setting sctrollTop is somehow slow and forces dropdown\n        //  to appear on screen before animation start. As a result dropdown\n        //  flickers badly. This is why we set scrollTop just a little later\n        //  allowing animation to start and prevent dropdown flickering\n        if (isIE()) {\n            setTimeout(() => {\n                this.scrollContainer.scrollTop = (itemPosition);\n            }, 1);\n        } else {\n            this.scrollContainer.scrollTop = (itemPosition);\n        }\n    }\n\n    /** @hidden @internal */\n    public calculateScrollPosition(item: IgxDropDownItemBaseDirective): number {\n        if (!item) {\n            return 0;\n        }\n\n        const elementRect = item.element.nativeElement.getBoundingClientRect();\n        const parentRect = this.scrollContainer.getBoundingClientRect();\n        const scrollDelta = parentRect.top - elementRect.top;\n        let scrollPosition = this.scrollContainer.scrollTop - scrollDelta;\n\n        const dropDownHeight = this.scrollContainer.clientHeight;\n        scrollPosition -= dropDownHeight / 2;\n        scrollPosition += item.elementHeight / 2;\n\n        return Math.floor(scrollPosition);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    // temp workaround until fix --> https://github.com/angular/angular/issues/34992\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.id) {\n            this.toggleDirective.id = changes.id.currentValue;\n        }\n    }\n\n    ngAfterViewInit() {\n        if (this.virtDir) {\n            this.virtDir.igxForItemSize = 28;\n        }\n    }\n\n    /** Keydown Handler */\n    public onItemActionKey(key: DropDownActionKey, event?: Event) {\n        super.onItemActionKey(key, event);\n        this.close();\n    }\n\n    /**\n     * Virtual scroll implementation\n     * @hidden @internal\n     */\n    public navigateFirst() {\n        if (this.virtDir) {\n            this.navigateItem(0);\n        } else {\n            super.navigateFirst();\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public navigateLast() {\n        if (this.virtDir) {\n            this.navigateItem(this.virtDir.totalItemCount ? this.virtDir.totalItemCount - 1 : this.virtDir.igxForOf.length - 1);\n        } else {\n            super.navigateLast();\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public navigateNext() {\n        if (this.virtDir) {\n            this.navigateItem(this._focusedItem ? this._focusedItem.index + 1 : 0);\n        } else {\n            super.navigateNext();\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public navigatePrev() {\n        if (this.virtDir) {\n            this.navigateItem(this._focusedItem ? this._focusedItem.index - 1 : 0);\n        } else {\n            super.navigatePrev();\n        }\n    }\n\n    /**\n     * Handles the `onSelection` emit and the drop down toggle when selection changes\n     * @hidden\n     * @internal\n     * @param newSelection\n     * @param event\n     */\n    public selectItem(newSelection?: IgxDropDownItemBaseDirective, event?: Event) {\n        const oldSelection = this.selectedItem;\n        if (!newSelection) {\n            newSelection = this.focusedItem;\n        }\n        if (newSelection === null) {\n            return;\n        }\n        if (newSelection instanceof IgxDropDownItemBaseDirective && newSelection.isHeader) {\n            return;\n        }\n        if (this.virtDir) {\n            newSelection = {\n                value: newSelection.value,\n                index: newSelection.index\n            } as IgxDropDownItemBaseDirective;\n        }\n        const args: ISelectionEventArgs = { oldSelection, newSelection, cancel: false };\n        this.onSelection.emit(args);\n\n        if (!args.cancel) {\n            if (this.isSelectionValid(args.newSelection)) {\n                this.selection.set(this.id, new Set([args.newSelection]));\n                if (!this.virtDir) {\n                    if (oldSelection) {\n                        oldSelection.selected = false;\n                    }\n                    if (args.newSelection) {\n                        args.newSelection.selected = true;\n                    }\n                }\n                if (event) {\n                    this.toggleDirective.close();\n                }\n            } else {\n                throw new Error('Please provide a valid drop-down item for the selection!');\n            }\n        }\n    }\n\n    /**\n     * Clears the selection of the dropdown\n     * ```typescript\n     * this.dropdown.clearSelection();\n     * ```\n     */\n    public clearSelection() {\n        const oldSelection = this.selectedItem;\n        const newSelection: IgxDropDownItemBaseDirective = null;\n        const args: ISelectionEventArgs = { oldSelection, newSelection, cancel: false };\n        this.onSelection.emit(args);\n        if (this.selectedItem && !args.cancel) {\n            this.selectedItem.selected = false;\n            this.selection.clear(this.id);\n        }\n    }\n\n    /**\n     * Checks whether the selection is valid\n     * `null` - the selection should be emptied\n     * Virtual? - the selection should at least have and `index` and `value` property\n     * Non-virtual? - the selection should be a valid drop-down item and **not** be a header\n     */\n    protected isSelectionValid(selection: any): boolean {\n        return selection === null\n        || (this.virtDir && selection.hasOwnProperty('value') && selection.hasOwnProperty('index'))\n        || (selection instanceof IgxDropDownItemComponent && !selection.isHeader);\n    }\n}\n\n","import { Directive, Optional, Self, Input, HostListener, Inject } from '@angular/core';\nimport { IGX_DROPDOWN_BASE } from './drop-down.common';\nimport { IDropDownNavigationDirective } from './drop-down.common';\nimport { IgxDropDownBaseDirective } from './drop-down.base';\nimport { DropDownActionKey } from './drop-down.common';\n\n/**\n * Navigation Directive that handles keyboard events on its host and controls a targeted IgxDropDownBaseDirective component\n */\n@Directive({\n    selector: '[igxDropDownItemNavigation]'\n})\nexport class IgxDropDownItemNavigationDirective implements IDropDownNavigationDirective {\n\n    protected _target: IgxDropDownBaseDirective = null;\n\n    constructor(@Self() @Optional() @Inject(IGX_DROPDOWN_BASE) public dropdown: IgxDropDownBaseDirective) { }\n\n    /**\n     * Gets the target of the navigation directive;\n     *\n     * ```typescript\n     * // Get\n     * export class MyComponent {\n     *  ...\n     *  @ContentChild(IgxDropDownNavigationDirective)\n     *  navDirective: IgxDropDownNavigationDirective = null\n     *  ...\n     *  const navTarget: IgxDropDownBaseDirective = navDirective.navTarget\n     * }\n     * ```\n     */\n    get target(): IgxDropDownBaseDirective {\n        return this._target;\n    }\n\n    /**\n     * Sets the target of the navigation directive;\n     * If no valid target is passed, it falls back to the drop down context\n     *\n     * ```html\n     * <!-- Set -->\n     * <input [igxDropDownItemNavigation]=\"dropdown\" />\n     * ...\n     * <igx-drop-down #dropdown>\n     * ...\n     * </igx-drop-down>\n     * ```\n     */\n    @Input('igxDropDownItemNavigation')\n    set target(target: IgxDropDownBaseDirective) {\n        this._target = target ? target : this.dropdown;\n    }\n\n    /**\n     * Captures keydown events and calls the appropriate handlers on the target component\n     */\n    @HostListener('keydown', ['$event'])\n    handleKeyDown(event: KeyboardEvent) {\n        if (event) {\n            const key = event.key.toLowerCase();\n            if (!this.target.collapsed) { // If dropdown is opened\n                const navKeys = ['esc', 'escape', 'enter', 'space', 'spacebar', ' ',\n            'arrowup', 'up', 'arrowdown', 'down', 'home', 'end'];\n                if (navKeys.indexOf(key) === -1) { // If key has appropriate function in DD\n                    return;\n                }\n                event.preventDefault();\n                event.stopPropagation();\n            } else { // If dropdown is closed, do nothing\n                return;\n            }\n            switch (key) {\n                case 'esc':\n                case 'escape':\n                    this.target.onItemActionKey(DropDownActionKey.ESCAPE, event);\n                    break;\n                case 'enter':\n                    this.target.onItemActionKey(DropDownActionKey.ENTER, event);\n                    break;\n                case 'space':\n                case 'spacebar':\n                case ' ':\n                    this.target.onItemActionKey(DropDownActionKey.SPACE, event);\n                    break;\n                case 'arrowup':\n                case 'up':\n                    this.onArrowUpKeyDown();\n                    break;\n                case 'arrowdown':\n                case 'down':\n                    this.onArrowDownKeyDown();\n                    break;\n                case 'home':\n                    this.onHomeKeyDown();\n                    break;\n                case 'end':\n                    this.onEndKeyDown();\n                    break;\n                default:\n                    return;\n            }\n        }\n    }\n\n    /**\n     * Navigates to previous item\n     */\n    onArrowDownKeyDown() {\n        this.target.navigateNext();\n    }\n\n    /**\n     * Navigates to previous item\n     */\n    onArrowUpKeyDown() {\n        this.target.navigatePrev();\n    }\n\n    /**\n     * Navigates to target's last item\n     */\n    onEndKeyDown() {\n        this.target.navigateLast();\n    }\n\n    /**\n     * Navigates to target's first item\n     */\n    onHomeKeyDown() {\n        this.target.navigateFirst();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { IgxDropDownComponent } from './drop-down.component';\nimport { IgxDropDownItemComponent } from './drop-down-item.component';\nimport { IgxDropDownItemNavigationDirective } from './drop-down-navigation.directive';\nimport { CommonModule } from '@angular/common';\nimport { IgxToggleModule } from '../directives/toggle/toggle.directive';\nimport { IgxSelectionAPIService } from '../core/selection';\nimport { IgxDropDownGroupComponent } from './drop-down-group.component';\nimport { IgxDropDownBaseDirective } from './drop-down.base';\nimport { IgxDropDownItemBaseDirective } from './drop-down-item.base';\n\nexport * from './drop-down.component';\nexport * from './drop-down-item.component';\nexport { ISelectionEventArgs, IDropDownNavigationDirective } from './drop-down.common';\nexport * from './drop-down-navigation.directive';\nexport * from './drop-down.base';\nexport * from './drop-down-item.base';\nexport * from './drop-down-group.component';\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [\n        IgxDropDownBaseDirective,\n        IgxDropDownComponent,\n        IgxDropDownItemBaseDirective,\n        IgxDropDownItemComponent,\n        IgxDropDownGroupComponent,\n        IgxDropDownItemNavigationDirective\n    ],\n    exports: [\n        IgxDropDownComponent,\n        IgxDropDownItemComponent,\n        IgxDropDownGroupComponent,\n        IgxDropDownItemNavigationDirective\n    ],\n    imports: [\n        CommonModule,\n        IgxToggleModule\n    ]\n})\nexport class IgxDropDownModule { }\n","import { Directive, ElementRef, HostBinding, Input, OnInit } from '@angular/core';\n\nenum IgxHintPosition {\n    START,\n    END\n}\n\n@Directive({\n    selector: 'igx-hint,[igxHint]'\n})\nexport class IgxHintDirective implements OnInit {\n    private _position: IgxHintPosition = IgxHintPosition.START;\n    /**\n     * Sets/gets whether the hint position is at the start.\n     * Default value is `false`.\n     * ```typescript\n     * @ViewChild('hint', {read: IgxHintDirective})\n     * public igxHint: IgxHintDirective;\n     * this.igxHint.isPositionStart = true;\n     * ```\n     * ```typescript\n     * let isHintPositionStart = this.igxHint.isPositionStart;\n     * ```\n     * @memberof IgxHintDirective\n     */\n    @HostBinding('class.igx-input-group__hint-item--start')\n    public isPositionStart = false;\n    /**\n     * Sets/gets whether the hint position is at the end.\n     * Default value is `false`.\n     * ```typescript\n     * @ViewChild('hint', {read: IgxHintDirective})\n     * public igxHint: IgxHintDirective;\n     * this.igxHint.isPositionEnd = true;\n     * ```\n     * ```typescript\n     * let isHintPositionEnd = this.igxHint.isPositionEnd;\n     * ```\n     * @memberof IgxHintDirective\n     */\n    @HostBinding('class.igx-input-group__hint-item--end')\n    public isPositionEnd = false;\n\n    constructor(private _element: ElementRef) {\n    }\n    /**\n     * Sets the position of the hint.\n     * ```html\n     * <igx-input-group>\n     *  <input igxInput type=\"text\"/>\n     *  <igx-hint #hint [position]=\"'start'\">IgxHint displayed at the start</igx-hint>\n     * </igx-input-group>\n     * ```\n     * @memberof IgxHintDirective\n     */\n    @Input('position')\n    set position(value: string) {\n        const position: IgxHintPosition = (IgxHintPosition as any)[value.toUpperCase()];\n        if (position !== undefined) {\n            this._position = position;\n            this._applyPosition(this._position);\n        }\n    }\n    /**\n     * Gets the position of the hint.\n     * ```typescript\n     * @ViewChild('hint', {read: IgxHintDirective})\n     * public igxHint: IgxHintDirective;\n     * let hintPosition =  this.igxHint.position;\n     * ```\n     * @memberof IgxHintDirective\n     */\n    get position() {\n        return this._position.toString();\n    }\n    /**\n     * @hidden\n     */\n    ngOnInit() {\n        this._applyPosition(this._position);\n    }\n\n    private _applyPosition(position: IgxHintPosition) {\n        this.isPositionStart = this.isPositionEnd = false;\n        switch (position) {\n            case IgxHintPosition.START:\n                this.isPositionStart = true;\n                break;\n            case IgxHintPosition.END:\n                this.isPositionEnd = true;\n                break;\n            default: break;\n        }\n    }\n}\n","/** @hidden */\nexport abstract class IgxInputGroupBase {\n    disabled: boolean;\n    isFocused: boolean;\n    isRequired: boolean;\n    hasPlaceholder: boolean;\n}\n","import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Directive,\n    ElementRef,\n    HostBinding,\n    HostListener,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Self\n} from '@angular/core';\nimport { AbstractControl, FormControlName, NgControl, NgModel } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { IgxInputGroupBase } from '../../input-group/input-group.common';\n\nconst nativeValidationAttributes = ['required', 'pattern', 'minlength', 'maxlength', 'min', 'max', 'step'];\n\nexport enum IgxInputState {\n    INITIAL,\n    VALID,\n    INVALID\n}\n\n/**\n * The `igxInput` directive creates single- or multiline text elements, covering common scenarios when dealing with form inputs.\n *\n * @igxModule IgxInputGroupModule\n *\n * @igxParent Data Entry & Display\n *\n * @igxTheme igx-input-group-theme\n *\n * @igxKeywords input, input group, form, field, validation\n *\n * @igxGroup presentation\n *\n * @example\n * ```html\n * <input-group>\n *  <label for=\"address\">Address</label>\n *  <input igxInput name=\"address\" type=\"text\" [(ngModel)]=\"customer.address\">\n * </input-group>\n * ```\n */\n@Directive({\n    selector: '[igxInput]',\n    exportAs: 'igxInput'\n})\nexport class IgxInputDirective implements AfterViewInit, OnDestroy {\n    private _valid = IgxInputState.INITIAL;\n    private _statusChanges$: Subscription;\n\n    constructor(\n        public inputGroup: IgxInputGroupBase,\n        @Optional() @Self() @Inject(NgModel) protected ngModel: NgModel,\n        @Optional() @Self() @Inject(FormControlName) protected formControl: FormControlName,\n        protected element: ElementRef,\n        protected cdr: ChangeDetectorRef) { }\n\n    private get ngControl(): NgControl {\n        return this.ngModel ? this.ngModel : this.formControl;\n    }\n    /**\n     * Sets the `value` property.\n     *\n     * @example\n     * ```html\n     * <input-group>\n     *  <input igxInput #igxInput [value]=\"'IgxInput Value'\">\n     * </input-group>\n     * ```\n     */\n    @Input()\n    set value(value: any) {\n        this.nativeElement.value = value;\n        this.checkValidity();\n    }\n    /**\n     * Gets the `value` property.\n     *\n     * @example\n     * ```typescript\n     * @ViewChild('igxInput', {read: IgxInputDirective})\n     *  public igxInput: IgxInputDirective;\n     * let inputValue = this.igxInput.value;\n     * ```\n     */\n    get value() {\n        return this.nativeElement.value;\n    }\n    /**\n     * Sets the `disabled` property.\n     *\n     * @example\n     * ```html\n     * <input-group>\n     *  <input igxInput #igxInput [disabled]=\"true\">\n     * </input-group>\n     * ```\n     */\n    @Input()\n    public set disabled(value: boolean) {\n        this.nativeElement.disabled = value;\n        this.inputGroup.disabled = value;\n    }\n    /**\n     * Gets the `disabled` property\n     *\n     * @example\n     * ```typescript\n     * @ViewChild('igxInput', {read: IgxInputDirective})\n     *  public igxInput: IgxInputDirective;\n     * let isDisabled = this.igxInput.disabled;\n     * ```\n     */\n    public get disabled() {\n        return this.nativeElement.hasAttribute('disabled');\n    }\n\n    /**\n     * Sets the `required` property.\n     *\n     * @example\n     * ```html\n     * <input-group>\n     *  <input igxInput #igxInput [required]=\"true\">\n     * </input-group>\n     * ```\n     */\n    @Input()\n    public set required(value: boolean) {\n        if (typeof value === 'boolean') {\n            this.nativeElement.required = this.inputGroup.isRequired = value;\n\n            if (value && !this.nativeElement.checkValidity()) {\n                this._valid = IgxInputState.INVALID;\n            } else {\n                this._valid = IgxInputState.INITIAL;\n            }\n        }\n    }\n\n    /**\n     * Gets whether the igxInput is required.\n     *\n     * @example\n     * ```typescript\n     * let isRequired = this.igxInput.required;\n     * ```\n     */\n    public get required() {\n        return this.nativeElement.hasAttribute('required');\n    }\n\n    /**\n     * Sets/gets whether the `\"igx-input-group__input\"` class is added to the host element.\n     * Default value is `false`.\n     *\n     * @example\n     * ```typescript\n     * this.igxInput.isInput = true;\n     * ```\n     *\n     * @example\n     * ```typescript\n     * let isCLassAdded = this.igxInput.isInput;\n     * ```\n     */\n    @HostBinding('class.igx-input-group__input')\n    public isInput = false;\n    /**\n     * Sets/gets whether the `\"class.igx-input-group__textarea\"` class is added to the host element.\n     * Default value is `false`.\n     *\n     * @example\n     * ```typescript\n     * this.igxInput.isTextArea = true;\n     * ```\n     *\n     * @example\n     * ```typescript\n     * let isCLassAdded = this.igxInput.isTextArea;\n     * ```\n     */\n    @HostBinding('class.igx-input-group__textarea')\n    public isTextArea = false;\n    /**\n     * @hidden\n     * @internal\n     */\n    @HostListener('focus', ['$event'])\n    public onFocus(event) {\n        this.inputGroup.isFocused = true;\n    }\n    /**\n     * @param event The event to invoke the handler\n     *\n     * @hidden\n     * @internal\n     */\n    @HostListener('blur', ['$event'])\n    public onBlur(event) {\n        this.inputGroup.isFocused = false;\n        this._valid = IgxInputState.INITIAL;\n        if (this.ngControl) {\n            if (!this.ngControl.valid) {\n                this._valid = IgxInputState.INVALID;\n            }\n        } else if (this._hasValidators() && !this.nativeElement.checkValidity()) {\n            this._valid = IgxInputState.INVALID;\n        }\n    }\n    /**\n     * @hidden\n     * @internal\n     */\n    @HostListener('input')\n    public onInput() {\n        this.checkValidity();\n    }\n    /**\n     * @hidden\n     * @internal\n     */\n    public ngAfterViewInit() {\n        this.inputGroup.hasPlaceholder = this.nativeElement.hasAttribute('placeholder');\n        this.inputGroup.disabled = this.inputGroup.disabled || this.nativeElement.hasAttribute('disabled');\n        this.inputGroup.isRequired = this.nativeElement.hasAttribute('required');\n\n        // Make sure we do not invalidate the input on init\n        if (!this.ngControl) {\n            this._valid = IgxInputState.INITIAL;\n        }\n        // Also check the control's validators for required\n        if (!this.inputGroup.isRequired && this.ngControl && this.ngControl.control.validator) {\n            const validation = this.ngControl.control.validator({} as AbstractControl);\n            this.inputGroup.isRequired = validation && validation.required;\n        }\n\n\n        const elTag = this.nativeElement.tagName.toLowerCase();\n        if (elTag === 'textarea') {\n            this.isTextArea = true;\n        } else {\n            this.isInput = true;\n        }\n\n        if (this.ngControl) {\n            this._statusChanges$ = this.ngControl.statusChanges.subscribe(this.onStatusChanged.bind(this));\n        }\n\n        this.cdr.detectChanges();\n    }\n    /**\n     * @hidden\n     * @internal\n     */\n    public ngOnDestroy() {\n        if (this._statusChanges$) {\n            this._statusChanges$.unsubscribe();\n        }\n    }\n    /**\n     * Sets a focus on the igxInput.\n     *\n     * @example\n     * ```typescript\n     * this.igxInput.focus();\n     * ```\n     */\n    public focus() {\n        this.nativeElement.focus();\n    }\n    /**\n     * Gets the `nativeElement` of the igxInput.\n     *\n     * @example\n     * ```typescript\n     * let igxInputNativeElement = this.igxInput.nativeElement;\n     * ```\n     */\n    public get nativeElement() {\n        return this.element.nativeElement;\n    }\n    /**\n     * @hidden\n     * @internal\n     */\n    protected onStatusChanged() {\n        // Enable/Disable control based on ngControl #7086\n        if (this.disabled !== this.ngControl.disabled) {\n            this.disabled = this.ngControl.disabled;\n        }\n        if (this.ngControl.control.validator || this.ngControl.control.asyncValidator) {\n            if (this.ngControl.control.touched || this.ngControl.control.dirty) {\n                //  TODO: check the logic when control is touched or dirty\n                if (this.inputGroup.isFocused) {\n                    // the user is still typing in the control\n                    this._valid = this.ngControl.valid ? IgxInputState.VALID : IgxInputState.INVALID;\n                } else {\n                    // the user had touched the control previously but now the value is changing due to changes in the form\n                    this._valid = this.ngControl.valid ? IgxInputState.INITIAL : IgxInputState.INVALID;\n                }\n            } else {\n                //  if control is untouched and pristine its state is initial. This is when user did not interact\n                //  with the input or when form/control is reset\n                this._valid = IgxInputState.INITIAL;\n            }\n        }\n    }\n    /**\n     * Gets whether the igxInput has a placeholder.\n     *\n     * @example\n     * ```typescript\n     * let hasPlaceholder = this.igxInput.hasPlaceholder;\n     * ```\n     */\n    public get hasPlaceholder() {\n        return this.nativeElement.hasAttribute('placeholder');\n    }\n    /**\n     * Gets the placeholder element of the igxInput.\n     *\n     * @example\n     * ```typescript\n     * let igxInputPlaceholder = this.igxInput.placeholder;\n     * ```\n     */\n    public get placeholder() {\n        return this.nativeElement.placeholder;\n    }\n\n    /**\n     * @returns An indicator of whether the input has validator attributes or not\n     *\n     * @hidden\n     * @internal\n     */\n    private _hasValidators(): boolean {\n        for (const nativeValidationAttribute of nativeValidationAttributes) {\n            if (this.nativeElement.hasAttribute(nativeValidationAttribute)) {\n                return true;\n            }\n        }\n\n        return !!this.ngControl && (!!this.ngControl.control.validator || !!this.ngControl.control.asyncValidator);\n    }\n\n    /**\n     * Gets whether the igxInput is focused.\n     *\n     * @example\n     * ```typescript\n     * let isFocused = this.igxInput.focused;\n     * ```\n     */\n    public get focused() {\n        return this.inputGroup.isFocused;\n    }\n    /**\n     * Gets the state of the igxInput.\n     *\n     * @example\n     * ```typescript\n     * let igxInputState = this.igxInput.valid;\n     * ```\n     */\n    public get valid(): IgxInputState {\n        return this._valid;\n    }\n\n    /**\n     * Gets whether the igxInput is valid.\n     *\n     * @example\n     * ```typescript\n     * let valid = this.igxInput.isValid;\n     * ```\n     */\n    public get isValid(): boolean {\n        return this.valid !== IgxInputState.INVALID;\n    }\n\n    /**\n     * Sets the state of the igxInput.\n     *\n     * @example\n     * ```typescript\n     * this.igxInput.valid = IgxInputState.INVALID;\n     * ```\n     */\n    public set valid(value: IgxInputState) {\n        this._valid = value;\n    }\n\n    /**\n     * A function to assign a validity property of an input.\n     *\n     * @hidden\n     * @internal\n     */\n    private checkValidity() {\n        if (!this.ngControl && this._hasValidators()) {\n            this._valid = this.nativeElement.checkValidity() ? IgxInputState.VALID : IgxInputState.INVALID;\n        }\n    }\n}\n","import { Directive, HostBinding, Input } from '@angular/core';\n\nlet NEXT_ID = 0;\n\n@Directive({\n    selector: '[igxLabel]'\n})\nexport class IgxLabelDirective {\n    @HostBinding('class.igx-input-group__label')\n    public defaultClass = true;\n\n/**\n * @hidden\n */\n    @HostBinding('attr.id')\n    @Input()\n    public id = `igx-label-${NEXT_ID++}`;\n}\n","import { NgModule, Directive } from '@angular/core';\n\n/**\n * @hidden\n */\n@Directive({\n    selector: 'igx-prefix,[igxPrefix]'\n})\nexport class IgxPrefixDirective { }\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [IgxPrefixDirective],\n    exports: [IgxPrefixDirective]\n})\nexport class IgxPrefixModule { }\n","import { NgModule, Directive } from '@angular/core';\n\n/**\n * @hidden\n */\n@Directive({\n    selector: 'igx-suffix,[igxSuffix]'\n})\nexport class IgxSuffixDirective { }\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [IgxSuffixDirective],\n    exports: [IgxSuffixDirective]\n})\nexport class IgxSuffixModule { }\n","import { CommonModule } from '@angular/common';\nimport {\n    Component,\n    ContentChild,\n    ContentChildren,\n    ElementRef,\n    HostBinding,\n    HostListener,\n    Input,\n    NgModule,\n    QueryList,\n    Inject,\n    Optional\n} from '@angular/core';\nimport { IgxHintDirective } from '../directives/hint/hint.directive';\nimport { IgxInputDirective, IgxInputState } from '../directives/input/input.directive';\nimport { IgxLabelDirective } from '../directives/label/label.directive';\nimport { IgxPrefixModule} from '../directives/prefix/prefix.directive';\nimport { IgxSuffixModule } from '../directives/suffix/suffix.directive';\nimport { DisplayDensity, IDisplayDensityOptions, DisplayDensityToken, DisplayDensityBase } from '../core/displayDensity';\nimport { IgxInputGroupBase } from './input-group.common';\nimport { DeprecateProperty } from '../core/deprecateDecorators';\n\nlet NEXT_ID = 0;\n\nenum IgxInputGroupType {\n    LINE,\n    BOX,\n    BORDER,\n    FLUENT,\n    BOOTSTRAP,\n    SEARCH,\n    FLUENT_SEARCH,\n}\n\n@Component({\n    selector: 'igx-input-group',\n    templateUrl: 'input-group.component.html',\n    providers: [{ provide: IgxInputGroupBase, useExisting: IgxInputGroupComponent }]\n})\nexport class IgxInputGroupComponent extends DisplayDensityBase implements IgxInputGroupBase {\n    private _type = IgxInputGroupType.LINE;\n    private _filled = false;\n\n    /**\n     * An ElementRef property of the `IgxInputGroupComponent`.\n     */\n    public element: ElementRef;\n\n    /**\n     * An @Input property that sets the value of `id` attribute. If not provided it will be automatically generated.\n     * ```html\n     * <igx-input-group [id]=\"'igx-input-group-55'\"></igx-input-group>\n     * ```\n     */\n    @HostBinding('attr.id')\n    @Input()\n    public id = `igx-input-group-${NEXT_ID++}`;\n\n    /**\n     * Property that enables/disables the autogenerated class of the `IgxInputGroupComponent`.\n     * By default applied the class is applied.\n     * ```typescript\n     *  @ViewChild(\"MyInputGroup\")\n     *  public inputGroup: IgxInputGroupComponent;\n     *  ngAfterViewInit(){\n     *  this.inputGroup.defaultClass = false;\n     * ```\n     * }\n     */\n    @HostBinding('class.igx-input-group')\n    public defaultClass = true;\n\n    /** @hidden */\n    @HostBinding('class.igx-input-group--placeholder')\n    public hasPlaceholder = false;\n\n    /** @hidden */\n    @HostBinding('class.igx-input-group--required')\n    public isRequired = false;\n\n    /** @hidden */\n    @HostBinding('class.igx-input-group--focused')\n    public isFocused = false;\n\n    /** @hidden */\n    @HostBinding('class.igx-input-group--box')\n    public isBox = false;\n\n    /** @hidden */\n    @HostBinding('class.igx-input-group--border')\n    public isBorder = false;\n\n    /** @hidden */\n    @HostBinding('class.igx-input-group--search')\n    public isSearch = false;\n\n    /** @hidden */\n    @HostBinding('class.igx-input-group--fluent-search')\n    public isFluentSearch = false;\n\n    /** @hidden */\n    @HostBinding('class.igx-input-group--fluent')\n    public isFluent = false;\n\n    /** @hidden */\n    @HostBinding('class.igx-input-group--bootstrap')\n    public isBootstrap = false;\n\n    /**\n     * An @Input property that disables the `IgxInputGroupComponent`.\n     * ```html\n     * <igx-input-group [disabled]=\"'true'\"></igx-input-group>\n     * ```\n     */\n    @HostBinding('class.igx-input-group--disabled')\n    @Input()\n    public disabled = false;\n\n    /**\n     * Prevents automatically focusing the input when clicking on other elements in the input group (e.g. prefix or suffix).\n     * @remarks Automatic focus causes software keyboard to show on mobile devices.\n     *\n     * @example\n     * ```html\n     * <igx-input-group [suppressInputAutofocus]=\"true\"></igx-input-group>\n     * ```\n     */\n    @Input()\n    public suppressInputAutofocus = false;\n\n    /** @hidden */\n    @HostBinding('class.igx-input-group--valid')\n    public get validClass(): boolean {\n        return this.input.valid === IgxInputState.VALID;\n    }\n\n    /** @hidden */\n    @HostBinding('class.igx-input-group--invalid')\n    public get invalidClass(): boolean {\n        return this.input.valid === IgxInputState.INVALID;\n    }\n\n    /** @hidden */\n    @HostBinding('class.igx-input-group--warning')\n    public hasWarning = false;\n\n    /** @hidden */\n    @HostBinding('class.igx-input-group--filled')\n    public get isFilled() {\n        return this._filled || (this.input && this.input.value);\n    }\n\n    /** @hidden */\n    @HostBinding('class.igx-input-group--cosy')\n    public get isDisplayDensityCosy() {\n        return this.displayDensity === DisplayDensity.cosy;\n    }\n\n    /** @hidden */\n    @HostBinding('class.igx-input-group--comfortable')\n    public get isDisplayDensityComfortable() {\n        return this.displayDensity === DisplayDensity.comfortable;\n    }\n\n    /** @hidden */\n    @HostBinding('class.igx-input-group--compact')\n    public get isDisplayDensityCompact() {\n        return this.displayDensity === DisplayDensity.compact;\n    }\n\n    /** @hidden */\n    @ContentChildren(IgxHintDirective, { read: IgxHintDirective })\n    protected hints: QueryList<IgxHintDirective>;\n\n    /** @hidden */\n    @ContentChild(IgxInputDirective, { read: IgxInputDirective, static: true })\n    protected input: IgxInputDirective;\n\n    /** @hidden */\n    @HostListener('click', ['$event'])\n    public onClick(event: MouseEvent) {\n        if (!this.isFocused && event.target !== this.input.nativeElement && !this.suppressInputAutofocus) {\n            this.input.focus();\n        }\n    }\n\n    /** @hidden */\n    @HostListener('pointerdown', ['$event'])\n    public onPointerDown(event: PointerEvent) {\n        if (this.isFocused && event.target !== this.input.nativeElement) {\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * An @Input property that sets how the input will be styled.\n     * The allowed values are `line`, `box`, `border`, `fluent`, `search` and `fluentSearch`. The default is `line`.\n     * ```html\n     * <igx-input-group [type]=\"'search'\">\n     * ```\n     */\n    @Input('type')\n    public set type(value: string) {\n        const type: IgxInputGroupType = (IgxInputGroupType as any)[value.toUpperCase()];\n        if (type !== undefined) {\n            this.isBox = this.isBootstrap = this.isFluent = this.isFluentSearch = this.isBorder = this.isSearch = false;\n            switch (type) {\n                case IgxInputGroupType.BOX:\n                    this.isBox = true;\n                    break;\n                case IgxInputGroupType.BORDER:\n                    this.isBorder = true;\n                    break;\n                case IgxInputGroupType.FLUENT:\n                    this.isFluent = true;\n                    break;\n                case IgxInputGroupType.FLUENT_SEARCH:\n                    this.isFluentSearch = true;\n                    break;\n                case IgxInputGroupType.SEARCH:\n                    this.isSearch = true;\n                    break;\n                case IgxInputGroupType.BOOTSTRAP:\n                    this.isBootstrap = true;\n                    break;\n                default: break;\n            }\n\n            this._type = type;\n        }\n    }\n\n    /**\n     * Returns the type of the `IgxInputGroupComponent`. How the input is styled.\n     * Values are `line` - 0, `box` - 1, `border` - 2,  `fluent` - 3 `fluentSearch` - 4 and `search` - 5. The default is `line`.\n     * ```typescript\n     * @ViewChild(\"MyInputGroup\")\n     * public inputGroup: IgxInputGroupComponent;\n     * ngAfterViewInit(){\n     *    let inputType = this.inputGroup.type;\n     * }\n     * ```\n     */\n    public get type() {\n        return this._type.toString();\n    }\n\n    /**\n     * @hidden\n     * @deprecated Use 'suppressInputAutofocus' instead.\n     */\n    @DeprecateProperty(`Deprecated. Use 'suppressInputAutofocus' instead.`)\n    @Input()\n    public get supressInputAutofocus(): boolean {\n        return this.suppressInputAutofocus;\n    }\n\n    /**\n     * @hidden\n     * @deprecated Use 'suppressInputAutofocus' instead.\n     */\n    public set supressInputAutofocus(value: boolean) {\n        this.suppressInputAutofocus = value;\n    }\n\n    constructor(private _element: ElementRef,\n        @Optional() @Inject(DisplayDensityToken) private _displayDensityOptions: IDisplayDensityOptions) {\n        super(_displayDensityOptions);\n        this.element = _element;\n    }\n\n    /**\n     * Returns whether the `IgxInputGroupComponent` has hints.\n     * ```typescript\n     * @ViewChild(\"MyInputGroup\")\n     * public inputGroup: IgxInputGroupComponent;\n     * ngAfterViewInit(){\n     *    let inputHints = this.inputGroup.hasHints;\n     * }\n     * ```\n     */\n    public get hasHints() {\n        return this.hints.length > 0;\n    }\n\n    /**\n     * Returns whether the `IgxInputGroupComponent` has border.\n     * ```typescript\n     * @ViewChild(\"MyInputGroup\")\n     * public inputGroup: IgxInputGroupComponent;\n     * ngAfterViewInit(){\n     *    let inputBorder = this.inputGroup.hasBorder;\n     * }\n     * ```\n     */\n    public get hasBorder() {\n        return this._type === IgxInputGroupType.LINE ||\n            this._type === IgxInputGroupType.BOX;\n    }\n\n    /**\n     * Returns whether the `IgxInputGroupComponent` type is line.\n     * ```typescript\n     * @ViewChild(\"MyInputGroup1\")\n     * public inputGroup: IgxInputGroupComponent;\n     * ngAfterViewInit(){\n     *    let isTypeLine = this.inputGroup.isTypeLine;\n     * }\n     * ```\n     */\n    public get isTypeLine(): boolean {\n        return  this._type === IgxInputGroupType.LINE;\n    }\n\n    /**\n     * Returns whether the `IgxInputGroupComponent` type is box.\n     * ```typescript\n     * @ViewChild(\"MyInputGroup1\")\n     * public inputGroup: IgxInputGroupComponent;\n     * ngAfterViewInit(){\n     *    let isTypeBox = this.inputGroup.isTypeBox;\n     * }\n     * ```\n     */\n    public get isTypeBox() {\n        return this._type === IgxInputGroupType.BOX;\n    }\n\n    /**\n     * Returns whether the `IgxInputGroupComponent` type is border.\n     * ```typescript\n     * @ViewChild(\"MyInputGroup1\")\n     * public inputGroup: IgxInputGroupComponent;\n     * ngAfterViewInit(){\n     *    let isTypeBorder = this.inputGroup.isTypeBorder;\n     * }\n     * ```\n     */\n    public get isTypeBorder() {\n        return this._type === IgxInputGroupType.BORDER;\n    }\n\n    /**\n     * Returns whether the `IgxInputGroupComponent` type is Fluent.\n     * ```typescript\n     * @ViewChild(\"MyInputGroup1\")\n     * public inputGroup: IgxInputGroupComponent;\n     * ngAfterViewInit(){\n     *    let isTypeFluent = this.inputGroup.isTypeFluent;\n     * }\n     * ```\n     */\n    public get isTypeFluent() {\n        return this._type === IgxInputGroupType.FLUENT;\n    }\n\n    /**\n     * Returns whether the `IgxInputGroupComponent` type is Bootstrap.\n     * ```typescript\n     * @ViewChild(\"MyInputGroup1\")\n     * public inputGroup: IgxInputGroupComponent;\n     * ngAfterViewInit(){\n     *    let isTypeBootstrap = this.inputGroup.isTypeBootstrap;\n     * }\n     * ```\n     */\n    public get isTypeBootstrap() {\n        return this._type === IgxInputGroupType.BOOTSTRAP;\n    }\n\n    /** @hidden */\n    public get isNotMaterial() {\n        return this._type === IgxInputGroupType.FLUENT || this._type === IgxInputGroupType.BOOTSTRAP;\n    }\n\n    /**\n     * Returns whether the `IgxInputGroupComponent` type is search.\n     * ```typescript\n     * @ViewChild(\"MyInputGroup1\")\n     * public inputGroup: IgxInputGroupComponent;\n     * ngAfterViewInit(){\n     *    let isTypeSearch = this.inputGroup.isTypeSearch;\n     * }\n     * ```\n     */\n    public get isTypeSearch() {\n        return  this._type === IgxInputGroupType.SEARCH;\n    }\n\n    /**\n     * Returns whether the `IgxInputGroupComponent` type is fluentSearch.\n     * ```typescript\n     * @ViewChild(\"MyInputGroup1\")\n     * public inputGroup: IgxInputGroupComponent;\n     * ngAfterViewInit(){\n     *    let isTypeFluentSearch = this.inputGroup.isTypeFluentSearch;\n     * }\n     * ```\n     */\n    public get isTypeFluentSearch() {\n        return  this._type === IgxInputGroupType.FLUENT_SEARCH;\n    }\n\n    /** @hidden */\n    public get filled() {\n        return this._filled;\n    }\n\n    /** @hidden */\n    public set filled(val) {\n        this._filled = val;\n    }\n}\n\n/** @hidden */\n@NgModule({\n    declarations: [\n        IgxInputGroupComponent,\n        IgxHintDirective,\n        IgxInputDirective,\n        IgxLabelDirective\n    ],\n    exports: [\n        IgxInputGroupComponent,\n        IgxHintDirective,\n        IgxInputDirective,\n        IgxLabelDirective,\n        IgxPrefixModule,\n        IgxSuffixModule\n    ],\n    imports: [\n        CommonModule,\n        IgxPrefixModule,\n        IgxSuffixModule\n    ]\n})\nexport class IgxInputGroupModule { }\n","import {\n    ChangeDetectorRef,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    HostListener,\n    Inject,\n    Input,\n    NgModule,\n    OnDestroy,\n    Optional,\n    Output,\n    Self\n} from '@angular/core';\nimport { NgModel, FormControlName } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { Subject } from 'rxjs';\nimport { first, takeUntil } from 'rxjs/operators';\nimport { CancelableEventArgs, IBaseEventArgs } from '../../core/utils';\nimport {\n    AbsoluteScrollStrategy,\n    AutoPositionStrategy,\n    IPositionStrategy,\n    IScrollStrategy,\n    OverlaySettings\n} from '../../services/public_api';\nimport {\n    IgxDropDownComponent,\n    IgxDropDownItemNavigationDirective,\n    IgxDropDownModule,\n    ISelectionEventArgs\n} from '../../drop-down/public_api';\nimport { IgxInputGroupComponent } from '../../input-group/public_api';\nimport { IgxOverlayOutletDirective } from '../toggle/toggle.directive';\n\n/**\n * Interface that encapsulates onItemSelection event arguments - new value and cancel selection.\n * @export\n */\nexport interface AutocompleteItemSelectionEventArgs extends CancelableEventArgs, IBaseEventArgs {\n    /**\n     * New value selected from the drop down\n     */\n    value: string;\n}\n\nexport interface AutocompleteOverlaySettings {\n    /** Position strategy to use with this settings */\n    positionStrategy?: IPositionStrategy;\n    /** Scroll strategy to use with this settings */\n    scrollStrategy?: IScrollStrategy;\n    /** Set the outlet container to attach the overlay to */\n    outlet?: IgxOverlayOutletDirective | ElementRef;\n}\n\n/**\n * **Ignite UI for Angular Autocomplete** -\n * [Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/autocomplete.html)\n *\n * The igxAutocomplete directive provides a way to enhance a text input\n * by showing a drop down of suggested options, provided by the developer.\n *\n * Example:\n * ```html\n * <input type=\"text\" [igxAutocomplete]=\"townsPanel\" />\n * <igx-drop-down #townsPanel>\n *     <igx-drop-down-item *ngFor=\"let town of towns | startsWith:townSelected\" [value]=\"town\">\n *         {{town}}\n *     </igx-drop-down-item>\n * </igx-drop-down>\n * ```\n */\n@Directive({\n    selector: '[igxAutocomplete]'\n})\nexport class IgxAutocompleteDirective extends IgxDropDownItemNavigationDirective implements OnDestroy {\n\n    constructor(@Self() @Optional() @Inject(NgModel) protected ngModel: NgModel,\n                @Self() @Optional() @Inject(FormControlName) protected formControl: FormControlName,\n                @Optional() protected group: IgxInputGroupComponent,\n                protected elementRef: ElementRef,\n                protected cdr: ChangeDetectorRef) {\n        super(null);\n    }\n\n    private defaultSettings: OverlaySettings = {\n        modal: false,\n        scrollStrategy: new AbsoluteScrollStrategy(),\n        positionStrategy: new AutoPositionStrategy({ target: this.parentElement }),\n        excludePositionTarget: true\n    };\n\n    protected id: string;\n    protected dropDownOpened$ = new Subject<boolean>();\n    protected get model() {\n        return this.ngModel || this.formControl;\n    }\n\n    /** @hidden @internal */\n    get nativeElement(): HTMLInputElement {\n        return this.elementRef.nativeElement;\n    }\n\n    /** @hidden @internal */\n    get parentElement(): HTMLElement {\n        return this.group ? this.group.element.nativeElement : this.nativeElement;\n    }\n\n    private get settings(): OverlaySettings {\n        const settings = Object.assign({}, this.defaultSettings, this.autocompleteSettings);\n        if (!settings.positionStrategy.settings.target) {\n            const positionStrategyClone: IPositionStrategy = settings.positionStrategy.clone();\n            positionStrategyClone.settings.target = this.parentElement;\n            settings.positionStrategy = positionStrategyClone;\n        }\n        return settings;\n    }\n\n    /**\n     * Sets the target of the autocomplete directive\n     *\n     * ```html\n     * <!-- Set -->\n     * <input [igxAutocomplete]=\"dropdown\" />\n     * ...\n     * <igx-drop-down #dropdown>\n     * ...\n     * </igx-drop-down>\n     * ```\n     */\n    @Input('igxAutocomplete')\n    public target: IgxDropDownComponent;\n\n    /**\n     * Enables/disables autocomplete component\n     *\n     * ```typescript\n     * // get\n     * let disabled = this.autocomplete.disabled;\n     * ```\n     * ```html\n     * <!--set-->\n     * <input type=\"text\" [igxAutocomplete]=\"townsPanel\" [igxAutocompleteDisabled]=\"disabled\"/>\n     * ```\n     * ```typescript\n     * // set\n     * public disabled = true;\n     * ```\n     */\n    @Input('igxAutocompleteDisabled')\n    public disabled = false;\n\n    /**\n     * Provide overlay settings for the autocomplete drop down\n     *\n     * ```typescript\n     * // get\n     * let settings = this.autocomplete.autocompleteSettings;\n     * ```\n     * ```html\n     * <!--set-->\n     * <input type=\"text\" [igxAutocomplete]=\"townsPanel\" [igxAutocompleteSettings]=\"settings\"/>\n     * ```\n     * ```typescript\n     * // set\n     * this.settings = {\n     *  positionStrategy: new ConnectedPositioningStrategy({\n     *      closeAnimation: null,\n     *      openAnimation: null\n     *  })\n     * };\n     * ```\n     */\n    @Input('igxAutocompleteSettings')\n    autocompleteSettings: AutocompleteOverlaySettings;\n\n    /**\n     * Emitted after item from the drop down is selected\n     *\n     * ```html\n     * <input igxInput [igxAutocomplete]=\"townsPanel\" (onItemSelected)='itemSelected($event)' />\n     * ```\n     */\n    @Output()\n    onItemSelected = new EventEmitter<AutocompleteItemSelectionEventArgs>();\n\n    /** @hidden @internal */\n    @HostBinding('attr.autocomplete')\n    public autofill = 'off';\n\n    /** @hidden  @internal */\n    @HostBinding('attr.role')\n    public role = 'combobox';\n\n    /** @hidden  @internal */\n    @HostBinding('attr.aria-expanded')\n    public get ariaExpanded() {\n        return !this.collapsed;\n    }\n\n    /** @hidden  @internal */\n    @HostBinding('attr.aria-haspopup')\n    public get hasPopUp() {\n        return 'listbox';\n    }\n\n    /** @hidden  @internal */\n    @HostBinding('attr.aria-owns')\n    public get ariaOwns() {\n        return this.target.listId;\n    }\n\n    /** @hidden  @internal */\n    @HostBinding('attr.aria-activedescendant')\n    public get ariaActiveDescendant() {\n        return !this.target.collapsed && this.target.focusedItem ? this.target.focusedItem.id : null;\n    }\n\n    /** @hidden  @internal */\n    @HostBinding('attr.aria-autocomplete')\n    public get ariaAutocomplete() {\n        return 'list';\n    }\n\n    /** @hidden  @internal */\n    @HostListener('input')\n    onInput() {\n        this.open();\n    }\n\n    /** @hidden  @internal */\n    @HostListener('keydown.ArrowDown', ['$event'])\n    @HostListener('keydown.Alt.ArrowDown', ['$event'])\n    @HostListener('keydown.ArrowUp', ['$event'])\n    @HostListener('keydown.Alt.ArrowUp', ['$event'])\n    onArrowDown(event: Event) {\n        event.preventDefault();\n        this.open();\n    }\n\n    /** @hidden  @internal */\n    @HostListener('keydown.Tab')\n    @HostListener('keydown.Shift.Tab')\n    onTab() {\n        this.close();\n    }\n\n    /** @hidden  @internal */\n    handleKeyDown(event) {\n        if (!this.collapsed) {\n            switch (event.key.toLowerCase()) {\n                case 'space':\n                case 'spacebar':\n                case ' ':\n                case 'home':\n                case 'end':\n                    return;\n                default:\n                    super.handleKeyDown(event);\n            }\n        }\n    }\n\n    /** @hidden  @internal */\n    onArrowDownKeyDown() {\n        super.onArrowDownKeyDown();\n    }\n\n    /** @hidden  @internal */\n    onArrowUpKeyDown() {\n        super.onArrowUpKeyDown();\n    }\n\n    /** @hidden  @internal */\n    onEndKeyDown() {\n        super.onEndKeyDown();\n    }\n\n    /** @hidden  @internal */\n    onHomeKeyDown() {\n        super.onHomeKeyDown();\n    }\n\n    /**\n     * Closes autocomplete drop down\n     */\n    public close() {\n        if (this.collapsed) {\n            return;\n        }\n        this.target.close();\n        this.dropDownOpened$.next();\n    }\n\n    /**\n     * Opens autocomplete drop down\n     */\n    public open() {\n        if (this.disabled || !this.collapsed) {\n            return;\n        }\n        // if no drop-down width is set, the drop-down will be as wide as the autocomplete input;\n        this.target.width = this.target.width || (this.parentElement.clientWidth + 'px');\n        this.target.open(this.settings);\n        this.target.onSelection.pipe(takeUntil(this.dropDownOpened$)).subscribe(this.select);\n        this.target.onOpened.pipe(first()).subscribe(this.highlightFirstItem);\n        this.target.children.changes.pipe(takeUntil(this.dropDownOpened$)).subscribe(this.highlightFirstItem);\n    }\n\n    private get collapsed(): boolean {\n        return this.target ? this.target.collapsed : true;\n    }\n\n    private select = (value: ISelectionEventArgs) => {\n        if (!value.newSelection) {\n            return;\n        }\n        value.cancel = true; // Disable selection in the drop down, because in autocomplete we do not save selection.\n        const newValue = value.newSelection.value;\n        const args: AutocompleteItemSelectionEventArgs = { value: newValue, cancel: false };\n        this.onItemSelected.emit(args);\n        if (args.cancel) {\n            return;\n        }\n        this.close();\n        this.nativeElement.focus();\n\n        // Update model after the input is re-focused, in order to have proper valid styling.\n        // Otherwise when item is selected using mouse (and input is blurred), then valid style will be removed.\n        this.model ? this.model.control.setValue(newValue) : this.nativeElement.value = newValue;\n    }\n\n    private highlightFirstItem = () => {\n        if (this.target.focusedItem) {\n            this.target.focusedItem.focused = false;\n            this.target.focusedItem = null;\n        }\n        this.target.navigateFirst();\n        this.cdr.detectChanges();\n    }\n\n    /** @hidden */\n    public ngOnDestroy() {\n        this.dropDownOpened$.complete();\n    }\n}\n\n/** @hidden */\n@NgModule({\n    imports: [IgxDropDownModule, CommonModule],\n    declarations: [IgxAutocompleteDirective],\n    exports: [IgxAutocompleteDirective]\n})\nexport class IgxAutocompleteModule { }\n","import {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    Output,\n    NgModule,\n    Renderer2,\n    HostListener,\n    Optional,\n    Inject\n} from '@angular/core';\nimport { DisplayDensityBase, DisplayDensityToken, IDisplayDensityOptions, DisplayDensity } from '../../core/density';\n\n/**\n * The Button directive provides the Ignite UI Button functionality to every component that's intended to be used as a button.\n *\n * @igxModule IgxButtonModule\n *\n * @igxParent Data Entry & Display\n *\n * @igxTheme igx-button-theme\n *\n * @igxKeywords button, span, div, click\n *\n * @remarks\n * The Ignite UI Button directive is intended to be used by any button, span or div and turn it into a fully functional button.\n *\n * @example\n * ```html\n * <button igxButton=\"outlined\">A Button</button>\n * ```\n */\n@Directive({\n    selector: '[igxButton]'\n})\nexport class IgxButtonDirective extends DisplayDensityBase {\n\n    /**\n     * @hidden\n     * @internal\n     */\n    private _type: string;\n\n    /**\n     * @hidden\n     * @internal\n     */\n    private _defaultType = 'flat';\n\n    /**\n     * @hidden\n     * @internal\n     */\n    private _cssClassPrefix = 'igx-button';\n\n    /**\n     * @hidden\n     * @internal\n     */\n    private _color: string;\n\n    /**\n     * @hidden\n     * @internal\n     */\n    private _label: string;\n\n    /**\n     * @hidden\n     * @internal\n     */\n    private _backgroundColor: string;\n\n    /**\n     * @hidden\n     * @internal\n     */\n    private _disabled: boolean;\n\n    constructor(public element: ElementRef, private _renderer: Renderer2,\n        @Optional() @Inject(DisplayDensityToken) protected _displayDensityOptions: IDisplayDensityOptions) {\n        super(_displayDensityOptions);\n    }\n\n    /**\n     * Returns the underlying DOM element.\n     */\n    public get nativeElement() {\n        return this.element.nativeElement;\n    }\n\n    /**\n     * Called when the button is clicked.\n     */\n    @Output()\n    public buttonClick = new EventEmitter<any>();\n\n    /**\n     * Sets/gets the `role` attribute.\n     *\n     * @example\n     * ```typescript\n     * this.button.role = 'navbutton';\n     * let buttonRole = this.button.role;\n     * ```\n     */\n    @HostBinding('attr.role')\n    public role = 'button';\n\n    /**\n     * Sets the type of the button.\n     *\n     * @example\n     * ```html\n     * <button igxButton=\"icon\"></button>\n     * ```\n     */\n    @Input('igxButton')\n    set type(value: string) {\n        const newValue = value ? value : this._defaultType;\n        if (this._type !== newValue) {\n            this._renderer.removeClass(this.nativeElement, `${this._cssClassPrefix}--${this._type}`);\n            this._type = newValue;\n            this._renderer.addClass(this.nativeElement, `${this._cssClassPrefix}--${this._type}`);\n        }\n    }\n\n    /**\n     * Sets the button text color.\n     *\n     * @example\n     * ```html\n     * <button igxButton=\"gradient\" igxButtonColor=\"blue\"></button>\n     * ```\n     */\n    @Input('igxButtonColor') set color(value: string) {\n        this._color = value || this.nativeElement.style.color;\n        this._renderer.setStyle(this.nativeElement, 'color', this._color);\n    }\n\n    /**\n     * Sets the background color of the button.\n     *\n     * @example\n     *  ```html\n     * <button igxButton=\"raised\" igxButtonBackground=\"red\"></button>\n     * ```\n     */\n    @Input('igxButtonBackground') set background(value: string) {\n        this._backgroundColor = value || this._backgroundColor;\n        this._renderer.setStyle(this.nativeElement, 'background', this._backgroundColor);\n    }\n\n    /**\n     * Sets the `aria-label` attribute.\n     *\n     * @example\n     *  ```html\n     * <button igxButton= \"flat\" igxLabel=\"Label\"></button>\n     * ```\n     */\n    @Input('igxLabel') set label(value: string) {\n        this._label = value || this._label;\n        this._renderer.setAttribute(this.nativeElement, `aria-label`, this._label);\n    }\n\n    /**\n     * Enables/disables the button.\n     *\n     * @example\n     * ```html\n     * <button igxButton= \"fab\" [disabled]=\"true\"></button>\n     * ```\n     */\n    @Input() set disabled(val) {\n        val = !!val;\n        this._disabled = val;\n        if (val) {\n            this._renderer.addClass(this.nativeElement, `${this._cssClassPrefix}--disabled`);\n        } else {\n            this._renderer.removeClass(this.nativeElement, `${this._cssClassPrefix}--disabled`);\n        }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @HostBinding('class.igx-button--cosy')\n    public get cssClassCosy(): boolean {\n        return (this._type === 'flat' || this._type === 'raised' || this._type === 'outlined') &&\n            this.displayDensity === DisplayDensity.cosy;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @HostBinding('class.igx-button--compact')\n    public get cssClassCompact(): boolean {\n        return (this._type === 'flat' || this._type === 'raised' || this._type === 'outlined') &&\n            this.displayDensity === DisplayDensity.compact;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @HostBinding('class.igx-button--fab-cosy')\n    public get cssClassCosyFab(): boolean {\n        return this._type === 'fab' && this.displayDensity === DisplayDensity.cosy;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @HostBinding('class.igx-button--fab-compact')\n    public get cssClassCompactFab(): boolean {\n        return this._type === 'fab' && this.displayDensity === DisplayDensity.compact;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @HostBinding('attr.disabled')\n    public get disabledAttribute() {\n        return this._disabled ? this._disabled : null;\n    }\n\n    /**\n     * Gets or sets whether the button is selected.\n     * Mainly used in the IgxButtonGroup component and it will have no effect if set separately.\n     *\n     * @example\n     * ```html\n     * <button igxButton=\"flat\" [selected]=\"button.selected\"></button>\n     * ```\n     */\n    @Input() public selected = false;\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @HostListener('click', ['$event'])\n    public onClick(ev) {\n        this.buttonClick.emit(ev);\n    }\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [IgxButtonDirective],\n    exports: [IgxButtonDirective]\n})\nexport class IgxButtonModule { }\n","import { Directive, HostBinding, NgModule, Input } from '@angular/core';\n\nexport enum IgxDividerType {\n    SOLID = 'solid',\n    DASHED = 'dashed'\n}\n\nlet NEXT_ID = 0;\n\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: 'igx-divider'\n})\nexport class IgxDividerDirective {\n    /**\n     * Sets/gets the `id` of the divider.\n     * If not set, `id` will have value `\"igx-divider-0\"`;\n     * ```html\n     * <igx-divider id=\"my-divider\"></igx-divider>\n     * ```\n     * ```typescript\n     * let dividerId =  this.divider.id;\n     * ```\n     */\n    @HostBinding('attr.id')\n    @Input()\n    public id = `igx-divider-${NEXT_ID++}`;\n\n\n    /**\n     * An @Input property that sets the value of the `inset` attribute.\n     * If not provided it will be set to `'0'`.\n     * ```html\n     * <igx-divider inset=\"16px\"></igx-divider>\n     * ```\n     */\n    @Input('inset')\n    private _inset = '0';\n\n    /**\n     * An @Input property that sets the value of `role` attribute.\n     * If not the default value of `separator` will be used.\n     */\n    @HostBinding('attr.role')\n    @Input()\n    public role = 'separator';\n\n    /**\n     * Sets the type of the divider. The default value\n     * is `default`. The divider can also be `dashed`;\n     * ```html\n     * <igx-divider type=\"dashed\"></igx-divider>\n     * ```\n     */\n    @HostBinding('class.igx-divider')\n    @Input()\n    public type: IgxDividerType | string = IgxDividerType.SOLID;\n\n    @HostBinding('class.igx-divider--dashed')\n    get isDashed() {\n        return this.type === IgxDividerType.DASHED;\n    }\n\n    /**\n     * An @Input that sets the `middle` attribute of the divider.\n     * If set to `true` and an `inset` value has been provided,\n     * the divider will start shrinking from both ends.\n     * ```html\n     * <igx-divider [middle]=\"true\"></igx-divider>\n     * ```\n     */\n    @HostBinding('class.igx-divider--inset')\n    @Input()\n    public middle = false;\n\n    /**\n     * A getter that returns `true` if the type of the divider is `default`;\n     * ```typescript\n     * const isDefault = this.divider.isDefault;\n     * ```\n     */\n    get isSolid() {\n        return this.type === IgxDividerType.SOLID;\n    }\n\n    /**\n     * An @Input that sets the vertical attribute of the divider.\n     * ```html\n     * <igx-divider [vertical]=\"true\"></igx-divider>\n     * ```\n     */\n    @HostBinding('class.igx-divider--vertical')\n    @Input()\n    public vertical = false;\n\n    /**\n     * Sets the inset of the divider from the side(s).\n     * If the divider attribute `middle` is set to `true`,\n     * it will inset the divider on both sides.\n     * ```typescript\n     * this.divider.inset = '32px';\n     * ```\n     */\n    @HostBinding('style.margin')\n    set inset(value: string) {\n        this._inset = value;\n    }\n\n    /**\n     * Gets the current divider inset in terms of\n     * margin representation as applied to the divider.\n     * ```typescript\n     * const inset = this.divider.inset;\n     * ```\n     */\n    get inset() {\n        const baseMargin = '0';\n\n        if (this.middle) {\n            if (this.vertical) {\n                return `${this._inset} ${baseMargin}`;\n            }\n            return `${baseMargin} ${this._inset}`;\n        } else {\n            if (this.vertical) {\n                return `${this._inset} ${baseMargin} 0 ${baseMargin}`;\n            }\n            return `${baseMargin} 0 ${baseMargin} ${this._inset}`;\n        }\n    }\n}\n\n@NgModule({\n    declarations: [IgxDividerDirective],\n    exports: [IgxDividerDirective]\n})\nexport class IgxDividerModule { }\n","import { Renderer2 } from '@angular/core';\nimport { IgxDragDirective, IgxDropDirective } from './drag-drop.directive';\n\n\nexport interface IDropStrategy {\n    dropAction: (drag: IgxDragDirective, drop: IgxDropDirective, atIndex: number) => void;\n}\n\n// @dynamic\nexport class IgxDefaultDropStrategy implements IDropStrategy {\n\n    dropAction(drag: IgxDragDirective, drop: IgxDropDirective, atIndex: number) { }\n}\n\n// @dynamic\nexport class IgxAppendDropStrategy implements IDropStrategy {\n\n    constructor(private _renderer: Renderer2) { }\n\n    dropAction(drag: IgxDragDirective, drop: IgxDropDirective, atIndex: number) {\n        const dragElement = drag.element.nativeElement;\n        const dropAreaElement = drop.element.nativeElement;\n        this._renderer.removeChild(dragElement.parentNode, dragElement);\n        this._renderer.appendChild(dropAreaElement, dragElement);\n    }\n}\n\n// @dynamic\nexport class IgxPrependDropStrategy implements IDropStrategy {\n\n    constructor(private _renderer: Renderer2) { }\n\n    dropAction(drag: IgxDragDirective, drop: IgxDropDirective, atIndex: number) {\n        const dragElement = drag.element.nativeElement;\n        const dropAreaElement = drop.element.nativeElement;\n        this._renderer.removeChild(dragElement.parentNode, dragElement);\n        if (dropAreaElement.children.length) {\n            this._renderer.insertBefore(dropAreaElement, dragElement, dropAreaElement.children[0]);\n        } else {\n            this._renderer.appendChild(dropAreaElement, dragElement);\n        }\n    }\n}\n\n// @dynamic\nexport class IgxInsertDropStrategy implements IDropStrategy {\n\n    constructor(private _renderer: Renderer2) { }\n\n    dropAction(drag: IgxDragDirective, drop: IgxDropDirective, atIndex: number) {\n        if (drag.element.nativeElement.parentElement === drop.element.nativeElement && atIndex === -1) {\n            return;\n        }\n\n        const dragElement = drag.element.nativeElement;\n        const dropAreaElement = drop.element.nativeElement;\n        this._renderer.removeChild(dragElement.parentNode, dragElement);\n        if (atIndex !== -1 && dropAreaElement.children.length > atIndex) {\n            this._renderer.insertBefore(dropAreaElement, dragElement, dropAreaElement.children[atIndex]);\n        } else {\n            this._renderer.appendChild(dropAreaElement, dragElement);\n        }\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    HostListener,\n    Input,\n    NgModule,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    ChangeDetectorRef,\n    ViewContainerRef,\n    AfterContentInit,\n    TemplateRef,\n    ContentChildren,\n    QueryList\n} from '@angular/core';\nimport { animationFrameScheduler, fromEvent, interval, Subject } from 'rxjs';\nimport { takeUntil, throttle } from 'rxjs/operators';\nimport { IBaseEventArgs } from '../../core/utils';\nimport { IDropStrategy, IgxDefaultDropStrategy } from './drag-drop.strategy';\n\nexport enum DragDirection {\n    VERTICAL,\n    HORIZONTAL,\n    BOTH\n}\n\nexport interface IgxDragCustomEventDetails {\n    startX: number;\n    startY: number;\n    pageX: number;\n    pageY: number;\n    owner: IgxDragDirective;\n    originalEvent: any;\n}\n\nexport interface IDropBaseEventArgs extends IBaseEventArgs {\n    /**\n     * Reference to the original event that caused the draggable element to enter the igxDrop element.\n     * Can be PointerEvent, TouchEvent or MouseEvent.\n     */\n    originalEvent: any;\n    /** The owner igxDrop directive that triggered this event. */\n    owner: IgxDropDirective;\n    /** The igxDrag directive instanced on an element that entered the area of the igxDrop element */\n    drag: IgxDragDirective;\n    /** The data contained for the draggable element in igxDrag directive. */\n    dragData: any;\n    /** The initial position of the pointer on X axis when the dragged element began moving */\n    startX: number;\n    /** The initial position of the pointer on Y axis when the dragged element began moving */\n    startY: number;\n    /**\n     * The current position of the pointer on X axis when the event was triggered.\n     * Note: The browser might trigger the event with some delay and pointer would be already inside the igxDrop.\n     */\n    pageX: number;\n    /**\n     * The current position of the pointer on Y axis when the event was triggered.\n     * Note: The browser might trigger the event with some delay and pointer would be already inside the igxDrop.\n     */\n    pageY: number;\n    /**\n     * The current position of the pointer on X axis relative to the container that initializes the igxDrop.\n     * Note: The browser might trigger the event with some delay and pointer would be already inside the igxDrop.\n     */\n    offsetX: number;\n    /**\n     * The current position of the pointer on Y axis relative to the container that initializes the igxDrop.\n     * Note: The browser might trigger the event with some delay and pointer would be already inside the igxDrop.\n     */\n    offsetY: number;\n}\n\nexport interface IDropDroppedEventArgs extends IDropBaseEventArgs {\n    /** Specifies if the default drop logic related to the event should be canceled. */\n    cancel: boolean;\n}\n\nexport interface IDragBaseEventArgs extends IBaseEventArgs {\n    /**\n     * Reference to the original event that caused the interaction with the element.\n     * Can be PointerEvent, TouchEvent or MouseEvent.\n     */\n    originalEvent: PointerEvent | MouseEvent | TouchEvent;\n    /** The owner igxDrag directive that triggered this event. */\n    owner: IgxDragDirective;\n    /** The initial position of the pointer on X axis when the dragged element began moving */\n    startX: number;\n    /** The initial position of the pointer on Y axis when the dragged element began moving */\n    startY: number;\n    /**\n     * The current position of the pointer on X axis when the event was triggered.\n     * Note: The browser might trigger the event with some delay and pointer would be already inside the igxDrop.\n     */\n    pageX: number;\n    /**\n     * The current position of the pointer on Y axis when the event was triggered.\n     * Note: The browser might trigger the event with some delay and pointer would be already inside the igxDrop.\n     */\n    pageY: number;\n}\n\nexport interface IDragStartEventArgs extends IDragBaseEventArgs {\n    /** Set if the the dragging should be canceled. */\n    cancel: boolean;\n}\n\nexport interface IDragMoveEventArgs extends IDragStartEventArgs {\n    /** The new pageX position of the pointer that the igxDrag will use. It can be overridden to limit dragged element X movement. */\n    nextPageX: number;\n    /** The new pageX position of the pointer that the igxDrag will use. It can be overridden to limit dragged element Y movement. */\n    nextPageY: number;\n}\n\n\nexport interface IDragGhostBaseEventArgs extends IBaseEventArgs {\n    /** The owner igxDrag directive that triggered this event. */\n    owner: IgxDragDirective;\n    /** Instance to the ghost element that is created when dragging starts. */\n    ghostElement: any;\n    /** Set if the ghost creation/destruction should be canceled. */\n    cancel: boolean;\n}\n\nexport interface IDragCustomTransitionArgs {\n    duration?: number;\n    timingFunction?: string;\n    delay?: number;\n}\n\nexport class IgxDragLocation {\n    public pageX: number;\n    public pageY: number;\n\n    constructor(private _pageX, private _pageY) {\n        this.pageX = parseFloat(_pageX);\n        this.pageY = parseFloat(_pageY);\n    }\n}\n\n@Directive({\n    selector: '[igxDragHandle]'\n})\nexport class IgxDragHandleDirective {\n\n    @HostBinding('class.igx-drag__handle')\n    public baseClass = true;\n\n    constructor(public element: ElementRef<any>) {}\n}\n\n@Directive({\n    selector: '[igxDragIgnore]'\n})\nexport class IgxDragIgnoreDirective {\n\n    @HostBinding('class.igx-drag__ignore')\n    public baseClass = true;\n\n    constructor(public element: ElementRef<any>) {}\n}\n\n@Directive({\n    exportAs: 'drag',\n    selector: '[igxDrag]'\n})\nexport class IgxDragDirective implements AfterContentInit, OnDestroy {\n\n    protected ghostContext: any = null;\n\n    /**\n     * - Save data inside the `igxDrag` directive. This can be set when instancing `igxDrag` on an element.\n     * ```html\n     * <div [igxDrag]=\"{ source: myElement }\"></div>\n     * ```\n     * @memberof IgxDragDirective\n     */\n    @Input('igxDrag')\n    public data: any;\n\n    /**\n     * An @Input property that indicates when the drag should start.\n     * By default the drag starts after the draggable element is moved by 5px.\n     * ```html\n     * <div igxDrag [dragTolerance]=\"100\">\n     *         <span>Drag Me!</span>\n     * </div>\n     * ```\n     * @memberof IgxDragDirective\n     */\n    @Input()\n    public dragTolerance = 5;\n\n    /**\n     * An @Input property that indicates the directions that the element can be dragged.\n     * By default it is set to both horizontal and vertical directions.\n     * ```html\n     * <div igxDrag [dragDirection]=\"dragDir\">\n     *         <span>Drag Me!</span>\n     * </div>\n     * ```\n     * ```typescript\n     * public dragDir = DragDirection.HORIZONTAL;\n     * ```\n     * @memberof IgxDragDirective\n     */\n    @Input()\n    public dragDirection = DragDirection.BOTH;\n\n    /**\n     * An @Input property that provide a way for igxDrag and igxDrop to be linked through channels.\n     * It accepts single value or an array of values and evaluates then using strict equality.\n     * ```html\n     * <div igxDrag [dragChannel]=\"'odd'\">\n     *         <span>95</span>\n     * </div>\n     * <div igxDrop [dropChannel]=\"['odd', 'irrational']\">\n     *         <span>Numbers drop area!</span>\n     * </div>\n     * ```\n     * @memberof IgxDragDirective\n     */\n    @Input()\n    public dragChannel: number | string | number[] | string[];\n\n    /**\n     * An @Input property that specifies if the base element should not be moved and a ghost element should be rendered that represents it.\n     * By default it is set to `true`.\n     * If it is set to `false` when dragging the base element is moved instead and no ghost elements are rendered.\n     * ```html\n     * <div igxDrag [ghost]=\"false\">\n     *      <span>Drag Me!</span>\n     * </div>\n     * ```\n     * @memberof IgxDragDirective\n     */\n    @Input()\n    public ghost = true;\n\n    /**\n     * Sets a custom class that will be added to the `ghostElement` element.\n     * ```html\n     * <div igxDrag [ghostClass]=\"'ghostElement'\">\n     *         <span>Drag Me!</span>\n     * </div>\n     * ```\n     * @memberof IgxDragDirective\n     */\n    @Input()\n    public ghostClass = '';\n\n\n    /**\n     * An @Input property that specifies a template for the ghost element created when dragging starts and `ghost` is true.\n     * By default a clone of the base element the igxDrag is instanced is created.\n     * ```html\n     * <div igxDrag [ghostTemplate]=\"customGhost\">\n     *         <span>Drag Me!</span>\n     * </div>\n     * <ng-template #customGhost>\n     *      <div class=\"customGhostStyle\">\n     *          <span>I am being dragged!</span>\n     *      </div>\n     * </ng-template>\n     * ```\n     * @memberof IgxDragDirective\n     */\n    @Input()\n    public ghostTemplate: TemplateRef<any>;\n\n    /**\n     * An @Input property that sets the element to which the dragged element will be appended.\n     * By default it's set to null and the dragged element is appended to the body.\n     * ```html\n     * <div #hostDiv></div>\n     * <div igxDrag [ghostHost]=\"hostDiv\">\n     *         <span>Drag Me!</span>\n     * </div>\n     * ```\n     * @memberof IgxDragDirective\n     */\n    @Input()\n    public ghostHost;\n\n    /**\n     * An @Input property that specifies the offset of the dragged element relative to the mouse in pixels.\n     * By default it's taking the relative position to the mouse when the drag started and keeps it the same.\n     * ```html\n     * <div #hostDiv></div>\n     * <div igxDrag [ghostOffsetX]=\"0\">\n     *         <span>Drag Me!</span>\n     * </div>\n     * ```\n     * @memberof IgxDragDirective\n     */\n    @Input()\n    public set ghostOffsetX(value) {\n        this._offsetX = parseInt(value, 10);\n    }\n\n    public get ghostOffsetX() {\n        return this._offsetX !== undefined ? this._offsetX : this._defaultOffsetX;\n    }\n\n    /**\n     * An @Input property that specifies the offset of the dragged element relative to the mouse in pixels.\n     * By default it's taking the relative position to the mouse when the drag started and keeps it the same.\n     * ```html\n     * <div #hostDiv></div>\n     * <div igxDrag [ghostOffsetY]=\"0\">\n     *         <span>Drag Me!</span>\n     * </div>\n     * ```\n     * @memberof IgxDragDirective\n     */\n    @Input()\n    public set ghostOffsetY(value) {\n        this._offsetY = parseInt(value, 10);\n    }\n\n    public get ghostOffsetY() {\n        return this._offsetY !== undefined ? this._offsetY : this._defaultOffsetY ;\n    }\n\n    /**\n     * Event triggered when the draggable element drag starts.\n     * ```html\n     * <div igxDrag (dragStart)=\"onDragStart()\">\n     *         <span>Drag Me!</span>\n     * </div>\n     * ```\n     * ```typescript\n     * public onDragStart(){\n     *      alert(\"The drag has stared!\");\n     * }\n     * ```\n     * @memberof IgxDragDirective\n     */\n    @Output()\n    public dragStart = new EventEmitter<IDragStartEventArgs>();\n\n    /**\n     * Event triggered when the draggable element has been moved.\n     * ```html\n     * <div igxDrag  (dragMove)=\"onDragMove()\">\n     *         <span>Drag Me!</span>\n     * </div>\n     * ```\n     * ```typescript\n     * public onDragMove(){\n     *      alert(\"The element has moved!\");\n     * }\n     * ```\n     * @memberof IgxDragDirective\n     */\n    @Output()\n    public dragMove = new EventEmitter<IDragMoveEventArgs>();\n\n    /**\n     * Event triggered when the draggable element is released.\n     * ```html\n     * <div igxDrag (dragEnd)=\"onDragEnd()\">\n     *         <span>Drag Me!</span>\n     * </div>\n     * ```\n     * ```typescript\n     * public onDragEnd(){\n     *      alert(\"The drag has ended!\");\n     * }\n     * ```\n     * @memberof IgxDragDirective\n     */\n    @Output()\n    public dragEnd = new EventEmitter<IDragBaseEventArgs>();\n\n    /**\n     * Event triggered when the draggable element is clicked.\n     * ```html\n     * <div igxDrag (dragClick)=\"onDragClick()\">\n     *         <span>Drag Me!</span>\n     * </div>\n     * ```\n     * ```typescript\n     * public onDragClick(){\n     *      alert(\"The element has been clicked!\");\n     * }\n     * ```\n     * @memberof IgxDragDirective\n     */\n    @Output()\n    public dragClick = new EventEmitter<IDragBaseEventArgs>();\n\n    /**\n     * Event triggered when the drag ghost element is created.\n     * ```html\n     * <div igxDrag (ghostCreate)=\"ghostCreated()\">\n     *         <span>Drag Me!</span>\n     * </div>\n     * ```\n     * ```typescript\n     * public ghostCreated(){\n     *      alert(\"The ghost has been created!\");\n     * }\n     * ```\n     * @memberof IgxDragDirective\n     */\n    @Output()\n    public ghostCreate = new EventEmitter<IDragGhostBaseEventArgs>();\n\n    /**\n     * Event triggered when the drag ghost element is created.\n     * ```html\n     * <div igxDrag (ghostDestroy)=\"ghostDestroyed()\">\n     *         <span>Drag Me!</span>\n     * </div>\n     * ```\n     * ```typescript\n     * public ghostDestroyed(){\n     *      alert(\"The ghost has been destroyed!\");\n     * }\n     * ```\n     * @memberof IgxDragDirective\n     */\n    @Output()\n    public ghostDestroy = new EventEmitter<IDragGhostBaseEventArgs>();\n\n    /**\n     * Event triggered after the draggable element is released and after its animation has finished.\n     * ```html\n     * <div igxDrag (transitioned)=\"onMoveEnd()\">\n     *         <span>Drag Me!</span>\n     * </div>\n     * ```\n     * ```typescript\n     * public onMoveEnd(){\n     *      alert(\"The move has ended!\");\n     * }\n     * ```\n     * @memberof IgxDragDirective\n     */\n    @Output()\n    public transitioned = new EventEmitter<IDragBaseEventArgs>();\n\n    /**\n     * @hidden\n     */\n    @ContentChildren(IgxDragHandleDirective)\n    public dragHandles: QueryList<IgxDragHandleDirective>;\n\n    /**\n     * @hidden\n     */\n    @ContentChildren(IgxDragIgnoreDirective)\n    public dragIgnoredElems: QueryList<IgxDragIgnoreDirective>;\n\n    /**\n     * @hidden\n     */\n    @HostBinding('class.igx-drag')\n    public baseClass = true;\n\n    /**\n     * @hidden\n     */\n    @HostBinding('class.igx-drag--select-disabled')\n    public selectDisabled = false;\n\n\n    /**\n     * Gets the current location of the element relative to the page.\n     */\n    public get location(): IgxDragLocation {\n        return new IgxDragLocation(this.pageX, this.pageY);\n    }\n\n    /**\n     * Gets the original location of the element before dragging started.\n     */\n    public get originLocation(): IgxDragLocation {\n        return new IgxDragLocation(this.baseOriginLeft, this.baseOriginTop);\n    }\n\n    /**\n     * @hidden\n     */\n    public get pointerEventsEnabled() {\n        return typeof PointerEvent !== 'undefined';\n    }\n\n    /**\n     * @hidden\n     */\n    public get touchEventsEnabled() {\n        return 'ontouchstart' in window;\n    }\n\n    /**\n     * @hidden\n     */\n    public get pageX() {\n        if (this.ghost && this.ghostElement) {\n            return this.ghostLeft;\n        }\n        return this.baseLeft;\n    }\n\n    /**\n     * @hidden\n     */\n    public get pageY() {\n        if (this.ghost && this.ghostElement) {\n            return this.ghostTop;\n        }\n        return this.baseTop;\n    }\n\n    protected get baseLeft(): number {\n        return this.element.nativeElement.getBoundingClientRect().left;\n    }\n\n    protected get baseTop(): number {\n        return this.element.nativeElement.getBoundingClientRect().top;\n    }\n\n    protected get baseOriginLeft(): number {\n        return this.baseLeft - this.getTransformX(this.element.nativeElement);\n    }\n\n    protected get baseOriginTop(): number {\n        return this.baseTop - this.getTransformY(this.element.nativeElement);\n    }\n\n    protected set ghostLeft(pageX: number) {\n        if (this.ghostElement) {\n            // We need to take into account marginLeft, since top style does not include margin, but pageX includes the margin.\n            const ghostMarginLeft = parseInt(document.defaultView.getComputedStyle(this.ghostElement)['margin-left'], 10);\n            // If ghost host is defined it needs to be taken into account.\n            this.ghostElement.style.left = (pageX - ghostMarginLeft - this._ghostHostX) + 'px';\n        }\n    }\n\n    protected get ghostLeft() {\n        return parseInt(this.ghostElement.style.left, 10) + this._ghostHostX;\n    }\n\n    protected set ghostTop(pageY: number) {\n        if (this.ghostElement) {\n            // We need to take into account marginTop, since top style does not include margin, but pageY includes the margin.\n            const ghostMarginTop = parseInt(document.defaultView.getComputedStyle(this.ghostElement)['margin-top'], 10);\n            // If ghost host is defined it needs to be taken into account.\n            this.ghostElement.style.top = (pageY - ghostMarginTop - this._ghostHostY) + 'px';\n        }\n    }\n\n    protected get ghostTop() {\n        return parseInt(this.ghostElement.style.top, 10) + this._ghostHostY;\n    }\n\n    /**\n     * @hidden\n     */\n    public defaultReturnDuration = '0.5s';\n\n    /**\n     * @hidden\n     */\n    public ghostElement;\n\n    /**\n     * @hidden\n     */\n    public animInProgress = false;\n\n    protected _startX = 0;\n    protected _startY = 0;\n    protected _lastX = 0;\n    protected _lastY = 0;\n    protected _dragStarted = false;\n\n    /** Drag ghost related properties */\n    protected _defaultOffsetX;\n    protected _defaultOffsetY;\n    protected _offsetX;\n    protected _offsetY;\n    protected _ghostStartX;\n    protected _ghostStartY;\n    protected _ghostHostX = 0;\n    protected _ghostHostY = 0;\n\n    protected _pointerDownId = null;\n    protected _clicked = false;\n    protected _lastDropArea = null;\n\n    protected _destroy = new Subject<boolean>();\n    protected _removeOnDestroy = true;\n\n    constructor(\n        public cdr: ChangeDetectorRef,\n        public element: ElementRef,\n        public viewContainer: ViewContainerRef,\n        public zone: NgZone,\n        public renderer: Renderer2\n    ) {\n    }\n\n    /**\n     * @hidden\n     */\n    public ngAfterContentInit() {\n        if (!this.dragHandles || !this.dragHandles.length ) {\n            // Set user select none to the whole draggable element if no drag handles are defined.\n            this.selectDisabled = true;\n        }\n\n        // Bind events\n        this.zone.runOutsideAngular(() => {\n            const targetElements = this.dragHandles && this.dragHandles.length ?\n                this.dragHandles.map((item) => item.element.nativeElement) : [this.element.nativeElement];\n            targetElements.forEach((element) => {\n                if (this.pointerEventsEnabled) {\n                    fromEvent(element, 'pointerdown').pipe(takeUntil(this._destroy))\n                    .subscribe((res) => this.onPointerDown(res));\n\n                    fromEvent(element, 'pointermove').pipe(\n                        throttle(() => interval(0, animationFrameScheduler)),\n                        takeUntil(this._destroy)\n                    ).subscribe((res) => this.onPointerMove(res));\n\n                    fromEvent(element, 'pointerup').pipe(takeUntil(this._destroy))\n                        .subscribe((res) => this.onPointerUp(res));\n\n                    if (!this.ghost) {\n                        // Do not bind `lostpointercapture` to the target, because we will bind it on the ghost later.\n                        fromEvent(element, 'lostpointercapture').pipe(takeUntil(this._destroy))\n                        .subscribe((res) => this.onPointerLost(res));\n                    }\n                } else if (this.touchEventsEnabled) {\n                    fromEvent(element, 'touchstart').pipe(takeUntil(this._destroy))\n                    .subscribe((res) => this.onPointerDown(res));\n                } else {\n                    // We don't have pointer events and touch events. Use then mouse events.\n                    fromEvent(element, 'mousedown').pipe(takeUntil(this._destroy))\n                    .subscribe((res) => this.onPointerDown(res));\n                }\n            });\n\n            // We should bind to document events only once when there are no pointer events.\n            if (!this.pointerEventsEnabled && this.touchEventsEnabled) {\n                fromEvent(document.defaultView, 'touchmove').pipe(\n                    throttle(() => interval(0, animationFrameScheduler)),\n                    takeUntil(this._destroy)\n                ).subscribe((res) => this.onPointerMove(res));\n\n                fromEvent(document.defaultView, 'touchend').pipe(takeUntil(this._destroy))\n                    .subscribe((res) => this.onPointerUp(res));\n            } else if (!this.pointerEventsEnabled) {\n                fromEvent(document.defaultView, 'mousemove').pipe(\n                    throttle(() => interval(0, animationFrameScheduler)),\n                    takeUntil(this._destroy)\n                ).subscribe((res) => this.onPointerMove(res));\n\n                fromEvent(document.defaultView, 'mouseup').pipe(takeUntil(this._destroy))\n                    .subscribe((res) => this.onPointerUp(res));\n            }\n\n            this.element.nativeElement.addEventListener('transitionend', (args) => {\n                this.onTransitionEnd(args);\n            });\n        });\n\n        // Set transition duration to 0s. This also helps with setting `visibility: hidden` to the base to not lag.\n        this.element.nativeElement.style.transitionDuration = '0.0s';\n    }\n\n    /**\n     * @hidden\n     */\n    public ngOnDestroy() {\n        this._destroy.next(true);\n        this._destroy.complete();\n\n        if (this.ghost && this.ghostElement && this._removeOnDestroy) {\n            this.ghostElement.parentNode.removeChild(this.ghostElement);\n            this.ghostElement = null;\n        }\n    }\n\n    /**\n     * Sets desired location of the base element or ghost element if rended relative to the document.\n     * @param newLocation New location that should be applied. It is advised to get new location using getBoundingClientRects() + scroll.\n     */\n    public setLocation(newLocation: IgxDragLocation) {\n        // We do not subtract marginLeft and marginTop here because here we calculate deltas.\n        if (this.ghost && this.ghostElement) {\n            const offsetHostX = this.ghostHost ? this.ghostHostOffsetLeft(this.ghostHost) : 0;\n            const offsetHostY = this.ghostHost ? this.ghostHostOffsetTop(this.ghostHost) : 0;\n            this.ghostLeft = newLocation.pageX - offsetHostX + this.getWindowScrollLeft();\n            this.ghostTop = newLocation.pageY - offsetHostY + this.getWindowScrollTop();\n        } else if (!this.ghost) {\n            const deltaX = newLocation.pageX - this.pageX;\n            const deltaY = newLocation.pageY - this.pageY;\n            const transformX = this.getTransformX(this.element.nativeElement);\n            const transformY = this.getTransformY(this.element.nativeElement);\n            this.setTransformXY(transformX + deltaX, transformY + deltaY);\n        }\n\n        this._startX = this.baseLeft;\n        this._startY = this.baseTop;\n    }\n\n    /**\n     * Animates the base or ghost element depending on the `ghost` input to its initial location.\n     * If `ghost` is true but there is not ghost rendered, it will be created and animated.\n     * If the base element has changed its DOM position its initial location will be changed accordingly.\n     * @param customAnimArgs Custom transition properties that will be applied when performing the transition.\n     * @param startLocation Start location from where the transition should start.\n     */\n    public transitionToOrigin(customAnimArgs?: IDragCustomTransitionArgs, startLocation?: IgxDragLocation) {\n        if ((!!startLocation && startLocation.pageX === this.baseOriginLeft && startLocation.pageY === this.baseOriginLeft) ||\n            (!startLocation && this.ghost && !this.ghostElement)) {\n            return;\n        }\n\n        if (!!startLocation && startLocation.pageX !== this.pageX && startLocation.pageY !== this.pageY) {\n            if (this.ghost && !this.ghostElement) {\n                this._startX = startLocation.pageX;\n                this._startY = startLocation.pageY;\n                this._ghostStartX = this._startX;\n                this._ghostStartY = this._startY;\n                this.createGhost(this._startX, this._startY);\n            }\n\n            this.setLocation(startLocation);\n        }\n\n        this.animInProgress = true;\n        // Use setTimeout because we need to be sure that the element is positioned first correctly if there is start location.\n        setTimeout(() => {\n            if (this.ghost) {\n                this.ghostElement.style.transitionProperty = 'top, left';\n                this.ghostElement.style.transitionDuration =\n                    customAnimArgs && customAnimArgs.duration ? customAnimArgs.duration + 's' : this.defaultReturnDuration ;\n                this.ghostElement.style.transitionTimingFunction =\n                    customAnimArgs && customAnimArgs.timingFunction ? customAnimArgs.timingFunction : '';\n                this.ghostElement.style.transitionDelay = customAnimArgs && customAnimArgs.delay ? customAnimArgs.delay + 's' : '';\n                this.setLocation(new IgxDragLocation(this.baseLeft, this.baseTop));\n            } else if (!this.ghost) {\n                this.element.nativeElement.style.transitionProperty = 'transform';\n                this.element.nativeElement.style.transitionDuration =\n                    customAnimArgs && customAnimArgs.duration ? customAnimArgs.duration + 's' : this.defaultReturnDuration ;\n                this.element.nativeElement.style.transitionTimingFunction =\n                    customAnimArgs && customAnimArgs.timingFunction ? customAnimArgs.timingFunction : '';\n                this.element.nativeElement.style.transitionDelay = customAnimArgs && customAnimArgs.delay ? customAnimArgs.delay + 's' : '';\n                this._startX = this.baseLeft;\n                this._startY = this.baseTop;\n                this.setTransformXY(0, 0);\n            }\n        }, 0);\n    }\n\n    /**\n     * Animates the base or ghost element to a specific target location or other element using transition.\n     * If `ghost` is true but there is not ghost rendered, it will be created and animated.\n     * It is recommended to use 'getBoundingClientRects() + pageScroll' when determining desired location.\n     * @param target Target that the base or ghost will transition to. It can be either location in the page or another HTML element.\n     * @param customAnimArgs Custom transition properties that will be applied when performing the transition.\n     * @param startLocation Start location from where the transition should start.\n     */\n    public transitionTo(target: IgxDragLocation | ElementRef, customAnimArgs?: IDragCustomTransitionArgs, startLocation?: IgxDragLocation) {\n        if (!!startLocation && this.ghost && !this.ghostElement) {\n            this._startX = startLocation.pageX;\n            this._startY = startLocation.pageY;\n            this._ghostStartX = this._startX;\n            this._ghostStartY = this._startY;\n        } else if (!!startLocation && (!this.ghost || this.ghostElement)) {\n            this.setLocation(startLocation);\n        } else if (this.ghost && !this.ghostElement) {\n            this._startX = this.baseLeft;\n            this._startY = this.baseTop;\n            this._ghostStartX = this._startX + this.getWindowScrollLeft();\n            this._ghostStartY = this._startY + this.getWindowScrollTop();\n        }\n\n        if (this.ghost && !this.ghostElement) {\n            this.createGhost(this._startX, this._startY);\n        }\n\n        this.animInProgress = true;\n        // Use setTimeout because we need to be sure that the element is positioned first correctly if there is start location.\n        setTimeout(() => {\n            const movedElem = this.ghost ? this.ghostElement : this.element.nativeElement;\n            movedElem.style.transitionProperty = this.ghost && this.ghostElement ? 'left, top' : 'transform';\n            movedElem.style.transitionDuration =\n                customAnimArgs && customAnimArgs.duration ? customAnimArgs.duration + 's' : this.defaultReturnDuration ;\n            movedElem.style.transitionTimingFunction =\n                customAnimArgs && customAnimArgs.timingFunction ? customAnimArgs.timingFunction : '';\n            movedElem.style.transitionDelay = customAnimArgs && customAnimArgs.delay ? customAnimArgs.delay + 's' : '';\n\n            if (target instanceof IgxDragLocation) {\n                this.setLocation(new IgxDragLocation (target.pageX, target.pageY));\n            } else {\n                const targetRects = target.nativeElement.getBoundingClientRect();\n                this.setLocation(new IgxDragLocation(\n                    targetRects.left -  this.getWindowScrollLeft(),\n                    targetRects.top - this.getWindowScrollTop()\n                ));\n            }\n        }, 0);\n    }\n\n    /**\n     * @hidden\n     * Method bound to the PointerDown event of the base element igxDrag is initialized.\n     * @param event PointerDown event captured\n     */\n    public onPointerDown(event) {\n        const ignoredElement = this.dragIgnoredElems.find(elem => elem.element.nativeElement === event.target);\n        if (ignoredElement) {\n            return;\n        }\n\n        this._clicked = true;\n        this._pointerDownId = event.pointerId;\n\n        // Set pointer capture so we detect pointermove even if mouse is out of bounds until ghostElement is created.\n        const handleFound = this.dragHandles.find(handle => handle.element.nativeElement === event.currentTarget);\n        const targetElement = handleFound ? handleFound.element.nativeElement : this.element.nativeElement;\n        if (this.pointerEventsEnabled) {\n            targetElement.setPointerCapture(this._pointerDownId);\n        } else {\n            targetElement.focus();\n            event.preventDefault();\n        }\n\n        if (this.pointerEventsEnabled || !this.touchEventsEnabled) {\n            // Check first for pointer events or non touch, because we can have pointer events and touch events at once.\n            this._startX = event.pageX;\n            this._startY = event.pageY;\n        } else if (this.touchEventsEnabled) {\n            this._startX = event.touches[0].pageX;\n            this._startY = event.touches[0].pageY;\n        }\n\n        this._defaultOffsetX = this.baseLeft - this._startX + this.getWindowScrollLeft();\n        this._defaultOffsetY = this.baseTop - this._startY + this.getWindowScrollTop();\n        this._ghostStartX = this._startX + this.ghostOffsetX;\n        this._ghostStartY = this._startY + this.ghostOffsetY;\n        this._lastX = this._startX;\n        this._lastY = this._startY;\n    }\n\n    /**\n     * @hidden\n     * Perform drag move logic when dragging and dispatching events if there is igxDrop under the pointer.\n     * This method is bound at first at the base element.\n     * If dragging starts and after the ghostElement is rendered the pointerId is reassigned it. Then this method is bound to it.\n     * @param event PointerMove event captured\n     */\n    public onPointerMove(event) {\n        if (this._clicked) {\n            let pageX, pageY;\n            if (this.pointerEventsEnabled || !this.touchEventsEnabled) {\n                // Check first for pointer events or non touch, because we can have pointer events and touch events at once.\n                pageX = event.pageX;\n                pageY = event.pageY;\n            } else if (this.touchEventsEnabled) {\n                pageX = event.touches[0].pageX;\n                pageY = event.touches[0].pageY;\n\n                // Prevent scrolling on touch while dragging\n                event.preventDefault();\n            }\n\n            const totalMovedX = pageX - this._startX;\n            const totalMovedY = pageY - this._startY;\n            if (!this._dragStarted &&\n                (Math.abs(totalMovedX) > this.dragTolerance || Math.abs(totalMovedY) > this.dragTolerance)) {\n                const dragStartArgs: IDragStartEventArgs = {\n                    originalEvent: event,\n                    owner: this,\n                    startX: pageX - totalMovedX,\n                    startY: pageY - totalMovedY,\n                    pageX: pageX,\n                    pageY: pageY,\n                    cancel: false\n                };\n                this.zone.run(() => {\n                    this.dragStart.emit(dragStartArgs);\n                });\n\n                if (!dragStartArgs.cancel) {\n                    this._dragStarted = true;\n                    if (this.ghost) {\n                        // We moved enough so ghostElement can be rendered and actual dragging to start.\n                        // When creating it will take into account any offset set by the user by default.\n                        this.createGhost(pageX, pageY);\n                    } else if (this._offsetX !== undefined || this._offsetY !== undefined) {\n                        // There is no need for ghost, but we will need to position initially the base element to reflect any offset.\n                        const transformX = (this._offsetX !== undefined ? this._offsetX - this._defaultOffsetX : 0) +\n                            this.getTransformX(this.element.nativeElement);\n                        const transformY = (this._offsetY !== undefined ? this._offsetY - this._defaultOffsetY : 0) +\n                            this.getTransformY(this.element.nativeElement);\n                        this.setTransformXY(transformX, transformY);\n                    }\n                } else {\n                    return;\n                }\n            } else if (!this._dragStarted) {\n                return;\n            }\n\n            const moveArgs: IDragMoveEventArgs = {\n                originalEvent: event,\n                owner: this,\n                startX: this._startX,\n                startY: this._startY,\n                pageX: this._lastX,\n                pageY: this._lastY,\n                nextPageX: pageX,\n                nextPageY: pageY,\n                cancel: false\n            };\n            this.dragMove.emit(moveArgs);\n\n            const setPageX = moveArgs.nextPageX;\n            const setPageY = moveArgs.nextPageY;\n            if (!moveArgs.cancel) {\n                if (this.ghost) {\n                    const updatedTotalMovedX = this.dragDirection === DragDirection.VERTICAL ? 0 : setPageX - this._startX;\n                    const updatedTotalMovedY = this.dragDirection === DragDirection.HORIZONTAL ? 0 : setPageY - this._startY;\n                    this.ghostLeft = this._ghostStartX + updatedTotalMovedX;\n                    this.ghostTop = this._ghostStartY + updatedTotalMovedY;\n                } else {\n                    const lastMovedX = this.dragDirection === DragDirection.VERTICAL ? 0 : setPageX - this._lastX;\n                    const lastMovedY = this.dragDirection === DragDirection.HORIZONTAL ? 0 : setPageY - this._lastY;\n                    const translateX = this.getTransformX(this.element.nativeElement) + lastMovedX;\n                    const translateY = this.getTransformY(this.element.nativeElement) + lastMovedY;\n                    this.setTransformXY(translateX, translateY);\n                }\n                this.dispatchDragEvents(pageX, pageY, event);\n            }\n\n            this._lastX = setPageX;\n            this._lastY = setPageY;\n        }\n    }\n\n    /**\n     * @hidden\n     * Perform drag end logic when releasing the ghostElement and dispatching drop event if igxDrop is under the pointer.\n     * This method is bound at first at the base element.\n     * If dragging starts and after the ghostElement is rendered the pointerId is reassigned to it. Then this method is bound to it.\n     * @param event PointerUp event captured\n     */\n    public onPointerUp(event) {\n        if (!this._clicked) {\n            return;\n        }\n\n        let pageX, pageY;\n        if (this.pointerEventsEnabled || !this.touchEventsEnabled) {\n            // Check first for pointer events or non touch, because we can have pointer events and touch events at once.\n            pageX = event.pageX;\n            pageY = event.pageY;\n        } else if (this.touchEventsEnabled) {\n            pageX = event.touches[0].pageX;\n            pageY = event.touches[0].pageY;\n\n            // Prevent scrolling on touch while dragging\n            event.preventDefault();\n        }\n\n        const eventArgs: IDragBaseEventArgs = {\n            originalEvent: event,\n            owner: this,\n            startX: this._startX,\n            startY: this._startY,\n            pageX: pageX,\n            pageY: pageY\n        };\n        this._pointerDownId = null;\n        this._clicked = false;\n        if (this._dragStarted) {\n            if (this._lastDropArea && this._lastDropArea !== this.element.nativeElement ) {\n                this.dispatchDropEvent(event.pageX, event.pageY, event);\n            }\n\n            this.zone.run(() => {\n                this.dragEnd.emit(eventArgs);\n            });\n\n            if (!this.animInProgress) {\n                this.onTransitionEnd(null);\n            }\n        } else {\n            // Trigger our own click event because when there is no ghost, native click cannot be prevented when dragging.\n            this.zone.run(() => {\n                this.dragClick.emit(eventArgs);\n            });\n        }\n    }\n\n    /**\n     * @hidden\n     * Execute this method whe the pointer capture has been lost.\n     * This means that during dragging the user has performed other action like right clicking and then clicking somewhere else.\n     * This method will ensure that the drag state is being reset in this case as if the user released the dragged element.\n     * @param event Event captured\n     */\n    public onPointerLost(event) {\n        if (!this._clicked) {\n            return;\n        }\n\n        const eventArgs = {\n            originalEvent: event,\n            owner: this,\n            startX: this._startX,\n            startY: this._startY,\n            pageX: event.pageX,\n            pageY: event.pageY\n        };\n        this._pointerDownId = null;\n        this._clicked = false;\n        if (this._dragStarted) {\n            this.zone.run(() => {\n                this.dragEnd.emit(eventArgs);\n            });\n            if (!this.animInProgress) {\n                this.onTransitionEnd(null);\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     * Create ghost element - if a Node object is provided it creates a clone of that node,\n     * otherwise it clones the host element.\n     * Bind all needed events.\n     * @param pageX Latest pointer position on the X axis relative to the page.\n     * @param pageY Latest pointer position on the Y axis relative to the page.\n     * @param node The Node object to be cloned.\n     */\n    protected createGhost(pageX, pageY, node: any = null) {\n        if (!this.ghost) {\n            return;\n        }\n\n        let dynamicGhostRef;\n        if (this.ghostTemplate) {\n            dynamicGhostRef = this.viewContainer.createEmbeddedView(this.ghostTemplate, this.ghostContext);\n            this.ghostElement = dynamicGhostRef.rootNodes[0];\n        } else {\n            this.ghostElement = node ? node.cloneNode(true) : this.element.nativeElement.cloneNode(true);\n        }\n\n        const totalMovedX = pageX - this._startX;\n        const totalMovedY = pageY - this._startY;\n        this._ghostHostX = this.ghostHost ? this.ghostHostOffsetLeft(this.ghostHost) : 0;\n        this._ghostHostY = this.ghostHost ? this.ghostHostOffsetTop(this.ghostHost) : 0;\n\n        this.ghostElement.style.transitionDuration = '0.0s';\n        this.ghostElement.style.position = 'absolute';\n\n\n        if (this.ghostClass) {\n            this.renderer.addClass(this.ghostElement, this.ghostClass);\n        }\n\n        const createEventArgs = {\n            owner: this,\n            ghostElement: this.ghostElement,\n            cancel: false\n        };\n        this.ghostCreate.emit(createEventArgs);\n        if (createEventArgs.cancel) {\n            this.ghostElement = null;\n            if (this.ghostTemplate && dynamicGhostRef) {\n                dynamicGhostRef.destroy();\n            }\n            return;\n        }\n\n        if (this.ghostHost) {\n            this.ghostHost.appendChild(this.ghostElement);\n        } else {\n            document.body.appendChild(this.ghostElement);\n        }\n\n        const ghostMarginLeft = parseInt(document.defaultView.getComputedStyle(this.ghostElement)['margin-left'], 10);\n        const ghostMarginTop = parseInt(document.defaultView.getComputedStyle(this.ghostElement)['margin-top'], 10);\n        this.ghostElement.style.left = (this._ghostStartX - ghostMarginLeft + totalMovedX - this._ghostHostX) + 'px';\n        this.ghostElement.style.top = (this._ghostStartY - ghostMarginTop + totalMovedY - this._ghostHostX) + 'px';\n\n        if (this.pointerEventsEnabled) {\n            // The ghostElement takes control for moving and dragging after it has been rendered.\n            if (this._pointerDownId !== null) {\n                this.ghostElement.setPointerCapture(this._pointerDownId);\n            }\n            this.ghostElement.addEventListener('pointermove', (args) => {\n                this.onPointerMove(args);\n            });\n            this.ghostElement.addEventListener('pointerup', (args) => {\n                this.onPointerUp(args);\n            });\n            this.ghostElement.addEventListener('lostpointercapture', (args) => {\n                this.onPointerLost(args);\n            });\n        }\n\n        // Transition animation when the ghostElement is released and it returns to it's original position.\n        this.ghostElement.addEventListener('transitionend', (args) => {\n            this.onTransitionEnd(args);\n        });\n\n        this.cdr.detectChanges();\n    }\n\n    /**\n     * @hidden\n     * Dispatch custom igxDragEnter/igxDragLeave events based on current pointer position and if drop area is under.\n     */\n    protected dispatchDragEvents(pageX: number, pageY: number, originalEvent) {\n        let topDropArea;\n        const customEventArgs: IgxDragCustomEventDetails = {\n            startX: this._startX,\n            startY: this._startY,\n            pageX: pageX,\n            pageY: pageY,\n            owner: this,\n            originalEvent: originalEvent\n        };\n\n        const elementsFromPoint = this.getElementsAtPoint(pageX, pageY);\n        for (let i = 0; i < elementsFromPoint.length; i++) {\n            if (elementsFromPoint[i].getAttribute('droppable') === 'true' &&\n                elementsFromPoint[i] !== this.ghostElement && elementsFromPoint[i] !== this.element.nativeElement) {\n                topDropArea = elementsFromPoint[i];\n                break;\n            }\n        }\n\n        if (topDropArea &&\n            (!this._lastDropArea || (this._lastDropArea && this._lastDropArea !== topDropArea))) {\n                if (this._lastDropArea) {\n                    this.dispatchEvent(this._lastDropArea, 'igxDragLeave', customEventArgs);\n                }\n\n                this._lastDropArea = topDropArea;\n                this.dispatchEvent(this._lastDropArea, 'igxDragEnter', customEventArgs);\n            } else if (!topDropArea && this._lastDropArea) {\n                this.dispatchEvent(this._lastDropArea, 'igxDragLeave', customEventArgs);\n                this._lastDropArea = null;\n                return;\n            }\n\n        if (topDropArea) {\n            this.dispatchEvent(topDropArea, 'igxDragOver', customEventArgs);\n        }\n    }\n\n    /**\n     * @hidden\n     * Dispatch custom igxDrop event based on current pointer position if there is last recorder drop area under the pointer.\n     * Last recorder drop area is updated in @dispatchDragEvents method.\n     */\n    protected dispatchDropEvent(pageX: number, pageY: number, originalEvent) {\n        const eventArgs: IgxDragCustomEventDetails = {\n            startX: this._startX,\n            startY: this._startY,\n            pageX: pageX,\n            pageY: pageY,\n            owner: this,\n            originalEvent: originalEvent\n        };\n\n        this.dispatchEvent(this._lastDropArea, 'igxDrop', eventArgs);\n        this.dispatchEvent(this._lastDropArea, 'igxDragLeave', eventArgs);\n        this._lastDropArea = null;\n    }\n\n    /**\n     * @hidden\n     */\n    public onTransitionEnd(event) {\n        if ((!this._dragStarted && !this.animInProgress) || this._clicked) {\n            // Return if no dragging started and there is no animation in progress.\n            return ;\n        }\n\n        if (this.ghost && this.ghostElement) {\n            this._ghostStartX = this.baseLeft + this.getWindowScrollLeft();\n            this._ghostStartY = this.baseTop + this.getWindowScrollTop();\n\n            const ghostDestroyArgs: IDragGhostBaseEventArgs = {\n                owner: this,\n                ghostElement: this.ghostElement,\n                cancel: false\n            };\n            this.ghostDestroy.emit(ghostDestroyArgs);\n            if (ghostDestroyArgs.cancel) {\n                return;\n            }\n            this.ghostElement.parentNode.removeChild(this.ghostElement);\n            this.ghostElement = null;\n        } else if (!this.ghost) {\n            this.element.nativeElement.style.transitionProperty = '';\n            this.element.nativeElement.style.transitionDuration = '0.0s';\n            this.element.nativeElement.style.transitionTimingFunction = '';\n            this.element.nativeElement.style.transitionDelay = '';\n        }\n        this.animInProgress = false;\n        this._dragStarted = false;\n\n        // Execute transitioned after everything is reset so if the user sets new location on the base now it would work as expected.\n        this.zone.run(() => {\n            this.transitioned.emit({\n                originalEvent: event,\n                owner: this,\n                startX: this._startX,\n                startY: this._startY,\n                pageX: this._startX,\n                pageY: this._startY\n            });\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    protected getElementsAtPoint(pageX: number, pageY: number) {\n        // correct the coordinates with the current scroll position, because\n        // document.elementsFromPoint consider position within the current viewport\n        // window.pageXOffset == window.scrollX; // always true\n        // using window.pageXOffset for IE9 compatibility\n        const viewPortX = pageX - window.pageXOffset;\n        const viewPortY = pageY - window.pageYOffset;\n        if (document['msElementsFromPoint']) {\n            // Edge and IE special snowflakes\n            const elements = document['msElementsFromPoint'](viewPortX, viewPortY);\n            return elements === null ? [] : elements;\n        } else {\n            // Other browsers like Chrome, Firefox, Opera\n            return document.elementsFromPoint(viewPortX, viewPortY);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    protected dispatchEvent(target, eventName: string, eventArgs: IgxDragCustomEventDetails) {\n        // This way is IE11 compatible.\n        const dragLeaveEvent = document.createEvent('CustomEvent');\n        dragLeaveEvent.initCustomEvent(eventName, false, false, eventArgs);\n        target.dispatchEvent(dragLeaveEvent);\n        // Otherwise can be used `target.dispatchEvent(new CustomEvent(eventName, eventArgs));`\n    }\n\n    protected getTransformX(elem) {\n        let posX = 0;\n        if (elem.style.transform) {\n            const matrix = elem.style.transform;\n            const values = matrix ? matrix.match(/-?[\\d\\.]+/g) : undefined;\n            posX = values ? Number(values[ 1 ]) : 0;\n        }\n\n        return posX;\n    }\n\n    protected getTransformY(elem) {\n        let posY = 0;\n        if (elem.style.transform) {\n            const matrix = elem.style.transform;\n            const values = matrix ? matrix.match(/-?[\\d\\.]+/g) : undefined;\n            posY = values ? Number(values[ 2 ]) : 0;\n        }\n\n        return posY;\n    }\n\n    /** Method setting transformation to the base draggable element. */\n    protected setTransformXY(x: number, y: number) {\n        this.element.nativeElement.style.transform = 'translate3d(' + x + 'px, ' + y + 'px, 0px)';\n    }\n\n    protected getWindowScrollTop() {\n        return window.scrollY ? window.scrollY : (window.pageYOffset ? window.pageYOffset : 0);\n    }\n\n    protected getWindowScrollLeft() {\n        return window.scrollX ? window.scrollX : (window.pageXOffset ? window.pageXOffset : 0);\n    }\n\n    protected ghostHostOffsetLeft(ghostHost: any) {\n        const ghostPosition = document.defaultView.getComputedStyle(ghostHost).getPropertyValue('position');\n        if (ghostPosition === 'static' && ghostHost.offsetParent && ghostHost.offsetParent === document.body) {\n            return 0;\n        } else if (ghostPosition === 'static' && ghostHost.offsetParent) {\n            return ghostHost.offsetParent.getBoundingClientRect().left - this.getWindowScrollLeft();\n        }\n        return ghostHost.getBoundingClientRect().left - this.getWindowScrollLeft();\n    }\n\n    protected ghostHostOffsetTop(ghostHost: any) {\n        const ghostPosition = document.defaultView.getComputedStyle(ghostHost).getPropertyValue('position');\n        if (ghostPosition === 'static' && ghostHost.offsetParent && ghostHost.offsetParent === document.body) {\n            return 0;\n        } else if (ghostPosition === 'static' && ghostHost.offsetParent) {\n            return ghostHost.offsetParent.getBoundingClientRect().top - this.getWindowScrollTop();\n        }\n        return ghostHost.getBoundingClientRect().top - this.getWindowScrollTop();\n    }\n}\n\n@Directive({\n    exportAs: 'drop',\n    selector: '[igxDrop]'\n})\nexport class IgxDropDirective implements OnInit, OnDestroy {\n\n    /**\n     * - Save data inside the `igxDrop` directive. This can be set when instancing `igxDrop` on an element.\n     * ```html\n     * <div [igxDrop]=\"{ source: myElement }\"></div>\n     * ```\n     * @memberof IgxDropDirective\n     */\n    @Input('igxDrop')\n    public data: any;\n\n    /**\n     * An @Input property that provide a way for igxDrag and igxDrop to be linked through channels.\n     * It accepts single value or an array of values and evaluates then using strict equality.\n     * ```html\n     * <div igxDrag [dragChannel]=\"'odd'\">\n     *         <span>95</span>\n     * </div>\n     * <div igxDrop [dropChannel]=\"['odd', 'irrational']\">\n     *         <span>Numbers drop area!</span>\n     * </div>\n     * ```\n     * @memberof IgxDropDirective\n     */\n    @Input()\n    public dropChannel: number | string | number[] | string[];\n\n    /**\n     * An @Input property that specifies a drop strategy type that will be executed when an `IgxDrag` element is released inside\n     *  the current drop area. The provided strategies are:\n     *  - IgxDefaultDropStrategy - This is the default base strategy and it doesn't perform any actions.\n     *  - IgxAppendDropStrategy - Appends the dropped element to last position as a direct child to the `igxDrop`.\n     *  - IgxPrependDropStrategy - Prepends the dropped element to first position as a direct child to the `igxDrop`.\n     *  - IgxInsertDropStrategy - If the dropped element is released above a child element of the `igxDrop`, it will be inserted\n     *      at that position. Otherwise the dropped element will be appended if released outside any child of the `igxDrop`.\n     * ```html\n     * <div igxDrag>\n     *      <span>DragMe</span>\n     * </div>\n     * <div igxDrop [dropStrategy]=\"myDropStrategy\">\n     *         <span>Numbers drop area!</span>\n     * </div>\n     * ```\n     * ```typescript\n     * import { IgxAppendDropStrategy } from 'igniteui-angular';\n     *\n     * export class App {\n     *      public myDropStrategy = IgxAppendDropStrategy;\n     * }\n     * ```\n     * @memberof IgxDropDirective\n     */\n    @Input()\n    public set dropStrategy(classRef: any) {\n        this._dropStrategy = new classRef(this._renderer);\n    }\n\n    public get dropStrategy() {\n        return this._dropStrategy;\n    }\n\n    /**\n     * Event triggered when dragged element enters the area of the element.\n     * ```html\n     * <div class=\"cageArea\" igxDrop (enter)=\"dragEnter()\" (igxDragEnter)=\"onDragCageEnter()\" (igxDragLeave)=\"onDragCageLeave()\">\n     * </div>\n     * ```\n     * ```typescript\n     * public dragEnter(){\n     *     alert(\"A draggable element has entered the chip area!\");\n     * }\n     * ```\n     * @memberof IgxDropDirective\n     */\n    @Output()\n    public enter = new EventEmitter<IDropBaseEventArgs>();\n\n    /**\n     * Event triggered when dragged element enters the area of the element.\n     * ```html\n     * <div class=\"cageArea\" igxDrop (enter)=\"dragEnter()\" (igxDragEnter)=\"onDragCageEnter()\" (igxDragLeave)=\"onDragCageLeave()\">\n     * </div>\n     * ```\n     * ```typescript\n     * public dragEnter(){\n     *     alert(\"A draggable element has entered the chip area!\");\n     * }\n     * ```\n     * @memberof IgxDropDirective\n     */\n    @Output()\n    public over = new EventEmitter<IDropBaseEventArgs>();\n\n    /**\n     * Event triggered when dragged element leaves the area of the element.\n     * ```html\n     * <div class=\"cageArea\" igxDrop (leave)=\"dragLeave()\" (igxDragEnter)=\"onDragCageEnter()\" (igxDragLeave)=\"onDragCageLeave()\">\n     * </div>\n     * ```\n     * ```typescript\n     * public dragLeave(){\n     *     alert(\"A draggable element has left the chip area!\");\n     * }\n     * ```\n     * @memberof IgxDropDirective\n     */\n    @Output()\n    public leave = new EventEmitter<IDropBaseEventArgs>();\n\n    /**\n     * Event triggered when dragged element is dropped in the area of the element.\n     * Since the `igxDrop` has default logic that appends the dropped element as a child, it can be canceled here.\n     * To cancel the default logic the `cancel` property of the event needs to be set to true.\n     * ```html\n     * <div class=\"cageArea\" igxDrop (dropped)=\"dragDrop()\" (igxDragEnter)=\"onDragCageEnter()\" (igxDragLeave)=\"onDragCageLeave()\">\n     * </div>\n     * ```\n     * ```typescript\n     * public dragDrop(){\n     *     alert(\"A draggable element has been dropped in the chip area!\");\n     * }\n     * ```\n     * @memberof IgxDropDirective\n     */\n    @Output()\n    public dropped = new EventEmitter<IDropDroppedEventArgs>();\n\n    /**\n     * @hidden\n     */\n    @HostBinding('attr.droppable')\n    public droppable = true;\n\n    /**\n     * @hidden\n     */\n    @HostBinding('class.dragOver')\n    public dragover = false;\n\n    /**\n     * @hidden\n     */\n    protected _destroy = new Subject<boolean>();\n    protected _dropStrategy: IDropStrategy;\n\n    constructor(public element: ElementRef, private _renderer: Renderer2, private _zone: NgZone) {\n        this._dropStrategy = new IgxDefaultDropStrategy();\n    }\n\n    /**\n     * @hidden\n     */\n    public ngOnInit() {\n        this._zone.runOutsideAngular(() => {\n            fromEvent(this.element.nativeElement, 'igxDragEnter').pipe(takeUntil(this._destroy))\n                .subscribe((res) => this.onDragEnter(res as CustomEvent<IgxDragCustomEventDetails>));\n\n            fromEvent(this.element.nativeElement, 'igxDragLeave').pipe(takeUntil(this._destroy)).subscribe((res) => this.onDragLeave(res));\n            fromEvent(this.element.nativeElement, 'igxDragOver').pipe(takeUntil(this._destroy)).subscribe((res) => this.onDragOver(res));\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    public ngOnDestroy() {\n        this._destroy.next(true);\n        this._destroy.complete();\n    }\n\n    /**\n     * @hidden\n     */\n    public onDragOver(event) {\n        const elementPosX = this.element.nativeElement.getBoundingClientRect().left + this.getWindowScrollLeft();\n        const elementPosY = this.element.nativeElement.getBoundingClientRect().top + this.getWindowScrollTop();\n        const offsetX = event.detail.pageX - elementPosX;\n        const offsetY = event.detail.pageY - elementPosY;\n        const eventArgs: IDropBaseEventArgs = {\n            originalEvent: event.detail.originalEvent,\n            owner: this,\n            drag: event.detail.owner,\n            dragData: event.detail.owner.data,\n            startX: event.detail.startX,\n            startY: event.detail.startY,\n            pageX: event.detail.pageX,\n            pageY: event.detail.pageY,\n            offsetX: offsetX,\n            offsetY: offsetY\n        };\n\n        this.over.emit(eventArgs);\n     }\n\n    /**\n     * @hidden\n     */\n    public onDragEnter(event: CustomEvent<IgxDragCustomEventDetails>) {\n        if (!this.isDragLinked(event.detail.owner)) {\n            return;\n        }\n\n        this.dragover = true;\n        const elementPosX = this.element.nativeElement.getBoundingClientRect().left + this.getWindowScrollLeft();\n        const elementPosY = this.element.nativeElement.getBoundingClientRect().top + this.getWindowScrollTop();\n        const offsetX = event.detail.pageX - elementPosX;\n        const offsetY = event.detail.pageY - elementPosY;\n        const eventArgs: IDropBaseEventArgs = {\n            originalEvent: event.detail.originalEvent,\n            owner: this,\n            drag: event.detail.owner,\n            dragData: event.detail.owner.data,\n            startX: event.detail.startX,\n            startY: event.detail.startY,\n            pageX: event.detail.pageX,\n            pageY: event.detail.pageY,\n            offsetX: offsetX,\n            offsetY: offsetY\n        };\n        this._zone.run(() => {\n            this.enter.emit(eventArgs);\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    public onDragLeave(event) {\n        if (!this.isDragLinked(event.detail.owner)) {\n            return;\n        }\n\n        this.dragover = false;\n        const elementPosX = this.element.nativeElement.getBoundingClientRect().left + this.getWindowScrollLeft();\n        const elementPosY = this.element.nativeElement.getBoundingClientRect().top + this.getWindowScrollTop();\n        const offsetX = event.detail.pageX - elementPosX;\n        const offsetY = event.detail.pageY - elementPosY;\n        const eventArgs: IDropBaseEventArgs = {\n            originalEvent: event.detail.originalEvent,\n            owner: this,\n            drag: event.detail.owner,\n            dragData: event.detail.owner.data,\n            startX: event.detail.startX,\n            startY: event.detail.startY,\n            pageX: event.detail.pageX,\n            pageY: event.detail.pageY,\n            offsetX: offsetX,\n            offsetY: offsetY\n        };\n        this._zone.run(() => {\n            this.leave.emit(eventArgs);\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('igxDrop', ['$event'])\n    public onDragDrop(event) {\n        if (!this.isDragLinked(event.detail.owner)) {\n            return;\n        }\n\n        const elementPosX = this.element.nativeElement.getBoundingClientRect().left + this.getWindowScrollLeft();\n        const elementPosY = this.element.nativeElement.getBoundingClientRect().top + this.getWindowScrollTop();\n        const offsetX = event.detail.pageX - elementPosX;\n        const offsetY = event.detail.pageY - elementPosY;\n        const args: IDropDroppedEventArgs = {\n            owner: this,\n            originalEvent: event.detail.originalEvent,\n            drag: event.detail.owner,\n            dragData: event.detail.owner.data,\n            startX: event.detail.startX,\n            startY: event.detail.startY,\n            pageX: event.detail.pageX,\n            pageY: event.detail.pageY,\n            offsetX: offsetX,\n            offsetY: offsetY,\n            cancel: false\n        };\n        this._zone.run(() => {\n            this.dropped.emit(args);\n        });\n\n        if (this._dropStrategy && !args.cancel) {\n            const elementsAtPoint = event.detail.owner.getElementsAtPoint(event.detail.pageX, event.detail.pageY);\n            const insertIndex = this.getInsertIndexAt(event.detail.owner, elementsAtPoint);\n            this._dropStrategy.dropAction(event.detail.owner, this, insertIndex);\n        }\n    }\n\n    protected getWindowScrollTop() {\n        return window.scrollY ? window.scrollY : (window.pageYOffset ? window.pageYOffset : 0);\n    }\n\n    protected getWindowScrollLeft() {\n        return window.scrollX ? window.scrollX : (window.pageXOffset ? window.pageXOffset : 0);\n    }\n\n    protected isDragLinked(drag: IgxDragDirective): boolean {\n        const dragLinkArray = drag.dragChannel instanceof Array;\n        const dropLinkArray = this.dropChannel instanceof Array;\n\n        if (!dragLinkArray && !dropLinkArray) {\n            return this.dropChannel === drag.dragChannel;\n        } else if (!dragLinkArray && dropLinkArray) {\n            const dropLinks = <Array<any>>this.dropChannel;\n            for (let i = 0; i < dropLinks.length; i ++) {\n                if (dropLinks[i] === drag.dragChannel) {\n                    return true;\n                }\n            }\n        } else if (dragLinkArray && !dropLinkArray) {\n            const dragLinks = <Array<any>>drag.dragChannel;\n            for (let i = 0; i < dragLinks.length; i ++) {\n                if (dragLinks[i] === this.dropChannel) {\n                    return true;\n                }\n            }\n        } else {\n            const dragLinks = <Array<any>>drag.dragChannel;\n            const dropLinks = <Array<any>>this.dropChannel;\n            for (let i = 0; i < dragLinks.length; i ++) {\n                for (let j = 0; j < dropLinks.length; j ++) {\n                    if (dragLinks[i] === dropLinks[j]) {\n                        return true;\n                    }\n                }\n            }\n        }\n\n        return false;\n    }\n\n    protected getInsertIndexAt(draggedDir: IgxDragDirective, elementsAtPoint: any[]): number {\n        let insertIndex = -1;\n        const dropChildren = Array.prototype.slice.call(this.element.nativeElement.children);\n        if (!dropChildren.length) {\n            return insertIndex;\n        }\n\n        let i = 0;\n        let childUnder = null;\n        while (!childUnder && i < elementsAtPoint.length) {\n            if (elementsAtPoint[i].parentElement === this.element.nativeElement) {\n                childUnder = elementsAtPoint[i];\n            }\n            i++;\n        }\n\n        const draggedElemIndex = dropChildren.indexOf(draggedDir.element.nativeElement);\n        insertIndex = dropChildren.indexOf(childUnder);\n        if (draggedElemIndex !== -1 && draggedElemIndex < insertIndex) {\n            insertIndex++;\n        }\n\n        return insertIndex;\n    }\n}\n\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [IgxDragDirective, IgxDropDirective, IgxDragHandleDirective, IgxDragIgnoreDirective],\n    exports: [IgxDragDirective, IgxDropDirective, IgxDragHandleDirective, IgxDragIgnoreDirective]\n})\nexport class IgxDragDropModule { }\n","import { CommonModule } from '@angular/common';\nimport {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Input,\n    NgModule,\n    OnChanges,\n    Output,\n    Pipe,\n    PipeTransform,\n    Renderer2,\n    SimpleChanges\n} from '@angular/core';\n\nexport class IgxFilterOptions {\n    // Input text value that will be used as a filtering pattern (matching condition is based on it)\n    public inputValue = '';\n\n    // Item property, which value should be used for filtering\n    public key: string;\n\n    // Represent items of the list. It should be used to handle decalaratevely defined widgets\n    public items: any[];\n\n    // Function - get value to be tested from the item\n    // item - single item of the list to be filtered\n    // key - property name of item, which value should be tested\n    // Default behavior - returns \"key\"- named property value of item if key si provided,\n    // otherwise textContent of the item's html element\n    public get_value(item: any, key: string): string {\n        let result = '';\n\n        if (key && item[key]) {\n            result = item[key].toString();\n        } else if (item.element) {\n            if (item.element.nativeElement) {\n                result = item.element.nativeElement.textContent.trim();\n            // Check if element doesn't return the DOM element directly\n            } else if (item.element.textContent) {\n                result = item.element.textContent.trim();\n            }\n        }\n\n        return result;\n    }\n\n    // Function - formats the original text before matching process\n    // Default behavior - returns text to lower case\n    public formatter(valueToTest: string): string {\n        return valueToTest.toLowerCase();\n    }\n\n    // Function - determines whether the item met the condition\n    // valueToTest - text value that should be tested\n    // inputValue - text value from input that condition is based on\n    // Default behavior - \"contains\"\n    public matchFn(valueToTest: string, inputValue: string): boolean {\n        return valueToTest.indexOf(inputValue && inputValue.toLowerCase() || '') > -1;\n    }\n\n    // Function - executed after matching test for every matched item\n    // Default behavior - shows the item\n    public metConditionFn(item: any) {\n        if (item.hasOwnProperty('hidden')) {\n            item.hidden = false;\n        }\n    }\n\n    // Function - executed for every NOT matched item after matching test\n    // Default behavior - hides the item\n    public overdueConditionFn(item: any) {\n        if (item.hasOwnProperty('hidden')) {\n            item.hidden = true;\n        }\n    }\n}\n\n\n@Directive({\n    selector: '[igxFilter]'\n})\nexport class IgxFilterDirective implements OnChanges {\n    @Output() public filtering = new EventEmitter(false); // synchronous event emitter\n    @Output() public filtered = new EventEmitter();\n\n    @Input('igxFilter') public filterOptions: IgxFilterOptions;\n\n    constructor(private element: ElementRef, renderer: Renderer2) {\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        // Detect only changes of input value\n        if (changes.filterOptions &&\n            changes.filterOptions.currentValue &&\n            changes.filterOptions.currentValue.inputValue !== undefined &&\n            changes.filterOptions.previousValue &&\n            changes.filterOptions.currentValue.inputValue !== changes.filterOptions.previousValue.inputValue) {\n            this.filter();\n        }\n    }\n\n    private filter() {\n        if (!this.filterOptions.items) {\n            return;\n        }\n\n        const args = { cancel: false, items: this.filterOptions.items };\n        this.filtering.emit(args);\n\n        if (args.cancel) {\n            return;\n        }\n\n        const pipe = new IgxFilterPipe();\n\n        const filtered = pipe.transform(this.filterOptions.items, this.filterOptions);\n        this.filtered.emit({ filteredItems: filtered });\n    }\n}\n\n@Pipe({\n    name: 'igxFilter',\n    pure: false\n})\n\nexport class IgxFilterPipe implements PipeTransform {\n    public transform(items: any[],\n                     // options - initial settings of filter functionality\n                     options: IgxFilterOptions) {\n\n        let result = [];\n\n        if (!items || !items.length || !options) {\n            return;\n        }\n\n        if (options.items) {\n            items = options.items;\n        }\n\n        result = items.filter((item: any) => {\n            const match = options.matchFn(options.formatter(options.get_value(item, options.key)), options.inputValue);\n\n            if (match) {\n                if (options.metConditionFn) {\n                    options.metConditionFn(item);\n                }\n            } else {\n                if (options.overdueConditionFn) {\n                    options.overdueConditionFn(item);\n                }\n            }\n\n            return match;\n        });\n\n        return result;\n    }\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [IgxFilterDirective, IgxFilterPipe],\n    exports: [IgxFilterDirective, IgxFilterPipe],\n    imports: [CommonModule]\n})\nexport class IgxFilterModule {\n}\n","import { Directive, ElementRef, Input, NgModule, Optional, Inject, Self } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { EditorProvider } from '../../core/edit-provider';\n\n@Directive({\n    exportAs: 'igxFocus',\n    selector: '[igxFocus]'\n})\nexport class IgxFocusDirective {\n\n    private focusState = true;\n    /**\n     * Returns the state of the igxFocus.\n     * ```typescript\n     * @ViewChild('focusContainer', {read: IgxFocusDirective})\n     * public igxFocus: IgxFocusDirective;\n     * let isFocusOn = this.igxFocus.focused;\n     * ```\n     * @memberof IgxFocusDirective\n     */\n    @Input('igxFocus')\n    get focused(): boolean {\n        return this.focusState;\n    }\n    /**\n     * Sets the state of the igxFocus.\n     * ```html\n     * <igx-input-group >\n     *  <input #focusContainer igxInput [igxFocus]=\"true\"/>\n     * </igx-input-group>\n     * ```\n     * @memberof IgxFocusDirective\n     */\n    set focused(val: boolean) {\n        this.focusState = val;\n        this.trigger();\n    }\n    /**\n     * Gets the native element of the igxFocus.\n     * ```typescript\n     * @ViewChild('focusContainer', {read: IgxFocusDirective})\n     * public igxFocus: IgxFocusDirective;\n     * let igxFocusNativeElement = this.igxFocus.nativeElement;\n     * ```\n     * @memberof IgxFocusDirective\n     */\n    get nativeElement() {\n        if (this.comp && this.comp[0] && this.comp[0].getEditElement) {\n            return (this.comp[0] as EditorProvider).getEditElement();\n        }\n        return this.element.nativeElement;\n    }\n\n    constructor(private element: ElementRef, @Inject(NG_VALUE_ACCESSOR) @Self() @Optional() private comp?: any[]) { }\n    /**\n     * Triggers the igxFocus state.\n     * ```typescript\n     * @ViewChild('focusContainer', {read: IgxFocusDirective})\n     * public igxFocus: IgxFocusDirective;\n     * this.igxFocus.trigger();\n     * ```\n     * @memberof IgxFocusDirective\n     */\n    trigger() {\n        if (this.focusState) {\n            requestAnimationFrame(() => this.nativeElement.focus());\n        }\n    }\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [IgxFocusDirective],\n    exports: [IgxFocusDirective]\n})\nexport class IgxFocusModule { }\n","import { Directive, HostBinding, Input, NgModule } from '@angular/core';\n\n@Directive({\n    selector: '[igxLayout]'\n})\nexport class IgxLayoutDirective {\n    /**\n     * Sets the default flow direction of the container's children.\n     *\n     * Defaults to `rows`.\n     *\n     * ```html\n     *  <div\n     *   igxLayout\n     *   igxLayoutDir=\"row\">\n     *    <div igxFlex>1</div>\n     *    <div igxFlex>2</div>\n     *    <div igxFlex>3</div>\n     *  </div>\n     * ```\n     */\n    @Input('igxLayoutDir') public dir = 'row';\n\n    /**\n     * Defines the direction flex children are placed in the flex container.\n     *\n     * When set to `true`, the `rows` direction goes right to left and `columns` goes bottom to top.\n     *\n     * ```html\n     * <div\n     *   igxLayout\n     *   igxLayoutReverse=\"true\">\n     *    <div igxFlex>1</div>\n     *    <div igxFlex>2</div>\n     *    <div igxFlex>3</div>\n     * </div>\n     * ```\n     */\n    @Input('igxLayoutReverse') public reverse = false;\n\n    /**\n     * By default the immediate children will all try to fit onto one line.\n     *\n     * The default value `nowrap` sets this behavior.\n     *\n     * Other accepted values are `wrap` and `wrap-reverse`.\n     *\n     * ```html\n     * <div\n     *   igxLayout\n     *   igxLayoutDir=\"row\"\n     *   igxLayoutWrap=\"wrap\">\n     *    <div igxFlex igxFlexGrow=\"0\">1</div>\n     *    <div igxFlex igxFlexGrow=\"0\">2</div>\n     *    <div igxFlex igxFlexGrow=\"0\">3</div>\n     * </div>\n     * ```\n     */\n    @Input('igxLayoutWrap') public wrap = 'nowrap';\n\n    /**\n     * Defines the alignment along the main axis.\n     *\n     * Defaults to `flex-start` which packs the children toward the start line.\n     *\n     * Other possible values are `flex-end`, `center`, `space-between`, `space-around`.\n     *\n     * ```html\n     * <div\n     *   igxLayout\n     *   igxLayoutDir=\"column\"\n     *   igxLayoutJustify=\"space-between\">\n     *    <div>1</div>\n     *    <div>2</div>\n     *    <div>3</div>\n     * </div>\n     * ```\n     */\n    @Input('igxLayoutJustify') public justify = 'flex-start';\n\n    /**\n     * Defines the default behavior for how children are laid out along the corss axis of the current line.\n     *\n     * Defaults to `flex-start`.\n     *\n     * Other possible values are `flex-end`, `center`, `baseline`, and `stretch`.\n     *\n     * ```html\n     * <div\n     *   igxLayout\n     *   igxLayoutDir=\"column\"\n     *   igxLayoutItemAlign=\"start\">\n     *    <div igxFlex igxFlexGrow=\"0\">1</div>\n     *    <div igxFlex igxFlexGrow=\"0\">2</div>\n     *    <div igxFlex igxFlexGrow=\"0\">3</div>\n     * </div>\n     * ```\n     */\n    @Input('igxLayoutItemAlign') public itemAlign = 'stretch';\n\n    /**\n     * @hidden\n     */\n    @HostBinding('style.display') public display = 'flex';\n\n    /**\n     * @hidden\n     */\n    @HostBinding('style.flex-wrap') get flexwrap() { return this.wrap; }\n\n    /**\n     * @hidden\n     */\n    @HostBinding('style.justify-content') get justifycontent() { return this.justify; }\n\n    /**\n     * @hidden\n     */\n    @HostBinding('style.align-items') get align() { return this.itemAlign; }\n\n    /**\n     * @hidden\n     */\n    @HostBinding('style.flex-direction')\n    get direction() {\n        if (this.reverse) {\n            return (this.dir === 'row') ? 'row-reverse' : 'column-reverse';\n        }\n        return (this.dir === 'row') ? 'row' : 'column';\n    }\n}\n\n@Directive({\n    selector: '[igxFlex]'\n})\nexport class IgxFlexDirective {\n\n    /**\n     * Applies the `grow` attribute to an element that uses the directive.\n     *\n     * Default value is `1`.\n     *\n     * ```html\n     * <div>\n     *    <div igxFlex igxFlexGrow=\"0\">Content1</div>\n     *    <div igxFlex igxFlexGrow=\"1\">Content2</div>\n     *    <div igxFlex igxFlexGrow=\"0\">Content3</div>\n     * </div>\n     * ```\n     */\n    @Input('igxFlexGrow') public grow = 1;\n\n    /**\n     * Applies the `shrink` attribute to an element that uses the directive.\n     *\n     * Default value is `1`.\n     *\n     * ```html\n     * <div>\n     *    <div igxFlex igxFlexShrink=\"1\">Content1</div>\n     *    <div igxFlex igxFlexShrink=\"0\">Content2</div>\n     *    <div igxFlex igxFlexShrink=\"1\">Content3</div>\n     * </div>\n     * ```\n     */\n    @Input('igxFlexShrink') public shrink = 1;\n\n    /**\n     * Applies the directive to an element.\n     *\n     * Possible values include `igxFlexGrow`, `igxFlexShrink`, `igxFlexOrder`, `igxFlexBasis`.\n     *\n     * ```html\n     * <div igxFlex>Content</div>\n     * ```\n     */\n    @Input('igxFlex') public flex = '';\n\n    /**\n     * Applies the `order` attribute to an element that uses the directive.\n     *\n     * Default value is `0`.\n     *\n     * ```html\n     * <div>\n     *    <div igxFlex igxFlexOrder=\"1\">Content1</div>\n     *    <div igxFlex igxFlexOrder=\"0\">Content2</div>\n     *    <div igxFlex igxFlexOrder=\"2\">Content3</div>\n     * </div>\n     * ```\n     */\n    @Input('igxFlexOrder') public order = 0;\n\n    /**\n     * Applies the `flex-basis` attribute to an element that uses the directive.\n     *\n     * Default value is `auto`.\n     *\n     * Other possible values include `content`, `max-content`, `min-content`, `fit-content`.\n     *\n     * ```html\n     * <div igxFlex igxFlexBasis=\"fit-content\">Content</div>\n     * ```\n     */\n    @Input('igxFlexBasis') public basis = 'auto';\n\n    /**\n     * @hidden\n     */\n    @HostBinding('style.flex')\n    get style() {\n        if (this.flex) {\n            return `${this.flex}`;\n        }\n        return `${this.grow} ${this.shrink} ${this.basis}`;\n    }\n\n    /**\n     * @hidden\n     */\n    @HostBinding('style.order')\n    get itemorder() {\n        return this.order || 0;\n    }\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [IgxFlexDirective, IgxLayoutDirective],\n    exports: [IgxFlexDirective, IgxLayoutDirective]\n})\nexport class IgxLayoutModule { }\n","import { Injectable } from '@angular/core';\n\n/** @hidden */\nexport const MASK_FLAGS = ['C', '&', 'a', 'A', '?', 'L', '9', '0', '#'];\n\n/** @hidden */\nexport interface MaskOptions {\n    format: string;\n    promptChar: string;\n}\n\n/** @hidden */\nexport interface Replaced {\n    value: string;\n    end: number;\n}\n\n/** @hidden */\n@Injectable({\n    providedIn: 'root'\n})\nexport class MaskParsingService {\n    public applyMask(inputVal: string, maskOptions: MaskOptions): string {\n        let outputVal = '';\n        let value = '';\n        const mask: string = maskOptions.format;\n        const literals: Map<number, string> = this.getMaskLiterals(mask);\n        const literalKeys: number[] = Array.from(literals.keys());\n        const nonLiteralIndices: number[] = this.getNonLiteralIndices(mask, literalKeys);\n        const literalValues: string[] = Array.from(literals.values());\n\n        if (inputVal != null) {\n            value = inputVal.toString();\n        }\n\n        for (const maskSym of mask) {\n            outputVal += maskOptions.promptChar;\n        }\n\n        literals.forEach((val: string, key: number) => {\n            outputVal = this.replaceCharAt(outputVal, key, val);\n        });\n\n        if (!value) {\n            return outputVal;\n        }\n\n        const nonLiteralValues: string[] = this.getNonLiteralValues(value, literalValues);\n\n        for (let i = 0; i < nonLiteralValues.length; i++) {\n            const char = nonLiteralValues[i];\n            const isCharValid = this.validateCharOnPosition(char, nonLiteralIndices[i], mask);\n\n            if (!isCharValid && char !== maskOptions.promptChar) {\n                nonLiteralValues[i] = maskOptions.promptChar;\n            }\n        }\n\n        if (nonLiteralValues.length > nonLiteralIndices.length) {\n            nonLiteralValues.splice(nonLiteralIndices.length);\n        }\n\n        let pos = 0;\n        for (const nonLiteralValue of nonLiteralValues) {\n            const char = nonLiteralValue;\n            outputVal = this.replaceCharAt(outputVal, nonLiteralIndices[pos++], char);\n        }\n\n        return outputVal;\n    }\n\n    public parseValueFromMask(maskedValue: string, maskOptions: MaskOptions): string {\n        let outputVal = '';\n        const mask: string = maskOptions.format;\n        const literals: Map<number, string> = this.getMaskLiterals(mask);\n        const literalValues: string[] = Array.from(literals.values());\n\n        for (const val of maskedValue) {\n            if (literalValues.indexOf(val) === -1) {\n                if (val !== maskOptions.promptChar) {\n                    outputVal += val;\n                }\n            }\n        }\n\n        return outputVal;\n    }\n\n    public replaceInMask(maskedValue: string, value: string, maskOptions: MaskOptions, start: number, end: number): Replaced {\n        const literalsPositions: number[] = Array.from(this.getMaskLiterals(maskOptions.format).keys());\n        const chars = Array.from(value);\n        let cursor = start;\n        end = Math.min(end, maskedValue.length);\n\n        for (let i = start; i < end || (chars.length && i < maskedValue.length); i++) {\n            if (literalsPositions.indexOf(i) !== -1) {\n                if (chars[0] === maskedValue[i]) {\n                    cursor = i + 1;\n                    chars.shift();\n                }\n                continue;\n            }\n            if (chars[0]\n                && !this.validateCharOnPosition(chars[0], i, maskOptions.format)\n                && chars[0] !== maskOptions.promptChar) {\n                break;\n            }\n\n            let char = maskOptions.promptChar;\n            if (chars.length) {\n                cursor = i + 1;\n                char = chars.shift();\n            }\n            maskedValue = this.replaceCharAt(maskedValue, i, char);\n        }\n\n        return { value: maskedValue, end: cursor };\n    }\n\n    public replaceCharAt(strValue: string, index: number, char: string): string {\n        if (strValue !== undefined) {\n            return strValue.substring(0, index) + char + strValue.substring(index + 1);\n        }\n    }\n\n    /** Validates only non literal positions. */\n    private validateCharOnPosition(inputChar: string, position: number, mask: string): boolean {\n        let regex: RegExp;\n        let isValid: boolean;\n        const letterOrDigitRegEx = '[\\\\d\\\\u00C0-\\\\u1FFF\\\\u2C00-\\\\uD7FFa-zA-Z]';\n        const letterDigitOrSpaceRegEx = '[\\\\d\\\\u00C0-\\\\u1FFF\\\\u2C00-\\\\uD7FFa-zA-Z\\\\u0020]';\n        const letterRegEx = '[\\\\u00C0-\\\\u1FFF\\\\u2C00-\\\\uD7FFa-zA-Z]';\n        const letterSpaceRegEx = '[\\\\u00C0-\\\\u1FFF\\\\u2C00-\\\\uD7FFa-zA-Z\\\\u0020]';\n        const digitRegEx = '[\\\\d]';\n        const digitSpaceRegEx = '[\\\\d\\\\u0020]';\n        const digitSpecialRegEx = '[\\\\d-\\\\+]';\n\n        switch (mask.charAt(position)) {\n            case 'C':\n                isValid = inputChar !== '';\n                break;\n            case '&':\n                regex = new RegExp('[\\\\u0020]');\n                isValid = !regex.test(inputChar);\n                break;\n            case 'a':\n                regex = new RegExp(letterDigitOrSpaceRegEx);\n                isValid = regex.test(inputChar);\n                break;\n            case 'A':\n                regex = new RegExp(letterOrDigitRegEx);\n                isValid = regex.test(inputChar);\n                break;\n            case '?':\n                regex = new RegExp(letterSpaceRegEx);\n                isValid = regex.test(inputChar);\n                break;\n            case 'L':\n                regex = new RegExp(letterRegEx);\n                isValid = regex.test(inputChar);\n                break;\n            case '0':\n                regex = new RegExp(digitRegEx);\n                isValid = regex.test(inputChar);\n                break;\n            case '9':\n                regex = new RegExp(digitSpaceRegEx);\n                isValid = regex.test(inputChar);\n                break;\n            case '#':\n                regex = new RegExp(digitSpecialRegEx);\n                isValid = regex.test(inputChar);\n                break;\n            default: {\n                isValid = null;\n            }\n        }\n\n        return isValid;\n    }\n    private getMaskLiterals(mask: string): Map<number, string> {\n        const literals = new Map<number, string>();\n\n        for (let i = 0; i < mask.length; i++) {\n            const char = mask.charAt(i);\n            if (MASK_FLAGS.indexOf(char) === -1) {\n                literals.set(i, char);\n            }\n        }\n\n        return literals;\n    }\n    private getNonLiteralIndices(mask: string, literalKeys: number[]): number[] {\n        const nonLiteralsIndices: number[] = new Array();\n\n        for (let i = 0; i < mask.length; i++) {\n            if (literalKeys.indexOf(i) === -1) {\n                nonLiteralsIndices.push(i);\n            }\n        }\n\n        return nonLiteralsIndices;\n    }\n    private getNonLiteralValues(value: string, literalValues: string[]): string[] {\n        const nonLiteralValues: string[] = new Array();\n\n        for (const val of value) {\n            if (literalValues.indexOf(val) === -1) {\n                nonLiteralValues.push(val);\n            }\n        }\n\n        return nonLiteralValues;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n    Directive, ElementRef, EventEmitter, HostListener,\n    Output, PipeTransform, Renderer2,\n    Input, NgModule, OnInit, AfterViewChecked,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DeprecateProperty } from '../../core/deprecateDecorators';\nimport { MaskParsingService, MaskOptions } from './mask-parsing.service';\nimport { isIE, IBaseEventArgs, KEYCODES } from '../../core/utils';\n\nconst noop = () => { };\n\n@Directive({\n    providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: IgxMaskDirective, multi: true }],\n    selector: '[igxMask]',\n    exportAs: 'igxMask'\n})\nexport class IgxMaskDirective implements OnInit, AfterViewChecked, ControlValueAccessor {\n    /**\n     * Sets the input mask.\n     * ```html\n     * <input [igxMask] = \"'00/00/0000'\">\n     * ```\n     */\n    @Input('igxMask')\n    public mask: string;\n\n    /**\n     * Sets the character representing a fillable spot in the input mask.\n     * Default value is \"'_'\".\n     * ```html\n     * <input [promptChar] = \"'/'\">\n     * ```\n     */\n    @Input()\n    public promptChar = '_';\n\n    /**\n     * Specifies if the bound value includes the formatting symbols.\n     * ```html\n     * <input [includeLiterals] = \"true\">\n     * ```\n     */\n    @Input()\n    public includeLiterals: boolean;\n\n    /**\n     * Specifies a placeholder.\n     * ```html\n     * <input placeholder = \"enter text...\">\n     * ```\n     */\n    @DeprecateProperty('\"placeholder\" is deprecated, use native placeholder instead.')\n    public set placeholder(val: string) {\n        this.renderer.setAttribute(this.nativeElement, 'placeholder', val);\n    }\n\n    public get placeholder(): string {\n        return this.nativeElement.placeholder;\n    }\n\n    /**\n     * Specifies a pipe to be used on blur.\n     * ```html\n     * <input [displayValuePipe] = \"displayFormatPipe\">\n     * ```\n     */\n    @Input()\n    public displayValuePipe: PipeTransform;\n\n    /**\n     * Specifies a pipe to be used on focus.\n     * ```html\n     * <input [focusedValuePipe] = \"inputFormatPipe\">\n     * ```\n     */\n    @Input()\n    public focusedValuePipe: PipeTransform;\n\n    /**\n     * Emits an event each time the value changes.\n     * Provides `rawValue: string` and `formattedValue: string` as event arguments.\n     * ```html\n     * <input (onValueChange) = \"onValueChange(rawValue: string, formattedValue: string)\">\n     * ```\n     */\n    @Output()\n    public onValueChange = new EventEmitter<IMaskEventArgs>();\n\n    /** @hidden */\n    public get nativeElement(): HTMLInputElement {\n        return this.elementRef.nativeElement;\n    }\n\n    /** @hidden @internal; */\n    protected get inputValue(): string {\n        return this.nativeElement.value;\n    }\n\n    /** @hidden @internal */\n    protected set inputValue(val) {\n        this.nativeElement.value = val;\n    }\n\n    /** @hidden */\n    protected get maskOptions(): MaskOptions {\n        const format = this.mask || 'CCCCCCCCCC';\n        const promptChar = this.promptChar && this.promptChar.substring(0, 1);\n        return { format, promptChar };\n    }\n\n    /** @hidden */\n    protected get selectionStart(): number {\n        // Edge(classic) and FF don't select text on drop\n        return this.nativeElement.selectionStart === this.nativeElement.selectionEnd && this._hasDropAction ?\n            this.nativeElement.selectionEnd - this._droppedData.length :\n            this.nativeElement.selectionStart;\n    }\n\n    /** @hidden */\n    protected get selectionEnd(): number {\n        return this.nativeElement.selectionEnd;\n    }\n\n    /** @hidden */\n    protected get start(): number {\n        return this._start;\n    }\n\n    /** @hidden */\n    protected get end(): number {\n        return this._end;\n    }\n\n    private _end = 0;\n    private _start = 0;\n    private _key: number;\n    private _oldText = '';\n    private _dataValue = '';\n    private _focused = false;\n    private _droppedData: string;\n    private _hasDropAction: boolean;\n    private _stopPropagation: boolean;\n\n    private _onTouchedCallback: () => void = noop;\n    private _onChangeCallback: (_: any) => void = noop;\n\n    constructor(\n        protected elementRef: ElementRef,\n        protected maskParser: MaskParsingService,\n        protected renderer: Renderer2) { }\n\n    /** @hidden */\n    public ngOnInit(): void {\n        this.renderer.setAttribute(this.nativeElement, 'placeholder',\n            this.placeholder ? this.placeholder : this.maskOptions.format);\n    }\n\n    /**\n     * TODO: Remove after date/time picker integration refactor\n     * @hidden\n     */\n    public ngAfterViewChecked(): void {\n        this._oldText = this.inputValue;\n    }\n\n    /** @hidden */\n    @HostListener('keydown', ['$event'])\n    public onKeyDown(event): void {\n        const key = event.keyCode || event.charCode;\n        if (!key) { return; }\n\n        if (isIE() && this._stopPropagation) {\n            this._stopPropagation = false;\n        }\n\n        if ((key === KEYCODES.CTRL && key === KEYCODES.Z) || (key === KEYCODES.CTRL && key === KEYCODES.Y)) {\n            event.preventDefault();\n        }\n\n        this._key = key;\n        this._start = this.selectionStart;\n        this._end = this.selectionEnd;\n    }\n\n    /** @hidden */\n    @HostListener('input')\n    public onInputChanged(): void {\n        if (isIE() && this._stopPropagation) {\n            this._stopPropagation = false;\n            return;\n        }\n\n        if (this._hasDropAction) {\n            this._start = this.selectionStart;\n        }\n        if (this.inputValue.length < this._oldText.length && this._key === KEYCODES.INPUT_METHOD) {\n            // software keyboard input delete\n            this._key = KEYCODES.BACKSPACE;\n        }\n\n        let valueToParse = '';\n        switch (this._key) {\n            case KEYCODES.DELETE:\n                this._end = this._start === this._end ? ++this._end : this._end;\n                break;\n            case KEYCODES.BACKSPACE:\n                this._start = this.selectionStart;\n                break;\n            default:\n                valueToParse = this.inputValue.substring(this._start, this.selectionEnd);\n                break;\n        }\n\n        const replacedData = this.maskParser.replaceInMask(this._oldText, valueToParse, this.maskOptions, this._start, this._end);\n        this.inputValue = replacedData.value;\n        if (this._key === KEYCODES.BACKSPACE) { replacedData.end = this._start; }\n        this.setSelectionRange(replacedData.end);\n\n        const rawVal = this.maskParser.parseValueFromMask(this.inputValue, this.maskOptions);\n        this._dataValue = this.includeLiterals ? this.inputValue : rawVal;\n        this._onChangeCallback(this._dataValue);\n\n        this.onValueChange.emit({ rawValue: rawVal, formattedValue: this.inputValue });\n\n        this.afterInput();\n    }\n\n    /** @hidden */\n    @HostListener('paste')\n    public onPaste(): void {\n        this._oldText = this.inputValue;\n        this._start = this.selectionStart;\n    }\n\n    /** @hidden */\n    @HostListener('focus')\n    public onFocus(): void {\n        this._focused = true;\n        this.showMask(this._dataValue);\n    }\n\n    /** @hidden */\n    @HostListener('blur', ['$event.target.value'])\n    public onBlur(value: string): void {\n        this._focused = false;\n        this.showDisplayValue(value);\n        this._onTouchedCallback();\n    }\n\n    /** @hidden */\n    @HostListener('dragenter')\n    public onDragEnter(): void {\n        if (!this._focused) {\n            this.showMask(this._dataValue);\n        }\n    }\n\n    /** @hidden */\n    @HostListener('dragleave')\n    public onDragLeave(): void {\n        if (!this._focused) {\n            this.showDisplayValue(this.inputValue);\n        }\n    }\n\n    /** @hidden */\n    @HostListener('drop', ['$event'])\n    public onDrop(event: DragEvent): void {\n        this._hasDropAction = true;\n        this._droppedData = event.dataTransfer.getData('text');\n    }\n\n    /** @hidden */\n    protected showMask(value: string) {\n        if (this.focusedValuePipe) {\n            if (isIE()) {\n                this._stopPropagation = true;\n            }\n            // TODO(D.P.): focusedValuePipe should be deprecated or force-checked to match mask format\n            this.inputValue = this.focusedValuePipe.transform(value);\n        } else {\n            this.inputValue = this.maskParser.applyMask(this.inputValue, this.maskOptions);\n        }\n\n        this._oldText = this.inputValue;\n    }\n\n    /** @hidden */\n    protected setSelectionRange(start: number, end: number = start): void {\n        this.nativeElement.setSelectionRange(start, end);\n    }\n\n    /** @hidden */\n    protected afterInput() {\n        this._oldText = this.inputValue;\n        this._hasDropAction = false;\n        this._start = 0;\n        this._end = 0;\n        this._key = null;\n    }\n\n    private showDisplayValue(value: string) {\n        if (this.displayValuePipe) {\n            this.inputValue = this.displayValuePipe.transform(value);\n        } else if (value === this.maskParser.applyMask(null, this.maskOptions)) {\n            this.inputValue = '';\n        }\n    }\n\n    /** @hidden */\n    public writeValue(value: string): void {\n        if (this.promptChar && this.promptChar.length > 1) {\n            this.maskOptions.promptChar = this.promptChar.substring(0, 1);\n        }\n\n        this.inputValue = value ? this.maskParser.applyMask(value, this.maskOptions) : '';\n        if (this.displayValuePipe) {\n            this.inputValue = this.displayValuePipe.transform(this.inputValue);\n        }\n\n        this._dataValue = this.includeLiterals ? this.inputValue : value;\n\n        this.onValueChange.emit({ rawValue: value, formattedValue: this.inputValue });\n    }\n\n    /** @hidden */\n    public registerOnChange(fn: (_: any) => void): void { this._onChangeCallback = fn; }\n\n    /** @hidden */\n    public registerOnTouched(fn: () => void): void { this._onTouchedCallback = fn; }\n}\n\n/**\n * The IgxMaskModule provides the {@link IgxMaskDirective} inside your application.\n */\nexport interface IMaskEventArgs extends IBaseEventArgs {\n    rawValue: string;\n    formattedValue: string;\n}\n\n/** @hidden */\n@NgModule({\n    declarations: [IgxMaskDirective],\n    exports: [IgxMaskDirective],\n    imports: [CommonModule]\n})\nexport class IgxMaskModule { }\n","import {\n    Component,\n    EventEmitter,\n    HostBinding,\n    Input,\n    Output,\n    ViewChild,\n    ElementRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { isIE, IBaseEventArgs } from '../core/utils';\nimport { EditorProvider } from '../core/edit-provider';\n\nexport interface IChangeRadioEventArgs extends IBaseEventArgs {\n    value: any;\n    radio: IgxRadioComponent;\n}\n\nexport enum RadioLabelPosition {\n    BEFORE = 'before',\n    AFTER = 'after'\n}\n\nlet nextId = 0;\nconst noop = () => { };\n/**\n * **Ignite UI for Angular Radio Button** -\n * [Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/radio_button.html)\n *\n * The Ignite UI Radio Button allows the user to select a single option from an available set of options that are listed side by side.\n *\n * Example:\n * ```html\n * <igx-radio>\n *   Simple radio button\n * </igx-radio>\n * ```\n */\n@Component({\n    providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: IgxRadioComponent, multi: true }],\n    selector: 'igx-radio',\n    templateUrl: 'radio.component.html'\n})\n\nexport class IgxRadioComponent implements ControlValueAccessor, EditorProvider {\n    /**\n     * Returns reference to native radio element.\n     * ```typescript\n     * let radioElement =  this.radio.nativeRadio;\n     * ```\n     * @memberof IgxSwitchComponent\n     */\n    @ViewChild('radio', { static: true }) public nativeRadio: ElementRef;\n    /**\n     * Returns reference to native label element.\n     * ```typescript\n     * let labelElement =  this.radio.nativeLabel;\n     * ```\n     * @memberof IgxSwitchComponent\n     */\n    @ViewChild('nativeLabel', { static: true }) public nativeLabel;\n    /**\n     * Returns reference to the label placeholder element.\n     * ```typescript\n     * let labelPlaceholder =  this.radio.placeholderLabel;\n     * ```\n     * @memberof IgxSwitchComponent\n     */\n    @ViewChild('placeholderLabel', { static: true }) public placeholderLabel;\n\n    /**\n     * Sets/gets the `id` of the radio component.\n     * If not set, the `id` of the first radio component will be `\"igx-radio-0\"`.\n     * ```html\n     * <igx-radio id = \"my-first-radio\"></igx-radio>\n     * ```\n     * ```typescript\n     * let radioId =  this.radio.id;\n     * ```\n     * @memberof IgxRadioComponent\n     */\n    @HostBinding('attr.id')\n    @Input() public id = `igx-radio-${nextId++}`;\n    /**\n     * Sets/gets the id of the `label` element in the radio component.\n     * If not set, the id of the `label` in the first radio component will be `\"igx-radio-0-label\"`.\n     * ```html\n     * <igx-radio labelId = \"Label1\"></igx-radio>\n     * ```\n     * ```typescript\n     * let labelId =  this.radio.labelId;\n     * ```\n     * @memberof IgxRadioComponent\n     */\n    @Input() public labelId = `${this.id}-label`;\n    /**\n     * Sets/gets the position of the `label` in the radio component.\n     * If not set, `labelPosition` will have value `\"after\"`.\n     * ```html\n     * <igx-radio labelPosition = \"before\"></igx-radio>\n     * ```\n     * ```typescript\n     * let labelPosition =  this.radio.labelPosition;\n     * ```\n     * @memberof IgxRadioComponent\n     */\n    @Input() public labelPosition: RadioLabelPosition | string = 'after';\n    /**\n     * Sets/gets the `value` attribute.\n     * ```html\n     * <igx-radio [value] = \"'radioButtonValue'\"></igx-radio>\n     * ```\n     * ```typescript\n     * let value =  this.radio.value;\n     * ```\n     * @memberof IgxRadioComponent\n     */\n    @Input() public value: any;\n    /**\n     * Sets/gets the `name` attribute of the radio component.\n     * ```html\n     * <igx-radio name = \"Radio1\"></igx-radio>\n     *  ```\n     * ```typescript\n     * let name =  this.radio.name;\n     * ```\n     * @memberof IgxRadioComponent\n     */\n    @Input() public name: string;\n    /**\n     * Sets the value of the `tabindex` attribute.\n     * ```html\n     * <igx-radio [tabindex] = \"1\"></igx-radio>\n     * ```\n     * ```typescript\n     * let tabIndex =  this.radio.tabindex;\n     * ```\n     * @memberof IgxRadioComponent\n     */\n    @Input() public tabindex: number = null;\n    /**\n     * Enables/disables the ripple effect on the radio button..\n     * If not set, the `disableRipple` will have value `false`.\n     * ```html\n     * <igx-radio [disableRipple] = \"true\"></igx-radio>\n     * ```\n     * ```typescript\n     * let isDisabledRipple =  this.radio.disableRipple;\n     * ```\n     * @memberof IgxRadioComponent\n     */\n    @Input() public disableRipple = false;\n    /**\n     * Sets/gets whether the radio button is required.\n     * If not set, `required` will have value `false`.\n     * ```html\n     * <igx-radio [required] = \"true\"></igx-radio>\n     * ```\n     * ```typescript\n     * let isRequired =  this.radio.required;\n     * ```\n     * @memberof IgxRadioComponent\n     */\n    @Input() public required = false;\n    /**\n     * Sets/gets the `aria-labelledby` attribute of the radio component.\n     * If not set, the `aria-labelledby` will be equal to the value of `labelId` attribute.\n     * ```html\n     * <igx-radio aria-labelledby = \"Radio1\"></igx-radio>\n     * ```\n     * ```typescript\n     * let ariaLabelledBy = this.radio.ariaLabelledBy;\n     * ```\n     * @memberof IgxRadioComponent\n     */\n    @Input('aria-labelledby')\n    public ariaLabelledBy = this.labelId;\n    /**\n     * Sets/gets the `aria-label` attribute of the radio component.\n     * ```html\n     * <igx-radio aria-label = \"Radio1\"></igx-radio>\n     * ```\n     * ```typescript\n     * let ariaLabel =  this.radio.ariaLabel;\n     * ```\n     * @memberof IgxRadioComponent\n     */\n    @Input('aria-label')\n    public ariaLabel: string | null = null;\n    /**\n     * An event that is emitted after the radio `value` is changed.\n     * Provides references to the `IgxRadioComponent` and the `value` property as event arguments.\n     * @memberof IgxRadioComponent\n     */\n    @Output()\n    readonly change: EventEmitter<IChangeRadioEventArgs> = new EventEmitter<IChangeRadioEventArgs>();\n    /**\n     * Returns the class of the radio component.\n     * ```typescript\n     * let radioClass = this.radio.cssClass;\n     * ```\n     * @memberof IgxRadioComponent\n     */\n    @HostBinding('class.igx-radio')\n    public cssClass = 'igx-radio';\n    /**\n     * Sets/gets  the `checked` attribute.\n     * Default value is `false`.\n     * ```html\n     * <igx-radio [checked] = \"true\"></igx-radio>\n     * ```\n     * ```typescript\n     * let isChecked =  this.radio.checked;\n     * ```\n     * @memberof IgxRadioComponent\n     */\n    @HostBinding('class.igx-radio--checked')\n    @Input() public checked = false;\n    /**\n     * Sets/gets  the `disabled` attribute.\n     * Default value is `false`.\n     * ```html\n     * <igx-radio [disabled] = \"true\"></igx-radio>\n     * ```\n     * ```typescript\n     * let isDisabled =  this.radio.disabled;\n     * ```\n     * @memberof IgxRadioComponent\n     */\n    @HostBinding('class.igx-radio--disabled')\n    @Input() public disabled = false;\n    /**\n     * Sets/gets whether the radio component is on focus.\n     * Default value is `false`.\n     * ```typescript\n     * this.radio.focus = true;\n     * ```\n     * ```typescript\n     * let isFocused =  this.radio.focused;\n     * ```\n     * @memberof IgxRadioComponent\n     */\n    @HostBinding('class.igx-radio--focused')\n    public focused = false;\n    /**\n     * @hidden\n     */\n    public inputId = `${this.id}-input`;\n    /**\n     * @hidden\n     */\n    protected _value: any = null;\n\n    constructor() { }\n    /**\n     * @hidden\n     */\n    private _onTouchedCallback: () => void = noop;\n    /**\n     * @hidden\n     */\n    private _onChangeCallback: (_: any) => void = noop;\n    /**\n     * @hidden\n     */\n    public _onRadioChange(event) {\n        event.stopPropagation();\n    }\n    /**\n     * @hidden\n     */\n    public _onRadioClick(event) {\n        event.stopPropagation();\n        this.select();\n\n        if (isIE()) {\n            this.nativeRadio.nativeElement.blur();\n        }\n    }\n    /**\n     * @hidden\n     */\n    public _onLabelClick() {\n        this.select();\n    }\n    /**\n     * Selects the current radio button.\n     * ```typescript\n     * this.radio.select();\n     * ```\n     * @memberof IgxRadioComponent\n     */\n    public select() {\n        if (this.disabled) {\n            return;\n        }\n\n        this.checked = true;\n        this.focused = false;\n        this.change.emit({ value: this.value, radio: this });\n        this._onChangeCallback(this.value);\n    }\n    /**\n     * Checks whether the provided value is consistent to the current radio button.\n     * If it is, the checked attribute will have value `true`;\n     * ```typescript\n     * this.radio.writeValue('radioButtonValue');\n     * ```\n     */\n    public writeValue(value: any) {\n        this._value = value;\n        this.checked = (this._value === this.value);\n    }\n    /** @hidden */\n    getEditElement() {\n        return this.nativeRadio.nativeElement;\n    }\n    /**\n     * @hidden\n     */\n    public get labelClass(): string {\n        switch (this.labelPosition) {\n            case RadioLabelPosition.BEFORE:\n                return `${this.cssClass}__label--before`;\n            case RadioLabelPosition.AFTER:\n            default:\n                return `${this.cssClass}__label`;\n        }\n    }\n    /**\n     * @hidden\n     */\n    public onFocus() {\n        this.focused = true;\n    }\n    /**\n     * @hidden\n     */\n    public onBlur() {\n        this.focused = false;\n        this._onTouchedCallback();\n    }\n    /**\n     * @hidden\n     */\n    public registerOnChange(fn: (_: any) => void) { this._onChangeCallback = fn; }\n    /**\n     * @hidden\n     */\n    public registerOnTouched(fn: () => void) { this._onTouchedCallback = fn; }\n}\n","import { Directive, ElementRef, HostListener, Input, NgModule, NgZone, Renderer2 } from '@angular/core';\nimport { AnimationBuilder, style, animate } from '@angular/animations';\n\n@Directive({\n    selector: '[igxRipple]'\n})\nexport class IgxRippleDirective {\n    /**\n     * Sets/gets the ripple target.\n     * ```html\n     * <div  #rippleContainer class=\"div-1\" igxRipple [igxRippleTarget] = \"'.div-1'\"></div>\n     * ```\n     * ```typescript\n     * @ViewChild('rippleContainer', {read: IgxRippleDirective})\n     * public ripple: IgxRippleDirective;\n     * let rippleTarget = this.ripple.rippleTarget;\n     * ```\n     * Can set the ripple to activate on a child element inside the parent where igxRipple is defined.\n     * ```html\n     * <div #rippleContainer [igxRippleTarget] = \"'#child\"'>\n     *  <button id=\"child\">Click</button>\n     * </div>\n     * ```\n     * @memberof IgxRippleDirective\n     */\n    @Input('igxRippleTarget')\n    public rippleTarget = '';\n    /**\n     * Sets/gets the ripple color.\n     * ```html\n     * <button #rippleContainer [igxRipple] = \"'red'\" ></button>\n     * ```\n     * ```typescript\n     * @ViewChild('rippleContainer', {read: IgxRippleDirective})\n     * public ripple: IgxRippleDirective;\n     * let rippleColor = this.ripple.rippleColor;\n     * ```\n     * @memberof IgxRippleDirective\n     */\n    @Input('igxRipple')\n    public rippleColor: string;\n    /**\n     * Sets/gets the ripple duration(in milliseconds).\n     * Default value is `600`.\n     * ```html\n     * <button #rippleContainer igxRipple [igxRippleDuration] = \"800\"></button>\n     * ```\n     * ```typescript\n     * @ViewChild('rippleContainer', {read: IgxRippleDirective})\n     * public ripple: IgxRippleDirective;\n     * let rippleDuration = this.ripple.rippleDuration;\n     * ```\n     * @memberof IgxRippleDirective\n     */\n    @Input('igxRippleDuration')\n    public rippleDuration = 600;\n    /**\n     * Enables/disables the ripple to be centered.\n     * ```html\n     * <button #rippleContainer igxRipple [igxRippleCentered] = \"true\"></button>\n     * ```\n     * @memberof IgxRippleDirective\n     */\n    @Input('igxRippleCentered') set centered(value: boolean) {\n        this._centered = value || this.centered;\n    }\n    /**\n     * Sets/gets whether the ripple is disabled.\n     * Default value is `false`.\n     * ```html\n     * <button #rippleContainer igxRipple [igxRippleDisabled] = \"true\"></button>\n     * ```\n     * ```typescript\n     * @ViewChild('rippleContainer', {read: IgxRippleDirective})\n     * public ripple: IgxRippleDirective;\n     * let isRippleDisabled = this.ripple.rippleDisabled;\n     * ```\n     * @memberof IgxRippleDirective\n     */\n    @Input('igxRippleDisabled')\n    public rippleDisabled = false;\n\n    protected get nativeElement(): HTMLElement {\n        return this.elementRef.nativeElement;\n    }\n\n    private rippleElementClass = 'igx-ripple__inner';\n    private rippleHostClass = 'igx-ripple';\n    private _centered = false;\n    private animationQueue = [];\n\n    constructor(\n        protected builder: AnimationBuilder,\n        protected elementRef: ElementRef,\n        protected renderer: Renderer2,\n        private zone: NgZone) { }\n    /**\n     * @hidden\n     */\n    @HostListener('mousedown', ['$event'])\n    public onMouseDown(event) {\n        this.zone.runOutsideAngular(() => this._ripple(event));\n    }\n\n    private setStyles(rippleElement: HTMLElement, styleParams: any) {\n        this.renderer.addClass(rippleElement, this.rippleElementClass);\n        this.renderer.setStyle(rippleElement, 'width', `${styleParams.radius}px`);\n        this.renderer.setStyle(rippleElement, 'height', `${styleParams.radius}px`);\n        this.renderer.setStyle(rippleElement, 'top', `${styleParams.top}px`);\n        this.renderer.setStyle(rippleElement, 'left', `${styleParams.left}px`);\n        if (this.rippleColor) {\n            this.renderer.setStyle(rippleElement, 'background', this.rippleColor);\n        }\n    }\n\n    private _ripple(event) {\n        if (this.rippleDisabled) {\n            return;\n        }\n\n        const target = (this.rippleTarget ? this.nativeElement.querySelector(this.rippleTarget) || this.nativeElement : this.nativeElement);\n\n        const rectBounds = target.getBoundingClientRect();\n        const radius = Math.max(rectBounds.width, rectBounds.height);\n        let left = Math.round(event.clientX - rectBounds.left - radius / 2);\n        let top = Math.round(event.clientY - rectBounds.top - radius / 2);\n\n        if (this._centered) {\n            left = top = 0;\n        }\n\n        const dimensions = {\n            radius,\n            top,\n            left\n        };\n\n        const rippleElement = this.renderer.createElement('span');\n\n        this.setStyles(rippleElement, dimensions);\n        this.renderer.addClass(target, this.rippleHostClass);\n        this.renderer.appendChild(target, rippleElement);\n\n        const animation = this.builder.build([\n            style({ opacity: 0.5, transform: 'scale(.3)' }),\n            animate(this.rippleDuration, style({ opacity: 0, transform: 'scale(2)' }))\n        ]).create(rippleElement);\n\n        this.animationQueue.push(animation);\n\n        animation.onDone(() => {\n            this.animationQueue.splice(this.animationQueue.indexOf(animation), 1);\n            target.removeChild(rippleElement);\n            if (this.animationQueue.length < 1) {\n                this.renderer.removeClass(target, this.rippleHostClass);\n            }\n        });\n\n        animation.play();\n\n    }\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [IgxRippleDirective],\n    exports: [IgxRippleDirective]\n})\nexport class IgxRippleModule { }\n","import {\n    Directive,\n    NgModule,\n    Input,\n    QueryList,\n    Output,\n    EventEmitter,\n    AfterContentInit,\n    ContentChildren,\n    OnDestroy,\n    HostBinding\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IgxRadioComponent, RadioLabelPosition, IChangeRadioEventArgs } from '../../radio/radio.component';\nimport { IgxRippleModule } from '../ripple/ripple.directive';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\nconst noop = () => { };\nlet nextId = 0;\n\n/**\n * Radio group directive renders set of radio buttons.\n *\n * @igxModule IgxRadioModule\n *\n * @igxTheme igx-radio-theme\n *\n * @igxKeywords radiogroup, radio, button, input\n *\n * @igxGroup Data Entry & Display\n *\n * @remarks\n * The Ignite UI Radio Group allows the user to select a single option from an available set of options that are listed side by side.\n *\n * @example:\n * ```html\n * <igx-radio-group name=\"radioGroup\">\n *   <igx-radio *ngFor=\"let item of ['Foo', 'Bar', 'Baz']\" value=\"{{item}}\">\n *      {{item}}\n *   </igx-radio>\n * </igx-radio-group>\n * ```\n */\n@Directive({\n    exportAs: 'igxRadioGroup',\n    selector: 'igx-radio-group, [igxRadioGroup]',\n    providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: IgxRadioGroupDirective, multi: true }]\n})\nexport class IgxRadioGroupDirective implements AfterContentInit, ControlValueAccessor, OnDestroy {\n    /**\n     * Returns reference to the child radio buttons.\n     *\n     * @example\n     * ```typescript\n     * let radioButtons =  this.radioGroup.radioButtons;\n     * ```\n     */\n    @ContentChildren(IgxRadioComponent, { descendants: true }) public radioButtons: QueryList<IgxRadioComponent>;\n\n    /**\n     * Sets/gets the `value` attribute.\n     *\n     * @example\n     * ```html\n     * <igx-radio-group [value] = \"'radioButtonValue'\"></igx-radio-group>\n     * ```\n     */\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this._value !== newValue) {\n            this._value = newValue;\n            this._selectRadioButton();\n        }\n    }\n\n    /**\n     * Sets/gets the `name` attribute of the radio group component. All child radio buttons inherits this name.\n     *\n     * @example\n     * ```html\n     * <igx-radio-group name = \"Radio1\"></igx-radio-group>\n     *  ```\n     */\n    @Input()\n    get name(): string { return this._name; }\n    set name(newValue: string) {\n        if (this._name !== newValue) {\n            this._name = newValue;\n            this._setRadioButtonNames();\n        }\n    }\n\n    /**\n     * Sets/gets whether the radio group is required.\n     *\n     * @remarks\n     * If not set, `required` will have value `false`.\n     *\n     * @example\n     * ```html\n     * <igx-radio-group [required] = \"true\"></igx-radio-group>\n     * ```\n     */\n    @Input()\n    get required(): boolean { return this._required; }\n    set required(newValue: boolean) {\n        if (this._required !== newValue) {\n            this._required = newValue;\n            this._setRadioButtonsRequired();\n        }\n    }\n\n    /**\n     * An @Input property that allows you to disable the radio group. By default it's false.\n     *\n     * @example\n     *  ```html\n     * <igx-radio-group [disabled]=\"true\"></igx-radio-group>\n     * ```\n     */\n    @Input()\n    get disabled(): boolean { return this._disabled; }\n    set disabled(newValue: boolean) {\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this._disableRadioButtons();\n        }\n    }\n\n    /**\n     * Sets/gets the position of the `label` in the child radio buttons.\n     *\n     * @remarks\n     * If not set, `labelPosition` will have value `\"after\"`.\n     *\n     * @example\n     * ```html\n     * <igx-radio-group labelPosition = \"before\"></igx-radio-group>\n     * ```\n     */\n    @Input()\n    get labelPosition(): RadioLabelPosition | string { return this._labelPosition; }\n    set labelPosition(newValue: RadioLabelPosition | string) {\n        if (this._labelPosition !== newValue) {\n            this._labelPosition = newValue === RadioLabelPosition.BEFORE ? RadioLabelPosition.BEFORE : RadioLabelPosition.AFTER;\n            this._setRadioButtonLabelPosition();\n        }\n    }\n\n    /**\n     * Sets/gets the selected child radio button.\n     *\n     * @example\n     * ```typescript\n     * let selectedButton = this.radioGroup.selected;\n     * this.radioGroup.selected = selectedButton;\n     * ```\n     */\n    @Input()\n    get selected() { return this._selected; }\n    set selected(selected: IgxRadioComponent | null) {\n        if (this._selected !== selected) {\n            this._selected = selected;\n            this.value = selected ? selected.value : null;\n        }\n    }\n\n    /**\n     * An event that is emitted after the radio group `value` is changed.\n     *\n     * @remarks\n     * Provides references to the selected `IgxRadioComponent` and the `value` property as event arguments.\n     *\n     * @example\n     * ```html\n     * <igx-radio-group (change)=\"handler($event)\"></igx-radio-group>\n     * ```\n     */\n    @Output()\n    readonly change: EventEmitter<IChangeRadioEventArgs> = new EventEmitter<IChangeRadioEventArgs>();\n\n    /**\n     * The css class applied to the component.\n     * @hidden\n     * @internal\n     */\n    @HostBinding('class.igx-radio-group')\n    public cssClass = 'igx-radio-group';\n\n    /**\n     * @hidden\n     * @internal\n     */\n    private _onChangeCallback: (_: any) => void = noop;\n    /**\n     * @hidden\n     * @internal\n     */\n    private _name = `igx-radio-group-${nextId++}`;\n    /**\n     * @hidden\n     * @internal\n     */\n    private _value: any = null;\n    /**\n     * @hidden\n     * @internal\n     */\n    private _selected: IgxRadioComponent | null = null;\n    /**\n     * @hidden\n     * @internal\n     */\n    private _isInitialized = false;\n    /**\n     * @hidden\n     * @internal\n     */\n    private _labelPosition: RadioLabelPosition | string = 'after';\n    /**\n     * @hidden\n     * @internal\n     */\n    private _disabled = false;\n    /**\n     * @hidden\n     * @internal\n     */\n    private _required = false;\n    /**\n     * @hidden\n     * @internal\n     */\n    private destroy$ = new Subject<boolean>();\n\n    ngAfterContentInit() {\n        // The initial value can possibly be set by NgModel and it is possible that\n        // the OnInit of the NgModel occurs after the OnInit of this class.\n        this._isInitialized = true;\n\n        setTimeout(() => { this._initRadioButtons(); });\n    }\n\n    /**\n     * Sets the \"checked\" property value on the radio input element.\n     *\n     * @remarks\n     * Checks whether the provided value is consistent to the current radio button.\n     * If it is, the checked attribute will have value `true` and selected property will contain the selected `IgxRadioComponent`.\n     *\n     * @example\n     * ```typescript\n     * this.radioGroup.writeValue('radioButtonValue');\n     * ```\n     */\n    public writeValue(value: any) {\n        this.value = value;\n    }\n\n    /**\n     * Registers a function called when the control value changes.\n     *\n     * @hidden\n     * @internal\n     */\n    public registerOnChange(fn: (_: any) => void) { this._onChangeCallback = fn; }\n\n    /**\n     * Registers a function called when the control is touched.\n     *\n     * @hidden\n     * @internal\n     */\n    public registerOnTouched(fn: () => void) {\n        if (this.radioButtons) {\n            this.radioButtons.forEach((button) => {\n                button.registerOnTouched(fn);\n            });\n        }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public ngOnDestroy(): void {\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    private _initRadioButtons() {\n        if (this.radioButtons) {\n            const props = { name: this._name, labelPosition: this._labelPosition, disabled: this._disabled, required: this._required };\n            this.radioButtons.forEach((button) => {\n                Object.assign(button, props);\n\n                if (button.value === this._value) {\n                    button.checked = true;\n                    this._selected = button;\n                }\n\n                button.change.pipe(takeUntil(this.destroy$)).subscribe((ev) => this._selectedRadioButtonChanged(ev));\n            });\n        }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    private _selectedRadioButtonChanged(args: IChangeRadioEventArgs) {\n        if (this._selected !== args.radio) {\n            if (this._selected) {\n                this._selected.checked = false;\n            }\n            this._selected = args.radio;\n        }\n\n        this._value = args.value;\n\n        if (this._isInitialized) {\n            this.change.emit(args);\n            this._onChangeCallback(this.value);\n        }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    private _setRadioButtonNames() {\n        if (this.radioButtons) {\n            this.radioButtons.forEach((button) => {\n                button.name = this._name;\n            });\n        }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    private _selectRadioButton() {\n        if (this.radioButtons) {\n            this.radioButtons.forEach((button) => {\n                if (!this._value) {\n                    // no value - uncheck all radio buttons\n                    if (button.checked) {\n                        button.checked = false;\n                    }\n                } else {\n                    if (this._value === button.value) {\n                        // selected button\n                        if (this._selected !== button) {\n                            this._selected = button;\n                        }\n\n                        if (!button.checked) {\n                            button.select();\n                        }\n                    } else {\n                        // non-selected button\n                        if (button.checked) {\n                            button.checked = false;\n                        }\n                    }\n                }\n            });\n        }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    private _setRadioButtonLabelPosition() {\n        if (this.radioButtons) {\n            this.radioButtons.forEach((button) => {\n                button.labelPosition = this._labelPosition;\n            });\n        }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    private _disableRadioButtons() {\n        if (this.radioButtons) {\n            this.radioButtons.forEach((button) => {\n                button.disabled = this._disabled;\n            });\n        }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    private _setRadioButtonsRequired() {\n        if (this.radioButtons) {\n            this.radioButtons.forEach((button) => {\n                button.required = this._required;\n            });\n        }\n    }\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [IgxRadioGroupDirective, IgxRadioComponent],\n    exports: [IgxRadioGroupDirective, IgxRadioComponent],\n    imports: [IgxRippleModule]\n})\nexport class IgxRadioModule { }\n","import {\n    AfterViewInit,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Input,\n    NgModule,\n    OnChanges,\n    OnDestroy,\n    Renderer2,\n    SimpleChanges,\n    AfterViewChecked,\n} from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { DeprecateProperty } from '../../core/deprecateDecorators';\nimport { compareMaps } from '../../core/utils';\n\ninterface ISearchInfo {\n    searchedText: string;\n    content: string;\n    matchCount: number;\n    caseSensitive: boolean;\n    exactMatch: boolean;\n}\n\n/**\n * An interface describing information for the active highlight.\n */\nexport interface IActiveHighlightInfo {\n    /**\n     * The row of the highlight.\n     */\n    row?: any;\n    /**\n     * The column of the highlight.\n     */\n    column?: any;\n    /**\n     * The index of the highlight.\n     */\n    index: number;\n    /**\n     * Additional, custom checks to perform prior an element highlighting.\n     */\n    metadata?: Map<string, any>;\n}\n\n@Directive({\n    selector: '[igxTextHighlight]'\n})\nexport class IgxTextHighlightDirective implements AfterViewInit, AfterViewChecked, OnDestroy, OnChanges {\n    private static onActiveElementChanged = new EventEmitter<string>();\n    public static highlightGroupsMap = new Map<string, IActiveHighlightInfo>();\n\n    private _lastSearchInfo: ISearchInfo;\n    private _div = null;\n    private _observer: MutationObserver = null;\n    private _nodeWasRemoved = false;\n    private _forceEvaluation = false;\n    private _activeElementIndex = -1;\n    private _valueChanged: boolean;\n    private _defaultCssClass = 'igx-highlight';\n    private _defaultActiveCssClass = 'igx-highlight--active';\n\n    /**\n     * Determines the `CSS` class of the highlight elements.\n     * This allows the developer to provide custom `CSS` to customize the highlight.\n     *\n     * ```html\n     * <div\n     *   igxTextHighlight\n     *   [cssClass]=\"myClass\">\n     * </div>\n     * ```\n     */\n    @Input('cssClass')\n    public cssClass: string;\n\n    /**\n     * Determines the `CSS` class of the active highlight element.\n     * This allows the developer to provide custom `CSS` to customize the highlight.\n     *\n     * ```html\n     * <div\n     *   igxTextHighlight\n     *   [activeCssClass]=\"activeHighlightClass\">\n     * </div>\n     * ```\n     */\n    @Input('activeCssClass')\n    public activeCssClass: string;\n\n    /**\n     * @hidden\n     */\n    @Input('containerClass')\n    public containerClass: string;\n\n    /**\n     * Identifies the highlight within a unique group.\n     * This allows it to have several different highlight groups,\n     * with each of them having their own active highlight.\n     *\n     * ```html\n     * <div\n     *   igxTextHighlight\n     *   [groupName]=\"myGroupName\">\n     * </div>\n     * ```\n     */\n    @Input('groupName')\n    public groupName = '';\n\n    private _value = '';\n\n    /**\n     * The underlying value of the element that will be highlighted.\n     *\n     * ```typescript\n     * // get\n     * const elementValue = this.textHighlight.value;\n     * ```\n     *\n     * ```html\n     * <!--set-->\n     * <div\n     *   igxTextHighlight\n     *   [value]=\"newValue\">\n     * </div>\n     * ```\n     */\n    @Input('value')\n    public get value(): any {\n        return this._value;\n    }\n    public set value(value: any) {\n        if (value === undefined || value === null) {\n            this._value = '';\n        } else {\n            this._value = value;\n        }\n    }\n\n    /**\n     * The identifier of the row on which the directive is currently on.\n     *\n     * ```html\n     * <div\n     *   igxTextHighlight\n     *   [row]=\"0\">\n     * </div>\n     * ```\n     */\n    @Input('row')\n    public row: any;\n\n    /**\n     * The identifier of the column on which the directive is currently on.\n     *\n     * ```html\n     * <div\n     *   igxTextHighlight\n     *   [column]=\"0\">\n     * </div>\n     * ```\n     */\n    @Input('column')\n    public column: any;\n\n    /**\n     * A map that contains all aditional conditions, that you need to activate a highlighted\n     * element. To activate the condition, you will have to add a new metadata key to\n     * the `metadata` property of the IActiveHighlightInfo interface.\n     *\n     * @example\n     * ```typescript\n     *  // Set a property, which would disable the highlight for a given element on a cetain condition\n     *  const metadata = new Map<string, any>();\n     *  metadata.set('highlightElement', false);\n     * ```\n     * ```html\n     * <div\n     *   igxTextHighlight\n     *   [metadata]=\"metadata\">\n     * </div>\n     * ```\n     */\n    @Input()\n    public metadata: Map<string, any>;\n\n    /**\n     * @hidden\n     */\n    public get lastSearchInfo(): ISearchInfo {\n        return this._lastSearchInfo;\n    }\n\n    /**\n     * @hidden\n     */\n    public parentElement: any;\n\n    private _container: any;\n\n    private destroy$ = new Subject<boolean>();\n\n    /**\n     * Activates the highlight at a given index.\n     * (if such index exists)\n     */\n    public static setActiveHighlight(groupName: string, highlight: IActiveHighlightInfo) {\n        IgxTextHighlightDirective.highlightGroupsMap.set(groupName, highlight);\n        IgxTextHighlightDirective.onActiveElementChanged.emit(groupName);\n    }\n\n    /**\n     * Clears any existing highlight.\n     */\n    public static clearActiveHighlight(groupName) {\n        IgxTextHighlightDirective.highlightGroupsMap.set(groupName, {\n            index: -1\n        });\n        IgxTextHighlightDirective.onActiveElementChanged.emit(groupName);\n    }\n\n    constructor(private element: ElementRef, public renderer: Renderer2) {\n        IgxTextHighlightDirective.onActiveElementChanged.pipe(takeUntil(this.destroy$)).subscribe((groupName) => {\n            if (this.groupName === groupName) {\n                if (this._activeElementIndex !== -1) {\n                    this.deactivate();\n                }\n                this.activateIfNecessary();\n            }\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    ngOnDestroy() {\n        this.clearHighlight();\n\n        if (this._observer !== null) {\n            this._observer.disconnect();\n        }\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n\n    /**\n     * @hidden\n     */\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.value && !changes.value.firstChange) {\n            this._valueChanged = true;\n        } else if ((changes.row !== undefined && !changes.row.firstChange) ||\n            (changes.column !== undefined && !changes.column.firstChange) ||\n            (changes.page !== undefined && !changes.page.firstChange)) {\n            if (this._activeElementIndex !== -1) {\n                this.deactivate();\n            }\n            this.activateIfNecessary();\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    ngAfterViewInit() {\n        this.parentElement = this.renderer.parentNode(this.element.nativeElement);\n\n        if (IgxTextHighlightDirective.highlightGroupsMap.has(this.groupName) === false) {\n            IgxTextHighlightDirective.highlightGroupsMap.set(this.groupName, {\n                index: -1\n            });\n        }\n\n        this._lastSearchInfo = {\n            searchedText: '',\n            content: this.value,\n            matchCount: 0,\n            caseSensitive: false,\n            exactMatch: false\n        };\n\n        this._container = this.parentElement.firstElementChild;\n    }\n\n    /**\n     * @hidden\n     */\n    ngAfterViewChecked() {\n        if (this._valueChanged) {\n            this.highlight(this._lastSearchInfo.searchedText, this._lastSearchInfo.caseSensitive, this._lastSearchInfo.exactMatch);\n            this.activateIfNecessary();\n            this._valueChanged = false;\n        }\n    }\n\n    /**\n     * Clears the existing highlight and highlights the searched text.\n     * Returns how many times the element contains the searched text.\n     */\n    public highlight(text: string, caseSensitive?: boolean, exactMatch?: boolean): number {\n        const caseSensitiveResolved = caseSensitive ? true : false;\n        const exactMatchResolved = exactMatch ? true : false;\n\n        if (this.searchNeedsEvaluation(text, caseSensitiveResolved, exactMatchResolved)) {\n            this._lastSearchInfo.searchedText = text;\n            this._lastSearchInfo.caseSensitive = caseSensitiveResolved;\n            this._lastSearchInfo.exactMatch = exactMatchResolved;\n            this._lastSearchInfo.content = this.value;\n\n            if (text === '' || text === undefined || text === null) {\n                this.clearHighlight();\n            } else {\n                this.clearChildElements(true);\n                this._lastSearchInfo.matchCount = this.getHighlightedText(text, caseSensitive, exactMatch);\n            }\n        } else if (this._nodeWasRemoved) {\n            this._lastSearchInfo.searchedText = text;\n            this._lastSearchInfo.caseSensitive = caseSensitiveResolved;\n            this._lastSearchInfo.exactMatch = exactMatchResolved;\n        }\n\n        return this._lastSearchInfo.matchCount;\n    }\n\n    /**\n     * Clears any existing highlight.\n     */\n    public clearHighlight(): void {\n        this.clearChildElements(false);\n\n        this._lastSearchInfo.searchedText = '';\n        this._lastSearchInfo.matchCount = 0;\n    }\n\n    /**\n     * Activates the highlight if it is on the currently active row and column.\n     */\n    public activateIfNecessary(): void {\n        const group = IgxTextHighlightDirective.highlightGroupsMap.get(this.groupName);\n\n        if (group.column === this.column && group.row === this.row && compareMaps(this.metadata, group.metadata)) {\n            this.activate(group.index);\n        }\n    }\n\n    /**\n     * Attaches a MutationObserver to the parentElement and watches for when the container element is removed/readded to the DOM.\n     * Should be used only when necessary as using many observers may lead to performance degradation.\n     */\n    public observe(): void {\n        if (this._observer === null) {\n            const callback = (mutationList) => {\n                mutationList.forEach((mutation) => {\n                    const removedNodes = Array.from(mutation.removedNodes);\n                    removedNodes.forEach((n) => {\n                        if (n === this._container) {\n                            this._nodeWasRemoved = true;\n                            this.clearChildElements(false);\n                        }\n                    });\n\n                    const addedNodes = Array.from(mutation.addedNodes);\n                    addedNodes.forEach((n) => {\n                        if (n === this.parentElement.firstElementChild && this._nodeWasRemoved) {\n                            this._container = this.parentElement.firstElementChild;\n                            this._nodeWasRemoved = false;\n\n                            this._forceEvaluation = true;\n                            this.highlight(this._lastSearchInfo.searchedText,\n                                this._lastSearchInfo.caseSensitive,\n                                this._lastSearchInfo.exactMatch);\n                            this._forceEvaluation = false;\n\n                            this.activateIfNecessary();\n                            this._observer.disconnect();\n                            this._observer = null;\n                        }\n                    });\n                });\n            };\n\n            this._observer = new MutationObserver(callback);\n            this._observer.observe(this.parentElement, {childList: true});\n        }\n    }\n\n    private activate(index: number) {\n        this.deactivate();\n\n        if (this._div !== null) {\n            const spans = this._div.querySelectorAll('span');\n            this._activeElementIndex = index;\n\n            if (spans.length <= index) {\n                return;\n            }\n\n            const elementToActivate = spans[index];\n            this.renderer.addClass(elementToActivate, this._defaultActiveCssClass);\n            this.renderer.addClass(elementToActivate, this.activeCssClass);\n        }\n    }\n\n    private deactivate() {\n        if (this._activeElementIndex === -1) {\n            return;\n        }\n\n        const spans = this._div.querySelectorAll('span');\n\n        if (spans.length <= this._activeElementIndex) {\n            this._activeElementIndex = -1;\n            return;\n        }\n\n        const elementToDeactivate = spans[this._activeElementIndex];\n        this.renderer.removeClass(elementToDeactivate, this._defaultActiveCssClass);\n        this.renderer.removeClass(elementToDeactivate, this.activeCssClass);\n        this._activeElementIndex = -1;\n    }\n\n    private clearChildElements(originalContentHidden: boolean): void {\n        this.renderer.setProperty(this.element.nativeElement, 'hidden', originalContentHidden);\n\n        if (this._div !== null) {\n            this.renderer.removeChild(this.parentElement, this._div);\n\n            this._div = null;\n            this._activeElementIndex = -1;\n        }\n    }\n\n    private getHighlightedText(searchText: string, caseSensitive: boolean, exactMatch: boolean) {\n        this.appendDiv();\n\n        const stringValue = String(this.value);\n        const contentStringResolved = !caseSensitive ? stringValue.toLowerCase() : stringValue;\n        const searchTextResolved = !caseSensitive ? searchText.toLowerCase() : searchText;\n\n        let matchCount = 0;\n\n        if (exactMatch) {\n            if (contentStringResolved === searchTextResolved) {\n                // tslint:disable-next-line:max-line-length\n                this.appendSpan(`<span class=\"${this._defaultCssClass} ${this.cssClass ? this.cssClass : ''}\">${stringValue}</span>`);\n                matchCount++;\n            } else {\n                this.appendText(stringValue);\n            }\n        } else {\n            let foundIndex = contentStringResolved.indexOf(searchTextResolved, 0);\n            let previousMatchEnd = 0;\n\n            while (foundIndex !== -1) {\n                const start = foundIndex;\n                const end = foundIndex + searchTextResolved.length;\n\n                this.appendText(stringValue.substring(previousMatchEnd, start));\n                // tslint:disable-next-line:max-line-length\n                this.appendSpan(`<span class=\"${this._defaultCssClass} ${this.cssClass ? this.cssClass : ''}\">${stringValue.substring(start, end)}</span>`);\n\n                previousMatchEnd = end;\n                matchCount++;\n\n                foundIndex = contentStringResolved.indexOf(searchTextResolved, end);\n            }\n\n            this.appendText(stringValue.substring(previousMatchEnd, stringValue.length));\n        }\n\n        return matchCount;\n    }\n\n    private appendText(text: string) {\n        const textElement = this.renderer.createText(text);\n        this.renderer.appendChild(this._div, textElement);\n    }\n\n    private appendSpan(outerHTML: string) {\n        const span = this.renderer.createElement('span');\n        this.renderer.appendChild(this._div, span);\n        this.renderer.setProperty(span, 'outerHTML', outerHTML);\n    }\n\n    private appendDiv() {\n        this._div = this.renderer.createElement('div');\n        if ( this.containerClass) {\n            this.renderer.addClass(this._div, this.containerClass);\n        }\n        this.renderer.appendChild(this.parentElement, this._div);\n    }\n\n    private searchNeedsEvaluation(text: string, caseSensitive: boolean, exactMatch: boolean): boolean {\n        const searchedText = this._lastSearchInfo.searchedText;\n\n        return !this._nodeWasRemoved &&\n            (searchedText === null ||\n                searchedText !== text ||\n                this._lastSearchInfo.content !== this.value ||\n                this._lastSearchInfo.caseSensitive !== caseSensitive ||\n                this._lastSearchInfo.exactMatch !== exactMatch ||\n                this._forceEvaluation);\n    }\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [IgxTextHighlightDirective],\n    exports: [IgxTextHighlightDirective]\n})\nexport class IgxTextHighlightModule { }\n","import { Directive, ElementRef, HostListener, Input, NgModule } from '@angular/core';\n\n@Directive({\n    exportAs: 'igxTextSelection',\n    selector: '[igxTextSelection]'\n})\nexport class IgxTextSelectionDirective {\n\n    private selectionState = true;\n\n    /**\n     * Returns whether the input element is selectable through the directive.\n     *\n     * ```typescript\n     * // get\n     * @ViewChild('firstName',\n     *  {read: IgxTextSelectionDirective})\n     * public firstName: IgxTextSelectionDirective;\n     *\n     * public getFirstNameSelectionStatus() {\n     *  return this.firstName.selected;\n     * }\n     * ```\n     */\n    @Input('igxTextSelection')\n    get selected(): boolean {\n        return this.selectionState;\n    }\n\n    /**\n     *  Determines whether the input element could be selected through the directive.\n     *\n     * ```html\n     * <!--set-->\n     * <input\n     *   type=\"text\"\n     *   id=\"firstName\"\n     *   [igxTextSelection]=\"true\">\n     * </input>\n     *\n     * <input\n     *   type=\"text\"\n     *   id=\"lastName\"\n     *   igxTextSelection\n     *   [selected]=\"true\">\n     * </input>\n     * ```\n     */\n    set selected(val: boolean) {\n        this.selectionState = val;\n    }\n\n    /**\n     * Returns the nativeElement of the element where the directive was applied.\n     *\n     * ```html\n     * <input\n     *   type=\"text\"\n     *   id=\"firstName\"\n     *   igxTextSelection>\n     * </input>\n     * ```\n     *\n     * ```typescript\n     * @ViewChild('firstName',\n     *  {read: IgxTextSelectionDirective})\n     * public inputElement: IgxTextSelectionDirective;\n     *\n     * public getNativeElement() {\n     *  return this.inputElement.nativeElement;\n     * }\n     * ```\n     */\n    get nativeElement() {\n        return this.element.nativeElement;\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('focus')\n    onFocus() {\n        this.trigger();\n    }\n\n    constructor(private element: ElementRef) { }\n\n    /**\n     * Triggers the selection of the element if it is marked as selectable.\n     *\n     * ```html\n     * <input\n     *   type=\"text\"\n     *   id=\"firstName\"\n     *   igxTextSelection>\n     * </input>\n     * ```\n     *\n     * ```typescript\n     * @ViewChild('firstName',\n     *  {read: IgxTextSelectionDirective})\n     * public inputElement: IgxTextSelectionDirective;\n     *\n     * public triggerElementSelection() {\n     *  this.inputElement.trigger();\n     * }\n     * ```\n     */\n    trigger() {\n        if (this.selected && this.nativeElement.value.length) {\n            requestAnimationFrame(() => this.nativeElement.setSelectionRange(0, this.nativeElement.value.length));\n        }\n    }\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [IgxTextSelectionDirective],\n    exports: [IgxTextSelectionDirective]\n})\nexport class IgxTextSelectionModule { }\n","import {\n    Directive, ElementRef, HostListener, Input, NgModule, ChangeDetectorRef, OnInit,\n    Output, EventEmitter, Optional, HostBinding, Inject\n} from '@angular/core';\nimport { useAnimation } from '@angular/animations';\nimport { scaleInCenter } from '../../animations/scale/index';\nimport { fadeOut } from '../../animations/fade/index';\nimport { IgxOverlayService } from '../../services/overlay/overlay';\nimport { HorizontalAlignment, AutoPositionStrategy, PositionSettings, OverlaySettings } from '../../services/public_api';\nimport { CommonModule } from '@angular/common';\nimport { IgxNavigationService } from '../../core/navigation';\nimport { IgxToggleDirective, IgxToggleActionDirective } from '../toggle/toggle.directive';\nimport { IBaseEventArgs } from '../../core/utils';\n\nexport interface ITooltipShowEventArgs extends IBaseEventArgs {\n    target: IgxTooltipTargetDirective;\n    tooltip: IgxTooltipDirective;\n    cancel: boolean;\n}\nexport interface ITooltipHideEventArgs extends IBaseEventArgs {\n    target: IgxTooltipTargetDirective;\n    tooltip: IgxTooltipDirective;\n    cancel: boolean;\n}\n\n/**\n * **Ignite UI for Angular Tooltip Target** -\n * [Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/tooltip.html)\n *\n * The Ignite UI for Angular Tooltip Target directive is used to mark an HTML element in the markup as one that has a tooltip.\n * The tooltip target is used in combination with the Ignite UI for Angular Tooltip by assigning the exported tooltip reference to the\n * target's selector property.\n *\n * Example:\n * ```html\n * <button [igxTooltipTarget]=\"tooltipRef\">Hover me</button>\n * <span #tooltipRef=\"tooltip\" igxTooltip>Hello there, I am a tooltip!</span>\n * ```\n */\n@Directive({\n    exportAs: 'tooltipTarget',\n    selector: '[igxTooltipTarget]'\n})\nexport class IgxTooltipTargetDirective extends IgxToggleActionDirective implements OnInit {\n    /**\n     * Gets/sets the amount of milliseconds that should pass before showing the tooltip.\n     *\n     * ```typescript\n     * // get\n     * let tooltipShowDelay = this.tooltipTarget.showDelay;\n     * ```\n     *\n     * ```html\n     * <!--set-->\n     * <button [igxTooltipTarget]=\"tooltipRef\" showDelay=\"1500\">Hover me</button>\n     * <span #tooltipRef=\"tooltip\" igxTooltip>Hello there, I am a tooltip!</span>\n     * ```\n     */\n    @Input('showDelay')\n    public showDelay = 500;\n\n    /**\n     * Gets/sets the amount of milliseconds that should pass before hiding the tooltip.\n     *\n     * ```typescript\n     * // get\n     * let tooltipHideDelay = this.tooltipTarget.hideDelay;\n     * ```\n     *\n     * ```html\n     * <!--set-->\n     * <button [igxTooltipTarget]=\"tooltipRef\" hideDelay=\"1500\">Hover me</button>\n     * <span #tooltipRef=\"tooltip\" igxTooltip>Hello there, I am a tooltip!</span>\n     * ```\n     */\n    @Input('hideDelay')\n    public hideDelay = 500;\n\n    /**\n     * Specifies if the tooltip should not show when hovering its target with the mouse. (defaults to false)\n     * While setting this property to 'true' will disable the user interactions that shows/hides the tooltip,\n     * the developer will still be able to show/hide the tooltip through the API.\n     *\n     * ```typescript\n     * // get\n     * let tooltipDisabledValue = this.tooltipTarget.tooltipDisabled;\n     * ```\n     *\n     * ```html\n     * <!--set-->\n     * <button [igxTooltipTarget]=\"tooltipRef\" [tooltipDisabled]=\"true\">Hover me</button>\n     * <span #tooltipRef=\"tooltip\" igxTooltip>Hello there, I am a tooltip!</span>\n     * ```\n     */\n    @Input('tooltipDisabled')\n    public tooltipDisabled = false;\n\n    /**\n     * @hidden\n     */\n    @Input('igxTooltipTarget')\n    set target(target: any) {\n        if (target !== null && target !== '') {\n            this._target = target;\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    get target(): any {\n        if (typeof this._target === 'string') {\n            return this._navigationService.get(this._target);\n        }\n        return this._target;\n    }\n\n    /**\n     * Gets the respective native element of the directive.\n     *\n     * ```typescript\n     * let tooltipTargetElement = this.tooltipTarget.nativeElement;\n     * ```\n     */\n    public get nativeElement() {\n        return this._element.nativeElement;\n    }\n\n    /**\n     * Indicates if the tooltip that is is associated with this target is currently hidden.\n     *\n     * ```typescript\n     * let tooltipHiddenValue = this.tooltipTarget.tooltipHidden;\n     * ```\n     */\n    public get tooltipHidden(): boolean {\n        return !this.target || this.target.collapsed;\n    }\n\n    /**\n     * Emits an event when the tooltip that is associated with this target starts showing.\n     * This event is fired before the start of the countdown to showing the tooltip.\n     *\n     * ```typescript\n     * tooltipShowing(args: ITooltipShowEventArgs) {\n     *    alert(\"Tooltip started showing!\");\n     * }\n     * ```\n     *\n     * ```html\n     * <button [igxTooltipTarget]=\"tooltipRef\"\n     *         (onTooltipShow)='tooltipShowing($event)'>Hover me</button>\n     * <span #tooltipRef=\"tooltip\" igxTooltip>Hello there, I am a tooltip!</span>\n     * ```\n     */\n    @Output()\n    public onTooltipShow = new EventEmitter<ITooltipShowEventArgs>();\n\n    /**\n     * Emits an event when the tooltip that is associated with this target starts hiding.\n     * This event is fired before the start of the countdown to hiding the tooltip.\n     *\n     * ```typescript\n     * tooltipHiding(args: ITooltipHideEventArgs) {\n     *    alert(\"Tooltip started hiding!\");\n     * }\n     * ```\n     *\n     * ```html\n     * <button [igxTooltipTarget]=\"tooltipRef\"\n     *         (onTooltipHide)='tooltipHiding($event)'>Hover me</button>\n     * <span #tooltipRef=\"tooltip\" igxTooltip>Hello there, I am a tooltip!</span>\n     * ```\n     */\n    @Output()\n    public onTooltipHide = new EventEmitter<ITooltipHideEventArgs>();\n\n    constructor(private _element: ElementRef,\n        @Optional() private _navigationService: IgxNavigationService) {\n        super(_element, _navigationService);\n    }\n\n    /**\n     * @hidden\n     */\n    public ngOnInit() {\n        super.ngOnInit();\n\n        const positionSettings: PositionSettings = {\n            target: this.nativeElement,\n            horizontalDirection: HorizontalAlignment.Center,\n            horizontalStartPoint: HorizontalAlignment.Center,\n            openAnimation: useAnimation(scaleInCenter, { params: { duration: '150ms' } }),\n            closeAnimation: useAnimation(fadeOut, { params: { duration: '75ms' } })\n        };\n\n        this._overlayDefaults.positionStrategy = new AutoPositionStrategy(positionSettings);\n        this._overlayDefaults.closeOnOutsideClick = false;\n    }\n\n    private checkOutletAndOutsideClick() {\n        if (this.outlet) {\n            this._overlayDefaults.outlet = this.outlet;\n        }\n    }\n\n    private get mergedOverlaySettings() {\n        return Object.assign({}, this._overlayDefaults, this.overlaySettings);\n    }\n\n    // Return true if the execution in onMouseEnter should be terminated after this method\n    private preMouseEnterCheck() {\n        // If tooltip is about to be opened\n        if (this.target.toBeShown) {\n            clearTimeout(this.target.timeoutId);\n            this.target.toBeShown = false;\n        }\n\n        // If Tooltip is opened or about to be hidden\n        if (!this.target.collapsed || this.target.toBeHidden) {\n            clearTimeout(this.target.timeoutId);\n\n            const hidingArgs = { target: this, tooltip: this.target, cancel: false };\n            this.onTooltipHide.emit(hidingArgs);\n\n            if (hidingArgs.cancel) {\n                return true;\n            }\n\n            //  if close animation has started finish it, or close the tooltip with no animation\n            this.target.forceClose(this.mergedOverlaySettings);\n            this.target.toBeHidden = false;\n        }\n\n        return false;\n    }\n\n    // Return true if the execution in onMouseLeave should be terminated after this method\n    private preMouseLeaveCheck(): boolean {\n        clearTimeout(this.target.timeoutId);\n\n        // If tooltip is about to be opened\n        if (this.target.toBeShown) {\n            this.target.toBeShown = false;\n            this.target.toBeHidden = false;\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('document:keydown.escape', ['$event'])\n    public onKeydownEscape(event) {\n        const hidingArgs = { target: this, tooltip: this.target, cancel: false };\n        this.onTooltipHide.emit(hidingArgs);\n\n        if (hidingArgs.cancel) {\n            return;\n        }\n\n        this.target.toBeHidden = true;\n        this.target.close();\n        this.target.toBeHidden = false;\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('click')\n    public onClick() {\n        if (!this.target.collapsed) {\n            const hidingArgs = { target: this, tooltip: this.target, cancel: false };\n            this.onTooltipHide.emit(hidingArgs);\n\n            if (hidingArgs.cancel) {\n                return;\n            }\n\n            this.target.forceClose(this.mergedOverlaySettings);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('mouseenter')\n    public onMouseEnter() {\n        if (this.tooltipDisabled) {\n            return;\n        }\n\n        this.checkOutletAndOutsideClick();\n        const shouldReturn = this.preMouseEnterCheck();\n        if (shouldReturn) {\n            return;\n        }\n\n        const showingArgs = { target: this, tooltip: this.target, cancel: false };\n        this.onTooltipShow.emit(showingArgs);\n\n        if (showingArgs.cancel) {\n            return;\n        }\n\n        this.target.toBeShown = true;\n        this.target.timeoutId = setTimeout(() => {\n            this.target.open(this.mergedOverlaySettings); // Call open() of IgxTooltipDirective\n            this.target.toBeShown = false;\n        }, this.showDelay);\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('mouseleave')\n    public onMouseLeave() {\n        if (this.tooltipDisabled) {\n            return;\n        }\n\n        this.checkOutletAndOutsideClick();\n        const shouldReturn = this.preMouseLeaveCheck();\n        if (shouldReturn || this.target.collapsed) {\n            return;\n        }\n\n        const hidingArgs = { target: this, tooltip: this.target, cancel: false };\n        this.onTooltipHide.emit(hidingArgs);\n\n        if (hidingArgs.cancel) {\n            return;\n        }\n\n        this.target.toBeHidden = true;\n        this.target.timeoutId = setTimeout(() => {\n            this.target.close(); // Call close() of IgxTooltipDirective\n            this.target.toBeHidden = false;\n        }, this.hideDelay);\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('touchstart', ['$event'])\n    public onTouchStart(event) {\n        if (this.tooltipDisabled) {\n            return;\n        }\n\n        this.showTooltip();\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('document:touchstart', ['$event'])\n    public onDocumentTouchStart(event) {\n        if (this.tooltipDisabled) {\n            return;\n        }\n\n        if (this.nativeElement !== event.target &&\n            !this.nativeElement.contains(event.target)\n        ) {\n            this.hideTooltip();\n        }\n    }\n\n    /**\n     * Shows the tooltip by respecting the 'showDelay' property.\n     *\n     * ```typescript\n     * this.tooltipTarget.showTooltip();\n     * ```\n     */\n    public showTooltip() {\n        clearTimeout(this.target.timeoutId);\n\n        if (!this.target.collapsed) {\n            const hidingArgs = { target: this, tooltip: this.target, cancel: false };\n            this.onTooltipHide.emit(hidingArgs);\n\n            if (hidingArgs.cancel) {\n                return;\n            }\n            //  if close animation has started finish it, or close the tooltip with no animation\n            this.target.forceClose(this.mergedOverlaySettings);\n            this.target.toBeHidden = false;\n        }\n\n        const showingArgs = { target: this, tooltip: this.target, cancel: false };\n        this.onTooltipShow.emit(showingArgs);\n\n        if (showingArgs.cancel) {\n            return;\n        }\n\n        this.target.toBeShown = true;\n        this.target.timeoutId = setTimeout(() => {\n            this.target.open(this.mergedOverlaySettings); // Call open() of IgxTooltipDirective\n            this.target.toBeShown = false;\n        }, this.showDelay);\n    }\n\n    /**\n     * Hides the tooltip by respecting the 'hideDelay' property.\n     *\n     * ```typescript\n     * this.tooltipTarget.hideTooltip();\n     * ```\n     */\n    public hideTooltip() {\n        if (this.target.collapsed && this.target.toBeShown) {\n            clearTimeout(this.target.timeoutId);\n        }\n\n        if (this.target.collapsed || this.target.toBeHidden) {\n            return;\n        }\n\n        const hidingArgs = { target: this, tooltip: this.target, cancel: false };\n        this.onTooltipHide.emit(hidingArgs);\n\n        if (hidingArgs.cancel) {\n            return;\n        }\n\n        this.target.toBeHidden = true;\n        this.target.timeoutId = setTimeout(() => {\n            this.target.close(); // Call close() of IgxTooltipDirective\n            this.target.toBeHidden = false;\n        }, this.hideDelay);\n    }\n}\n\nlet NEXT_ID = 0;\n/**\n * **Ignite UI for Angular Tooltip** -\n * [Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/tooltip.html)\n *\n * The Ignite UI for Angular Tooltip directive is used to mark an HTML element in the markup as one that should behave as a tooltip.\n * The tooltip is used in combination with the Ignite UI for Angular Tooltip Target by assigning the exported tooltip reference to the\n * respective target's selector property.\n *\n * Example:\n * ```html\n * <button [igxTooltipTarget]=\"tooltipRef\">Hover me</button>\n * <span #tooltipRef=\"tooltip\" igxTooltip>Hello there, I am a tooltip!</span>\n * ```\n */\n@Directive({\n    exportAs: 'tooltip',\n    selector: '[igxTooltip]'\n})\nexport class IgxTooltipDirective extends IgxToggleDirective {\n\n    /**\n     * @hidden\n     */\n    public timeoutId;\n\n    /**\n     * @hidden\n     * Returns whether close time out has started\n     */\n    public toBeHidden = false;\n\n    /**\n     * @hidden\n     * Returns whether open time out has started\n     */\n    public toBeShown = false;\n\n    /**\n     * @hidden\n     */\n    @HostBinding('class.igx-tooltip--hidden')\n    public get hiddenClass() {\n        return this.collapsed;\n    }\n\n    /**\n     * @hidden\n     */\n    @HostBinding('class.igx-tooltip--desktop')\n    public get defaultClass() {\n        return !this.collapsed;\n    }\n\n    /**\n     * Gets/sets any tooltip related data.\n     * The 'context' can be used for storing any information that is necessary\n     * to access when working with the tooltip.\n     *\n     * ```typescript\n     * // get\n     * let tooltipContext = this.tooltip.context;\n     * ```\n     *\n     * ```typescript\n     * // set\n     * this.tooltip.context = \"Tooltip's context\";\n     * ```\n     */\n    @Input('context')\n    public context;\n\n    /**\n     * Identifier for the tooltip.\n     * If this is property is not explicitly set, it will be automatically generated.\n     *\n     * ```typescript\n     * let tooltipId = this.tooltip.id;\n     * ```\n     */\n    @HostBinding('attr.id')\n    @Input()\n    public id = `igx-tooltip-${NEXT_ID++}`;\n\n    /**\n     * Get the role attribute of the tooltip.\n     *\n     * ```typescript\n     * let tooltipRole = this.tooltip.role;\n     * ```\n     */\n    @HostBinding('attr.role')\n    public get role() {\n        return 'tooltip';\n    }\n\n    /** @hidden */\n    constructor(\n        elementRef: ElementRef,\n        cdr: ChangeDetectorRef,\n        @Inject(IgxOverlayService) overlayService: IgxOverlayService,\n        @Optional() navigationService: IgxNavigationService) {\n        // D.P. constructor duplication due to es6 compilation, might be obsolete in the future\n        super(elementRef, cdr, overlayService, navigationService);\n    }\n\n    /**\n     * If there is open animation in progress this method will finish is.\n     * If there is no open animation in progress this method will open the toggle with no animation.\n     * @param overlaySettings setting to use for opening the toggle\n     */\n    protected forceOpen(overlaySettings?: OverlaySettings) {\n        const info = this.overlayService.getOverlayById(this._overlayId);\n        const hasOpenAnimation = info ? info.openAnimationPlayer : false;\n        if (hasOpenAnimation) {\n            info.openAnimationPlayer.finish();\n            info.openAnimationPlayer.reset();\n            info.openAnimationPlayer = null;\n        } else if (this.collapsed) {\n            const animation = overlaySettings.positionStrategy.settings.openAnimation;\n            overlaySettings.positionStrategy.settings.openAnimation = null;\n            this.open(overlaySettings);\n            overlaySettings.positionStrategy.settings.openAnimation = animation;\n        }\n    }\n\n    /**\n     * If there is close animation in progress this method will finish is.\n     * If there is no close animation in progress this method will close the toggle with no animation.\n     * @param overlaySettings settings to use for closing the toggle\n     */\n    protected forceClose(overlaySettings?: OverlaySettings) {\n        const info = this.overlayService.getOverlayById(this._overlayId);\n        const hasCloseAnimation = info ? info.closeAnimationPlayer : false;\n\n        if (hasCloseAnimation) {\n            info.closeAnimationPlayer.finish();\n            info.closeAnimationPlayer.reset();\n            info.closeAnimationPlayer = null;\n        } else if (!this.collapsed) {\n            const animation = overlaySettings.positionStrategy.settings.closeAnimation;\n            overlaySettings.positionStrategy.settings.closeAnimation = null;\n            this.close();\n            overlaySettings.positionStrategy.settings.closeAnimation = animation;\n        }\n    }\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [IgxTooltipDirective, IgxTooltipTargetDirective],\n    exports: [IgxTooltipDirective, IgxTooltipTargetDirective],\n    imports: [CommonModule],\n    providers: [IgxOverlayService]\n})\nexport class IgxTooltipModule { }\n\n","export interface IgxDateTimeEditorEventArgs {\n    readonly oldValue?: Date;\n    newValue?: Date;\n    readonly userInput: string;\n}\n\n/**\n * Specify a particular date, time or AmPm part.\n */\nexport enum DatePart {\n    Date = 'date',\n    Month = 'month',\n    Year = 'year',\n    Hours = 'hour',\n    Minutes = 'minute',\n    Seconds = 'second',\n    AmPm = 'ampm',\n    Literal = 'literal'\n}\n\n/** @hidden @internal */\nexport interface DatePartInfo {\n    type: DatePart;\n    start: number;\n    end: number;\n    format: string;\n}\n","import { isIE } from '../core/utils';\nimport { DatePart, DatePartInfo } from '../directives/date-time-editor/date-time-editor.common';\n\n/**\n * This enum is used to keep the date validation result.\n *\n * @hidden\n */\nexport const enum DateState {\n    Valid = 'valid',\n    Invalid = 'invalid',\n}\n\n/** @hidden */\nconst enum FormatDesc {\n    Numeric = 'numeric',\n    TwoDigits = '2-digit'\n}\n\n/** @hidden */\nconst enum DateChars {\n    YearChar = 'y',\n    MonthChar = 'M',\n    DayChar = 'd'\n}\n\nconst DATE_CHARS = ['h', 'H', 'm', 's', 'S', 't', 'T'];\nconst TIME_CHARS = ['d', 'D', 'M', 'y', 'Y'];\n\n/** @hidden */\nconst enum DateParts {\n    Day = 'day',\n    Month = 'month',\n    Year = 'year'\n}\n\n\n/** @hidden */\nexport abstract class DatePickerUtil {\n    public static readonly DEFAULT_INPUT_FORMAT = 'MM/dd/yyyy';\n    // TODO: this is the def mask for the date-picker, should remove it during refactoring\n    private static readonly SHORT_DATE_MASK = 'MM/dd/yy';\n    private static readonly SEPARATOR = 'literal';\n    private static readonly NUMBER_OF_MONTHS = 12;\n    private static readonly PROMPT_CHAR = '_';\n    private static readonly DEFAULT_LOCALE = 'en';\n\n\n\n    /**\n     *  TODO: Unit tests for all public methods.\n     */\n\n\n\n    /**\n     * Parse a Date value from masked string input based on determined date parts\n     * @param inputData masked value to parse\n     * @param dateTimeParts Date parts array for the mask\n     */\n    public static parseValueFromMask(inputData: string, dateTimeParts: DatePartInfo[], promptChar?: string): Date | null {\n        const parts: { [key in DatePart]: number } = {} as any;\n        dateTimeParts.forEach(dp => {\n            let value = parseInt(this.getCleanVal(inputData, dp, promptChar), 10);\n            if (!value) {\n                value = dp.type === DatePart.Date || dp.type === DatePart.Month ? 1 : 0;\n            }\n            parts[dp.type] = value;\n        });\n\n        if (parts[DatePart.Month] < 1 || 12 < parts[DatePart.Month]) {\n            return null;\n        }\n\n        // TODO: Century threshold\n        if (parts[DatePart.Year] < 50) {\n            parts[DatePart.Year] += 2000;\n        }\n\n        if (parts[DatePart.Date] > DatePickerUtil.daysInMonth(parts[DatePart.Year], parts[DatePart.Month])) {\n            return null;\n        }\n\n        if (parts[DatePart.Hours] > 23 || parts[DatePart.Minutes] > 59 || parts[DatePart.Seconds] > 59) {\n            return null;\n        }\n\n        return new Date(\n            parts[DatePart.Year] || 2000,\n            parts[DatePart.Month] - 1 || 0,\n            parts[DatePart.Date] || 1,\n            parts[DatePart.Hours] || 0,\n            parts[DatePart.Minutes] || 0,\n            parts[DatePart.Seconds] || 0\n        );\n    }\n\n    /**\n     * Parse the mask into date/time and literal parts\n     */\n    public static parseDateTimeFormat(mask: string, locale: string = DatePickerUtil.DEFAULT_LOCALE): DatePartInfo[] {\n        const format = mask || DatePickerUtil.getDefaultInputFormat(locale);\n        const dateTimeParts: DatePartInfo[] = [];\n        const formatArray = Array.from(format);\n        let currentPart: DatePartInfo = null;\n        let position = 0;\n\n        for (let i = 0; i < formatArray.length; i++, position++) {\n            const type = DatePickerUtil.determineDatePart(formatArray[i]);\n            if (currentPart) {\n                if (currentPart.type === type) {\n                    currentPart.format += formatArray[i];\n                    if (i < formatArray.length - 1) {\n                        continue;\n                    }\n                }\n\n                DatePickerUtil.ensureLeadingZero(currentPart);\n                currentPart.end = currentPart.start + currentPart.format.length;\n                position = currentPart.end;\n                dateTimeParts.push(currentPart);\n            }\n\n            currentPart = {\n                start: position,\n                end: position + formatArray[i].length,\n                type: type,\n                format: formatArray[i]\n            };\n        }\n\n        return dateTimeParts;\n    }\n\n    public static getDefaultInputFormat(locale: string): string {\n        if (!Intl || !Intl.DateTimeFormat || !Intl.DateTimeFormat.prototype.formatToParts) {\n            // TODO: fallback with Intl.format for IE?\n            return DatePickerUtil.SHORT_DATE_MASK;\n        }\n        const parts = DatePickerUtil.getDefaultLocaleMask(locale);\n        parts.forEach(p => {\n            if (p.type !== DatePart.Year && p.type !== DatePickerUtil.SEPARATOR) {\n                p.formatType = FormatDesc.TwoDigits;\n            }\n        });\n\n        return DatePickerUtil.getMask(parts);\n    }\n\n    public static isDateOrTimeChar(char: string): boolean {\n        return DATE_CHARS.indexOf(char) !== -1 || TIME_CHARS.indexOf(char) !== -1;\n    }\n\n    public static spinDate(delta: number, newDate: Date, isSpinLoop: boolean): void {\n        const maxDate = DatePickerUtil.daysInMonth(newDate.getFullYear(), newDate.getMonth());\n        let date = newDate.getDate() + delta;\n        if (date > maxDate) {\n            date = isSpinLoop ? date % maxDate : maxDate;\n        } else if (date < 1) {\n            date = isSpinLoop ? maxDate + (date % maxDate) : 1;\n        }\n\n        newDate.setDate(date);\n    }\n\n    public static spinMonth(delta: number, newDate: Date, isSpinLoop: boolean): void {\n        const maxDate = DatePickerUtil.daysInMonth(newDate.getFullYear(), newDate.getMonth() + delta);\n        if (newDate.getDate() > maxDate) {\n            newDate.setDate(maxDate);\n        }\n\n        const maxMonth = 11;\n        const minMonth = 0;\n        let month = newDate.getMonth() + delta;\n        if (month > maxMonth) {\n            month = isSpinLoop ? (month % maxMonth) - 1 : maxMonth;\n        } else if (month < minMonth) {\n            month = isSpinLoop ? maxMonth + (month % maxMonth) + 1 : minMonth;\n        }\n\n        newDate.setMonth(month);\n    }\n\n    public static spinYear(delta: number, newDate: Date): void {\n        const maxDate = DatePickerUtil.daysInMonth(newDate.getFullYear() + delta, newDate.getMonth());\n        if (newDate.getDate() > maxDate) {\n            // clip to max to avoid leap year change shifting the entire value\n            newDate.setDate(maxDate);\n        }\n        newDate.setFullYear(newDate.getFullYear() + delta);\n    }\n\n    public static spinHours(delta: number, newDate: Date, isSpinLoop: boolean): void {\n        const maxHour = 23;\n        const minHour = 0;\n        let hours = newDate.getHours() + delta;\n        if (hours > maxHour) {\n            hours = isSpinLoop ? hours % maxHour - 1 : maxHour;\n        } else if (hours < minHour) {\n            hours = isSpinLoop ? maxHour + (hours % maxHour) + 1 : minHour;\n        }\n\n        newDate.setHours(hours);\n    }\n\n    public static spinMinutes(delta: number, newDate: Date, isSpinLoop: boolean): void {\n        const maxMinutes = 59;\n        const minMinutes = 0;\n        let minutes = newDate.getMinutes() + delta;\n        if (minutes > maxMinutes) {\n            minutes = isSpinLoop ? minutes % maxMinutes - 1 : maxMinutes;\n        } else if (minutes < minMinutes) {\n            minutes = isSpinLoop ? maxMinutes + (minutes % maxMinutes) + 1 : minMinutes;\n        }\n\n        newDate.setMinutes(minutes);\n    }\n\n    public static spinSeconds(delta: number, newDate: Date, isSpinLoop: boolean): void {\n        const maxSeconds = 59;\n        const minSeconds = 0;\n        let seconds = newDate.getSeconds() + delta;\n        if (seconds > maxSeconds) {\n            seconds = isSpinLoop ? seconds % maxSeconds - 1 : maxSeconds;\n        } else if (seconds < minSeconds) {\n            seconds = isSpinLoop ? maxSeconds + (seconds % maxSeconds) + 1 : minSeconds;\n        }\n\n        newDate.setSeconds(seconds);\n    }\n\n    public static spinAmPm(newDate: Date, currentDate: Date, amPmFromMask: string): Date {\n        switch (amPmFromMask) {\n            case 'AM':\n                newDate = new Date(newDate.setHours(newDate.getHours() + 12));\n                break;\n            case 'PM':\n                newDate = new Date(newDate.setHours(newDate.getHours() - 12));\n                break;\n        }\n        if (newDate.getDate() !== currentDate.getDate()) {\n            return currentDate;\n        }\n\n        return newDate;\n    }\n\n    /**\n     * Determines whether the provided value is greater than the provided max value.\n     * @param includeTime set to false if you want to exclude time portion of the two dates\n     * @param includeDate set to false if you want to exclude the date portion of the two dates\n     * @returns true if provided value is greater than provided maxValue\n     */\n    public static greaterThanMaxValue(value: Date, maxValue: Date, includeTime = true, includeDate = true): boolean {\n        // TODO: check if provided dates are valid dates and not Invalid Date\n        // if maxValue is Invalid Date and value is valid date this will return:\n        // - false if includeDate is true\n        // - true if includeDate is false\n        if (includeTime && includeDate) {\n            return value.getTime() > maxValue.getTime();\n        }\n\n        const _value = new Date(value.getTime());\n        const _maxValue = new Date(maxValue.getTime());\n        if (!includeTime) {\n            _value.setHours(0, 0, 0, 0);\n            _maxValue.setHours(0, 0, 0, 0);\n        }\n        if (!includeDate) {\n            _value.setFullYear(0, 0, 0);\n            _maxValue.setFullYear(0, 0, 0);\n        }\n\n        return _value.getTime() > _maxValue.getTime();\n    }\n\n    /**\n     * Determines whether the provided value is less than the provided min value.\n     * @param includeTime set to false if you want to exclude time portion of the two dates\n     * @param includeDate set to false if you want to exclude the date portion of the two dates\n     * @returns true if provided value is less than provided minValue\n     */\n    public static lessThanMinValue(value: Date, minValue: Date, includeTime = true, includeDate = true): boolean {\n        // TODO: check if provided dates are valid dates and not Invalid Date\n        // if value is Invalid Date and minValue is valid date this will return:\n        // - false if includeDate is true\n        // - true if includeDate is false\n        if (includeTime && includeDate) {\n            return value.getTime() < minValue.getTime();\n        }\n\n        const _value = new Date(value.getTime());\n        const _minValue = new Date(minValue.getTime());\n        if (!includeTime) {\n            _value.setHours(0, 0, 0, 0);\n            _minValue.setHours(0, 0, 0, 0);\n        }\n        if (!includeDate) {\n            _value.setFullYear(0, 0, 0);\n            _minValue.setFullYear(0, 0, 0);\n        }\n\n        return _value.getTime() < _minValue.getTime();\n    }\n\n    private static ensureLeadingZero(part: DatePartInfo) {\n        switch (part.type) {\n            case DatePart.Date:\n            case DatePart.Month:\n            case DatePart.Hours:\n            case DatePart.Minutes:\n            case DatePart.Seconds:\n                if (part.format.length === 1) {\n                    part.format = part.format.repeat(2);\n                }\n                break;\n        }\n    }\n\n    private static getCleanVal(inputData: string, datePart: DatePartInfo, promptChar?: string): string {\n        return DatePickerUtil.trimEmptyPlaceholders(inputData.substring(datePart.start, datePart.end), promptChar);\n    }\n\n    private static determineDatePart(char: string): DatePart {\n        switch (char) {\n            case 'd':\n            case 'D':\n                return DatePart.Date;\n            case 'M':\n                return DatePart.Month;\n            case 'y':\n            case 'Y':\n                return DatePart.Year;\n            case 'h':\n            case 'H':\n                return DatePart.Hours;\n            case 'm':\n                return DatePart.Minutes;\n            case 's':\n            case 'S':\n                return DatePart.Seconds;\n            case 't':\n            case 'T':\n                return DatePart.AmPm;\n            default:\n                return DatePart.Literal;\n        }\n    }\n\n    /**\n     * This method generates date parts structure based on editor mask and locale.\n     * @param maskValue: string\n     * @param locale: string\n     * @returns array containing information about date parts - type, position, format\n     */\n    public static parseDateFormat(maskValue: string, locale: string = DatePickerUtil.DEFAULT_LOCALE): any[] {\n        let dateStruct = [];\n        if (maskValue === undefined && !isIE()) {\n            dateStruct = DatePickerUtil.getDefaultLocaleMask(locale);\n        } else {\n            const mask = (maskValue) ? maskValue : DatePickerUtil.SHORT_DATE_MASK;\n            const maskArray = Array.from(mask);\n            const monthInitPosition = mask.indexOf(DateChars.MonthChar);\n            const dayInitPosition = mask.indexOf(DateChars.DayChar);\n            const yearInitPosition = mask.indexOf(DateChars.YearChar);\n\n            if (yearInitPosition !== -1) {\n                dateStruct.push({\n                    type: DateParts.Year,\n                    initialPosition: yearInitPosition,\n                    formatType: DatePickerUtil.getYearFormatType(mask)\n                });\n            }\n\n            if (monthInitPosition !== -1) {\n                dateStruct.push({\n                    type: DateParts.Month,\n                    initialPosition: monthInitPosition,\n                    formatType: DatePickerUtil.getMonthFormatType(mask)\n                });\n            }\n\n            if (dayInitPosition !== -1) {\n                dateStruct.push({\n                    type: DateParts.Day,\n                    initialPosition: dayInitPosition,\n                    formatType: DatePickerUtil.getDayFormatType(mask)\n                });\n            }\n\n            for (let i = 0; i < maskArray.length; i++) {\n                if (!DatePickerUtil.isDateChar(maskArray[i])) {\n                    dateStruct.push({\n                        type: DatePickerUtil.SEPARATOR,\n                        initialPosition: i,\n                        value: maskArray[i]\n                    });\n                }\n            }\n\n            dateStruct.sort((a, b) => a.initialPosition - b.initialPosition);\n            DatePickerUtil.fillDatePartsPositions(dateStruct);\n        }\n        return dateStruct;\n    }\n\n    /**\n     * This method generates input mask based on date parts.\n     * @param dateStruct array\n     * @returns input mask\n     */\n    public static getInputMask(dateStruct: any[]): string {\n        const inputMask = [];\n        for (let i = 0; i < dateStruct.length; i++) {\n            if (dateStruct[i].type === DatePickerUtil.SEPARATOR) {\n                inputMask.push(dateStruct[i].value);\n            } else if (dateStruct[i].type === DateParts.Day || dateStruct[i].type === DateParts.Month) {\n                inputMask.push('00');\n            } else if (dateStruct[i].type === DateParts.Year) {\n                switch (dateStruct[i].formatType) {\n                    case FormatDesc.Numeric: {\n                        inputMask.push('0000');\n                        break;\n                    }\n                    case FormatDesc.TwoDigits: {\n                        inputMask.push('00');\n                        break;\n                    }\n                }\n            }\n        }\n        return inputMask.join('');\n    }\n\n    /**\n     * This method generates editor mask.\n     * @param dateStruct\n     * @returns editor mask\n     */\n    public static getMask(dateStruct: any[]): string {\n        const mask = [];\n        for (let i = 0; i < dateStruct.length; i++) {\n            switch (dateStruct[i].formatType) {\n                case FormatDesc.Numeric: {\n                    if (dateStruct[i].type === DateParts.Day) {\n                        mask.push('d');\n                    } else if (dateStruct[i].type === DateParts.Month) {\n                        mask.push('M');\n                    } else {\n                        mask.push('yyyy');\n                    }\n                    break;\n                }\n                case FormatDesc.TwoDigits: {\n                    if (dateStruct[i].type === DateParts.Day) {\n                        mask.push('dd');\n                    } else if (dateStruct[i].type === DateParts.Month) {\n                        mask.push('MM');\n                    } else {\n                        mask.push('yy');\n                    }\n                }\n            }\n\n            if (dateStruct[i].type === DatePickerUtil.SEPARATOR) {\n                mask.push(dateStruct[i].value);\n            }\n        }\n\n        return mask.join('');\n    }\n    /**\n     * This method parses an input string base on date parts and returns a date and its validation state.\n     * @param dateFormatParts\n     * @param prevDateValue\n     * @param inputValue\n     * @returns object containing a date and its validation state\n     */\n    public static parseDateArray(dateFormatParts: any[], prevDateValue: Date, inputValue: string): any {\n        const dayStr = DatePickerUtil.getDayValueFromInput(dateFormatParts, inputValue);\n        const monthStr = DatePickerUtil.getMonthValueFromInput(dateFormatParts, inputValue);\n        const yearStr = DatePickerUtil.getYearValueFromInput(dateFormatParts, inputValue);\n        const yearFormat = DatePickerUtil.getDateFormatPart(dateFormatParts, DateParts.Year).formatType;\n        const day = (dayStr !== '') ? parseInt(dayStr, 10) : 1;\n        const month = (monthStr !== '') ? parseInt(monthStr, 10) - 1 : 0;\n\n        let year;\n        if (yearStr === '') {\n            year = (yearFormat === FormatDesc.TwoDigits) ? '00' : '2000';\n        } else {\n            year = yearStr;\n        }\n        let yearPrefix;\n        if (prevDateValue) {\n            const originalYear = prevDateValue.getFullYear().toString();\n            if (originalYear.length === 4) {\n                yearPrefix = originalYear.substring(0, 2);\n            }\n        } else {\n            yearPrefix = '20';\n        }\n        const fullYear = (yearFormat === FormatDesc.TwoDigits) ? yearPrefix.concat(year) : year;\n\n        if ((month < 0) || (month > 11) || (month === NaN)) {\n            return { state: DateState.Invalid, value: inputValue };\n        }\n\n        if ((day < 1) || (day > DatePickerUtil.daysInMonth(fullYear, month)) || (day === NaN)) {\n            return { state: DateState.Invalid, value: inputValue };\n        }\n\n        return { state: DateState.Valid, date: new Date(fullYear, month, day) };\n    }\n\n    public static maskToPromptChars(mask: string): string {\n        const result = mask.replace(/0|L/g, DatePickerUtil.PROMPT_CHAR);\n        return result;\n    }\n\n    /**\n     * This method replaces prompt chars with empty string.\n     * @param value\n     */\n    public static trimEmptyPlaceholders(value: string, promptChar?: string): string {\n        const result = value.replace(new RegExp(promptChar || '_', 'g'), '');\n        return result;\n    }\n\n    /**\n     * This method is used for spinning date parts.\n     * @param dateFormatParts\n     * @param inputValue\n     * @param position\n     * @param delta\n     * @param isSpinLoop\n     * @return modified text input\n     */\n    public static getModifiedDateInput(dateFormatParts: any[],\n        inputValue: string,\n        position: number,\n        delta: number,\n        isSpinLoop: boolean): string {\n        const datePart = DatePickerUtil.getDatePartOnPosition(dateFormatParts, position);\n        const datePartType = datePart.type;\n        const datePartFormatType = datePart.formatType;\n        let newValue;\n\n        const datePartValue = DatePickerUtil.getDateValueFromInput(dateFormatParts, datePartType, inputValue);\n        newValue = parseInt(datePartValue, 10);\n\n        let maxValue, minValue;\n        const minMax = DatePickerUtil.getMinMaxValue(dateFormatParts, datePart, inputValue);\n        minValue = minMax.min;\n        maxValue = minMax.max;\n\n        if (isNaN(newValue)) {\n            if (minValue === 'infinite') {\n                newValue = 2000;\n            } else {\n                newValue = minValue;\n            }\n        }\n        let tempValue = newValue;\n        tempValue += delta;\n\n        // Infinite loop for full years\n        if (maxValue === 'infinite' && minValue === 'infinite') {\n            newValue = tempValue;\n        }\n\n        if (isSpinLoop) {\n            if (tempValue > maxValue) {\n                tempValue = minValue;\n            }\n            if (tempValue < minValue) {\n                tempValue = maxValue;\n            }\n            newValue = tempValue;\n        } else {\n            if (tempValue <= maxValue && tempValue >= minValue) {\n                newValue = tempValue;\n            }\n        }\n\n        const startIdx = datePart.position[0];\n        const endIdx = datePart.position[1];\n        const start = inputValue.slice(0, startIdx);\n        const end = inputValue.slice(endIdx, inputValue.length);\n        let changedPart: string;\n\n        const prefix = DatePickerUtil.getNumericFormatPrefix(datePartFormatType);\n        changedPart = (newValue < 10) ? `${prefix}${newValue}` : `${newValue}`;\n\n        return `${start}${changedPart}${end}`;\n    }\n\n    /**\n     * This method returns date input with prompt chars.\n     * @param dateFormatParts\n     * @param date\n     * @param inputValue\n     * @returns date input including prompt chars\n     */\n    public static addPromptCharsEditMode(dateFormatParts: any[], date: Date, inputValue: string): string {\n        const dateArray = Array.from(inputValue);\n        for (let i = 0; i < dateFormatParts.length; i++) {\n            if (dateFormatParts[i].formatType === FormatDesc.Numeric) {\n                if ((dateFormatParts[i].type === DateParts.Day && date.getDate() < 10)\n                    || (dateFormatParts[i].type === DateParts.Month && date.getMonth() + 1 < 10)) {\n                    dateArray.splice(dateFormatParts[i].position[0], 0, DatePickerUtil.PROMPT_CHAR);\n                    dateArray.join('');\n                }\n            }\n        }\n        return dateArray.join('');\n    }\n\n    /**\n     * This method checks if date input is done.\n     * @param dateFormatParts\n     * @param input\n     * @returns input completeness\n     */\n    public static checkForCompleteDateInput(dateFormatParts: any[], input: string): string {\n        const dayValue = DatePickerUtil.getDayValueFromInput(dateFormatParts, input);\n        const monthValue = DatePickerUtil.getMonthValueFromInput(dateFormatParts, input);\n        const yearValue = DatePickerUtil.getYearValueFromInput(dateFormatParts, input);\n        const dayStr = DatePickerUtil.getDayValueFromInput(dateFormatParts, input, false);\n        const monthStr = DatePickerUtil.getMonthValueFromInput(dateFormatParts, input, false);\n\n        if (DatePickerUtil.isFullInput(dayValue, dayStr)\n            && DatePickerUtil.isFullInput(monthValue, monthStr)\n            && DatePickerUtil.isFullYearInput(dateFormatParts, yearValue)) {\n            return 'complete';\n        } else if (dayValue === '' && monthValue === '' && yearValue === '') {\n            return 'empty';\n        } else if (dayValue === '' || monthValue === '' || yearValue === '') {\n            return 'partial';\n        }\n        return '';\n    }\n\n    public static daysInMonth(fullYear: number, month: number): number {\n        return new Date(fullYear, month + 1, 0).getDate();\n    }\n\n    /**\n     * Parse provided input to Date.\n     * @param value input to parse\n     * @returns Date if parse succeed or null\n     */\n    public static parseDate(value: any): Date | null {\n        if (typeof value === 'number') {\n            return new Date(value);\n        }\n\n        // if value is Invalid Date we should return null\n        if (this.isDate(value)) {\n            return this.isValidDate(value) ? value : null;\n        }\n\n        return value ? new Date(Date.parse(value)) : null;\n    }\n\n    /**\n     * Returns whether provided input is date\n     * @param value input to check\n     * @returns true if provided input is date\n     */\n    public static isDate(value: any): boolean {\n        return Object.prototype.toString.call(value) === '[object Date]';\n    }\n\n    /**\n     * Returns whether the input is valid date\n     * @param value input to check\n     * @returns true if provided input is a valid date\n     */\n    public static isValidDate(value: any): boolean {\n        if (this.isDate(value)) {\n            return !isNaN(value.getTime());\n        }\n\n        return false;\n    }\n\n    private static getYearFormatType(format: string): string {\n        switch (format.match(new RegExp(DateChars.YearChar, 'g')).length) {\n            case 1: {\n                // y (2020)\n                return FormatDesc.Numeric;\n            }\n            case 4: {\n                // yyyy (2020)\n                return FormatDesc.Numeric;\n            }\n            case 2: {\n                // yy (20)\n                return FormatDesc.TwoDigits;\n            }\n        }\n    }\n\n    private static getMonthFormatType(format: string): string {\n        switch (format.match(new RegExp(DateChars.MonthChar, 'g')).length) {\n            case 1: {\n                // M (8)\n                return FormatDesc.Numeric;\n            }\n            case 2: {\n                // MM (08)\n                return FormatDesc.TwoDigits;\n            }\n        }\n    }\n\n    private static getDayFormatType(format: string): string {\n        switch (format.match(new RegExp(DateChars.DayChar, 'g')).length) {\n            case 1: {\n                // d (6)\n                return FormatDesc.Numeric;\n            }\n            case 2: {\n                // dd (06)\n                return FormatDesc.TwoDigits;\n            }\n        }\n    }\n\n    private static getDefaultLocaleMask(locale: string) {\n        const dateStruct = [];\n        const formatter = new Intl.DateTimeFormat(locale);\n        const formatToParts = formatter.formatToParts(new Date());\n        for (let i = 0; i < formatToParts.length; i++) {\n            if (formatToParts[i].type === DatePickerUtil.SEPARATOR) {\n                dateStruct.push({\n                    type: DatePickerUtil.SEPARATOR,\n                    value: formatToParts[i].value\n                });\n            } else {\n                dateStruct.push({\n                    type: formatToParts[i].type\n                });\n            }\n        }\n        const formatterOptions = formatter.resolvedOptions();\n        for (let i = 0; i < dateStruct.length; i++) {\n            switch (dateStruct[i].type) {\n                case DateParts.Day: {\n                    dateStruct[i].formatType = formatterOptions.day;\n                    break;\n                }\n                case DateParts.Month: {\n                    dateStruct[i].formatType = formatterOptions.month;\n                    break;\n                }\n                case DateParts.Year: {\n                    dateStruct[i].formatType = formatterOptions.year;\n                    break;\n                }\n            }\n        }\n        DatePickerUtil.fillDatePartsPositions(dateStruct);\n        return dateStruct;\n    }\n\n    private static isDateChar(char: string): boolean {\n        return (char === DateChars.YearChar || char === DateChars.MonthChar || char === DateChars.DayChar);\n    }\n\n    private static getNumericFormatPrefix(formatType: string): string {\n        switch (formatType) {\n            case FormatDesc.TwoDigits: {\n                return '0';\n            }\n            case FormatDesc.Numeric: {\n                return DatePickerUtil.PROMPT_CHAR;\n            }\n        }\n    }\n\n    private static getMinMaxValue(dateFormatParts: any[], datePart, inputValue: string): any {\n        let maxValue, minValue;\n        switch (datePart.type) {\n            case DateParts.Month: {\n                minValue = 1;\n                maxValue = DatePickerUtil.NUMBER_OF_MONTHS;\n                break;\n            }\n            case DateParts.Day: {\n                minValue = 1;\n                maxValue = DatePickerUtil.daysInMonth(\n                    DatePickerUtil.getFullYearFromString(DatePickerUtil.getDateFormatPart(dateFormatParts, DateParts.Year), inputValue),\n                    parseInt(DatePickerUtil.getMonthValueFromInput(dateFormatParts, inputValue), 10));\n                break;\n            }\n            case DateParts.Year: {\n                if (datePart.formatType === FormatDesc.TwoDigits) {\n                    minValue = 0;\n                    maxValue = 99;\n                } else {\n                    // Infinite loop\n                    minValue = 'infinite';\n                    maxValue = 'infinite';\n                }\n                break;\n            }\n        }\n        return { min: minValue, max: maxValue };\n    }\n\n    private static getDateValueFromInput(dateFormatParts: any[], type: DateParts, inputValue: string, trim: boolean = true): string {\n        const partPosition = DatePickerUtil.getDateFormatPart(dateFormatParts, type).position;\n        const result = inputValue.substring(partPosition[0], partPosition[1]);\n        return (trim) ? DatePickerUtil.trimEmptyPlaceholders(result) : result;\n    }\n\n    private static getDayValueFromInput(dateFormatParts: any[], inputValue: string, trim: boolean = true): string {\n        return DatePickerUtil.getDateValueFromInput(dateFormatParts, DateParts.Day, inputValue, trim);\n    }\n\n    private static getMonthValueFromInput(dateFormatParts: any[], inputValue: string, trim: boolean = true): string {\n        return DatePickerUtil.getDateValueFromInput(dateFormatParts, DateParts.Month, inputValue, trim);\n    }\n\n    private static getYearValueFromInput(dateFormatParts: any[], inputValue: string, trim: boolean = true): string {\n        return DatePickerUtil.getDateValueFromInput(dateFormatParts, DateParts.Year, inputValue, trim);\n    }\n\n    private static getDateFormatPart(dateFormatParts: any[], type: DateParts): any {\n        const result = dateFormatParts.filter((datePart) => (datePart.type === type))[0];\n        return result;\n    }\n\n    private static isFullInput(value: any, input: string): boolean {\n        return (value !== '' && input.length === 2 && input.charAt(1) !== DatePickerUtil.PROMPT_CHAR);\n    }\n\n    private static isFullYearInput(dateFormatParts: any[], value: any): boolean {\n        switch (DatePickerUtil.getDateFormatPart(dateFormatParts, DateParts.Year).formatType) {\n            case FormatDesc.Numeric: {\n                return (value !== '' && value.length === 4);\n            }\n            case FormatDesc.TwoDigits: {\n                return (value !== '' && value.length === 2);\n            }\n            default: {\n                return false;\n            }\n        }\n    }\n\n    private static getDatePartOnPosition(dateFormatParts: any[], position: number) {\n        const result = dateFormatParts.filter((element) =>\n            element.position[0] <= position && position <= element.position[1] && element.type !== DatePickerUtil.SEPARATOR)[0];\n        return result;\n    }\n\n    private static getFullYearFromString(yearPart, inputValue): number {\n        return parseInt(inputValue.substring(yearPart.position[0], yearPart.position[1]), 10);\n    }\n\n    private static fillDatePartsPositions(dateArray: any[]): void {\n        let currentPos = 0;\n\n        for (let i = 0; i < dateArray.length; i++) {\n            // Day|Month part positions\n            if (dateArray[i].type === DateParts.Day || dateArray[i].type === DateParts.Month) {\n                // Offset 2 positions for number\n                dateArray[i].position = [currentPos, currentPos + 2];\n                currentPos += 2;\n            } else if (dateArray[i].type === DateParts.Year) {\n                // Year part positions\n                switch (dateArray[i].formatType) {\n                    case FormatDesc.Numeric: {\n                        // Offset 4 positions for full year\n                        dateArray[i].position = [currentPos, currentPos + 4];\n                        currentPos += 4;\n                        break;\n                    }\n                    case FormatDesc.TwoDigits: {\n                        // Offset 2 positions for short year\n                        dateArray[i].position = [currentPos, currentPos + 2];\n                        currentPos += 2;\n                        break;\n                    }\n                }\n            } else if (dateArray[i].type === DatePickerUtil.SEPARATOR) {\n                // Separator positions\n                dateArray[i].position = [currentPos, currentPos + 1];\n                currentPos++;\n            }\n        }\n    }\n}\n\n","import {\n  Directive, Input, ElementRef,\n  Renderer2, NgModule, Output, EventEmitter, Inject, LOCALE_ID, OnChanges, SimpleChanges, Host, Optional, Injector\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  Validator, AbstractControl, ValidationErrors, NG_VALIDATORS, NgControl, NG_VALUE_ACCESSOR,\n} from '@angular/forms';\nimport { formatDate, DOCUMENT } from '@angular/common';\nimport { IgxMaskDirective } from '../mask/mask.directive';\nimport { MaskParsingService } from '../mask/mask-parsing.service';\nimport { KEYS } from '../../core/utils';\nimport {\n  DatePickerUtil\n} from '../../date-picker/date-picker.utils';\nimport { IgxDateTimeEditorEventArgs, DatePartInfo, DatePart } from './date-time-editor.common';\n\n/**\n * Date Time Editor provides a functionality to input, edit and format date and time.\n *\n * @igxModule IgxDateTimeEditorModule\n *\n * @igxParent IgxInputGroup\n *\n * @igxTheme igx-input-theme\n *\n * @igxKeywords date, time, editor\n *\n * @igxGroup Scheduling\n *\n * @remarks\n *\n * The Ignite UI Date Time Editor Directive makes it easy for developers to manipulate date/time user input.\n * It requires input in a specified or default input format which is visible in the input element as a placeholder.\n * It allows the input of only date (ex: 'dd/MM/yyyy'), only time (ex:'HH:mm tt') or both at once, if needed.\n * Supports display format that may differ from the input format.\n * Provides methods to increment and decrement any specific/targeted `DatePart`.\n *\n * @example\n * ```html\n * <igx-input-group>\n *   <input type=\"text\" igxInput [igxDateTimeEditor]=\"'dd/MM/yyyy'\" [displayFormat]=\"'shortDate'\" [(ngModel)]=\"date\"/>\n * </igx-input-group>\n * ```\n */\n@Directive({\n  selector: '[igxDateTimeEditor]',\n  exportAs: 'igxDateTimeEditor',\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: IgxDateTimeEditorDirective, multi: true },\n    { provide: NG_VALIDATORS, useExisting: IgxDateTimeEditorDirective, multi: true }\n  ]\n})\nexport class IgxDateTimeEditorDirective extends IgxMaskDirective implements OnChanges, Validator, ControlValueAccessor {\n  /**\n   * Locale settings used for value formatting.\n   *\n   * @remarks\n   * Uses Angular's `LOCALE_ID` by default. Affects both input mask and display format if those are not set.\n   *\n   * @example\n   * ```html\n   * <input igxDateTimeEditor [locale]=\"'en'\">\n   * ```\n   */\n  @Input()\n  public locale: string;\n\n  /**\n   * Minimum value required for the editor to remain valid.\n   *\n   * @remarks\n   * If a `string` value is passed, it must be in the defined input format.\n   *\n   * @example\n   * ```html\n   * <input igxDateTimeEditor [minValue]=\"minDate\">\n   * ```\n   */\n  public get minValue(): string | Date {\n    return this._minValue;\n  }\n\n  @Input()\n  public set minValue(value: string | Date) {\n    this._minValue = value;\n    this.onValidatorChange();\n  }\n\n  /**\n   * Maximum value required for the editor to remain valid.\n   *\n   * @remarks\n   * If a `string` value is passed in, it must be in the defined input format.\n   *\n   * @example\n   * ```html\n   * <input igxDateTimeEditor [maxValue]=\"maxDate\">\n   * ```\n   */\n  public get maxValue(): string | Date {\n    return this._maxValue;\n  }\n\n  @Input()\n  public set maxValue(value: string | Date) {\n    this._maxValue = value;\n    this.onValidatorChange();\n  }\n\n  /**\n   * Specify if the currently spun date segment should loop over.\n   * @example\n   * ```html\n   * <input igxDateTimeEditor [isSpinLoop]=\"false\">\n   * ```\n   */\n  @Input()\n  public isSpinLoop = true;\n\n  /**\n   * Set both pre-defined format options such as `shortDate` and `longDate`,\n   * as well as constructed format string using characters supported by `DatePipe`, e.g. `EE/MM/yyyy`.\n   * @example\n   * ```html\n   * <input igxDateTimeEditor [displayFormat]=\"'shortDate'\">\n   * ```\n   */\n  @Input()\n  public displayFormat: string;\n\n  /**\n   * Expected user input format (and placeholder).\n   * @example\n   * ```html\n   * <input [igxDateTimeEditor]=\"'dd/MM/yyyy'\">\n   * ```\n   */\n  @Input(`igxDateTimeEditor`)\n  public set inputFormat(value: string) {\n    if (value) {\n      this._format = value;\n    }\n    const mask = (this.inputFormat || DatePickerUtil.DEFAULT_INPUT_FORMAT)\n      .replace(new RegExp(/(?=[^t])[\\w]/, 'g'), '0');\n    this.mask = mask.indexOf('tt') !== -1 ? mask.replace(new RegExp('tt', 'g'), 'LL') : mask;\n  }\n\n  public get inputFormat(): string {\n    return this._format;\n  }\n\n  /**\n   * Editor value.\n   * @example\n   * ```html\n   * <input igxDateTimeEditor [value]=\"date\">\n   * ```\n   */\n  @Input()\n  public set value(value: Date) {\n    this._value = value;\n    this.onChangeCallback(value);\n    this.updateMask();\n  }\n\n  public get value(): Date {\n    return this._value;\n  }\n\n  /**\n   * Emitted when the editor's value has changed.\n   * @example\n   * ```html\n   * <input igxDateTimeEditor (valueChange)=\"onValueChanged($event)\"/>\n   * ```\n   */\n  @Output()\n  public valueChange = new EventEmitter<Date>();\n\n  /**\n   * Emitted when the editor is not within a specified range or when the editor's value is in an invalid state.\n   * @example\n   * ```html\n   * <input igxDateTimeEditor [minValue]=\"minDate\" [maxValue]=\"maxDate\" (validationFailed)=\"onValidationFailed($event)\"/>\n   * ```\n   */\n  @Output()\n  public validationFailed = new EventEmitter<IgxDateTimeEditorEventArgs>();\n\n  private _value: Date;\n  private _format: string;\n  private document: Document;\n  private _isFocused: boolean;\n  private _minValue: string | Date;\n  private _maxValue: string | Date;\n  private _oldValue: Date | string;\n  private _inputDateParts: DatePartInfo[];\n  private onTouchCallback = (...args: any[]) => { };\n  private onChangeCallback = (...args: any[]) => { };\n  private onValidatorChange = (...args: any[]) => { };\n\n  private get emptyMask(): string {\n    return this.maskParser.applyMask(null, this.maskOptions);\n  }\n\n  private get targetDatePart(): DatePart {\n    if (this.document.activeElement === this.nativeElement) {\n      return this._inputDateParts\n        .find(p => p.start <= this.selectionStart && this.selectionStart <= p.end && p.type !== DatePart.Literal)?.type;\n    } else {\n      if (this._inputDateParts.some(p => p.type === DatePart.Date)) {\n        return DatePart.Date;\n      } else if (this._inputDateParts.some(p => p.type === DatePart.Hours)) {\n        return DatePart.Hours;\n      }\n    }\n  }\n\n  private get hasDateParts() {\n    return this._inputDateParts.some(\n      p => p.type === DatePart.Date\n        || p.type === DatePart.Month\n        || p.type === DatePart.Year);\n  }\n\n  private get hasTimeParts() {\n    return this._inputDateParts.some(\n      p => p.type === DatePart.Hours\n        || p.type === DatePart.Minutes\n        || p.type === DatePart.Seconds);\n  }\n\n  constructor(\n    protected renderer: Renderer2,\n    protected elementRef: ElementRef,\n    protected maskParser: MaskParsingService,\n    @Inject(DOCUMENT) private _document: any,\n    @Inject(LOCALE_ID) private _locale: any) {\n    super(elementRef, maskParser, renderer);\n    this.document = this._document as Document;\n    this.locale = this.locale || this._locale;\n  }\n\n  /** @hidden @internal */\n  public ngOnChanges(changes: SimpleChanges) {\n    if (changes['inputFormat'] || changes['locale']) {\n      const defPlaceholder = this.inputFormat || DatePickerUtil.getDefaultInputFormat(this.locale);\n      this._inputDateParts = DatePickerUtil.parseDateTimeFormat(this.inputFormat);\n      this.inputFormat = this._inputDateParts.map(p => p.format).join('');\n      if (!this.nativeElement.placeholder) {\n        this.renderer.setAttribute(this.nativeElement, 'placeholder', defPlaceholder);\n      }\n      // TODO: fill in partial dates?\n      this.updateMask();\n    }\n  }\n\n  /** Clear the input element value. */\n  public clear(): void {\n    this.updateValue(null);\n  }\n\n  /**\n   * Increment specified DatePart.\n   * @param datePart The optional DatePart to increment. Defaults to Date or Hours(when Date is absent from the inputFormat - ex:'HH:mm').\n   */\n  public increment(datePart?: DatePart): void {\n    const targetDatePart = this.targetDatePart;\n    if (!targetDatePart) { return; }\n    const newValue = datePart\n      ? this.spinValue(datePart, 1)\n      : this.spinValue(targetDatePart, 1);\n    this.updateValue(newValue ? newValue : new Date());\n  }\n\n  /**\n   * Decrement specified DatePart.\n   *\n   * @param datePart The optional DatePart to decrement. Defaults to Date or Hours(when Date is absent from the inputFormat - ex:'HH:mm').\n   */\n  public decrement(datePart?: DatePart): void {\n    const targetDatePart = this.targetDatePart;\n    if (!targetDatePart) { return; }\n    const newValue = datePart\n      ? this.spinValue(datePart, -1)\n      : this.spinValue(targetDatePart, -1);\n    this.updateValue(newValue ? newValue : new Date());\n  }\n\n  /** @hidden @internal */\n  public writeValue(value: any): void {\n    this._value = value;\n    this.updateMask();\n  }\n\n  /** @hidden @internal */\n  public validate(control: AbstractControl): ValidationErrors | null {\n    if (!this.inputIsComplete() || !control.value) {\n      return { 'value': true };\n    }\n\n    const maxValueAsDate = this.isDate(this.maxValue) ? this.maxValue : this.parseDate(this.maxValue);\n    const minValueAsDate = this.isDate(this.minValue) ? this.minValue : this.parseDate(this.minValue);\n    if (minValueAsDate\n      && DatePickerUtil.lessThanMinValue(\n        control.value, minValueAsDate, this.hasTimeParts, this.hasDateParts)) {\n      return { 'minValue': true };\n    }\n    if (maxValueAsDate\n      && DatePickerUtil.greaterThanMaxValue(\n        control.value, maxValueAsDate, this.hasTimeParts, this.hasDateParts)) {\n      return { 'maxValue': true };\n    }\n\n    return null;\n  }\n\n  /** @hidden @internal */\n  public registerOnValidatorChange?(fn: () => void): void { this.onValidatorChange = fn; }\n\n  /** @hidden @internal */\n  public registerOnChange(fn: any): void { this.onChangeCallback = fn; }\n\n  /** @hidden @internal */\n  public registerOnTouched(fn: any): void { this.onTouchCallback = fn; }\n\n  /** @hidden @internal */\n  public setDisabledState?(isDisabled: boolean): void { }\n\n  /** @hidden @internal */\n  public onInputChanged() {\n    super.onInputChanged();\n    if (this.inputIsComplete()) {\n      const parsedDate = this.parseDate(this.inputValue);\n      if (this.isValidDate(parsedDate)) {\n        this.updateValue(parsedDate);\n      } else {\n        const oldValue = this.value && new Date(this.value.getTime());\n        const args = { oldValue: oldValue, newValue: parsedDate, userInput: this.inputValue };\n        this.validationFailed.emit(args);\n        if (args.newValue?.getTime && args.newValue.getTime() !== oldValue.getTime()) {\n          this.updateValue(args.newValue);\n        } else {\n          this.updateValue(null);\n        }\n      }\n    } else {\n      this.updateValue(null);\n    }\n  }\n\n  /** @hidden @internal */\n  public onKeyDown(event: KeyboardEvent): void {\n    super.onKeyDown(event);\n    if (event.altKey) { return; }\n    if (event.key === KEYS.UP_ARROW || event.key === KEYS.UP_ARROW_IE ||\n      event.key === KEYS.DOWN_ARROW || event.key === KEYS.DOWN_ARROW_IE) {\n      this.spin(event);\n      return;\n    }\n\n    if (event.ctrlKey && event.key === KEYS.SEMICOLON) {\n      this.updateValue(new Date());\n    }\n\n    this.moveCursor(event);\n  }\n\n  /** @hidden @internal */\n  public onFocus(): void {\n    this._isFocused = true;\n    this.onTouchCallback();\n    this.updateMask();\n    super.onFocus();\n  }\n\n  /** @hidden @internal */\n  public onBlur(value: string): void {\n    this._isFocused = false;\n    if (!this.inputIsComplete() && this.inputValue !== this.emptyMask) {\n      this.updateValue(this.parseDate(this.inputValue));\n    } else {\n      this.updateMask();\n    }\n\n    super.onBlur(value);\n  }\n\n  /** @hidden @internal */\n  public updateMask(): void {\n    if (this._isFocused) {\n      if (!this.value) { return; }\n      // store the cursor position as it will be moved during masking\n      const cursor = this.selectionEnd;\n      this.inputValue = this.getMaskedValue();\n      this.setSelectionRange(cursor);\n    } else {\n      if (!this.value || !this.isValidDate(this.value)) {\n        this.inputValue = '';\n        return;\n      }\n      const format = this.displayFormat || this.inputFormat;\n      if (format) {\n        this.inputValue = formatDate(this.value, format.replace('tt', 'aa'), this.locale);\n      } else {\n        // TODO: formatter function?\n        this.inputValue = this.value.toLocaleString();\n      }\n    }\n  }\n\n  private getMaskedValue(): string {\n    let mask = this.emptyMask;\n    for (const part of this._inputDateParts) {\n      if (part.type === DatePart.Literal) { continue; }\n      const targetValue = this.getPartValue(part, part.format.length);\n      mask = this.maskParser.replaceInMask(mask, targetValue, this.maskOptions, part.start, part.end).value;\n    }\n\n    return mask;\n  }\n\n  // TODO: move isDate to utils\n  private isDate(value: any): value is Date {\n    return value instanceof Date && typeof value === 'object';\n  }\n\n  private valueInRange(value: Date): boolean {\n    if (!value) { return false; }\n    const maxValueAsDate = this.isDate(this.maxValue) ? this.maxValue : this.parseDate(this.maxValue);\n    const minValueAsDate = this.isDate(this.minValue) ? this.minValue : this.parseDate(this.minValue);\n    if (minValueAsDate\n      && DatePickerUtil.lessThanMinValue(\n        value, minValueAsDate, this.hasTimeParts, this.hasDateParts)) {\n      return false;\n    }\n    if (maxValueAsDate\n      && DatePickerUtil.greaterThanMaxValue(\n        value, maxValueAsDate, this.hasTimeParts, this.hasDateParts)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private spinValue(datePart: DatePart, delta: number): Date {\n    if (!this.value || !this.isValidDate(this.value)) { return null; }\n    const newDate = new Date(this.value.getTime());\n    switch (datePart) {\n      case DatePart.Date:\n        DatePickerUtil.spinDate(delta, newDate, this.isSpinLoop);\n        break;\n      case DatePart.Month:\n        DatePickerUtil.spinMonth(delta, newDate, this.isSpinLoop);\n        break;\n      case DatePart.Year:\n        DatePickerUtil.spinYear(delta, newDate);\n        break;\n      case DatePart.Hours:\n        DatePickerUtil.spinHours(delta, newDate, this.isSpinLoop);\n        break;\n      case DatePart.Minutes:\n        DatePickerUtil.spinMinutes(delta, newDate, this.isSpinLoop);\n        break;\n      case DatePart.Seconds:\n        DatePickerUtil.spinSeconds(delta, newDate, this.isSpinLoop);\n        break;\n      case DatePart.AmPm:\n        const formatPart = this._inputDateParts.find(dp => dp.type === DatePart.AmPm);\n        const amPmFromMask = this.inputValue.substring(formatPart.start, formatPart.end);\n        return DatePickerUtil.spinAmPm(newDate, this.value, amPmFromMask);\n    }\n\n    return newDate;\n  }\n\n  private updateValue(newDate: Date): void {\n    this._oldValue = this.value;\n    this.value = newDate;\n\n    if (this.value && !this.valueInRange(this.value)) {\n      this.validationFailed.emit({ oldValue: this._oldValue, newValue: this.value, userInput: this.inputValue });\n    }\n    if (this.inputIsComplete() || this.inputValue === this.emptyMask) {\n      this.valueChange.emit(this.value);\n    }\n  }\n\n  private toTwelveHourFormat(value: string): number {\n    let hour = parseInt(value.replace(new RegExp(this.promptChar, 'g'), '0'), 10);\n    if (hour > 12) {\n      hour -= 12;\n    } else if (hour === 0) {\n      hour = 12;\n    }\n\n    return hour;\n  }\n\n  private getPartValue(datePartInfo: DatePartInfo, partLength: number): string {\n    let maskedValue;\n    const datePart = datePartInfo.type;\n    switch (datePart) {\n      case DatePart.Date:\n        maskedValue = this.value.getDate();\n        break;\n      case DatePart.Month:\n        // months are zero based\n        maskedValue = this.value.getMonth() + 1;\n        break;\n      case DatePart.Year:\n        if (partLength === 2) {\n          maskedValue = this.prependValue(\n            parseInt(this.value.getFullYear().toString().slice(-2), 10), partLength, '0');\n        } else {\n          maskedValue = this.value.getFullYear();\n        }\n        break;\n      case DatePart.Hours:\n        if (datePartInfo.format.indexOf('h') !== -1) {\n          maskedValue = this.prependValue(\n            this.toTwelveHourFormat(this.value.getHours().toString()), partLength, '0');\n        } else {\n          maskedValue = this.value.getHours();\n        }\n        break;\n      case DatePart.Minutes:\n        maskedValue = this.value.getMinutes();\n        break;\n      case DatePart.Seconds:\n        maskedValue = this.value.getSeconds();\n        break;\n      case DatePart.AmPm:\n        maskedValue = this.value.getHours() >= 12 ? 'PM' : 'AM';\n        break;\n    }\n\n    if (datePartInfo.type !== DatePart.AmPm) {\n      return this.prependValue(maskedValue, partLength, '0');\n    }\n\n    return maskedValue;\n  }\n\n  private prependValue(value: number, partLength: number, prependChar: string): string {\n    return (prependChar + value.toString()).slice(-partLength);\n  }\n\n  private spin(event: KeyboardEvent): void {\n    event.preventDefault();\n    switch (event.key) {\n      case KEYS.UP_ARROW:\n      case KEYS.UP_ARROW_IE:\n        this.increment();\n        break;\n      case KEYS.DOWN_ARROW:\n      case KEYS.DOWN_ARROW_IE:\n        this.decrement();\n        break;\n    }\n  }\n\n  private inputIsComplete(): boolean {\n    return this.inputValue.indexOf(this.promptChar) === -1;\n  }\n\n  private isValidDate(date: Date): boolean {\n    return date && date.getTime && !isNaN(date.getTime());\n  }\n\n    // TODO: move parseDate to utils\n    public parseDate(val: string): Date | null {\n    if (!val) { return null; }\n    return DatePickerUtil.parseValueFromMask(val, this._inputDateParts, this.promptChar);\n  }\n\n  private moveCursor(event: KeyboardEvent): void {\n    const value = (event.target as HTMLInputElement).value;\n    switch (event.key) {\n      case KEYS.LEFT_ARROW:\n      case KEYS.LEFT_ARROW_IE:\n        if (event.ctrlKey) {\n          event.preventDefault();\n          this.setSelectionRange(this.getNewPosition(value));\n        }\n        break;\n      case KEYS.RIGHT_ARROW:\n      case KEYS.RIGHT_ARROW_IE:\n        if (event.ctrlKey) {\n          event.preventDefault();\n          this.setSelectionRange(this.getNewPosition(value, 1));\n        }\n        break;\n    }\n  }\n\n  /**\n   * Move the cursor in a specific direction until it reaches a date/time separator.\n   * Then return its index.\n   *\n   * @param value The string it operates on.\n   * @param direction 0 is left, 1 is right. Default is 0.\n   */\n  private getNewPosition(value: string, direction = 0): number {\n    const literals = this._inputDateParts.filter(p => p.type === DatePart.Literal);\n    let cursorPos = this.selectionStart;\n    if (!direction) {\n      do {\n        cursorPos = cursorPos > 0 ? --cursorPos : cursorPos;\n      } while (!literals.some(l => l.end === cursorPos) && cursorPos > 0);\n      return cursorPos;\n    } else {\n      do {\n        cursorPos++;\n      } while (!literals.some(l => l.start === cursorPos) && cursorPos < value.length);\n      return cursorPos;\n    }\n  }\n}\n\n@NgModule({\n  declarations: [IgxDateTimeEditorDirective],\n  exports: [IgxDateTimeEditorDirective]\n})\nexport class IgxDateTimeEditorModule { }\n","/**\n * Provides base filtering operations\n * Implementations should be Singleton\n *\n * @export\n */\nexport class IgxFilteringOperand {\n    protected static _instance: IgxFilteringOperand = null;\n    public operations: IFilteringOperation[];\n\n    public constructor() {\n        this.operations = [{\n            name: 'null',\n            isUnary: true,\n            iconName: 'is_null',\n            logic: (target: any) => {\n                return target === null;\n            }\n        }, {\n            name: 'notNull',\n            isUnary: true,\n            iconName: 'is_not_null',\n            logic: (target: any) => {\n                return target !== null;\n            }\n        }, {\n            name: 'in',\n            isUnary: false,\n            iconName: 'is_in',\n            hidden: true,\n            logic: (target: any, searchVal: Set<any>) => {\n                return this.findValueInSet(target, searchVal);\n            }\n        }];\n    }\n\n    public static instance(): IgxFilteringOperand {\n        return this._instance || (this._instance = new this());\n    }\n\n    /**\n     * @hidden\n     */\n    protected findValueInSet(target: any, searchVal: Set<any>) {\n        return searchVal.has(target);\n    }\n\n    /**\n     * Returns an array of names of the conditions which are visible in the UI\n     */\n    public conditionList(): string[] {\n        return this.operations.filter(f => !f.hidden).map((element) => element.name);\n    }\n\n    /**\n     * Returns an instance of the condition with the specified name.\n     * @param name The name of the condition.\n     */\n    public condition(name: string): IFilteringOperation {\n        return this.operations.find((element) => element.name === name);\n    }\n\n    /**\n     * Adds a new condition to the filtering operations.\n     * @param operation The filtering operation.\n     */\n    public append(operation: IFilteringOperation) {\n        this.operations.push(operation);\n    }\n}\n\n/**\n * Provides filtering operations for booleans\n *\n * @export\n */\nexport class IgxBooleanFilteringOperand extends IgxFilteringOperand {\n    protected constructor() {\n        super();\n        this.operations = [{\n            name: 'all',\n            isUnary: true,\n            iconName: 'all',\n            logic: (target: boolean) => {\n                return true;\n            }\n        }, {\n            name: 'true',\n            isUnary: true,\n            iconName: 'is_true',\n            logic: (target: boolean) => {\n                return !!(target && target !== null && target !== undefined);\n            }\n        }, {\n            name: 'false',\n            isUnary: true,\n            iconName: 'is_false',\n            logic: (target: boolean) => {\n                return !target && target !== null && target !== undefined;\n            }\n        }, {\n            name: 'empty',\n            isUnary: true,\n            iconName: 'empty',\n            logic: (target: boolean) => {\n                return target === null || target === undefined;\n            }\n        }, {\n            name: 'notEmpty',\n            isUnary: true,\n            iconName: 'not_empty',\n            logic: (target: boolean) => {\n                return target !== null && target !== undefined;\n            }\n        }].concat(this.operations);\n    }\n}\n\n/**\n * Provides filtering operations for Dates\n *\n * @export\n */\nexport class IgxDateFilteringOperand extends IgxFilteringOperand {\n    protected constructor() {\n        super();\n        this.operations = [{\n            name: 'equals',\n            isUnary: false,\n            iconName: 'equals',\n            logic: (target: Date, searchVal: Date) => {\n                if (!target) {\n                    return false;\n                }\n\n                this.validateInputData(target);\n\n                const targetp = IgxDateFilteringOperand.getDateParts(target, 'yMd');\n                const searchp = IgxDateFilteringOperand.getDateParts(searchVal, 'yMd');\n                return targetp.year === searchp.year &&\n                    targetp.month === searchp.month &&\n                    targetp.day === searchp.day;\n            }\n        }, {\n            name: 'doesNotEqual',\n            isUnary: false,\n            iconName: 'not_equal',\n            logic: (target: Date, searchVal: Date) => {\n                if (!target) {\n                    return true;\n                }\n\n                this.validateInputData(target);\n\n                const targetp = IgxDateFilteringOperand.getDateParts(target, 'yMd');\n                const searchp = IgxDateFilteringOperand.getDateParts(searchVal, 'yMd');\n                return targetp.year !== searchp.year ||\n                    targetp.month !== searchp.month ||\n                    targetp.day !== searchp.day;\n            }\n        }, {\n            name: 'before',\n            isUnary: false,\n            iconName: 'is_before',\n            logic: (target: Date, searchVal: Date) => {\n                if (!target) {\n                    return false;\n                }\n\n                this.validateInputData(target);\n\n                return target < searchVal;\n            }\n        }, {\n            name: 'after',\n            isUnary: false,\n            iconName: 'is_after',\n            logic: (target: Date, searchVal: Date) => {\n                if (!target) {\n                    return false;\n                }\n\n                this.validateInputData(target);\n\n                return target > searchVal;\n            }\n        }, {\n            name: 'today',\n            isUnary: true,\n            iconName: 'today',\n            logic: (target: Date) => {\n                if (!target) {\n                    return false;\n                }\n\n                this.validateInputData(target);\n\n                const d = IgxDateFilteringOperand.getDateParts(target, 'yMd');\n                const now = IgxDateFilteringOperand.getDateParts(new Date(), 'yMd');\n                return d.year === now.year &&\n                    d.month === now.month &&\n                    d.day === now.day;\n            }\n        }, {\n            name: 'yesterday',\n            isUnary: true,\n            iconName: 'yesterday',\n            logic: (target: Date) => {\n                if (!target) {\n                    return false;\n                }\n\n                this.validateInputData(target);\n\n                const td = IgxDateFilteringOperand.getDateParts(target, 'yMd');\n                const y = ((d) => new Date(d.setDate(d.getDate() - 1)))(new Date());\n                const yesterday = IgxDateFilteringOperand.getDateParts(y, 'yMd');\n                return td.year === yesterday.year &&\n                    td.month === yesterday.month &&\n                    td.day === yesterday.day;\n            }\n        }, {\n            name: 'thisMonth',\n            isUnary: true,\n            iconName: 'this_month',\n            logic: (target: Date) => {\n                if (!target) {\n                    return false;\n                }\n\n                this.validateInputData(target);\n\n                const d = IgxDateFilteringOperand.getDateParts(target, 'yM');\n                const now = IgxDateFilteringOperand.getDateParts(new Date(), 'yM');\n                return d.year === now.year &&\n                    d.month === now.month;\n            }\n        }, {\n            name: 'lastMonth',\n            isUnary: true,\n            iconName: 'last_month',\n            logic: (target: Date) => {\n                if (!target) {\n                    return false;\n                }\n\n                this.validateInputData(target);\n\n                const d = IgxDateFilteringOperand.getDateParts(target, 'yM');\n                const now = IgxDateFilteringOperand.getDateParts(new Date(), 'yM');\n                if (!now.month) {\n                    now.month = 11;\n                    now.year -= 1;\n                } else {\n                    now.month--;\n                }\n                return d.year === now.year &&\n                    d.month === now.month;\n            }\n        }, {\n            name: 'nextMonth',\n            isUnary: true,\n            iconName: 'next_month',\n            logic: (target: Date) => {\n                if (!target) {\n                    return false;\n                }\n\n                this.validateInputData(target);\n\n                const d = IgxDateFilteringOperand.getDateParts(target, 'yM');\n                const now = IgxDateFilteringOperand.getDateParts(new Date(), 'yM');\n                if (now.month === 11) {\n                    now.month = 0;\n                    now.year += 1;\n                } else {\n                    now.month++;\n                }\n                return d.year === now.year &&\n                    d.month === now.month;\n            }\n        }, {\n            name: 'thisYear',\n            isUnary: true,\n            iconName: 'this_year',\n            logic: (target: Date) => {\n                if (!target) {\n                    return false;\n                }\n\n                this.validateInputData(target);\n\n                const d = IgxDateFilteringOperand.getDateParts(target, 'y');\n                const now = IgxDateFilteringOperand.getDateParts(new Date(), 'y');\n                return d.year === now.year;\n            }\n        }, {\n            name: 'lastYear',\n            isUnary: true,\n            iconName: 'last_year',\n            logic: (target: Date) => {\n                if (!target) {\n                    return false;\n                }\n\n                this.validateInputData(target);\n\n                const d = IgxDateFilteringOperand.getDateParts(target, 'y');\n                const now = IgxDateFilteringOperand.getDateParts(new Date(), 'y');\n                return d.year === now.year - 1;\n            }\n        }, {\n            name: 'nextYear',\n            isUnary: true,\n            iconName: 'next_year',\n            logic: (target: Date) => {\n                if (!target) {\n                    return false;\n                }\n\n                this.validateInputData(target);\n\n                const d = IgxDateFilteringOperand.getDateParts(target, 'y');\n                const now = IgxDateFilteringOperand.getDateParts(new Date(), 'y');\n                return d.year === now.year + 1;\n            }\n        }, {\n            name: 'empty',\n            isUnary: true,\n            iconName: 'empty',\n            logic: (target: Date) => {\n                return target === null || target === undefined;\n            }\n        }, {\n            name: 'notEmpty',\n            isUnary: true,\n            iconName: 'not_empty',\n            logic: (target: Date) => {\n                return target !== null && target !== undefined;\n            }\n        }].concat(this.operations);\n    }\n\n    /**\n     * Splits a Date object into parts\n     *\n     * @memberof IgxDateFilteringOperand\n     */\n    public static getDateParts(date: Date, dateFormat?: string): IDateParts {\n        const res = {\n            day: null,\n            hours: null,\n            milliseconds: null,\n            minutes: null,\n            month: null,\n            seconds: null,\n            year: null\n        };\n        if (!date || !dateFormat) {\n            return res;\n        }\n        if (dateFormat.indexOf('y') >= 0) {\n            res.year = date.getFullYear();\n        }\n        if (dateFormat.indexOf('M') >= 0) {\n            res.month = date.getMonth();\n        }\n        if (dateFormat.indexOf('d') >= 0) {\n            res.day = date.getDate();\n        }\n        if (dateFormat.indexOf('h') >= 0) {\n            res.hours = date.getHours();\n        }\n        if (dateFormat.indexOf('m') >= 0) {\n            res.minutes = date.getMinutes();\n        }\n        if (dateFormat.indexOf('s') >= 0) {\n            res.seconds = date.getSeconds();\n        }\n        if (dateFormat.indexOf('f') >= 0) {\n            res.milliseconds = date.getMilliseconds();\n        }\n        return res;\n    }\n\n    private validateInputData(target: Date) {\n        if (!(target instanceof Date)) {\n            throw new Error('Could not perform filtering on \\'date\\' column because the datasource object type is not \\'Date\\'.');\n        }\n    }\n\n    protected findValueInSet(target: any, searchVal: Set<any>) {\n        if (!target) { return false; }\n        return searchVal.has(new Date(target.getFullYear(), target.getMonth(), target.getDate()).toISOString());\n    }\n}\n\n/**\n * Provides filtering operations for numbers\n *\n * @export\n */\nexport class IgxNumberFilteringOperand extends IgxFilteringOperand {\n    protected constructor() {\n        super();\n        this.operations = [{\n            name: 'equals',\n            isUnary: false,\n            iconName: 'equals',\n            logic: (target: number, searchVal: number) => {\n                return target === searchVal;\n            }\n        }, {\n            name: 'doesNotEqual',\n            isUnary: false,\n            iconName: 'not_equal',\n            logic: (target: number, searchVal: number) => {\n                return target !== searchVal;\n            }\n        }, {\n            name: 'greaterThan',\n            isUnary: false,\n            iconName: 'greater_than',\n            logic: (target: number, searchVal: number) => {\n                return target > searchVal;\n            }\n        }, {\n            name: 'lessThan',\n            isUnary: false,\n            iconName: 'less_than',\n            logic: (target: number, searchVal: number) => {\n                return target < searchVal;\n            }\n        }, {\n            name: 'greaterThanOrEqualTo',\n            isUnary: false,\n            iconName: 'greater_than_or_equal',\n            logic: (target: number, searchVal: number) => {\n                return target >= searchVal;\n            }\n        }, {\n            name: 'lessThanOrEqualTo',\n            isUnary: false,\n            iconName: 'less_than_or_equal',\n            logic: (target: number, searchVal: number) => {\n                return target <= searchVal;\n            }\n        }, {\n            name: 'empty',\n            isUnary: true,\n            iconName: 'empty',\n            logic: (target: number) => {\n                return target === null || target === undefined || isNaN(target);\n            }\n        }, {\n            name: 'notEmpty',\n            isUnary: true,\n            iconName: 'not_empty',\n            logic: (target: number) => {\n                return target !== null && target !== undefined && !isNaN(target);\n            }\n        }].concat(this.operations);\n    }\n}\n\n/**\n * Provides filtering operations for strings\n *\n * @export\n */\nexport class IgxStringFilteringOperand extends IgxFilteringOperand {\n    protected constructor() {\n        super();\n        this.operations = [{\n            name: 'contains',\n            isUnary: false,\n            iconName: 'contains',\n            logic: (target: string, searchVal: string, ignoreCase?: boolean) => {\n                const search = IgxStringFilteringOperand.applyIgnoreCase(searchVal, ignoreCase);\n                target = IgxStringFilteringOperand.applyIgnoreCase(target, ignoreCase);\n                return target.indexOf(search) !== -1;\n            }\n        }, {\n            name: 'doesNotContain',\n            isUnary: false,\n            iconName: 'does_not_contain',\n            logic: (target: string, searchVal: string, ignoreCase?: boolean) => {\n                const search = IgxStringFilteringOperand.applyIgnoreCase(searchVal, ignoreCase);\n                target = IgxStringFilteringOperand.applyIgnoreCase(target, ignoreCase);\n                return target.indexOf(search) === -1;\n            }\n        }, {\n            name: 'startsWith',\n            isUnary: false,\n            iconName: 'starts_with',\n            logic: (target: string, searchVal: string, ignoreCase?: boolean) => {\n                const search = IgxStringFilteringOperand.applyIgnoreCase(searchVal, ignoreCase);\n                target = IgxStringFilteringOperand.applyIgnoreCase(target, ignoreCase);\n                return target.startsWith(search);\n            }\n        }, {\n            name: 'endsWith',\n            isUnary: false,\n            iconName: 'ends_with',\n            logic: (target: string, searchVal: string, ignoreCase?: boolean) => {\n                const search = IgxStringFilteringOperand.applyIgnoreCase(searchVal, ignoreCase);\n                target = IgxStringFilteringOperand.applyIgnoreCase(target, ignoreCase);\n                return target.endsWith(search);\n            }\n        }, {\n            name: 'equals',\n            isUnary: false,\n            iconName: 'equals',\n            logic: (target: string, searchVal: string, ignoreCase?: boolean) => {\n                const search = IgxStringFilteringOperand.applyIgnoreCase(searchVal, ignoreCase);\n                target = IgxStringFilteringOperand.applyIgnoreCase(target, ignoreCase);\n                return target === search;\n            }\n        }, {\n            name: 'doesNotEqual',\n            isUnary: false,\n            iconName: 'not_equal',\n            logic: (target: string, searchVal: string, ignoreCase?: boolean) => {\n                const search = IgxStringFilteringOperand.applyIgnoreCase(searchVal, ignoreCase);\n                target = IgxStringFilteringOperand.applyIgnoreCase(target, ignoreCase);\n                return target !== search;\n            }\n        }, {\n            name: 'empty',\n            isUnary: true,\n            iconName: 'empty',\n            logic: (target: string) => {\n                return target === null || target === undefined || target.length === 0;\n            }\n        }, {\n            name: 'notEmpty',\n            isUnary: true,\n            iconName: 'not_empty',\n            logic: (target: string) => {\n                return target !== null && target !== undefined && target.length > 0;\n            }\n        }].concat(this.operations);\n    }\n\n    /**\n     * Applies case sensitivity on strings if provided\n     *\n     * @memberof IgxStringFilteringOperand\n     */\n    public static applyIgnoreCase(a: string, ignoreCase: boolean): string {\n        a = a || '';\n        // bulletproof\n        return ignoreCase ? ('' + a).toLowerCase() : a;\n    }\n}\n\n/**\n * Interface describing filtering operations\n *\n * @export\n */\nexport interface IFilteringOperation {\n    name: string;\n    isUnary: boolean;\n    iconName: string;\n    hidden?: boolean;\n    logic: (value: any, searchVal?: any, ignoreCase?: boolean) => boolean;\n}\n\n/**\n * Interface describing Date object in parts\n *\n * @export\n */\nexport interface IDateParts {\n    year: number;\n    month: number;\n    day: number;\n    hours: number;\n    minutes: number;\n    seconds: number;\n    milliseconds: number;\n}\n","import { IFilteringExpressionsTree } from './filtering-expressions-tree';\nimport { FilteringStrategy, IFilteringStrategy } from './filtering-strategy';\n\nexport const filteringStateDefaults = {\n    strategy: new FilteringStrategy()\n};\n\nexport declare interface IFilteringState {\n    expressionsTree: IFilteringExpressionsTree;\n    advancedExpressionsTree?: IFilteringExpressionsTree;\n    strategy?: IFilteringStrategy;\n}\n","import { ISortingExpression } from './sorting-expression.interface';\n\n/**\n * @hidden\n */\nexport class GroupedRecords extends Array<any> {}\n\nexport interface IGroupByRecord {\n    expression: ISortingExpression;\n    level: number;\n    records: GroupedRecords;\n    value: any;\n    groupParent: IGroupByRecord;\n    groups?: IGroupByRecord[];\n    height: number;\n }\n","import {\n    Component,\n    Directive,\n    HostBinding,\n    Input,\n    Renderer2,\n    ViewContainerRef,\n    Optional,\n    Inject,\n    ContentChildren,\n    QueryList,\n    ViewChild,\n    TemplateRef\n} from '@angular/core';\nimport { DisplayDensityBase, DisplayDensityToken, IDisplayDensityOptions } from '../core/density';\nimport { IgxDropDownComponent } from '../drop-down/public_api';\nimport { CloseScrollStrategy, OverlaySettings } from '../services/public_api';\n\n@Directive({\n    selector: '[igxActionStripMenuItem]'\n})\nexport class IgxActionStripMenuItemDirective {\n    constructor(\n        public templateRef: TemplateRef<any>\n    ) { }\n}\n\n/**\n * Action Strip provides templatable area for one or more actions.\n *\n * @igxModule IgxActionStripModule\n *\n * @igxTheme igx-action-strip-theme\n *\n * @igxKeywords action, strip, actionStrip, pinning, editing\n *\n * @igxGroup Data Entry & Display\n *\n * @remarks\n * The Ignite UI Action Strip is a container, overlaying its parent container,\n * and displaying action buttons with action applicable to the parent component the strip is instantiated or shown for.\n *\n * @example\n * ```html\n * <igx-action-strip #actionStrip>\n *     <igx-icon (click)=\"doSomeAction()\"></igx-icon>\n * </igx-action-strip>\n */\n@Component({\n    selector: 'igx-action-strip',\n    templateUrl: 'action-strip.component.html'\n})\n\nexport class IgxActionStripComponent extends DisplayDensityBase {\n    constructor(\n        private _viewContainer: ViewContainerRef,\n        private renderer: Renderer2,\n        @Optional() @Inject(DisplayDensityToken) protected _displayDensityOptions: IDisplayDensityOptions) {\n        super(_displayDensityOptions);\n    }\n\n    /**\n     * Getter for the 'display' property of the current `IgxActionStrip`\n     * @hidden\n     * @internal\n     */\n    @HostBinding('style.display')\n    get display(): string {\n        return this._hidden ? 'none' : 'flex';\n    }\n\n    private _hidden = false;\n\n    /**\n     * An @Input property that set the visibility of the Action Strip.\n     * Could be used to set if the Action Strip will be initially hidden.\n     * @example\n     * ```html\n     *  <igx-action-strip [hidden]=\"false\">\n     * ```\n     */\n    @Input()\n    public set hidden(value) {\n        this._hidden = value;\n    }\n\n    public get hidden() {\n        return this._hidden;\n    }\n\n    /**\n     * Host `class.igx-action-strip` binding.\n     * @hidden\n     * @internal\n     */\n    @Input('class')\n    hostClass: string;\n\n    /**\n     * Host `attr.class` binding.\n     * @hidden\n     * @internal\n     */\n    @HostBinding('attr.class')\n    get hostClasses(): string {\n        const classes = [this.getComponentDensityClass('igx-action-strip')];\n        // The custom classes should be at the end.\n        if (!classes.includes('igx-action-strip')) {\n            classes.push('igx-action-strip');\n        }\n        classes.push(this.hostClass);\n        return classes.join(' ');\n    }\n\n    /**\n     * Sets the context of an action strip.\n     * The context should be an instance of a @Component, that has element property.\n     * This element will be the placeholder of the action strip.\n     * @example\n     * ```html\n     * <igx-action-strip [context]=\"cell\"></igx-action-strip>\n     * ```\n     */\n    @Input()\n    public context: any;\n    /**\n     * Menu Items ContentChildren inside the Action Strip\n     * @hidden\n     * @internal\n     */\n    @ContentChildren(IgxActionStripMenuItemDirective)\n    public menuItems: QueryList<IgxActionStripMenuItemDirective>;\n\n    /**\n     * Reference to the menu\n     * @hidden\n     * @internal\n     */\n    @ViewChild('dropdown')\n    private menu: IgxDropDownComponent;\n\n    /**\n     * Showing the Action Strip and appending it the specified context element.\n     * @param context\n     * @example\n     * ```typescript\n     * this.actionStrip.show(row);\n     * ```\n     */\n    public show(context?: any): void {\n        this.hidden = false;\n        if (!context) {\n            return;\n        }\n        // when shown for different context make sure the menu won't stay opened\n        if (this.context !== context) {\n            this.closeMenu();\n        }\n        this.context = context;\n        if (this.context && this.context.element) {\n            this.renderer.appendChild(context.element.nativeElement, this._viewContainer.element.nativeElement);\n        }\n    }\n\n    /**\n     * Hiding the Action Strip and removing it from its current context element.\n     * @example\n     * ```typescript\n     * this.actionStrip.hide();\n     * ```\n     */\n    public hide(): void {\n        this.hidden = true;\n        this.closeMenu();\n        if (this.context && this.context.element) {\n            this.renderer.removeChild(this.context.element.nativeElement, this._viewContainer.element.nativeElement);\n        }\n    }\n\n    /**\n     * Getter for menu overlay settings\n     * @hidden\n     * @internal\n     */\n    get menuOverlaySettings (): OverlaySettings {\n        return { scrollStrategy: new CloseScrollStrategy() };\n    }\n\n    /**\n     * Close the menu if opened\n     * @hidden\n     * @internal\n     */\n    private closeMenu(): void {\n        if (this.menu && !this.menu.collapsed) {\n            this.menu.close();\n        }\n    }\n}\n\n","import { Injectable, EventEmitter, NgZone } from '@angular/core';\nimport { IGridEditEventArgs } from '../common/events';\nimport { IgxGridBaseDirective } from '../grid/public_api';\nimport { FilteringExpressionsTree } from '../../data-operations/filtering-expressions-tree';\nimport { isEdge } from '../../core/utils';\n\nexport interface GridSelectionRange {\n    rowStart: number;\n    rowEnd: number;\n    columnStart: string | number;\n    columnEnd: string | number;\n}\n\nexport interface ISelectionNode {\n    row: number;\n    column: number;\n    layout?: IMultiRowLayoutNode;\n    isSummaryRow?: boolean;\n}\n\nexport interface IMultiRowLayoutNode {\n    rowStart: number;\n    colStart: number;\n    rowEnd: number;\n    colEnd: number;\n    columnVisibleIndex: number;\n}\n\ninterface ISelectionKeyboardState {\n    node: null | ISelectionNode;\n    shift: boolean;\n    range: GridSelectionRange;\n    active: boolean;\n}\n\ninterface ISelectionPointerState extends ISelectionKeyboardState {\n    ctrl: boolean;\n    primaryButton: boolean;\n}\n\ninterface IColumnSelectionState {\n    field: null | string;\n    range: string[];\n}\n\ntype SelectionState = ISelectionKeyboardState | ISelectionPointerState;\n\n\n// TODO: Refactor - export in a separate file\n\nexport class IgxRow {\n    transactionState: any;\n    state: any;\n    newData: any;\n\n    constructor(public id: any, public index: number, public data: any) { }\n\n    createEditEventArgs(): IGridEditEventArgs {\n        return {\n            rowID: this.id,\n            oldValue: { ... this.data },\n            newValue: this.newData,\n            cancel: false\n        };\n    }\n}\n\nexport class IgxCell {\n\n    primaryKey: any;\n    state: any;\n\n    constructor(\n        public id,\n        public rowIndex: number,\n        public column,\n        public value: any,\n        public editValue: any,\n        public rowData: any) { }\n\n    castToNumber(value: any): any {\n        if (this.column.dataType === 'number' && !this.column.inlineEditorTemplate) {\n            const v = parseFloat(value);\n            return !isNaN(v) && isFinite(v) ? v : 0;\n        }\n        return value;\n    }\n\n    createEditEventArgs(): IGridEditEventArgs {\n        return {\n            rowID: this.id.rowID,\n            cellID: this.id,\n            oldValue: this.value,\n            newValue: this.editValue,\n            cancel: false\n        };\n    }\n}\n\n@Injectable()\nexport class IgxGridCRUDService {\n\n    grid;\n    cell: IgxCell | null = null;\n    row: IgxRow | null = null;\n    public isInCompositionMode = false;\n\n    createCell(cell): IgxCell {\n        return new IgxCell(cell.cellID, cell.rowIndex, cell.column, cell.value, cell.value, cell.row.rowData);\n    }\n\n    createRow(cell: IgxCell): IgxRow {\n        return new IgxRow(cell.id.rowID, cell.rowIndex, cell.rowData);\n    }\n\n    sameRow(rowID): boolean {\n        return this.row && this.row.id === rowID;\n    }\n\n    sameCell(cell: IgxCell): boolean {\n        return (this.cell.id.rowID === cell.id.rowID &&\n            this.cell.id.columnID === cell.id.columnID);\n    }\n\n    get inEditMode(): boolean {\n        return !!this.cell;\n    }\n\n    get rowEditing(): boolean {\n        return this.grid.rowEditable;\n    }\n\n    get primaryKey(): any {\n        return this.grid.primaryKey;\n    }\n\n    beginRowEdit() {\n        if (this.grid.rowEditable && (this.grid.primaryKey === undefined || this.grid.primaryKey === null)) {\n            console.warn('The grid must have a `primaryKey` specified when using `rowEditable`!');\n        }\n        this.row = this.createRow(this.cell);\n        const args = {\n            rowID: this.row.id,\n            oldValue: this.row.data,\n            cancel: false\n        };\n        this.grid.onRowEditEnter.emit(args);\n        if (args.cancel) {\n            this.endRowEdit();\n            return;\n        }\n        this.row.transactionState = this.grid.transactions.getAggregatedValue(this.row.id, true);\n        this.grid.transactions.startPending();\n        this.grid.openRowOverlay(this.row.id);\n    }\n\n\n    endRowEdit() {\n        this.row = null;\n    }\n\n    begin(cell): void {\n        const newCell = this.createCell(cell);\n        newCell.primaryKey = this.primaryKey;\n        const args = {\n            cellID: newCell.id,\n            rowID: newCell.id.rowID,\n            oldValue: newCell.value,\n            cancel: false\n        };\n\n        this.grid.onCellEditEnter.emit(args);\n\n        if (args.cancel) {\n            this.end();\n            return;\n        }\n\n        if (this.rowEditing) {\n            if (this.row && !this.sameRow(newCell.id.rowID)) {\n                this.grid.endEdit(true);\n                this.cell = newCell;\n                this.beginRowEdit();\n                return;\n            }\n\n            this.cell = newCell;\n\n            if (!this.row) {\n                this.beginRowEdit();\n                return;\n            }\n        } else {\n            this.cell = newCell;\n            this.endRowEdit();\n        }\n    }\n\n    end(): void {\n        this.cell = null;\n    }\n    public enterEditMode(cell) {\n        if (this.isInCompositionMode) {\n            return;\n        }\n        if (cell && cell.column.editable && !cell.row.deleted) {\n            if (this.inEditMode) {\n                this.grid.endEdit(true);\n                this.grid.tbody.nativeElement.focus();\n            } else {\n                this.begin(cell);\n            }\n        }\n    }\n\n    public exitEditMode() {\n        if (this.isInCompositionMode) {\n            return;\n        }\n        if (this.inEditMode) {\n            const args = this.cell.createEditEventArgs();\n            this.grid.onCellEditCancel.emit(args);\n            if (args.cancel) {\n                return;\n            }\n            this.grid.endEdit(false);\n            if (isEdge()) { this.grid.cdr.detectChanges(); }\n            this.grid.tbody.nativeElement.focus();\n        }\n    }\n\n    isInEditMode(rowIndex: number, columnIndex: number): boolean {\n        if (!this.cell) {\n            return false;\n        }\n        return this.cell.column.index === columnIndex && this.cell.rowIndex === rowIndex;\n    }\n}\n\n\n@Injectable()\nexport class IgxGridSelectionService {\n    grid;\n    dragMode = false;\n    activeElement: ISelectionNode | null;\n    keyboardState = {} as ISelectionKeyboardState;\n    pointerState = {} as ISelectionPointerState;\n    columnsState = {} as IColumnSelectionState;\n\n    selection = new Map<number, Set<number>>();\n    temp = new Map<number, Set<number>>();\n    _ranges: Set<string> = new Set<string>();\n    _selectionRange: Range;\n    rowSelection: Set<any> = new Set<any>();\n    columnSelection: Set<string> = new Set<string>();\n    private allRowsSelected: boolean;\n\n    /**\n     * Returns the current selected ranges in the grid from both\n     * keyboard and pointer interactions\n     */\n    get ranges(): GridSelectionRange[] {\n\n        // The last action was keyboard + shift selection -> add it\n        this.addKeyboardRange();\n\n        const ranges = Array.from(this._ranges).map(range => JSON.parse(range));\n\n        // No ranges but we have a focused cell -> add it\n        if (!ranges.length && this.activeElement && this.grid.isCellSelectable) {\n            ranges.push(this.generateRange(this.activeElement));\n        }\n\n        return ranges;\n    }\n\n    get primaryButton(): boolean {\n        return this.pointerState.primaryButton;\n    }\n\n    set primaryButton(value: boolean) {\n        this.pointerState.primaryButton = value;\n    }\n\n    constructor(private zone: NgZone) {\n        this.initPointerState();\n        this.initKeyboardState();\n        this.initColumnsState();\n    }\n\n    /**\n     * Resets the keyboard state\n     */\n    initKeyboardState(): void {\n        this.keyboardState.node = null;\n        this.keyboardState.shift = false;\n        this.keyboardState.range = null;\n        this.keyboardState.active = false;\n    }\n\n    /**\n     * Resets the pointer state\n     */\n    initPointerState(): void {\n        this.pointerState.node = null;\n        this.pointerState.ctrl = false;\n        this.pointerState.shift = false;\n        this.pointerState.range = null;\n        this.pointerState.primaryButton = true;\n    }\n\n    /**\n     * Resets the columns state\n     */\n    initColumnsState(): void {\n        this.columnsState.field = null;\n        this.columnsState.range = [];\n    }\n\n    /**\n     * Adds a single node.\n     * Single clicks | Ctrl + single clicks on cells is the usual case.\n     */\n    add(node: ISelectionNode, addToRange = true): void {\n        this.selection.has(node.row) ? this.selection.get(node.row).add(node.column) :\n            this.selection.set(node.row, new Set<number>()).get(node.row).add(node.column);\n\n        if (addToRange) { this._ranges.add(JSON.stringify(this.generateRange(node))); }\n    }\n\n    /**\n     * Adds the active keyboard range selection (if any) to the `ranges` meta.\n     */\n    addKeyboardRange(): void {\n        if (this.keyboardState.range) {\n            this._ranges.add(JSON.stringify(this.keyboardState.range));\n        }\n    }\n\n    remove(node: ISelectionNode): void {\n        if (this.selection.has(node.row)) {\n            this.selection.get(node.row).delete(node.column);\n        }\n        if (this.isActiveNode(node)) {\n            this.activeElement = null;\n        }\n        this._ranges.delete(JSON.stringify(this.generateRange(node)));\n    }\n\n    isInMap(node: ISelectionNode): boolean {\n        return (this.selection.has(node.row) && this.selection.get(node.row).has(node.column)) ||\n            (this.temp.has(node.row) && this.temp.get(node.row).has(node.column));\n    }\n\n    selected(node: ISelectionNode): boolean {\n        return (this.isActiveNode(node) && this.grid.isCellSelectable) || this.isInMap(node);\n    }\n\n    isActiveNode(node: ISelectionNode): boolean {\n        if (this.activeElement) {\n            const isActive = this.activeElement.column === node.column && this.activeElement.row === node.row;\n            if (this.grid.hasColumnLayouts) {\n                const layout = this.activeElement.layout;\n                return isActive && this.isActiveLayout(layout, node.layout);\n            }\n            return isActive;\n        }\n        return false;\n    }\n\n    isActiveLayout(current: IMultiRowLayoutNode, target: IMultiRowLayoutNode): boolean {\n        return current.columnVisibleIndex === target.columnVisibleIndex;\n    }\n\n    addRangeMeta(node: ISelectionNode, state?: SelectionState): void {\n        this._ranges.add(JSON.stringify(this.generateRange(node, state)));\n    }\n\n    removeRangeMeta(node: ISelectionNode, state?: SelectionState): void {\n        this._ranges.delete(JSON.stringify(this.generateRange(node, state)));\n    }\n\n    /**\n     * Generates a new selection range from the given `node`.\n     * If `state` is passed instead it will generate the range based on the passed `node`\n     * and the start node of the `state`.\n     */\n    generateRange(node: ISelectionNode, state?: SelectionState): GridSelectionRange {\n        if (!state) {\n            return {\n                rowStart: node.row,\n                rowEnd: node.row,\n                columnStart: node.column,\n                columnEnd: node.column\n            };\n        }\n\n        const { row, column } = state.node;\n        const rowStart = Math.min(node.row, row);\n        const rowEnd = Math.max(node.row, row);\n        const columnStart = Math.min(node.column, column);\n        const columnEnd = Math.max(node.column, column);\n\n        return { rowStart, rowEnd, columnStart, columnEnd };\n    }\n\n    /**\n     *\n     */\n    keyboardStateOnKeydown(node: ISelectionNode, shift: boolean, shiftTab: boolean): void {\n        this.keyboardState.active = true;\n        this.initPointerState();\n        this.keyboardState.shift = shift && !shiftTab;\n        if (!this.grid.navigation.isDataRow(node.row)) { return; }\n        // Kb navigation with shift and no previous node.\n        // Clear the current selection init the start node.\n        if (this.keyboardState.shift && !this.keyboardState.node) {\n            this.clear();\n            this.keyboardState.node = Object.assign({}, node);\n        }\n    }\n\n    keyboardStateOnFocus(node: ISelectionNode, emitter: EventEmitter<GridSelectionRange>, dom): void {\n        const kbState = this.keyboardState;\n\n        // Focus triggered by keyboard navigation\n        if (kbState.active) {\n            if (isChromium()) {\n                this._moveSelectionChrome(dom);\n            }\n            // Start generating a range if shift is hold\n            if (kbState.shift) {\n                this.dragSelect(node, kbState);\n                kbState.range = this.generateRange(node, kbState);\n                emitter.emit(this.generateRange(node, kbState));\n                return;\n            }\n\n            this.initKeyboardState();\n            this.clear();\n            this.add(node);\n        }\n    }\n\n    pointerDown(node: ISelectionNode, shift: boolean, ctrl: boolean): void {\n        this.addKeyboardRange();\n        this.initKeyboardState();\n        this.pointerState.ctrl = ctrl;\n        this.pointerState.shift = shift;\n\n        // No ctrl key pressed - no multiple selection\n        if (!ctrl) {\n            this.clear();\n        }\n\n        if (shift) {\n            // No previously 'clicked' node. Use the last active node.\n            if (!this.pointerState.node) {\n                this.pointerState.node = this.activeElement || node;\n            }\n            this.pointerDownShiftKey(node);\n            this.clearTextSelection();\n            return;\n        }\n\n        this.removeRangeMeta(node);\n        this.pointerState.node = node;\n    }\n\n    pointerDownShiftKey(node: ISelectionNode): void {\n        this.clear();\n        this.selectRange(node, this.pointerState);\n    }\n\n    mergeMap(target: Map<number, Set<number>>, source: Map<number, Set<number>>): void {\n        const iterator = source.entries();\n        let pair = iterator.next();\n        let key: number;\n        let value: Set<number>;\n\n        while (!pair.done) {\n            [key, value] = pair.value;\n            if (target.has(key)) {\n                const newValue = target.get(key);\n                value.forEach(record => newValue.add(record));\n                target.set(key, newValue);\n            } else {\n                target.set(key, value);\n            }\n            pair = iterator.next();\n        }\n    }\n\n    pointerEnter(node: ISelectionNode, event: PointerEvent): boolean {\n        // https://www.w3.org/TR/pointerevents/#the-button-property\n        this.dragMode = event.buttons === 1 && event.button === -1;\n        if (!this.dragMode) {\n            return false;\n        }\n        this.clearTextSelection();\n\n        // If the users triggers a drag-like event by first clicking outside the grid cells\n        // and then enters in the grid body we may not have a initial pointer starting node.\n        // Assume the first pointerenter node is where we start.\n        if (!this.pointerState.node) {\n            this.pointerState.node = node;\n        }\n\n        this.pointerState.ctrl ? this.selectRange(node, this.pointerState, this.temp) :\n            this.dragSelect(node, this.pointerState);\n        return true;\n    }\n\n    pointerUp(node: ISelectionNode, emitter: EventEmitter<GridSelectionRange>): boolean {\n        if (this.dragMode) {\n            this.restoreTextSelection();\n            this.addRangeMeta(node, this.pointerState);\n            this.mergeMap(this.selection, this.temp);\n            this.zone.runTask(() => emitter.emit(this.generateRange(node, this.pointerState)));\n            this.temp.clear();\n            this.dragMode = false;\n            return true;\n        }\n\n        if (this.pointerState.shift) {\n            this.clearTextSelection();\n            this.restoreTextSelection();\n            this.addRangeMeta(node, this.pointerState);\n            emitter.emit(this.generateRange(node, this.pointerState));\n            return true;\n        }\n\n        this.add(node);\n        return false;\n    }\n\n    selectRange(node: ISelectionNode, state: SelectionState, collection: Map<number, Set<number>> = this.selection): void {\n        if (collection === this.temp) {\n            collection.clear();\n        }\n        const { rowStart, rowEnd, columnStart, columnEnd } = this.generateRange(node, state);\n        for (let i = rowStart; i <= rowEnd; i++) {\n            for (let j = columnStart as number; j <= columnEnd; j++) {\n                collection.has(i) ? collection.get(i).add(j) :\n                    collection.set(i, new Set<number>()).get(i).add(j);\n            }\n        }\n    }\n\n    dragSelect(node: ISelectionNode, state: SelectionState): void {\n        if (!this.pointerState.ctrl) {\n            this.selection.clear();\n        }\n        this.selectRange(node, state);\n    }\n\n    clear(clearAcriveEl = false): void {\n        if (clearAcriveEl) { this.activeElement = null; }\n        this.selection.clear();\n        this.temp.clear();\n        this._ranges.clear();\n    }\n\n    clearTextSelection(): void {\n        const selection = window.getSelection();\n        if (selection.rangeCount) {\n            this._selectionRange = selection.getRangeAt(0);\n            this._selectionRange.collapse(true);\n            selection.removeAllRanges();\n        }\n    }\n\n    restoreTextSelection(): void {\n        const selection = window.getSelection();\n        if (!selection.rangeCount) {\n            selection.addRange(this._selectionRange || document.createRange());\n        }\n    }\n\n    /**\n     * (╯°□°）╯︵ ┻━┻\n     * Chrome and Chromium don't care about the active\n     * range after keyboard navigation, thus this.\n     */\n    _moveSelectionChrome(node: Node) {\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        const range = new Range();\n        range.selectNode(node);\n        range.collapse(true);\n        selection.addRange(range);\n    }\n\n    /** Returns array of the selected row id's. */\n    getSelectedRows(): Array<any> {\n        return this.rowSelection.size ? Array.from(this.rowSelection.keys()) : [];\n    }\n\n    /** Clears row selection, if filtering is applied clears only selected rows from filtered data. */\n    clearRowSelection(event?): void {\n        const removedRec = this.isFilteringApplied() ?\n            this.getRowIDs(this.allData).filter(rID => this.isRowSelected(rID)) : this.getSelectedRows();\n        const newSelection = this.isFilteringApplied() ? this.getSelectedRows().filter(x => !removedRec.includes(x)) : [];\n        this.emitRowSelectionEvent(newSelection, [], removedRec, event);\n    }\n\n    /** Select all rows, if filtering is applied select only from filtered data. */\n    selectAllRows(event?) {\n        const allRowIDs = this.getRowIDs(this.allData);\n        const addedRows = allRowIDs.filter((rID) => !this.isRowSelected(rID));\n        const newSelection = this.rowSelection.size ? this.getSelectedRows().concat(addedRows) : addedRows;\n\n        this.emitRowSelectionEvent(newSelection, addedRows, [], event);\n    }\n\n    /** Select the specified row and emit event. */\n    selectRowById(rowID, clearPrevSelection?, event?): void {\n        if (!this.grid.isRowSelectable || this.isRowDeleted(rowID)) { return; }\n        clearPrevSelection = !this.grid.isMultiRowSelectionEnabled || clearPrevSelection;\n\n        const newSelection = clearPrevSelection ? [rowID] : this.getSelectedRows().indexOf(rowID) !== -1 ?\n            this.getSelectedRows() : [...this.getSelectedRows(), rowID];\n        const removed = clearPrevSelection ? this.getSelectedRows() : [];\n        this.emitRowSelectionEvent(newSelection, [rowID], removed, event);\n    }\n\n    /** Deselect the specified row and emit event. */\n    deselectRow(rowID, event?): void {\n        if (!this.isRowSelected(rowID)) { return; }\n        const newSelection = this.getSelectedRows().filter(r => r !== rowID);\n        if (this.rowSelection.size && this.rowSelection.has(rowID)) {\n            this.emitRowSelectionEvent(newSelection, [], [rowID], event);\n        }\n    }\n\n    /** Select specified rows. No event is emitted. */\n    selectRowsWithNoEvent(rowIDs: any[], clearPrevSelection?): void {\n        if (clearPrevSelection) { this.rowSelection.clear(); }\n        rowIDs.forEach(rowID => { this.rowSelection.add(rowID); });\n        this.allRowsSelected = undefined;\n    }\n\n    /** Deselect specified rows. No event is emitted. */\n    deselectRowsWithNoEvent(rowIDs: any[]): void {\n        rowIDs.forEach(rowID => this.rowSelection.delete(rowID));\n        this.allRowsSelected = undefined;\n    }\n\n    isRowSelected(rowID): boolean {\n        return this.rowSelection.size > 0 && this.rowSelection.has(rowID);\n    }\n\n    /** Select range from last selected row to the current specified row. */\n    selectMultipleRows(rowID, rowData, event?): void {\n        this.allRowsSelected = undefined;\n        if (!this.rowSelection.size || this.isRowDeleted(rowID)) {\n            this.selectRowById(rowID);\n            return;\n        }\n        const gridData = this.allData;\n        const lastRowID = this.getSelectedRows()[this.rowSelection.size - 1];\n        const currIndex = gridData.indexOf(this.getRowDataById(lastRowID));\n        const newIndex = gridData.indexOf(rowData);\n        const rows = gridData.slice(Math.min(currIndex, newIndex), Math.max(currIndex, newIndex) + 1);\n\n        const added = this.getRowIDs(rows).filter(rID => !this.isRowSelected(rID));\n        const newSelection = this.getSelectedRows().concat(added);\n\n        this.emitRowSelectionEvent(newSelection, added, [], event);\n    }\n\n    areAllRowSelected(): boolean {\n        if (!this.grid.data) { return false; }\n        if (this.allRowsSelected !== undefined) { return this.allRowsSelected; }\n\n        const dataItemsID = this.getRowIDs(this.allData);\n        return this.allRowsSelected = Math.min(this.rowSelection.size, dataItemsID.length) > 0 &&\n            new Set(Array.from(this.rowSelection.values()).concat(dataItemsID)).size === this.rowSelection.size;\n    }\n\n    hasSomeRowSelected(): boolean {\n        const filteredData = this.isFilteringApplied() ?\n            this.getRowIDs(this.grid.filteredData).some(rID => this.isRowSelected(rID)) : true;\n        return this.rowSelection.size > 0 && filteredData && !this.areAllRowSelected();\n    }\n\n    public get filteredSelectedRowIds(): any[] {\n        return this.isFilteringApplied() ?\n            this.getRowIDs(this.allData).filter(rowID => this.isRowSelected(rowID)) :\n            this.getSelectedRows().filter(rowID => !this.isRowDeleted(rowID));\n    }\n\n    public emitRowSelectionEvent(newSelection, added, removed, event?): boolean {\n        const currSelection = this.getSelectedRows();\n        if (this.areEqualCollections(currSelection, newSelection)) { return; }\n\n        const args = {\n            oldSelection: currSelection, newSelection: newSelection,\n            added: added, removed: removed, event: event, cancel: false\n        };\n        this.grid.onRowSelectionChange.emit(args);\n        if (args.cancel) { return; }\n        this.selectRowsWithNoEvent(args.newSelection, true);\n    }\n\n    public getRowDataById(rowID): Object {\n        if (!this.grid.primaryKey) { return rowID; }\n        const rowIndex = this.getRowIDs(this.grid.gridAPI.get_all_data(true)).indexOf(rowID);\n        return rowIndex < 0 ? {} : this.grid.gridAPI.get_all_data(true)[rowIndex];\n    }\n\n    public getRowIDs(data): Array<any> {\n        return this.grid.primaryKey && data.length ? data.map(rec => rec[this.grid.primaryKey]) : data;\n    }\n\n    public clearHeaderCBState(): void {\n        this.allRowsSelected = undefined;\n    }\n\n    /** Clear rowSelection and update checkbox state */\n    public clearAllSelectedRows(): void {\n        this.rowSelection.clear();\n        this.clearHeaderCBState();\n    }\n\n    /** Returns all data in the grid, with applied filtering and sorting and without deleted rows. */\n    public get allData(): Array<any> {\n        const allData = this.isFilteringApplied() || this.grid.sortingExpressions.length ?\n            this.grid.filteredSortedData : this.grid.gridAPI.get_all_data(true);\n        return allData.filter(rData => !this.isRowDeleted(this.grid.gridAPI.get_row_id(rData)));\n    }\n\n    private areEqualCollections(first, second): boolean {\n        return first.length === second.length && new Set(first.concat(second)).size === first.length;\n    }\n\n    private isFilteringApplied(): boolean {\n        const grid = this.grid as IgxGridBaseDirective;\n        return !FilteringExpressionsTree.empty(grid.filteringExpressionsTree) ||\n            !FilteringExpressionsTree.empty(grid.advancedFilteringExpressionsTree);\n    }\n\n    private isRowDeleted(rowID): boolean {\n        return this.grid.gridAPI.row_deleted_transaction(rowID);\n    }\n\n    /** Returns array of the selected columns fields. */\n    getSelectedColumns(): Array<any> {\n        return this.columnSelection.size ? Array.from(this.columnSelection.keys()) : [];\n    }\n\n    isColumnSelected(field: string): boolean {\n        return this.columnSelection.size > 0 && this.columnSelection.has(field);\n    }\n\n    /** Select the specified column and emit event. */\n    selectColumn(field: string, clearPrevSelection?, selectColumnsRange?, event?): void {\n        const stateColumn = this.columnsState.field ? this.grid.getColumnByName(this.columnsState.field) : null;\n        if (!event || !stateColumn || stateColumn.visibleIndex < 0 || !selectColumnsRange  ) {\n            this.columnsState.field = field;\n            this.columnsState.range = [];\n\n            const newSelection = clearPrevSelection ? [field] : this.getSelectedColumns().indexOf(field) !== -1 ?\n                this.getSelectedColumns() : [...this.getSelectedColumns(), field];\n            const removed = clearPrevSelection ? this.getSelectedColumns().filter(colField => colField !== field) : [];\n            const added = this.isColumnSelected(field) ? [] : [field];\n            this.emitColumnSelectionEvent(newSelection, added, removed, event);\n        } else if (selectColumnsRange) {\n            this.selectColumnsRange(field, event);\n        }\n    }\n\n    /** Select specified columns. And emit event. */\n    selectColumns(fields: string[], clearPrevSelection?, selectColumnsRange?, event?): void {\n        const columns = fields.map(f => this.grid.getColumnByName(f)).sort((a, b) => a.visibleIndex - b.visibleIndex);\n        const stateColumn = this.columnsState.field ? this.grid.getColumnByName(this.columnsState.field) : null;\n        if (!stateColumn || stateColumn.visibleIndex < 0 || !selectColumnsRange) {\n            this.columnsState.field = columns[0] ? columns[0].field : null;\n            this.columnsState.range = [];\n\n            const added = fields.filter(colField => !this.isColumnSelected(colField));\n            const removed = clearPrevSelection ? this.getSelectedColumns().filter(colField => fields.indexOf(colField) === -1) : [];\n            const newSelection = clearPrevSelection ? fields : this.getSelectedColumns().concat(added);\n\n            this.emitColumnSelectionEvent(newSelection, added, removed, event);\n        } else {\n            const filedStart = stateColumn.visibleIndex >\n                columns[columns.length - 1].visibleIndex ? columns[0].field : columns[columns.length - 1].field;\n            this.selectColumnsRange(filedStart, event);\n        }\n    }\n\n    /** Select range from last clicked column to the current specified column. */\n    selectColumnsRange(field: string, event): void {\n        const currIndex = this.grid.getColumnByName(this.columnsState.field).visibleIndex;\n        const newIndex = this.grid.columnToVisibleIndex(field);\n        const columnsFields = this.grid.visibleColumns\n            .filter(c => !c.columnGroup)\n            .sort((a, b) => a.visibleIndex - b.visibleIndex)\n            .slice(Math.min(currIndex, newIndex), Math.max(currIndex, newIndex) + 1)\n            .filter(col => col.selectable).map(col => col.field);\n        const removed = [];\n        const oldAdded = [];\n        const added = columnsFields.filter(colField => !this.isColumnSelected(colField));\n        this.columnsState.range.forEach(f => {\n            if (columnsFields.indexOf(f) === -1) {\n                removed.push(f);\n            } else {\n                oldAdded.push(f);\n            }\n        });\n        this.columnsState.range = columnsFields.filter(colField => !this.isColumnSelected(colField) || oldAdded.indexOf(colField) > -1);\n        const newSelection = this.getSelectedColumns().concat(added).filter(c => removed.indexOf(c) === -1);\n        this.emitColumnSelectionEvent(newSelection, added, removed, event);\n    }\n\n    /** Select specified columns. No event is emitted. */\n    selectColumnsWithNoEvent(fields: string[], clearPrevSelection?): void {\n        if (clearPrevSelection) { this.columnSelection.clear(); }\n        fields.forEach(field => { this.columnSelection.add(field); });\n    }\n\n    /** Deselect the specified column and emit event. */\n    deselectColumn(field: string, event?): void {\n        this.initColumnsState();\n        const newSelection = this.getSelectedColumns().filter(c => c !== field);\n        this.emitColumnSelectionEvent(newSelection, [], [field], event);\n    }\n\n    /** Deselect specified columns. No event is emitted. */\n    deselectColumnsWithNoEvent(fields: string[]): void {\n        fields.forEach(field => this.columnSelection.delete(field));\n    }\n\n    /** Deselect specified columns. And emit event. */\n    deselectColumns(fields: string[], event?): void {\n        const removed = this.getSelectedColumns().filter(colField => fields.indexOf(colField) > -1);\n        const newSelection = this.getSelectedColumns().filter(colField => fields.indexOf(colField) === -1);\n\n        this.emitColumnSelectionEvent(newSelection, [], removed, event);\n    }\n\n    public emitColumnSelectionEvent(newSelection, added, removed, event?): boolean {\n        const currSelection = this.getSelectedColumns();\n        if (this.areEqualCollections(currSelection, newSelection)) { return; }\n\n        const args = {\n            oldSelection: currSelection, newSelection: newSelection,\n            added: added, removed: removed, event: event, cancel: false\n        };\n        this.grid.onColumnSelectionChange.emit(args);\n        if (args.cancel) { return; }\n        this.selectColumnsWithNoEvent(args.newSelection, true);\n    }\n\n    /** Clear columnSelection */\n    public clearAllSelectedColumns(): void {\n        this.columnSelection.clear();\n    }\n}\n\nexport function isChromium(): boolean {\n    return (/Chrom|e?ium/g.test(navigator.userAgent) || /Google Inc/g.test(navigator.vendor)) && !/Edge/g.test(navigator.userAgent);\n}\n","import { Inject, Injectable, NgZone } from '@angular/core';\nimport { ɵgetDOM as getDOM } from '@angular/platform-browser';\nimport { DOCUMENT } from '@angular/common';\nimport { PlatformUtil } from './utils';\n\nconst EVENT_SUFFIX = 'precise';\n\n/**\n * Touch gestures manager based on Hammer.js\n * Use with caution, this will track references for single manager per element. Very TBD. Much TODO.\n * @hidden\n */\n@Injectable()\nexport class HammerGesturesManager {\n    private platformBrowser: boolean;\n    /**\n     * Event option defaults for each recognizer, see http://hammerjs.github.io/api/ for API listing.\n     */\n    protected hammerOptions: HammerOptions = {};\n\n    private _hammerManagers: Array<{ element: EventTarget, manager: HammerManager; }> = [];\n\n    constructor(private _zone: NgZone, @Inject(DOCUMENT) private doc: any, private platformUtil: PlatformUtil) {\n        this.platformBrowser = this.platformUtil.isBrowser;\n        if (this.platformBrowser) {\n            this.hammerOptions = {\n                // D.P. #447 Force TouchInput due to PointerEventInput bug (https://github.com/hammerjs/hammer.js/issues/1065)\n                // see https://github.com/IgniteUI/igniteui-angular/issues/447#issuecomment-324601803\n                inputClass: Hammer.TouchInput,\n                recognizers: [\n                    [Hammer.Pan, { threshold: 0 }],\n                    [Hammer.Swipe, {\n                        direction: Hammer.DIRECTION_HORIZONTAL\n                    }],\n                    [Hammer.Tap],\n                    [Hammer.Tap, { event: 'doubletap', taps: 2 }, ['tap']]\n                ]\n            };\n        }\n    }\n\n    public supports(eventName: string): boolean {\n        return eventName.toLowerCase().endsWith('.' + EVENT_SUFFIX);\n    }\n\n    /**\n     * Add listener extended with options for Hammer.js. Will use defaults if none are provided.\n     * Modeling after other event plugins for easy future modifications.\n     */\n    public addEventListener(\n        element: HTMLElement,\n        eventName: string,\n        eventHandler: (eventObj) => void,\n        options: HammerOptions = null): () => void {\n        if (!this.platformBrowser) {\n            return;\n        }\n\n        // Creating the manager bind events, must be done outside of angular\n        return this._zone.runOutsideAngular(() => {\n            let mc: HammerManager = this.getManagerForElement(element);\n            if (mc === null) {\n                // new Hammer is a shortcut for Manager with defaults\n                mc = new Hammer(element, Object.assign(this.hammerOptions, options));\n                this.addManagerForElement(element, mc);\n            }\n            const handler = (eventObj) => { this._zone.run(() => { eventHandler(eventObj); }); };\n            mc.on(eventName, handler);\n            return () => { mc.off(eventName, handler); };\n        });\n    }\n\n    /**\n     * Add listener extended with options for Hammer.js. Will use defaults if none are provided.\n     * Modeling after other event plugins for easy future modifications.\n     *\n     * @param target Can be one of either window, body or document(fallback default).\n     */\n    public addGlobalEventListener(target: string, eventName: string, eventHandler: (eventObj) => void): () => void {\n        if (!this.platformBrowser) {\n            return;\n        }\n\n        const element = this.getGlobalEventTarget(target);\n\n        // Creating the manager bind events, must be done outside of angular\n        return this.addEventListener(element as HTMLElement, eventName, eventHandler);\n    }\n\n    /**\n     * Exposes [Dom]Adapter.getGlobalEventTarget to get global event targets.\n     * Supported: window, document, body. Defaults to document for invalid args.\n     * @param target Target name\n     */\n    public getGlobalEventTarget(target: string): EventTarget {\n        return getDOM().getGlobalEventTarget(this.doc, target);\n    }\n\n    /**\n     * Set HammerManager options.\n     *\n     * @param element The DOM element used to create the manager on.\n     *\n     * ### Example\n     *\n     * ```ts\n     * manager.setManagerOption(myElem, \"pan\", { pointers: 1 });\n     * ```\n     */\n    public setManagerOption(element: EventTarget, event: string, options: any) {\n        const manager = this.getManagerForElement(element);\n        manager.get(event).set(options);\n    }\n\n    /**\n     * Add an element and manager map to the internal collection.\n     *\n     * @param element The DOM element used to create the manager on.\n     */\n    public addManagerForElement(element: EventTarget, manager: HammerManager) {\n        this._hammerManagers.push({element, manager});\n    }\n\n    /**\n     * Get HammerManager for the element or null\n     *\n     * @param element The DOM element used to create the manager on.\n     */\n    public getManagerForElement(element: EventTarget): HammerManager {\n        const result =  this._hammerManagers.filter((value, index, array) => {\n            return value.element === element;\n        });\n        return result.length ? result[0].manager : null;\n    }\n\n    /**\n     * Destroys the HammerManager for the element, removing event listeners in the process.\n     *\n     * @param element The DOM element used to create the manager on.\n     */\n    public removeManagerForElement(element: HTMLElement) {\n        let index: number = null;\n        for (let i = 0; i < this._hammerManagers.length; i++) {\n            if (element === this._hammerManagers[i].element) {\n                index = i;\n                break;\n            }\n        }\n        if (index !== null) {\n            const item = this._hammerManagers.splice(index, 1)[0];\n            // destroy also\n            item.manager.destroy();\n        }\n    }\n\n    /** Destroys all internally tracked HammerManagers, removing event listeners in the process. */\n    public destroy() {\n        for (const item of this._hammerManagers) {\n            item.manager.destroy();\n        }\n        this._hammerManagers = [];\n    }\n}\n","\nexport enum FilterMode {\n    quickFilter = 'quickFilter',\n    excelStyleFilter = 'excelStyleFilter'\n}\n\nexport enum GridSummaryPosition {\n    top = 'top',\n    bottom = 'bottom'\n}\n\nexport enum GridSummaryCalculationMode {\n    rootLevelOnly = 'rootLevelOnly',\n    childLevelsOnly = 'childLevelsOnly',\n    rootAndChildLevels = 'rootAndChildLevels'\n}\n\nexport enum GridKeydownTargetType {\n    dataCell = 'dataCell',\n    summaryCell = 'summaryCell',\n    groupRow = 'groupRow',\n    hierarchicalRow = 'hierarchicalRow'\n}\n\nexport enum GridSelectionMode {\n    none = 'none',\n    single = 'single',\n    multiple = 'multiple',\n}\n\nexport enum ColumnDisplayOrder {\n    Alphabetical = 'Alphabetical',\n    DisplayOrder = 'DisplayOrder'\n}\n\nexport enum ColumnPinningPosition {\n    Start,\n    End\n}\n\nexport enum RowPinningPosition {\n    Top,\n    Bottom\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    HostBinding,\n    HostListener,\n    Input,\n    TemplateRef,\n    ViewChild,\n    NgZone,\n    OnInit,\n    OnDestroy,\n    OnChanges,\n    SimpleChanges\n} from '@angular/core';\nimport { IgxTextHighlightDirective } from '../directives/text-highlight/text-highlight.directive';\nimport { GridBaseAPIService } from './api.service';\nimport {\n    getNodeSizeViaRange, isIE, isLeftClick, PlatformUtil\n} from '../core/utils';\nimport { State } from '../services/public_api';\nimport { IgxGridBaseDirective } from './grid-base.directive';\nimport { IgxGridSelectionService, ISelectionNode, IgxGridCRUDService } from './selection/selection.service';\nimport { DeprecateProperty, DeprecateMethod } from '../core/deprecateDecorators';\nimport { HammerGesturesManager } from '../core/touch';\nimport { ColumnType } from './common/column.interface';\nimport { RowType } from './common/row.interface';\nimport { GridSelectionMode } from './common/enums';\nimport { GridType } from './common/grid.interface';\nimport { ISearchInfo } from './grid/public_api';\n\n/**\n * Providing reference to `IgxGridCellComponent`:\n * ```typescript\n * @ViewChild('grid', { read: IgxGridComponent })\n *  public grid: IgxGridComponent;\n * ```\n * ```typescript\n *  let column = this.grid.columnList.first;\n * ```\n * ```typescript\n *  let cell = column.cells[0];\n * ```\n */\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'igx-grid-cell',\n    templateUrl: './cell.component.html',\n    providers: [HammerGesturesManager]\n})\nexport class IgxGridCellComponent implements OnInit, OnChanges, OnDestroy {\n    private _vIndex = -1;\n    protected _lastSearchInfo: ISearchInfo;\n\n    /**\n     * Gets the column of the cell.\n     * ```typescript\n     *  let cellColumn = this.cell.column;\n     * ```\n     * @memberof IgxGridCellComponent\n     */\n    @Input()\n    public column: ColumnType;\n\n    /**\n     * Gets the row of the cell.\n     * ```typescript\n     * let cellRow = this.cell.row;\n     * ```\n     * @memberof IgxGridCellComponent\n     */\n    @Input()\n    public row: RowType;\n\n    /**\n     * Gets the data of the row of the cell.\n     * ```typescript\n     * let rowData = this.cell.rowData;\n     * ```\n     * @memberof IgxGridCellComponent\n     */\n    @Input()\n    public rowData: any;\n\n    /**\n     * Sets/gets the template of the cell.\n     * ```html\n     * <ng-template #cellTemplate igxCell let-value>\n     *   <div style=\"font-style: oblique; color:blueviolet; background:red\">\n     *       <span>{{value}}</span>\n     *   </div>\n     * </ng-template>\n     * ```\n     * ```typescript\n     * @ViewChild('cellTemplate',{read: TemplateRef})\n     * cellTemplate: TemplateRef<any>;\n     * ```\n     * ```typescript\n     * this.cell.cellTemplate = this.cellTemplate;\n     * ```\n     * ```typescript\n     * let template =  this.cell.cellTemplate;\n     * ```\n     * @memberof IgxGridCellComponent\n     */\n    @Input()\n    public cellTemplate: TemplateRef<any>;\n\n    @Input()\n    public pinnedIndicator: TemplateRef<any>;\n\n    /**\n     * Sets/gets the cell value.\n     * ```typescript\n     * this.cell.value = \"Cell Value\";\n     * ```\n     * ```typescript\n     * let cellValue = this.cell.value;\n     * ```\n     * @memberof IgxGridCellComponent\n     */\n    @Input()\n    public value: any;\n\n    /**\n     * Sets/gets the highlight class of the cell.\n     * Default value is `\"igx-highlight\"`.\n     * ```typescript\n     * let highlightClass = this.cell.highlightClass;\n     * ```\n     * ```typescript\n     * this.cell.highlightClass = 'igx-cell-highlight';\n     * ```\n     * @memberof IgxGridCellComponent\n     */\n    public highlightClass = 'igx-highlight';\n\n    /**\n     * Sets/gets the active highlight class class of the cell.\n     * Default value is `\"igx-highlight__active\"`.\n     * ```typescript\n     * let activeHighlightClass = this.cell.activeHighlightClass;\n     * ```\n     * ```typescript\n     * this.cell.activeHighlightClass = 'igx-cell-highlight_active';\n     * ```\n     * @memberof IgxGridCellComponent\n     */\n    public activeHighlightClass = 'igx-highlight__active';\n\n    /**\n     * Gets the cell formatter.\n     * ```typescript\n     * let cellForamatter = this.cell.formatter;\n     * ```\n     * @memberof IgxGridCellComponent\n     */\n    @Input()\n    formatter: (value: any) => any;\n\n    /**\n     * Gets the cell template context object.\n     * ```typescript\n     *  let context = this.cell.context();\n     * ```\n     * @memberof IgxGridCellComponent\n     */\n    get context(): any {\n        return {\n            $implicit: this.value,\n            cell: this\n        };\n    }\n\n    /**\n     * Gets the cell template.\n     * ```typescript\n     * let template = this.cell.template;\n     * ```\n     * @memberof IgxGridCellComponent\n     */\n    get template(): TemplateRef<any> {\n        if (this.editMode) {\n            const inlineEditorTemplate = this.column.inlineEditorTemplate;\n            return inlineEditorTemplate ? inlineEditorTemplate : this.inlineEditorTemplate;\n        }\n        if (this.cellTemplate) {\n            return this.cellTemplate;\n        }\n        return this.defaultCellTemplate;\n    }\n\n    /**\n     * Gets the cell template.\n     * ```typescript\n     * let template = this.cell.template;\n     * ```\n     * @memberof IgxGridCellComponent\n     */\n    get pinnedIndicatorTemplate() {\n        if (this.pinnedIndicator) {\n            return this.pinnedIndicator;\n        }\n        return this.defaultPinnedIndicator;\n    }\n\n    /**\n     * Gets the `id` of the grid in which the cell is stored.\n     * ```typescript\n     * let gridId = this.cell.gridID;\n     * ```\n     * @memberof IgxGridCellComponent\n     */\n    get gridID(): any {\n        return this.row.gridID;\n    }\n\n    /**\n     * Gets the grid of the cell.\n     * ```typescript\n     * let grid = this.cell.grid;\n     * ```\n     * @memberof IgxGridCellComponent\n     */\n    get grid(): any {\n        return this.gridAPI.grid;\n    }\n\n    /**\n     * Gets the `index` of the row where the cell is stored.\n     * ```typescript\n     * let rowIndex = this.cell.rowIndex;\n     * ```\n     * @memberof IgxGridCellComponent\n     */\n    @HostBinding('attr.data-rowIndex')\n    get rowIndex(): number {\n        return this.row.index;\n    }\n\n    /**\n     * Gets the `index` of the cell column.\n     * ```typescript\n     * let columnIndex = this.cell.columnIndex;\n     * ```\n     * @memberof IgxGridCellComponent\n     */\n    get columnIndex(): number {\n        return this.column.index;\n    }\n\n    /**\n     * Gets the visible `index` of the in which the cell is stored.\n     * ```typescript\n     * let visibleColumnIndex = this.cell.visibleColumnIndex;\n     * ```\n     * @memberof IgxGridCellComponent\n     */\n    @HostBinding('attr.data-visibleIndex')\n    @Input()\n    get visibleColumnIndex() {\n        return this.column.columnLayoutChild ? this.column.visibleIndex : this._vIndex;\n    }\n\n    set visibleColumnIndex(val) {\n        this._vIndex = val;\n    }\n\n    /**\n     * Gets the ID of the cell.\n     * ```typescript\n     * let cellID = this.cell.cellID;\n     * ```\n     * @memberof IgxGridCellComponent\n     */\n    public get cellID() {\n        const primaryKey = this.grid.primaryKey;\n        const rowID = primaryKey ? this.rowData[primaryKey] : this.rowData;\n        return { rowID, columnID: this.columnIndex, rowIndex: this.rowIndex };\n    }\n\n    @HostBinding('attr.id')\n    public get attrCellID() {\n        return `${this.row.gridID}_${this.rowIndex}_${ this.visibleColumnIndex}`;\n    }\n\n    /**\n     * Returns a reference to the nativeElement of the cell.\n     * ```typescript\n     * let cellNativeElement = this.cell.nativeElement;\n     * ```\n     * @memberof IgxGridCellComponent\n     */\n    get nativeElement(): HTMLElement {\n        return this.element.nativeElement;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @Input()\n    get cellSelectionMode() {\n        return this._cellSelection;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @Input()\n    set lastSearchInfo(value: ISearchInfo) {\n        this._lastSearchInfo = value;\n        this.highlightText(this._lastSearchInfo.searchText, this._lastSearchInfo.caseSensitive, this._lastSearchInfo.exactMatch);\n    }\n\n    set cellSelectionMode(value) {\n        if (this._cellSelection === value) { return; }\n         this.zone.runOutsideAngular(() => {\n            value === GridSelectionMode.multiple ?\n            this.addPointerListeners(value) : this.removePointerListeners(this._cellSelection);\n        });\n        this._cellSelection = value;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @Input()\n    @HostBinding('class.igx-grid__td--pinned-last')\n    lastPinned = false;\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @Input()\n    @HostBinding('class.igx-grid__td--pinned-first')\n    firstPinned = false;\n\n    /**\n     * Returns whether the cell is in edit mode.\n     */\n    @Input()\n    @HostBinding('class.igx-grid__td--editing')\n    editMode = false;\n\n\n    /**\n     * Sets/get the `role` property of the cell.\n     * Default value is `\"gridcell\"`.\n     * ```typescript\n     * this.cell.role = 'grid-cell';\n     * ```\n     * ```typescript\n     * let cellRole = this.cell.role;\n     * ```\n     * @memberof IgxGridCellComponent\n     */\n    @HostBinding('attr.role')\n    public role = 'gridcell';\n\n    /**\n     * Gets whether the cell is editable.\n     * ```typescript\n     * let isCellReadonly = this.cell.readonly;\n     * ```\n     * @memberof IgxGridCellComponent\n     */\n    @HostBinding('attr.aria-readonly')\n    get readonly(): boolean {\n        return !this.editable;\n    }\n\n    get gridRowSpan(): number {\n        return this.column.gridRowSpan;\n    }\n\n    get gridColumnSpan(): number {\n        return this.column.gridColumnSpan;\n    }\n\n\n    get rowEnd(): number {\n        return this.column.rowEnd;\n    }\n\n    get colEnd(): number {\n        return this.column.colEnd;\n    }\n\n    get rowStart(): number {\n        return this.column.rowStart;\n    }\n\n    get colStart(): number {\n        return this.column.colStart;\n    }\n\n    /**\n     * Returns a string containing the grid `id` and the column `field` concatenated by \"_\".\n     * ```typescript\n     * let describedBy = this.cell.describedBy;\n     * ```\n     * @memberof IgxGridCellComponent\n     */\n    @HostBinding('attr.aria-describedby')\n    get describedby(): string {\n        return `${this.row.gridID}_${this.column.field}`;\n    }\n\n    /**\n     * Gets the width of the cell.\n     * ```typescript\n     * let cellWidth = this.cell.width;\n     * ```\n     * @memberof IgxGridCellComponent\n     */\n    @Input()\n    width = '';\n\n    /**\n     * @hidden\n     */\n    @Input()\n    @HostBinding('class.igx-grid__td--active')\n    public active: boolean;\n\n    @HostBinding('attr.aria-selected')\n    get ariaSelected() {\n        return this.selected || this.column.selected  || this.row.selected;\n    }\n\n    /**\n     * Gets whether the cell is selected.\n     * ```typescript\n     * let isSelected = this.cell.selected;\n     * ```\n     * @memberof IgxGridCellComponent\n     */\n    @HostBinding('class.igx-grid__td--selected')\n    get selected() {\n        return this.selectionService.selected(this.selectionNode);\n    }\n\n    /**\n     * Selects/deselects the cell.\n     * ```typescript\n     * this.cell.selected = true.\n     * ```\n     * @memberof IgxGridCellComponent\n     */\n    set selected(val: boolean) {\n        const node = this.selectionNode;\n        val ? this.selectionService.add(node) : this.selectionService.remove(node);\n        this.grid.notifyChanges();\n    }\n\n    /**\n     * Gets whether the cell column is selected.\n     * ```typescript\n     * let isCellColumnSelected = this.cell.columnSelected;\n     * ```\n     * @memberof IgxGridCellComponent\n     */\n    @HostBinding('class.igx-grid__td--column-selected')\n    get columnSelected() {\n        return this.selectionService.isColumnSelected(this.column.field);\n    }\n\n    @HostBinding('class.igx-grid__td--edited')\n    get dirty() {\n        if (this.grid.rowEditable) {\n            const rowCurrentState = this.grid.transactions.getAggregatedValue(this.row.rowID, false);\n            if (rowCurrentState) {\n                return rowCurrentState[this.column.field] !== undefined && rowCurrentState[this.column.field] !== null;\n            }\n        } else {\n            const rowTransaction: State = this.grid.transactions.getState(this.row.rowID);\n                return rowTransaction && rowTransaction.value &&\n                (rowTransaction.value[this.column.field] ||\n                 rowTransaction.value[this.column.field] === 0 ||\n                 rowTransaction.value[this.column.field] === false);\n        }\n\n        return false;\n    }\n\n    /**\n     * Sets the current edit value while a cell is in edit mode.\n     * Only for cell editing mode.\n     * ```typescript\n     * this.cell.editValue = value;\n     * ```\n     * @memberof IgxGridCellComponent\n     */\n    public set editValue(value) {\n        if (this.crudService.inEditMode) {\n            this.crudService.cell.editValue = value;\n        }\n    }\n\n    /**\n     * Gets the current edit value while a cell is in edit mode.\n     * Only for cell editing mode.\n     * ```typescript\n     * let editValue = this.cell.editValue;\n     * ```\n     * @memberof IgxGridCellComponent\n     */\n    public get editValue() {\n        if (this.crudService.inEditMode) {\n            return this.crudService.cell.editValue;\n        }\n    }\n\n    /**\n     * Returns whether the cell is editable.\n     */\n    get editable(): boolean {\n        return this.column.editable && !this.row.disabled;\n    }\n\n    /**\n     * @hidden\n     */\n    @Input()\n    @HostBinding('class.igx-grid__td--row-pinned-first')\n    public displayPinnedChip = false;\n\n\n    @ViewChild('defaultCell', { read: TemplateRef, static: true })\n    protected defaultCellTemplate: TemplateRef<any>;\n\n    @ViewChild('defaultPinnedIndicator', { read: TemplateRef, static: true })\n    protected defaultPinnedIndicator: TemplateRef<any>;\n\n    @ViewChild('inlineEditor', { read: TemplateRef, static: true })\n    protected inlineEditorTemplate: TemplateRef<any>;\n\n    @ViewChild(IgxTextHighlightDirective, { read: IgxTextHighlightDirective })\n    protected set highlight(value: IgxTextHighlightDirective) {\n        this._highlight = value;\n\n        if (this._highlight && this.grid.lastSearchInfo.searchText) {\n            this._highlight.highlight(this.grid.lastSearchInfo.searchText,\n                this.grid.lastSearchInfo.caseSensitive,\n                this.grid.lastSearchInfo.exactMatch);\n            this._highlight.activateIfNecessary();\n        }\n    }\n\n    protected get highlight() {\n        return this._highlight;\n    }\n\n    protected get selectionNode(): ISelectionNode {\n        return {\n            row: this.rowIndex,\n            column: this.column.columnLayoutChild ? this.column.parent.visibleIndex : this.visibleColumnIndex,\n            layout: this.column.columnLayoutChild ? {\n                rowStart: this.column.rowStart,\n                colStart: this.column.colStart,\n                rowEnd: this.column.rowEnd,\n                colEnd: this.column.colEnd,\n                columnVisibleIndex: this.visibleColumnIndex\n            } : null\n            };\n    }\n\n    public focused = this.active;\n    protected compositionStartHandler;\n    protected compositionEndHandler;\n    private _highlight: IgxTextHighlightDirective;\n    private _cellSelection = GridSelectionMode.multiple;\n\n    constructor(\n        protected selectionService: IgxGridSelectionService,\n        protected crudService: IgxGridCRUDService,\n        public gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>,\n        public cdr: ChangeDetectorRef,\n        private element: ElementRef,\n        protected zone: NgZone,\n        private touchManager: HammerGesturesManager,\n        protected platformUtil: PlatformUtil) { }\n\n    private addPointerListeners(selection) {\n        if (selection !== GridSelectionMode.multiple) { return; }\n        this.nativeElement.addEventListener('pointerenter', this.pointerenter);\n        this.nativeElement.addEventListener('pointerup', this.pointerup);\n    }\n\n    private  removePointerListeners(selection) {\n        if (selection !== GridSelectionMode.multiple) { return; }\n        this.nativeElement.removeEventListener('pointerenter', this.pointerenter);\n        this.nativeElement.removeEventListener('pointerup', this.pointerup);\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    ngOnInit() {\n        this.zone.runOutsideAngular(() => {\n            this.nativeElement.addEventListener('pointerdown', this.pointerdown);\n            this.addPointerListeners(this.cellSelectionMode);\n            // IE 11 workarounds\n            if (isIE()) {\n                this.compositionStartHandler = () => this.crudService.isInCompositionMode = true;\n                this.compositionEndHandler = () => this.crudService.isInCompositionMode = false;\n                // Hitting Enter with IME submits and exits from edit mode instead of first closing the IME dialog\n                this.nativeElement.addEventListener('compositionstart', this.compositionStartHandler);\n                this.nativeElement.addEventListener('compositionend', this.compositionEndHandler);\n            }\n        });\n        if (this.platformUtil.isIOS) {\n            this.touchManager.addEventListener(this.nativeElement, 'doubletap', this.onDoubleClick, {\n                cssProps: { } /* don't disable user-select, etc */\n            } as HammerOptions);\n        }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    ngOnDestroy() {\n        this.zone.runOutsideAngular(() => {\n            this.nativeElement.removeEventListener('pointerdown', this.pointerdown);\n            this.removePointerListeners(this.cellSelectionMode);\n            if (isIE()) {\n                this.nativeElement.removeEventListener('compositionstart', this.compositionStartHandler);\n                this.nativeElement.removeEventListener('compositionend', this.compositionEndHandler);\n            }\n        });\n        this.touchManager.destroy();\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    _updateCRUDStatus() {\n        if (this.editMode) {\n            return;\n        }\n\n        const crud = this.crudService;\n        const editableCell = this.crudService.cell;\n        const editMode = !!(crud.row || crud.cell);\n\n        if (this.editable && editMode && !this.row.deleted) {\n            if (editableCell) {\n                this.gridAPI.update_cell(editableCell, editableCell.editValue);\n                /* This check is related with the following issue #6517:\n                 * when edit cell that belongs to a column which is sorted and press tab,\n                 * the next cell in edit mode is with wrong value /its context is not updated/;\n                 * So we reapply sorting before the next cell enters edit mode.\n                 * Also we need to keep the notifyChanges below, because of the current\n                 * change detection cycle when we have editing with enabled transactions\n                 */\n                if (this.grid.sortingExpressions.length && this.grid.sortingExpressions.indexOf(editableCell.column.field)) {\n                    this.grid.cdr.detectChanges();\n                }\n            }\n            crud.end();\n            this.grid.tbody.nativeElement.focus({ preventScroll: true });\n            this.grid.notifyChanges();\n            crud.begin(this);\n            return;\n        }\n\n        if (editableCell && crud.sameRow(this.cellID.rowID)) {\n            this.gridAPI.submit_value();\n        } else if (editMode && !crud.sameRow(this.cellID.rowID)) {\n            this.grid.endEdit(true);\n        }\n    }\n\n    /**\n     * @deprecated\n     * Gets whether the cell is selected.\n     * ```typescript\n     * let isCellSelected = thid.cell.isCellSelected();\n     * ```\n     * @memberof IgxGridCellComponent\n     */\n    @DeprecateMethod(`'isCellSelected' is deprecated. Use 'selected' property instead.`)\n    public isCellSelected() {\n        return this.selectionService.selected(this.selectionNode);\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.value && !changes.value.firstChange) {\n            if (this.highlight) {\n                this.highlight.lastSearchInfo.searchedText = this.grid.lastSearchInfo.searchText;\n                this.highlight.lastSearchInfo.caseSensitive = this.grid.lastSearchInfo.caseSensitive;\n                this.highlight.lastSearchInfo.exactMatch = this.grid.lastSearchInfo.exactMatch;\n            }\n        }\n    }\n\n    /**\n     * Starts/ends edit mode for the cell.\n     *\n     * ```typescript\n     * cell.setEditMode(true);\n     * ```\n     */\n    setEditMode(value: boolean): void {\n        if (this.row.deleted) {\n            return;\n        }\n        if (this.editable && value) {\n            this.gridAPI.submit_value();\n            this.crudService.begin(this);\n        } else {\n            this.gridAPI.escape_editMode();\n        }\n        this.grid.notifyChanges();\n    }\n\n    /**\n     * Sets new value to the cell.\n     * ```typescript\n     * this.cell.update('New Value');\n     * ```\n     * @memberof IgxGridCellComponent\n     */\n    // TODO: Refactor\n    public update(val: any) {\n        if (this.row.deleted) {\n            return;\n        }\n        const cell = this.crudService.createCell(this);\n        const args = this.gridAPI.update_cell(cell, val);\n        if (this.crudService.cell && this.crudService.sameCell(cell)) {\n            if (args.cancel) {\n                return;\n            }\n            this.gridAPI.escape_editMode();\n        }\n        this.cdr.markForCheck();\n    }\n\n    /**\n     *\n     * @hidden\n     * @internal\n     */\n    pointerdown = (event: PointerEvent) => {\n        if (this.cellSelectionMode !== GridSelectionMode.multiple) {\n            this.activate(event);\n            return;\n        }\n        if (!isLeftClick(event)) {\n            this.selectionService.addKeyboardRange();\n            this.selectionService.initKeyboardState();\n            this.selectionService.primaryButton = false;\n            this.gridAPI.submit_value();\n            return;\n        }\n        this.selectionService.pointerDown(this.selectionNode, event.shiftKey, event.ctrlKey);\n        this.activate(event);\n    }\n\n    /**\n     *\n     * @hidden\n     * @internal\n     */\n    pointerenter = (event: PointerEvent) => {\n        const dragMode = this.selectionService.pointerEnter(this.selectionNode, event);\n        if (dragMode) {\n            this.grid.cdr.detectChanges();\n        }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    pointerup = (event: PointerEvent) => {\n        if (!isLeftClick(event)) { return; }\n        if (this.selectionService.pointerUp(this.selectionNode, this.grid.onRangeSelection)) {\n            this.grid.cdr.detectChanges();\n        }\n        this._updateCRUDStatus();\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @HostListener('dblclick', ['$event'])\n    public onDoubleClick = (event: MouseEvent | HammerInput) => {\n        if (event.type === 'doubletap') {\n            // prevent double-tap to zoom on iOS\n            (event as HammerInput).preventDefault();\n        }\n        if (this.editable && !this.editMode && !this.row.deleted) {\n            this.crudService.begin(this);\n        }\n\n        this.grid.onDoubleClick.emit({\n            cell: this,\n            event\n        });\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @HostListener('click', ['$event'])\n    public onClick(event: MouseEvent) {\n        this.grid.onCellClick.emit({\n            cell: this,\n            event\n        });\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @HostListener('contextmenu', ['$event'])\n    public onContextMenu(event: MouseEvent) {\n        this.grid.onContextMenu.emit({\n            cell: this,\n            event\n        });\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public activate(event: FocusEvent | KeyboardEvent) {\n        const node = this.selectionNode;\n\n        if (this.grid.navigation.activeNode) {\n            Object.assign(this.grid.navigation.activeNode, {row: this.rowIndex, column: this.visibleColumnIndex});\n        } else {\n            const layout = this.column.columnLayoutChild ? this.grid.navigation.layout(this.visibleColumnIndex) : null;\n            this.grid.navigation.activeNode = { row: this.rowIndex, column: this.visibleColumnIndex, layout: layout };\n        }\n\n        const shouldEmitSelection = !this.selectionService.isActiveNode(node);\n\n        if (this.selectionService.primaryButton) {\n            this._updateCRUDStatus();\n            this.selectionService.activeElement = node;\n        } else {\n            this.selectionService.activeElement = null;\n            if (this.crudService.inEditMode && !this.editMode) {\n                this.gridAPI.submit_value();\n            }\n        }\n        this.selectionService.primaryButton = true;\n        if (this.cellSelectionMode === GridSelectionMode.multiple && this.selectionService.activeElement) {\n            this.selectionService.add(this.selectionService.activeElement, false); // pointer events handle range generation\n            this.selectionService.keyboardStateOnFocus(node, this.grid.onRangeSelection, this.nativeElement);\n        }\n        if (this.grid.isCellSelectable && shouldEmitSelection) {\n            this.grid.onSelection.emit({ cell: this, event });\n        }\n        this.grid.cdr.detectChanges();\n    }\n\n    /**\n     * If the provided string matches the text in the cell, the text gets highlighted.\n     * ```typescript\n     * this.cell.highlightText('Cell Value', true);\n     * ```\n     * @memberof IgxGridCellComponent\n     */\n    public highlightText(text: string, caseSensitive?: boolean, exactMatch?: boolean): number {\n        return this.highlight && this.column.searchable ? this.highlight.highlight(text, caseSensitive, exactMatch) : 0;\n    }\n\n    /**\n     * Clears the highlight of the text in the cell.\n     * ```typescript\n     * this.cell.clearHighLight();\n     * ```\n     * @memberof IgxGridCellComponent\n     */\n    public clearHighlight() {\n        if (this.highlight && this.column.searchable) {\n            this.highlight.clearHighlight();\n        }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public calculateSizeToFit(range: any): number {\n        return Math.max(...Array.from(this.nativeElement.children)\n            .map((child) => getNodeSizeViaRange(range, child)));\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public get searchMetadata() {\n        const meta = new Map<string, any>();\n        meta.set('pinned', this.grid.isRecordPinnedByViewIndex(this.row.index));\n        return meta;\n    }\n}\n","import { SimpleChanges, SimpleChange } from '@angular/core';\n\n/**\n * @hidden\n */\nexport function WatchChanges(): PropertyDecorator {\n    return (target: any, key: string, propDesc?: PropertyDescriptor) => {\n        const privateKey = '_' + key.toString();\n        propDesc = propDesc || {\n            configurable: true,\n            enumerable: true,\n        };\n        propDesc.get = propDesc.get || (function (this: any) { return this[privateKey]; });\n        const originalSetter = propDesc.set || (function (this: any, val: any) { this[privateKey] = val; });\n\n        propDesc.set = function (this: any, val: any) {\n            const init = this._init;\n            const oldValue = this[key];\n            if (val !== oldValue || (typeof val === 'object' && val === oldValue)) {\n                originalSetter.call(this, val);\n                if (this.ngOnChanges && !init) {\n                    // in case wacthed prop changes trigger ngOnChanges manually\n                    const changes: SimpleChanges = {\n                        [key]: new SimpleChange(oldValue, val, false)\n                    };\n                    this.ngOnChanges(changes);\n               }\n            }\n        };\n        return propDesc;\n    };\n}\n\nexport function WatchColumnChanges(): PropertyDecorator {\n    return (target: any, key: string, propDesc?: PropertyDescriptor) => {\n        const privateKey = '_' + key.toString();\n        propDesc = propDesc || {\n            configurable: true,\n            enumerable: true,\n        };\n        propDesc.get = propDesc.get || (function (this: any) { return this[privateKey]; });\n        const originalSetter = propDesc.set || (function (this: any, val: any) { this[privateKey] = val; });\n\n        propDesc.set = function (this: any, val: any) {\n            const init = this._init;\n            const oldValue = this[key];\n            originalSetter.call(this, val);\n            if (val !== oldValue || (typeof val === 'object' && val === oldValue)) {\n                if (this.rowIslandAPI.rowIsland) {\n                    this.rowIslandAPI.rowIsland.updateColumnList();\n               }\n            }\n        };\n        return propDesc;\n    };\n}\n\nexport function notifyChanges(repaint = false) {\n    return (_: any, key: string, propDesc?: PropertyDescriptor) => {\n\n        const privateKey = `__${key}`;\n\n        propDesc = propDesc || {\n            enumerable: true,\n            configurable: true\n        };\n\n\n        const originalSetter = propDesc ? propDesc.set : null;\n\n        propDesc.get = propDesc.get || (function(this) { return this[privateKey]; });\n\n        propDesc.set = function(this, newValue) {\n            if (originalSetter) {\n                originalSetter.call(this, newValue);\n                if (this.grid) {\n                    this.grid.notifyChanges(repaint);\n                }\n            } else {\n                if (newValue === this[key]) { return; }\n                this[privateKey] = newValue;\n                if (this.grid) {\n                    this.grid.notifyChanges(repaint);\n                }\n            }\n        };\n        return propDesc as any;\n    };\n}\n","import { IgxHierarchicalGridComponent } from './hierarchical-grid.component';\nimport { IgxRowIslandComponent } from './row-island.component';\nimport { Subject } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class IgxRowIslandAPIService {\n    public rowIsland: IgxRowIslandComponent;\n    public change: Subject<any> = new Subject<any>();\n    protected state: Map<string, IgxRowIslandComponent> = new Map<string, IgxRowIslandComponent>();\n    protected destroyMap: Map<string, Subject<boolean>> = new Map<string, Subject<boolean>>();\n\n    protected childRowIslands: Map<string, IgxRowIslandComponent> = new Map<string, IgxRowIslandComponent>();\n    protected childGrids:  Map<any, IgxHierarchicalGridComponent> = new Map<any, IgxHierarchicalGridComponent>();\n\n    public register(rowIsland: IgxRowIslandComponent) {\n        this.state.set(rowIsland.id, rowIsland);\n        this.destroyMap.set(rowIsland.id, new Subject<boolean>());\n    }\n\n    public unsubscribe(rowIsland: IgxRowIslandComponent) {\n        this.state.delete(rowIsland.id);\n    }\n\n    public get(id: string): IgxRowIslandComponent {\n        return this.state.get(id);\n    }\n\n    public unset(id: string) {\n        this.state.delete(id);\n        this.destroyMap.delete(id);\n    }\n\n    public reset(oldId: string, newId: string) {\n        const destroy = this.destroyMap.get(oldId);\n        const rowIsland = this.get(oldId);\n\n        this.unset(oldId);\n\n        if (rowIsland) {\n            this.state.set(newId, rowIsland);\n        }\n\n        if (destroy) {\n            this.destroyMap.set(newId, destroy);\n        }\n    }\n\n    registerChildRowIsland(rowIsland: IgxRowIslandComponent) {\n        this.childRowIslands.set(rowIsland.key, rowIsland);\n        this.destroyMap.set(rowIsland.key, new Subject<boolean>());\n    }\n\n    unsetChildRowIsland(rowIsland: IgxRowIslandComponent) {\n        this.childRowIslands.delete(rowIsland.key);\n        this.destroyMap.delete(rowIsland.key);\n    }\n\n    getChildRowIsland(rowIslandKey: string) {\n        return this.childRowIslands.get(rowIslandKey);\n    }\n\n    registerChildGrid(parentRowID: string|object, grid: IgxHierarchicalGridComponent) {\n        this.childGrids.set(parentRowID, grid);\n    }\n\n    getChildGrids(inDepth?: boolean) {\n        let allChildren = [];\n        this.childGrids.forEach((grid) => {\n            allChildren.push(grid);\n        });\n        if (inDepth) {\n            this.childRowIslands.forEach((layout) => {\n                allChildren = allChildren.concat(layout.rowIslandAPI.getChildGrids(inDepth));\n            });\n        }\n\n        return allChildren;\n    }\n\n    getChildGridByID(rowID) {\n        return this.childGrids.get(rowID);\n    }\n}\n","import {\n    Component,\n    Directive,\n    EventEmitter,\n    forwardRef,\n    HostBinding,\n    Input,\n    NgModule,\n    Output,\n    Provider,\n    ViewChild,\n    ElementRef\n} from '@angular/core';\nimport { CheckboxRequiredValidator, ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IgxRippleModule } from '../directives/ripple/ripple.directive';\nimport { isIE, IBaseEventArgs } from '../core/utils';\nimport { EditorProvider } from '../core/edit-provider';\n\nexport enum LabelPosition {\n    BEFORE = 'before',\n    AFTER = 'after'\n}\n\nexport interface IChangeCheckboxEventArgs extends IBaseEventArgs {\n    checked: boolean;\n    checkbox: IgxCheckboxComponent;\n}\n\nconst noop = () => { };\nlet nextId = 0;\n/**\n * Allows users to make a binary choice for a certain condition.\n *\n * @igxModule IgxCheckboxModule\n *\n * @igxTheme igx-checkbox-theme\n *\n * @igxKeywords checkbox, label\n *\n * @igxGroup Data entry and display\n *\n * @remarks\n * The Ignite UI Checkbox is a selection control that allows users to make a binary choice for a certain condition.It behaves similarly\n * to the native browser checkbox.\n *\n * @example\n * ```html\n * <igx-checkbox checked=\"true\">\n *   simple checkbox\n * </igx-checkbox>\n * ```\n */\n@Component({\n    providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: IgxCheckboxComponent, multi: true }],\n    selector: 'igx-checkbox',\n    preserveWhitespaces: false,\n    templateUrl: 'checkbox.component.html'\n})\nexport class IgxCheckboxComponent implements ControlValueAccessor, EditorProvider {\n    /**\n     * @hidden\n     */\n    protected _value: any;\n    /**\n     * Returns reference to the native checkbox element.\n     *\n     * @example\n     * ```typescript\n     * let checkboxElement =  this.checkbox.checkboxElement;\n     * ```\n     */\n    @ViewChild('checkbox', { static: true }) public nativeCheckbox: ElementRef;\n    /**\n     * Returns reference to the native label element.\n     * ```typescript\n     *\n     * @example\n     * let labelElement =  this.checkbox.nativeLabel;\n     * ```\n     */\n    @ViewChild('label', { static: true }) public nativeLabel;\n    /**\n     * Returns reference to the label placeholder element.\n     * ```typescript\n     *\n     * @example\n     * let labelPlaceholder =  this.checkbox.placeholderLabel;\n     * ```\n     */\n    @ViewChild('placeholderLabel', { static: true }) public placeholderLabel;\n    /**\n     * Sets/gets the `id` of the checkbox component.\n     * If not set, the `id` of the first checkbox component will be `\"igx-checkbox-0\"`.\n     *\n     * @example\n     * ```html\n     * <igx-checkbox id=\"my-first-checkbox\"></igx-checkbox>\n     * ```\n     * ```typescript\n     * let checkboxId =  this.checkbox.id;\n     * ```\n     */\n    @HostBinding('attr.id')\n    @Input() public id = `igx-checkbox-${nextId++}`;\n    /**\n     * Sets/gets the id of the `label` element.\n     * If not set, the id of the `label` in the first checkbox component will be `\"igx-checkbox-0-label\"`.\n     *\n     * @example\n     * ```html\n     * <igx-checkbox labelId = \"Label1\"></igx-checkbox>\n     * ```\n     * ```typescript\n     * let labelId =  this.checkbox.labelId;\n     * ```\n     */\n    @Input() public labelId = `${this.id}-label`;\n    /**\n     * Sets/gets the `value` attribute.\n     *\n     * @example\n     * ```html\n     * <igx-checkbox [value] = \"'CheckboxValue'\"></igx-checkbox>\n     * ```\n     * ```typescript\n     * let value =  this.checkbox.value;\n     * ```\n     */\n    @Input() public value: any;\n    /**\n     * Sets/gets the `name` attribute.\n     *\n     * @example\n     * ```html\n     * <igx-checkbox name = \"Checkbox1\"></igx-checkbox>\n     * ```\n     * ```typescript\n     * let name =  this.checkbox.name;\n     * ```\n     */\n    @Input() public name: string;\n    /**\n     * Sets/gets the value of the `tabindex` attribute.\n     *\n     * @example\n     * ```html\n     * <igx-checkbox [tabindex] = \"1\"></igx-checkbox>\n     * ```\n     * ```typescript\n     * let tabIndex =  this.checkbox.tabindex;\n     * ```\n     */\n    @Input() public tabindex: number = null;\n    /**\n     *  Sets/gets the position of the `label`.\n     *  If not set, the `labelPosition` will have value `\"after\"`.\n     *\n     * @example\n     * ```html\n     * <igx-checkbox labelPosition = \"before\"></igx-checkbox>\n     * ```\n     * ```typescript\n     * let labelPosition =  this.checkbox.labelPosition;\n     * ```\n     */\n    @Input() public labelPosition: LabelPosition | string = LabelPosition.AFTER;\n    /**\n     * Enables/Disables the ripple effect.\n     * If not set, `disableRipple` will have value `false`.\n     *\n     * @example\n     * ```html\n     * <igx-checkbox [disableRipple] = \"true\"></igx-checkbox>\n     * ```\n     * ```typescript\n     * let isRippleDisabled = this.checkbox.desableRipple;\n     * ```\n     */\n    @Input() public disableRipple = false;\n    /**\n     * Sets/gets whether the checkbox is required.\n     * If not set, `required` will have value `false`.\n     *\n     * @example\n     * ```html\n     * <igx-checkbox [required] = \"true\"></igx-checkbox>\n     * ```\n     * ```typescript\n     * let isRequired =  this.checkbox.required;\n     * ```\n     */\n    @Input() public required = false;\n    /**\n     * Sets/gets the `aria-labelledby` attribute.\n     * If not set, the `aria-labelledby` will be equal to the value of `labelId` attribute.\n     *\n     * @example\n     * ```html\n     * <igx-checkbox aria-labelledby = \"Checkbox1\"></igx-checkbox>\n     * ```\n     * ```typescript\n     * let ariaLabelledBy =  this.checkbox.ariaLabelledBy;\n     * ```\n     */\n    @Input('aria-labelledby')\n    public ariaLabelledBy = this.labelId;\n    /**\n     * Sets/gets the value of the `aria-label` attribute.\n     *\n     * @example\n     * ```html\n     * <igx-checkbox aria-label = \"Checkbox1\"></igx-checkbox>\n     * ```\n     * ```typescript\n     * let ariaLabel = this.checkbox.ariaLabel;\n     * ```\n     */\n    @Input('aria-label')\n    public ariaLabel: string | null = null;\n    /**\n     * An event that is emitted after the checkbox state is changed.\n     * Provides references to the `IgxCheckboxComponent` and the `checked` property as event arguments.\n     */\n    @Output()\n    readonly change: EventEmitter<IChangeCheckboxEventArgs> = new EventEmitter<IChangeCheckboxEventArgs>();\n    /**\n     * Returns the class of the checkbox component.\n     *\n     * @example\n     * ```typescript\n     * let class =  this.checkbox.cssClass;\n     * ```\n     */\n    @HostBinding('class.igx-checkbox')\n    public cssClass = 'igx-checkbox';\n    /**\n     * Sets/gets whether the checkbox component is on focus.\n     * Default value is `false`.\n     *\n     * @example\n     * ```typescript\n     * this.checkbox.focused =  true;\n     * ```\n     * ```typescript\n     * let isFocused =  this.checkbox.focused;\n     * ```\n     */\n    @HostBinding('class.igx-checkbox--focused')\n    public focused = false;\n    /**\n     * Sets/gets the checkbox indeterminate visual state.\n     * Default value is `false`;\n     *\n     * @example\n     * ```html\n     * <igx-checkbox [indeterminate] = \"true\"></igx-checkbox>\n     * ```\n     * ```typescript\n     * let isIndeterminate = this.checkbox.indeterminate;\n     * ```\n     */\n    @HostBinding('class.igx-checkbox--indeterminate')\n    @Input() public indeterminate = false;\n    /**\n     * Sets/gets whether the checkbox is checked.\n     * Default value is `false`.\n     *\n     * @example\n     * ```html\n     * <igx-checkbox [checked] = \"true\"></igx-checkbox>\n     * ```\n     * ```typescript\n     * let isChecked =  this.checkbox.checked;\n     * ```\n     */\n    @HostBinding('class.igx-checkbox--checked')\n    @Input() public checked = false;\n    /**\n     * Sets/gets whether the checkbox is disabled.\n     * Default value is `false`.\n     *\n     * @example\n     * ```html\n     * <igx-checkbox [disabled] = \"true\"></igx-checkbox>\n     * ```\n     * ```typescript\n     * let isDisabled = this.checkbox.disabled;\n     * ```\n     */\n    @HostBinding('class.igx-checkbox--disabled')\n    @Input() public disabled = false;\n    /**\n     * Sets/gets whether the checkbox is readonly.\n     * Default value is `false`.\n     *\n     * @example\n     * ```html\n     * <igx-checkbox [readonly]=\"true\"></igx-checkbox>\n     * ```\n     * ```typescript\n     * let readonly = this.checkbox.readonly;\n     * ```\n     */\n    @Input() public readonly = false;\n    /**\n     * Sets/gets whether the checkbox should disable all css transitions.\n     * Default value is `false`.\n     *\n     * @example\n     * ```html\n     * <igx-checkbox [disableTransitions]=\"true\"></igx-checkbox>\n     * ```\n     * ```typescript\n     * let disableTransitions = this.checkbox.disableTransitions;\n     * ```\n     */\n    @HostBinding('class.igx-checkbox--plain')\n    @Input() public disableTransitions = false;\n    /** @hidden @internal */\n    public inputId = `${this.id}-input`;\n    /**\n     * @hidden\n     */\n    private _onTouchedCallback: () => void = noop;\n    /**\n     * @hidden\n     */\n    private _onChangeCallback: (_: any) => void = noop;\n    /**\n     * If `disabled` is `false`, switches the `checked` state.\n     *\n     * @example\n     * ```typescript\n     * this.checkbox.toggle();\n     * ```\n     */\n    public toggle() {\n        if (this.disabled || this.readonly) {\n            return;\n        }\n\n        this.indeterminate = false;\n        this.focused = false;\n        this.checked = !this.checked;\n\n        this.change.emit({ checked: this.checked, checkbox: this });\n        this._onChangeCallback(this.checked);\n    }\n    /** @hidden @internal */\n    public _onCheckboxChange(event) {\n        // We have to stop the original checkbox change event\n        // from bubbling up since we emit our own change event\n        event.stopPropagation();\n    }\n    /** @hidden @internal */\n    public _onCheckboxClick(event) {\n        // Since the original checkbox is hidden and the label\n        // is used for styling and to change the checked state of the checkbox,\n        // we need to prevent the checkbox click event from bubbling up\n        // as it gets triggered on label click\n        event.stopPropagation();\n\n        if (this.readonly) {\n            // readonly prevents the component from changing state (see toggle() method).\n            // However, the native checkbox can still be activated through user interaction (focus + space, label click)\n            // Prevent the native change so the input remains in sync\n            event.preventDefault();\n        }\n\n        if (isIE()) {\n            this.nativeCheckbox.nativeElement.blur();\n        }\n\n        this.toggle();\n    }\n    /** @hidden @internal */\n    public _onLabelClick(event) {\n        // We use a span element as a placeholder label\n        // in place of the native label, we need to emit\n        // the change event separately here alongside\n        // the click event emitted on click\n        this.toggle();\n    }\n    /** @hidden @internal */\n    public onFocus(event) {\n        this.focused = true;\n    }\n    /** @hidden @internal */\n    public onBlur(event) {\n        this.focused = false;\n        this._onTouchedCallback();\n    }\n    /** @hidden @internal */\n    public writeValue(value) {\n        this._value = value;\n        this.checked = !!this._value;\n    }\n    /** @hidden @internal */\n    public get labelClass(): string {\n        switch (this.labelPosition) {\n            case LabelPosition.BEFORE:\n                return `${this.cssClass}__label--before`;\n            case LabelPosition.AFTER:\n            default:\n                return `${this.cssClass}__label`;\n        }\n    }\n    /** @hidden @internal */\n    public registerOnChange(fn: (_: any) => void) { this._onChangeCallback = fn; }\n    /** @hidden @internal */\n    public registerOnTouched(fn: () => void) { this._onTouchedCallback = fn; }\n\n    /** @hidden @internal */\n    public getEditElement() {\n        return this.nativeCheckbox.nativeElement;\n    }\n}\n\nexport const IGX_CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => IgxCheckboxRequiredDirective),\n    multi: true\n};\n\n/* tslint:disable directive-selector */\n@Directive({\n    selector: `igx-checkbox[required][formControlName],\n    igx-checkbox[required][formControl],\n    igx-checkbox[required][ngModel]`,\n    providers: [IGX_CHECKBOX_REQUIRED_VALIDATOR]\n})\nexport class IgxCheckboxRequiredDirective extends CheckboxRequiredValidator { }\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [IgxCheckboxComponent, IgxCheckboxRequiredDirective],\n    exports: [IgxCheckboxComponent, IgxCheckboxRequiredDirective],\n    imports: [IgxRippleModule]\n})\nexport class IgxCheckboxModule { }\n","import {\n    ChangeDetectorRef,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    HostBinding,\n    HostListener,\n    Input,\n    QueryList,\n    ViewChild,\n    ViewChildren,\n    Directive\n} from '@angular/core';\nimport { IgxCheckboxComponent } from '../checkbox/checkbox.component';\nimport { IgxGridForOfDirective } from '../directives/for-of/for_of.directive';\nimport { GridBaseAPIService } from './api.service';\nimport { IgxGridCellComponent } from './cell.component';\nimport { IgxColumnComponent } from './columns/column.component';\nimport { TransactionType } from '../services/public_api';\nimport { IgxGridBaseDirective } from './grid-base.directive';\nimport { IgxGridSelectionService, IgxGridCRUDService, IgxRow } from './selection/selection.service';\nimport { DeprecateProperty } from '../core/deprecateDecorators';\nimport { GridType } from './common/grid.interface';\n\n@Directive({\n    selector: '[igxRowBaseComponent]'\n})\nexport class IgxRowDirective<T extends IgxGridBaseDirective & GridType> implements DoCheck {\n\n    protected _rowData: any;\n\n    /**\n     *  The data passed to the row component.\n     *\n     * ```typescript\n     * // get the row data for the first selected row\n     * let selectedRowData = this.grid.selectedRows[0].rowData;\n     * ```\n     */\n    @Input()\n    public get rowData(): any {\n        if (this.inEditMode) {\n            return Object.assign({}, this._rowData, this.grid.transactions.getAggregatedValue(this.rowID, false));\n        }\n        return this._rowData;\n    }\n\n    public set rowData(v: any) {\n        this._rowData = v;\n    }\n    /**\n     * The index of the row.\n     *\n     * ```typescript\n     * // get the index of the second selected row\n     * let selectedRowIndex = this.grid.selectedRows[1].index;\n     * ```\n     */\n    @Input()\n    public index: number;\n\n    /**\n     * Sets whether this specific row has disabled functionality for editing and row selection.\n     * Default value is `false`.\n     * ```typescript\n     * this.grid.selectedRows[0].pinned = true;\n     * ```\n     */\n    @Input()\n    @HostBinding('attr.aria-disabled')\n    @HostBinding('class.igx-grid__tr--disabled')\n    public disabled = false;\n\n    /**\n     * Gets whether the row is pinned.\n     * ```typescript\n     * let isPinned = row.pinned;\n     * ```\n     */\n    public get pinned(): boolean {\n        return this.grid.isRecordPinned(this.rowData);\n    }\n\n    /**\n     * Sets whether the row is pinned.\n     * Default value is `false`.\n     * ```typescript\n     * this.grid.selectedRows[0].pinned = true;\n     * ```\n     */\n    public set pinned(value: boolean) {\n        if (value) {\n            this.grid.pinRow(this.rowID);\n        } else {\n            this.grid.unpinRow(this.rowID);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    @Input()\n    public gridID: string;\n\n    /**\n     * @hidden\n     */\n    @ViewChild('igxDirRef', { read: IgxGridForOfDirective })\n    public virtDirRow: IgxGridForOfDirective<any>;\n\n    /**\n     * @hidden\n     */\n    @ViewChild(forwardRef(() => IgxCheckboxComponent), { read: IgxCheckboxComponent })\n    public checkboxElement: IgxCheckboxComponent;\n\n    @ViewChildren('cell')\n    protected _cells: QueryList<any>;\n\n    /**\n     * Gets the rendered cells in the row component.\n     *\n     * ```typescript\n     * // get the cells of the third selected row\n     * let selectedRowCells = this.grid.selectedRows[2].cells;\n     * ```\n     */\n    public get cells() {\n        const res = new QueryList<any>();\n        if (!this._cells) {\n            return res;\n        }\n        const cList = this._cells.filter((item) => item.nativeElement.parentElement !== null)\n        .sort((item1, item2) => item1.column.visibleIndex - item2.column.visibleIndex);\n        res.reset(cList);\n        return res;\n    }\n\n    public set cells(cells) {\n\n    }\n\n    /**\n     * @hidden\n     */\n    @HostBinding('attr.role')\n    public role = 'row';\n\n    @HostBinding('attr.data-rowIndex')\n    get dataRowIndex() {\n        return this.index;\n    }\n\n    /**\n     * @hidden\n     */\n    @HostBinding('class')\n    get styleClasses(): string {\n        return this.resolveClasses();\n    }\n\n    /**\n     * @hidden\n     */\n    @Input()\n    @HostBinding('attr.aria-selected')\n    get selected(): boolean {\n        return this.selectionService.isRowSelected(this.rowID);\n    }\n\n    set selected(value: boolean) {\n        value ? this.selectionService.selectRowsWithNoEvent([this.rowID]) :\n        this.selectionService.deselectRowsWithNoEvent([this.rowID]);\n        this.grid.cdr.markForCheck();\n    }\n\n    /**\n     * @hidden\n     */\n    get columns(): IgxColumnComponent[] {\n        return this.grid.visibleColumns;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    get viewIndex(): number {\n        if ((this.grid as any).groupingExpressions.length) {\n            return this.grid.filteredSortedData.indexOf(this.rowData);\n        }\n        return this.index + this.grid.page * this.grid.perPage;\n    }\n\n    /**\n     * @hidden\n     */\n    get pinnedColumns(): IgxColumnComponent[] {\n        return this.grid.pinnedColumns;\n    }\n\n    /**\n     * @hidden\n     */\n    get unpinnedColumns(): IgxColumnComponent[] {\n        return this.grid.unpinnedColumns;\n    }\n\n    /**\n     * @hidden\n     */\n    public get showRowSelectors(): boolean {\n        return this.grid.showRowSelectors;\n    }\n\n    /** @hidden */\n    public get dirty(): boolean {\n        const row = this.grid.transactions.getState(this.rowID);\n        if (row) {\n            return row.type === TransactionType.ADD || row.type === TransactionType.UPDATE;\n        }\n\n        return false;\n    }\n\n    /**\n     * @hidden\n     */\n    public get rowDraggable(): boolean {\n        return this.grid.rowDraggable;\n    }\n\n    /** @hidden */\n    public get added(): boolean {\n        const row = this.grid.transactions.getState(this.rowID);\n        if (row) {\n            return row.type === TransactionType.ADD;\n        }\n\n         return false;\n    }\n\n    /** @hidden */\n    public get deleted(): boolean {\n        return this.gridAPI.row_deleted_transaction(this.rowID);\n    }\n\n    /**\n     * @hidden\n     */\n    public dragging = false;\n\n    // TODO: Refactor\n    public get inEditMode(): boolean {\n        if (this.grid.rowEditable) {\n            const editRowState = this.crudService.row;\n            return (editRowState && editRowState.id === this.rowID) || false;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Get a reference to the grid that contains the selected row.\n     *\n     * ```typescript\n     * handleRowSelection(event) {\n     *  // the grid on which the onRowSelectionChange event was triggered\n     *  const grid = event.row.grid;\n     * }\n     * ```\n     *\n     * ```html\n     *  <igx-grid\n     *    [data]=\"data\"\n     *    (onRowSelectionChange)=\"handleRowSelection($event)\">\n     *  </igx-grid>\n     * ```\n     */\n    get grid(): T {\n        return this.gridAPI.grid;\n    }\n\n    /**\n     * Gets the ID of the row.\n     * A row in the grid is identified either by:\n     * - primaryKey data value,\n     * - the whole rowData, if the primaryKey is omitted.\n     *\n     * ```typescript\n     * let rowID = this.grid.selectedRows[2].rowID;\n     * ```\n     */\n    public get rowID() {\n        const primaryKey = this.grid.primaryKey;\n        return primaryKey ? this._rowData[primaryKey] : this._rowData;\n    }\n\n    /**\n     * The native DOM element representing the row. Could be null in certain environments.\n     *\n     * ```typescript\n     * // get the nativeElement of the second selected row\n     * let selectedRowNativeElement = this.grid.selectedRows[1].nativeElement;\n     * ```\n     */\n    get nativeElement() {\n        return this.element.nativeElement;\n    }\n\n    /**\n     * @hidden\n     */\n    public focused = false;\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public defaultCssClass = 'igx-grid__tr';\n\n\n    constructor(\n        public gridAPI: GridBaseAPIService<T>,\n        public crudService: IgxGridCRUDService,\n        public selectionService: IgxGridSelectionService,\n        public element: ElementRef<HTMLElement>,\n        public cdr: ChangeDetectorRef) {}\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @HostListener('click', ['$event'])\n    public onClick(event: MouseEvent) {\n        if (this.grid.rowSelection === 'none' || this.deleted) { return; }\n        if (event.shiftKey && this.grid.rowSelection === 'multiple') {\n            this.selectionService.selectMultipleRows(this.rowID, this.rowData, event);\n            return;\n        }\n        this.selectionService.selectRowById(this.rowID, !event.ctrlKey, event);\n    }\n\n    /**\n     * @hidden\n     */\n    public onRowSelectorClick(event) {\n        event.stopPropagation();\n        if (event.shiftKey && this.grid.rowSelection === 'multiple') {\n            this.selectionService.selectMultipleRows(this.rowID, this.rowData, event);\n            return;\n        }\n        this.selected ? this.selectionService.deselectRow(this.rowID, event) :\n        this.selectionService.selectRowById(this.rowID, false, event);\n    }\n\n    /**\n     * Updates the specified row object and the data source record with the passed value.\n     * This method emits `onEditDone` event.\n     *\n     * ```typescript\n     * // update the second selected row's value\n     * let newValue = \"Apple\";\n     * this.grid.selectedRows[1].update(newValue);\n     * ```\n     */\n    public update(value: any) {\n        const crudService = this.crudService;\n        if (crudService.inEditMode && crudService.cell.id.rowID === this.rowID) {\n            this.grid.endEdit(false);\n        }\n        const row = new IgxRow(this.rowID, this.index, this.rowData);\n        this.gridAPI.update_row(row, value);\n        this.cdr.markForCheck();\n    }\n\n    /**\n     * Removes the specified row from the grid's data source.\n     * This method emits `onRowDeleted` event.\n     *\n     * ```typescript\n     * // delete the third selected row from the grid\n     * this.grid.selectedRows[2].delete();\n     * ```\n     */\n    public delete() {\n        this.grid.deleteRowById(this.rowID);\n    }\n\n    public isCellActive(visibleColumnIndex) {\n        const node = this.grid.navigation.activeNode;\n        return node ? node.row === this.index && node.column === visibleColumnIndex : false;\n    }\n\n    /**\n     * Pins the specified row.\n     * This method emits `onRowPinning` event.\n     *\n     * ```typescript\n     * // pin the selected row from the grid\n     * this.grid.selectedRows[0].pin();\n     * ```\n     */\n    public pin() {\n        return this.grid.pinRow(this.rowID);\n    }\n\n    /**\n     * Unpins the specified row.\n     * This method emits `onRowPinning` event.\n     *\n     * ```typescript\n     * // unpin the selected row from the grid\n     * this.grid.selectedRows[0].unpin();\n     * ```\n     */\n    public unpin() {\n        return this.grid.unpinRow(this.rowID);\n    }\n\n    /**\n     * @hidden\n     */\n    get rowCheckboxAriaLabel() {\n        return this.grid.primaryKey ?\n            this.selected ? 'Deselect row with key ' + this.rowID : 'Select row with key ' + this.rowID :\n            this.selected ? 'Deselect row' : 'Select row';\n    }\n\n    /**\n     * @hidden\n     */\n    public ngDoCheck() {\n        this.cdr.markForCheck();\n    }\n\n    /**\n     * @hidden\n     */\n    public shouldDisplayPinnedChip(visibleColumnIndex: number): boolean {\n        return this.pinned && this.disabled && visibleColumnIndex === 0;\n    }\n\n    /**\n     * @hidden\n     */\n    protected resolveClasses(): string {\n        const indexClass = this.index % 2 ? this.grid.evenRowCSS : this.grid.oddRowCSS;\n        const selectedClass = this.selected ? 'igx-grid__tr--selected' : '';\n        const editClass = this.inEditMode ? 'igx-grid__tr--edit' : '';\n        const dirtyClass = this.dirty ? 'igx-grid__tr--edited' : '';\n        const deletedClass = this.deleted ? 'igx-grid__tr--deleted' : '';\n        const mrlClass = this.grid.hasColumnLayouts ? 'igx-grid__tr--mrl' : '';\n        const dragClass = this.dragging ? 'igx-grid__tr--drag' : '';\n        return `${this.defaultCssClass} ${indexClass} ${selectedClass} ${editClass} ${dirtyClass}\n         ${deletedClass} ${mrlClass} ${dragClass}`.trim();\n    }\n\n    /**\n     * @hidden\n     */\n    public get resolveDragIndicatorClasses(): string {\n        const defaultDragIndicatorCssClass = 'igx-grid__drag-indicator';\n        const dragIndicatorOff = this.grid.rowDragging && !this.dragging ? 'igx-grid__drag-indicator--off' : '';\n        return `${defaultDragIndicatorCssClass} ${dragIndicatorOff}`;\n    }\n}\n","export interface ISummaryExpression {\n    fieldName: string;\n    customSummary?: any;\n}\nexport interface IgxSummaryResult {\n    key: string;\n    label: string;\n    summaryResult: any;\n}\n\nexport interface ISummaryRecord {\n    summaries: Map<string, IgxSummaryResult[]>;\n    max?: number;\n    cellIndentation?: number;\n}\n\nconst clear = (el) => el === 0 || Boolean(el);\nconst first = (arr) => arr[0];\nconst last = (arr) => arr[arr.length - 1];\n\nexport class IgxSummaryOperand {\n    /**\n     * Counts all the records in the data source.\n     * If filtering is applied, counts only the filtered records.\n     * ```typescript\n     * IgxSummaryOperand.count(dataSource);\n     * ```\n     * @memberof IgxSummaryOperand\n     */\n    public static count(data: any[]): number {\n        return data.length;\n    }\n    /**\n     * Executes the static `count` method and returns `IgxSummaryResult[]`.\n     * ```typescript\n     * interface IgxSummaryResult {\n     *   key: string;\n     *   label: string;\n     *   summaryResult: any;\n     * }\n     * ```\n     * Can be overridden in the inherited classes to provide customization for the `summary`.\n     * ```typescript\n     * class CustomSummary extends IgxSummaryOperand {\n     *   constructor() {\n     *     super();\n     *   }\n     *   public operate(data: any[], allData: any[], fieldName: string): IgxSummaryResult[] {\n     *     const result = [];\n     *     result.push({\n     *       key: \"test\",\n     *       label: \"Test\",\n     *       summaryResult: IgxSummaryOperand.count(data)\n     *     });\n     *     return result;\n     *   }\n     * }\n     * this.grid.getColumnByName('ColumnName').summaries = CustomSummary;\n     * ```\n     * @memberof IgxSummaryOperand\n     */\n    public operate(data: any[] = [], allData: any[] = [], fieldName?: string): IgxSummaryResult[] {\n        return [{\n            key: 'count',\n            label: 'Count',\n            summaryResult: IgxSummaryOperand.count(data)\n        }];\n    }\n}\n\n// @dynamic\nexport class IgxNumberSummaryOperand extends IgxSummaryOperand {\n    /**\n     * Returns the minimum numeric value in the provided data records.\n     * If filtering is applied, returns the minimum value in the filtered data records.\n     * ```typescript\n     * IgxNumberSummaryOperand.min(data);\n     * ```\n     * @memberof IgxNumberSummaryOperand\n     */\n    public static min(data: any[]): number {\n        return data.length && data.filter(clear).length ? data.filter(clear).reduce((a, b) => Math.min(a, b)) : 0;\n    }\n    /**\n     * Returns the maximum numeric value in the provided data records.\n     * If filtering is applied, returns the maximum value in the filtered data records.\n     * ```typescript\n     * IgxNumberSummaryOperand.max(data);\n     * ```\n     * @memberof IgxNumberSummaryOperand\n     */\n    public static max(data: any[]): number {\n        return data.length && data.filter(clear).length ? data.filter(clear).reduce((a, b) => Math.max(a, b)) : 0;\n    }\n    /**\n     * Returns the sum of the numeric values in the provided data records.\n     * If filtering is applied, returns the sum of the numeric values in the data records.\n     * ```typescript\n     * IgxNumberSummaryOperand.sum(data);\n     * ```\n     * @memberof IgxNumberSummaryOperand\n     */\n    public static sum(data: any[]): number {\n        return data.length && data.filter(clear).length ? data.filter(clear).reduce((a, b) => +a + +b) : 0;\n    }\n    /**\n     * Returns the average numeric value in the data provided data records.\n     * If filtering is applied, returns the average numeric value in the filtered data records.\n     * ```typescript\n     * IgxSummaryOperand.average(data);\n     * ```\n     * @memberof IgxNumberSummaryOperand\n     */\n    public static average(data: any[]): number {\n        return data.length && data.filter(clear).length ? this.sum(data) / this.count(data) : 0;\n    }\n    /**\n     * Executes the static methods and returns `IgxSummaryResult[]`.\n     * ```typescript\n     * interface IgxSummaryResult {\n     *   key: string;\n     *   label: string;\n     *   summaryResult: any;\n     * }\n     * ```\n     * Can be overridden in the inherited classes to provide customization for the `summary`.\n     * ```typescript\n     * class CustomNumberSummary extends IgxNumberSummaryOperand {\n     *   constructor() {\n     *     super();\n     *   }\n     *   public operate(data: any[], allData: any[], fieldName: string): IgxSummaryResult[] {\n     *     const result = [];\n     *     result.push({\n     *       key: \"avg\",\n     *       label: \"Avg\",\n     *       summaryResult: IgxNumberSummaryOperand.average(data)\n     *     });\n     *     result.push({\n     *       key: \"max\",\n     *       label: \"Max\",\n     *       summaryResult: IgxNumberSummaryOperand.max(data)\n     *     });\n     *     return result;\n     *   }\n     * }\n     * this.grid.getColumnByName('ColumnName').summaries = CustomNumberSummary;\n     * ```\n     * @memberof IgxNumberSummaryOperand\n     */\n    public operate(data: any[] = [], allData: any[] = [], fieldName?: string): IgxSummaryResult[] {\n        const result = super.operate(data, allData, fieldName);\n        result.push({\n            key: 'min',\n            label: 'Min',\n            summaryResult: IgxNumberSummaryOperand.min(data)\n        });\n        result.push({\n            key: 'max',\n            label: 'Max',\n            summaryResult: IgxNumberSummaryOperand.max(data)\n        });\n        result.push({\n            key: 'sum',\n            label: 'Sum',\n            summaryResult: IgxNumberSummaryOperand.sum(data)\n        });\n        result.push({\n            key: 'average',\n            label: 'Avg',\n            summaryResult: IgxNumberSummaryOperand.average(data)\n        });\n        return result;\n    }\n}\n\n// @dynamic\nexport class IgxDateSummaryOperand extends IgxSummaryOperand {\n    /**\n     * Returns the latest date value in the data records.\n     * If filtering is applied, returns the latest date value in the filtered data records.\n     * ```typescript\n     * IgxDateSummaryOperand.latest(data);\n     * ```\n     * @memberof IgxDateSummaryOperand\n     */\n    public static latest(data: any[]) {\n        return data.length && data.filter(clear).length ?\n            first(data.filter(clear).sort((a, b) => new Date(b).valueOf() - new Date(a).valueOf())) : undefined;\n    }\n    /**\n     * Returns the earliest date value in the data records.\n     * If filtering is applied, returns the latest date value in the filtered data records.\n     * ```typescript\n     * IgxDateSummaryOperand.earliest(data);\n     * ```\n     * @memberof IgxDateSummaryOperand\n     */\n    public static earliest(data: any[]) {\n        return data.length && data.filter(clear).length ?\n            last(data.filter(clear).sort((a, b) => new Date(b).valueOf() - new Date(a).valueOf())) : undefined;\n    }\n    /**\n     * Executes the static methods and returns `IgxSummaryResult[]`.\n     * ```typescript\n     * interface IgxSummaryResult {\n     *   key: string;\n     *   label: string;\n     *   summaryResult: any;\n     * }\n     * ```\n     * Can be overridden in the inherited classes to provide customization for the `summary`.\n     * ```typescript\n     * class CustomDateSummary extends IgxDateSummaryOperand {\n     *   constructor() {\n     *     super();\n     *   }\n     *   public operate(data: any[], allData: any[], fieldName: string): IgxSummaryResult[] {\n     *     const result = [];\n     *     result.push({\n     *       key: \"latest\",\n     *       label: \"Latest Date\",\n     *       summaryResult: IgxDateSummaryOperand.latest(data)\n     *     });\n     *     return result;\n     *   }\n     * }\n     * this.grid.getColumnByName('ColumnName').summaries = CustomDateSummary;\n     * ```\n     * @memberof IgxDateSummaryOperand\n     */\n    public operate(data: any[] = [], allData: any[] = [], fieldName?: string): IgxSummaryResult[] {\n        const result = super.operate(data, allData, fieldName);\n        result.push({\n            key: 'earliest',\n            label: 'Earliest',\n            summaryResult: IgxDateSummaryOperand.earliest(data)\n        });\n        result.push({\n            key: 'latest',\n            label: 'Latest',\n            summaryResult: IgxDateSummaryOperand.latest(data)\n        });\n        return result;\n    }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n\n@Directive({\n    selector: '[igxFilterCellTemplate]'\n})\nexport class IgxFilterCellTemplateDirective {\n    constructor(public template: TemplateRef<any>) {}\n}\n\n@Directive({\n    selector: '[igxCell]'\n})\nexport class IgxCellTemplateDirective {\n\n    constructor(public template: TemplateRef<any>) { }\n}\n\n@Directive({\n    selector: '[igxHeader]'\n})\nexport class IgxCellHeaderTemplateDirective {\n\n    constructor(public template: TemplateRef<any>) { }\n\n}\n/**\n * @hidden\n */\n@Directive({\n    selector: '[igxFooter]'\n})\nexport class IgxCellFooterTemplateDirective {\n\n    constructor(public template: TemplateRef<any>) { }\n}\n\n@Directive({\n    selector: '[igxCellEditor]'\n})\nexport class IgxCellEditorTemplateDirective {\n\n    constructor(public template: TemplateRef<any>) { }\n}\n\n@Directive({\n    selector: '[igxCollapsibleIndicator]'\n})\nexport class IgxCollapsibleIndicatorTemplateDirective {\n\n    constructor(public template: TemplateRef<any>) { }\n}\n","import {\n    AfterContentInit,\n    ChangeDetectorRef,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Input,\n    QueryList,\n    TemplateRef,\n    Output,\n    EventEmitter,\n    ElementRef,\n} from '@angular/core';\nimport { notifyChanges } from '../watch-changes';\nimport { WatchColumnChanges } from '../watch-changes';\nimport { IgxRowIslandAPIService } from '../hierarchical-grid/row-island-api.service';\nimport { DataType } from '../../data-operations/data-util';\nimport { DeprecateProperty } from '../../core/deprecateDecorators';\nimport {\n    IgxFilteringOperand,\n    IgxBooleanFilteringOperand,\n    IgxNumberFilteringOperand,\n    IgxDateFilteringOperand,\n    IgxStringFilteringOperand\n} from '../../data-operations/filtering-condition';\nimport { ISortingStrategy, DefaultSortingStrategy } from '../../data-operations/sorting-strategy';\nimport { DisplayDensity } from '../../core/displayDensity';\nimport { IgxGridBaseDirective } from '../grid-base.directive';\nimport { IgxGridCellComponent } from '../cell.component';\nimport { IgxRowDirective } from '../row.directive';\nimport { FilteringExpressionsTree } from '../../data-operations/filtering-expressions-tree';\nimport { GridBaseAPIService } from '../api.service';\nimport { GridType } from '../common/grid.interface';\nimport { IgxGridHeaderComponent } from '../headers/grid-header.component';\nimport { IgxGridFilteringCellComponent } from '../filtering/base/grid-filtering-cell.component';\nimport { IgxGridHeaderGroupComponent } from '../headers/grid-header-group.component';\nimport { getNodeSizeViaRange } from '../../core/utils';\nimport { IgxSummaryOperand, IgxNumberSummaryOperand, IgxDateSummaryOperand } from '../summaries/grid-summary';\nimport {\n    IgxCellTemplateDirective,\n    IgxCellHeaderTemplateDirective,\n    IgxCellEditorTemplateDirective,\n    IgxCollapsibleIndicatorTemplateDirective,\n    IgxFilterCellTemplateDirective\n} from './templates.directive';\nimport { MRLResizeColumnInfo, MRLColumnSizeInfo } from './interfaces';\n\n/**\n * **Ignite UI for Angular Column** -\n * [Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/grid.html#columns-configuration)\n *\n * The Ignite UI Column is used within an `igx-grid` element to define what data the column will show. Features such as sorting,\n * filtering & editing are enabled at the column level.  You can also provide a template containing custom content inside\n * the column using `ng-template` which will be used for all cells within the column.\n */\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false,\n    selector: 'igx-column',\n    template: ``\n})\nexport class IgxColumnComponent implements AfterContentInit {\n    /**\n     * Sets/gets the `field` value.\n     * ```typescript\n     * let columnField = this.column.field;\n     * ```\n     * ```html\n     * <igx-column [field] = \"'ID'\"></igx-column>\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @Input()\n    public field: string;\n    /**\n     * Sets/gets the `header` value.\n     * ```typescript\n     * let columnHeader = this.column.header;\n     * ```\n     * ```html\n     * <igx-column [header] = \"'ID'\"></igx-column>\n     * ```\n     *\n     * @memberof IgxColumnComponent\n     */\n    @notifyChanges()\n    @WatchColumnChanges()\n    @Input()\n    public header = '';\n    /**\n     * Sets/gets whether the column is sortable.\n     * Default value is `false`.\n     * ```typescript\n     * let isSortable = this.column.sortable;\n     * ```\n     * ```html\n     * <igx-column [sortable] = \"true\"></igx-column>\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @WatchColumnChanges()\n    @Input()\n    public sortable = false;\n    /**\n     * Returns if the column is selectable.\n     * ```typescript\n     * let columnSelectable = this.column.selectable;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @WatchColumnChanges()\n    @Input()\n    get selectable(): boolean  {\n        return this._selectable;\n    }\n\n    /**\n     * Sets if the column is selectable.\n     * Default value is `true`.\n     * ```html\n     * <igx-column [selectable] = \"false\"></igx-column>\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    set selectable(value: boolean) {\n        this._selectable = value;\n    }\n\n    /**\n     * Sets/gets whether the column is groupable.\n     * Default value is `false`.\n     * ```typescript\n     * let isGroupable = this.column.groupable;\n     * ```\n     * ```html\n     * <igx-column [groupable] = \"true\"></igx-column>\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @notifyChanges(true)\n    @WatchColumnChanges()\n    @Input()\n    groupable = false;\n    /**\n     * Gets whether the column is editable.\n     * Default value is `false`.\n     * ```typescript\n     * let isEditable = this.column.editable;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @WatchColumnChanges()\n    @Input()\n    get editable(): boolean {\n        // Updating the primary key when grid has transactions (incl. row edit)\n        // should not be allowed, as that can corrupt transaction state.\n        const rowEditable = this.grid && this.grid.rowEditable;\n        const hasTransactions = this.grid && this.grid.transactions.enabled;\n\n        if (this.isPrimaryColumn && (rowEditable || hasTransactions)) {\n            return false;\n        }\n\n        if (this._editable !== undefined) {\n            return this._editable;\n        } else {\n            return rowEditable;\n        }\n    }\n    /**\n     * Sets whether the column is editable.\n     * ```typescript\n     * this.column.editable = true;\n     * ```\n     * ```html\n     * <igx-column [editable] = \"true\"></igx-column>\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    set editable(editable: boolean) {\n        this._editable = editable;\n    }\n    /**\n     * Sets/gets whether the column is filterable.\n     * Default value is `true`.\n     * ```typescript\n     * let isFilterable = this.column.filterable;\n     * ```\n     * ```html\n     * <igx-column [filterable] = \"false\"></igx-column>\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @notifyChanges()\n    @WatchColumnChanges()\n    @Input()\n    public filterable = true;\n    /**\n     * Sets/gets whether the column is resizable.\n     * Default value is `false`.\n     * ```typescript\n     * let isResizable = this.column.resizable;\n     * ```\n     * ```html\n     * <igx-column [resizable] = \"true\"></igx-column>\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @WatchColumnChanges()\n    @Input()\n    public resizable = false;\n    /**\n     * Gets a value indicating whether the summary for the column is enabled.\n     * ```typescript\n     * let hasSummary = this.column.hasSummary;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @notifyChanges(true)\n    @WatchColumnChanges()\n    @Input()\n    get hasSummary() {\n        return this._hasSummary;\n    }\n    /**\n     * Sets a value indicating whether the summary for the column is enabled.\n     * Default value is `false`.\n     * ```html\n     * <igx-column [hasSummary] = \"true\"></igx-column>\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    set hasSummary(value) {\n        this._hasSummary = value;\n\n        if (this.grid) {\n            this.grid.summaryService.resetSummaryHeight();\n        }\n    }\n    /**\n     * Gets whether the column is hidden.\n     * ```typescript\n     * let isHidden = this.column.hidden;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @notifyChanges(true)\n    @WatchColumnChanges()\n    @Input()\n    get hidden(): boolean {\n        return this._hidden;\n    }\n    /**\n     * Sets the column hidden property.\n     * Default value is `false`.\n     * ```html\n     * <igx-column [hidden] = \"true\"></igx-column>\n     * ```\n     *\n     * Two-way data binding.\n     * ```html\n     * <igx-column [(hidden)] = \"model.isHidden\"></igx-column>\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    set hidden(value: boolean) {\n        if (this._hidden !== value) {\n            this._hidden = value;\n            this.hiddenChange.emit(this._hidden);\n            if (this.columnLayoutChild && this.parent.hidden !== value) {\n                this.parent.hidden = value;\n                return;\n            }\n            if (this.grid) {\n                this.grid.endEdit(false);\n                this.grid.summaryService.resetSummaryHeight();\n                this.grid.filteringService.refreshExpressions();\n                this.grid.filteringService.hideFilteringRowOnColumnVisibilityChange(this);\n                this.grid.notifyChanges();\n            }\n        }\n    }\n\n    /**\n     * Returns if the column is selected.\n     * ```typescript\n     * let isSelected = this.column.selected;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    get selected(): boolean {\n        return this.grid.selectionService.isColumnSelected(this.field);\n    }\n\n    /**\n     * Select/deselect a column.\n     * Default value is `false`.\n     * ```typescript\n     * this.column.selected = true;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    set selected(value: boolean) {\n        if (this.selectable && value !== this.selected) {\n            value ? this.grid.selectionService.selectColumnsWithNoEvent([this.field]) :\n            this.grid.selectionService.deselectColumnsWithNoEvent([this.field]);\n            this.grid.notifyChanges();\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    @Output()\n    public hiddenChange = new EventEmitter<boolean>();\n\n    /** @hidden */\n    @Output()\n    public expandedChange = new EventEmitter<boolean>();\n\n    /** @hidden */\n    @Output()\n    public collapsibleChange = new EventEmitter<boolean>();\n    /** @hidden */\n    @Output()\n    public visibleWhenCollapsedChange = new EventEmitter<boolean>();\n\n    /**\n     * Gets whether the hiding is disabled.\n     * ```typescript\n     * let isHidingDisabled =  this.column.disableHiding;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @notifyChanges()\n    @WatchColumnChanges()\n    @Input()\n    disableHiding = false;\n    /**\n     * Gets whether the pinning is disabled.\n     * ```typescript\n     * let isPinningDisabled =  this.column.disablePinning;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @notifyChanges()\n    @WatchColumnChanges()\n    @Input()\n    disablePinning = false;\n    /**\n     * Sets/gets whether the column is movable.\n     * Default value is `false`.\n     * ```typescript\n     * let isMovable = this.column.movable;\n     * ```\n     * ```html\n     * <igx-column [movable] = \"true\"></igx-column>\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @WatchColumnChanges()\n    @notifyChanges()\n    @Input()\n    public movable = false;\n    /**\n     * Gets the `width` of the column.\n     * ```typescript\n     * let columnWidth = this.column.width;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @notifyChanges(true)\n    @WatchColumnChanges()\n    @Input()\n    public get width(): string {\n        return this.widthSetByUser ? this._width : this.defaultWidth;\n    }\n    /**\n     * Sets the `width` of the column.\n     * ```html\n     * <igx-column [width] = \"'25%'\"></igx-column>\n     * ```\n     *\n     * Two-way data binding.\n     * ```html\n     * <igx-column [(width)]=\"model.columns[0].width\"></igx-column>\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    public set width(value: string) {\n        if (value) {\n            this._calcWidth = null;\n            this.calcPixelWidth = NaN;\n            this.widthSetByUser = true;\n            // width could be passed as number from the template\n            // host bindings are not px affixed so we need to ensure we affix simple number strings\n            if (typeof(value) === 'number' || value.match(/^[0-9]*$/)) {\n                value = value + 'px';\n            }\n            this._width = value;\n            if (this.grid) {\n                this.cacheCalcWidth();\n            }\n            this.widthChange.emit(this._width);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    @Output()\n    public widthChange = new EventEmitter<string>();\n\n    /**\n     * @hidden\n     */\n    public get calcWidth(): any {\n        return this.getCalcWidth();\n    }\n\n    private _calcWidth = null;\n    public calcPixelWidth: number;\n    /**\n     * @hidden\n     */\n    protected _applySelectableClass = false;\n\n    /**\n     * Sets/gets the maximum `width` of the column.\n     * ```typescript\n     * let columnMaxWidth = this.column.width;\n     * ```\n     * ```html\n     * <igx-column [maxWidth] = \"'150px'\"></igx-column>\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @WatchColumnChanges()\n    @Input()\n    public maxWidth: string;\n    /**\n     * Sets/gets the minimum `width` of the column.\n     * Default value is `88`;\n     * ```typescript\n     * let columnMinWidth = this.column.minWidth;\n     * ```\n     * ```html\n     * <igx-column [minWidth] = \"'100px'\"></igx-column>\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @notifyChanges()\n    @WatchColumnChanges()\n    @Input()\n    public set minWidth(value: string) {\n        const minVal = parseFloat(value);\n        if (Number.isNaN(minVal)) { return; }\n        this._defaultMinWidth = value;\n\n    }\n    public get minWidth(): string {\n        return !this._defaultMinWidth ? this.defaultMinWidth : this._defaultMinWidth;\n    }\n    /**\n     * Sets/gets the class selector of the column header.\n     * ```typescript\n     * let columnHeaderClass = this.column.headerClasses;\n     * ```\n     * ```html\n     * <igx-column [headerClasses] = \"'column-header'\"></igx-column>\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @notifyChanges()\n    @WatchColumnChanges()\n    @Input()\n    public headerClasses = '';\n\n    /**\n     * Sets/gets the class selector of the column group header.\n     * ```typescript\n     * let columnHeaderClass = this.column.headerGroupClasses;\n     * ```\n     * ```html\n     * <igx-column [headerGroupClasses] = \"'column-group-header'\"></igx-column>\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @notifyChanges()\n    @WatchColumnChanges()\n    @Input()\n    public headerGroupClasses = '';\n    /**\n     * Sets a conditional class selector of the column cells.\n     * Accepts an object literal, containing key-value pairs,\n     * where the key is the name of the CSS class, while the\n     * value is either a callback function that returns a boolean,\n     * or boolean, like so:\n     * ```typescript\n     * callback = (rowData, columnKey, cellValue, rowIndex) => { return rowData[columnKey] > 6; }\n     * cellClasses = { 'className' : this.callback };\n     * ```\n     * ```html\n     * <igx-column [cellClasses] = \"cellClasses\"></igx-column>\n     * <igx-column [cellClasses] = \"{'class1' : true }\"></igx-column>\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @notifyChanges()\n    @WatchColumnChanges()\n    @Input()\n    public cellClasses: any;\n\n    /**\n     * Sets conditional style properties on the column cells.\n     * Similar to `ngStyle` it accepts an object literal where the keys are\n     * the style properties and the value is the expression to be evaluated.\n     * As with `cellClasses` it accepts a callback function.\n     * ```typescript\n     * styles = {\n     *  background: 'royalblue',\n     *  color: (rowData, columnKey, cellValue, rowIndex) => value.startsWith('Important') : 'red': 'inherit'\n     * }\n     * ```\n     * ```html\n     * <igx-column [cellStyles]=\"styles\"></igx-column>\n     * ```\n     *\n     * @memberof IgxColumnComponent\n     */\n    @notifyChanges()\n    @WatchColumnChanges()\n    @Input()\n    cellStyles = null;\n    /**\n     * Gets the column index.\n     * ```typescript\n     * let columnIndex = this.column.index;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    get index(): number {\n        return this.grid.columns.indexOf(this);\n    }\n    /**\n     * When autogenerating columns, the formatter is used to format the display of the column data\n     * without modifying the underlying bound values.\n     *\n     * In this example, we check to see if the column name is Salary, and then provide a method as the column formatter\n     * to format the value into a currency string.\n     *\n     * ```typescript\n     * onColumnInit(column: IgxColumnComponent) {\n     *   if (column.field == \"Salary\") {\n     *     column.formatter = (salary => this.format(salary));\n     *   }\n     * }\n     *\n     * format(value: number) : string {\n     *   return formatCurrency(value, \"en-us\", \"$\");\n     * }\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @notifyChanges()\n    @WatchColumnChanges()\n    @Input()\n    formatter: (value: any) => any;\n    /**\n     * Sets/gets whether the column filtering should be case sensitive.\n     * Default value is `true`.\n     * ```typescript\n     * let filteringIgnoreCase = this.column.filteringIgnoreCase;\n     * ```\n     * ```html\n     * <igx-column [filteringIgnoreCase] = \"false\"></igx-column>\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @WatchColumnChanges()\n    @Input()\n    public filteringIgnoreCase = true;\n    /**\n     * Sets/gets whether the column sorting should be case sensitive.\n     * Default value is `true`.\n     * ```typescript\n     * let sortingIgnoreCase = this.column.sortingIgnoreCase;\n     * ```\n     * ```html\n     * <igx-column [sortingIgnoreCase] = \"false\"></igx-column>\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @WatchColumnChanges()\n    @Input()\n    public sortingIgnoreCase = true;\n    /**\n     * Sets/gets the data type of the column values.\n     * Default value is `string`.\n     * ```typescript\n     * let columnDataType = this.column.dataType;\n     * ```\n     * ```html\n     * <igx-column [dataType] = \"'number'\"></igx-column>\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @Input()\n    public dataType: DataType = DataType.String;\n    /**\n     * Gets whether the column is `pinned`.\n     * ```typescript\n     * let isPinned = this.column.pinned;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @WatchColumnChanges()\n    @Input()\n    public get pinned(): boolean {\n        return this._pinned;\n    }\n    /**\n     * Sets whether the column is pinned.\n     * Default value is `false`.\n     * ```html\n     * <igx-column [pinned] = \"true\"></igx-column>\n     * ```\n     *\n     * Two-way data binding.\n     * ```html\n     * <igx-column [(pinned)] = \"model.columns[0].isPinned\"></igx-column>\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    public set pinned(value: boolean) {\n        if (this._pinned !== value) {\n            if (this.grid && this.width && !isNaN(parseInt(this.width, 10))) {\n                value ? this.pin() : this.unpin();\n                return;\n            }\n            /* No grid/width available at initialization. `initPinning` in the grid\n               will re-init the group (if present)\n            */\n            this._unpinnedIndex = this.grid ? this.grid.columns.filter(x => !x.pinned).indexOf(this) : 0;\n            this._pinned = value;\n            this.pinnedChange.emit(this._pinned);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    @Output()\n    public pinnedChange = new EventEmitter<boolean>();\n\n    /**\n     * Gets the column `summaries`.\n     * ```typescript\n     * let columnSummaries = this.column.summaries;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @notifyChanges(true)\n    @WatchColumnChanges()\n    @Input()\n    public get summaries(): any {\n        return this._summaries;\n    }\n    /**\n     * Sets the column `summaries`.\n     * ```typescript\n     * this.column.summaries = IgxNumberSummaryOperand;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    public set summaries(classRef: any) {\n        this._summaries = new classRef();\n\n        if (this.grid) {\n            this.grid.summaryService.removeSummariesCachePerColumn(this.field);\n            (this.grid as any)._summaryPipeTrigger++;\n            this.grid.summaryService.resetSummaryHeight();\n        }\n    }\n    /**\n     * Sets/gets whether the column is `searchable`.\n     * Default value is `true`.\n     * ```typescript\n     * let isSearchable =  this.column.searchable';\n     * ```\n     * ```html\n     *  <igx-column [searchable] = \"false\"></igx-column>\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @notifyChanges()\n    @WatchColumnChanges()\n    @Input()\n    public searchable = true;\n    /**\n     * Gets the column `filters`.\n     * ```typescript\n     * let columnFilters = this.column.filters'\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @Input()\n    public get filters(): IgxFilteringOperand {\n        return this._filters;\n    }\n    /**\n     * Sets the column `filters`.\n     * ```typescript\n     * this.column.filters = IgxBooleanFilteringOperand.instance().\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    public set filters(instance: IgxFilteringOperand) {\n        this._filters = instance;\n    }\n    /**\n     * Gets the column `sortStrategy`.\n     * ```typescript\n     * let sortStrategy = this.column.sortStrategy\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @Input()\n    public get sortStrategy(): ISortingStrategy {\n        return this._sortStrategy;\n    }\n    /**\n     * Sets the column `sortStrategy`.\n     * ```typescript\n     * this.column.sortStrategy = new CustomSortingStrategy().\n     * class CustomSortingStrategy extends SortingStrategy {...}\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    public set sortStrategy(classRef: ISortingStrategy) {\n        this._sortStrategy = classRef;\n    }\n    /**\n     * Gets the function that compares values for grouping.\n     * ```typescript\n     * let groupingComparer = this.column.groupingComparer'\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @Input()\n    public get groupingComparer(): (a: any, b: any) => number {\n        return this._groupingComparer;\n    }\n    /**\n     * Sets a custom function to compare values for grouping.\n     * Subsequent values in the sorted data that the function returns 0 for are grouped.\n     * ```typescript\n     * this.column.groupingComparer = (a: any, b: any) => { return a === b ? 0 : -1; }\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    public set groupingComparer(funcRef: (a: any, b: any) => number) {\n        this._groupingComparer = funcRef;\n    }\n    /**\n     * Gets the default minimum `width` of the column.\n     * ```typescript\n     * let defaultMinWidth =  this.column.defaultMinWidth;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    get defaultMinWidth(): string {\n        if (!this.grid) { return '80'; }\n        switch (this.grid.displayDensity) {\n            case DisplayDensity.cosy:\n                return '64';\n            case DisplayDensity.compact:\n                return '56';\n            default:\n                return '80';\n        }\n    }\n    /**\n     * The reference to the `igx-grid` owner.\n     * ```typescript\n     * let gridComponent = this.column.grid;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    public get grid(): IgxGridBaseDirective {\n        return this.gridAPI.grid;\n    }\n    /**\n     * Returns a reference to the `bodyTemplate`.\n     * ```typescript\n     * let bodyTemplate = this.column.bodyTemplate;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @notifyChanges()\n    @WatchColumnChanges()\n    @Input('cellTemplate')\n    get bodyTemplate(): TemplateRef<any> {\n        return this._bodyTemplate;\n    }\n    /**\n     * Sets the body template.\n     * ```html\n     * <ng-template #bodyTemplate igxCell let-val>\n     *    <div style = \"background-color: yellowgreen\" (click) = \"changeColor(val)\">\n     *       <span> {{val}} </span>\n     *    </div>\n     * </ng-template>\n     * ```\n     * ```typescript\n     * @ViewChild(\"'bodyTemplate'\", {read: TemplateRef })\n     * public bodyTemplate: TemplateRef<any>;\n     * this.column.bodyTemplate = this.bodyTemplate;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    set bodyTemplate(template: TemplateRef<any>) {\n        this._bodyTemplate = template;\n    }\n    /**\n     * Returns a reference to the header template.\n     * ```typescript\n     * let headerTemplate = this.column.headerTemplate;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @notifyChanges()\n    @WatchColumnChanges()\n    @Input()\n    get headerTemplate(): TemplateRef<any> {\n        return this._headerTemplate;\n    }\n    /**\n     * Sets the header template.\n     * Note that the column header height is fixed and any content bigger than it will be cut off.\n     * ```html\n     * <ng-template #headerTemplate>\n     *   <div style = \"background-color:black\" (click) = \"changeColor(val)\">\n     *       <span style=\"color:red\" >{{column.field}}</span>\n     *   </div>\n     * </ng-template>\n     * ```\n     * ```typescript\n     * @ViewChild(\"'headerTemplate'\", {read: TemplateRef })\n     * public headerTemplate: TemplateRef<any>;\n     * this.column.headerTemplate = this.headerTemplate;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    set headerTemplate(template: TemplateRef<any>) {\n        this._headerTemplate = template;\n    }\n    /**\n     * Returns a reference to the inline editor template.\n     * ```typescript\n     * let inlineEditorTemplate = this.column.inlineEditorTemplate;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @notifyChanges()\n    @WatchColumnChanges()\n    @Input('cellEditorTemplate')\n    get inlineEditorTemplate(): TemplateRef<any> {\n        return this._inlineEditorTemplate;\n    }\n    /**\n     * Sets the inline editor template.\n     * ```html\n     * <ng-template #inlineEditorTemplate igxCellEditor let-cell=\"cell\">\n     *     <input type=\"string\" [(ngModel)]=\"cell.value\"/>\n     * </ng-template>\n     * ```\n     * ```typescript\n     * @ViewChild(\"'inlineEditorTemplate'\", {read: TemplateRef })\n     * public inlineEditorTemplate: TemplateRef<any>;\n     * this.column.inlineEditorTemplate = this.inlineEditorTemplate;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    set inlineEditorTemplate(template: TemplateRef<any>) {\n        this._inlineEditorTemplate = template;\n    }\n    /**\n     * Returns a reference to the `filterCellTemplate`.\n     * ```typescript\n     * let filterCellTemplate = this.column.filterCellTemplate;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @notifyChanges()\n    @WatchColumnChanges()\n    @Input('filterCellTemplate')\n    get filterCellTemplate(): TemplateRef<any> {\n        return this._filterCellTemplate;\n    }\n    /**\n     * Sets the quick filter template.\n     * ```html\n     * <ng-template #filterCellTemplate IgxFilterCellTemplate let-column=\"column\">\n     *    <input (input)=\"onInput()\">\n     * </ng-template>\n     * ```\n     * ```typescript\n     * @ViewChild(\"'filterCellTemplate'\", {read: TemplateRef })\n     * public filterCellTemplate: TemplateRef<any>;\n     * this.column.filterCellTemplate = this.filterCellTemplate;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    set filterCellTemplate(template: TemplateRef<any>) {\n        this._filterCellTemplate = template;\n    }\n\n    /** @hidden */\n    @Input('collapsibleIndicatorTemplate')\n    public collapsibleIndicatorTemplate: TemplateRef<any>;\n    /**\n     * Gets the cells of the column.\n     * ```typescript\n     * let columnCells =  this.column.cells;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    get cells(): IgxGridCellComponent[] {\n        return this.grid.rowList.filter((row) => row instanceof IgxRowDirective)\n            .map((row) => {\n                if (row.cells) {\n                    return row.cells.filter((cell) => cell.columnIndex === this.index);\n                }\n            }).reduce((a, b) => a.concat(b), []);\n    }\n    /**\n     * Gets the column visible index.\n     * If the column is not visible, returns `-1`.\n     * ```typescript\n     * let visibleColumnIndex =  this.column.visibleIndex;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    get visibleIndex(): number {\n        if (!isNaN(this._vIndex)) {\n            return this._vIndex;\n        }\n        const unpinnedColumns = this.grid.unpinnedColumns.filter(c => !c.columnGroup);\n        const pinnedColumns = this.grid.pinnedColumns.filter(c => !c.columnGroup);\n        let col = this;\n        let vIndex = -1;\n\n        if (this.columnGroup) {\n            col = this.allChildren.filter(c => !c.columnGroup && !c.hidden)[0] as any;\n        }\n        if (this.columnLayoutChild) {\n            return this.parent.childrenVisibleIndexes.find(x => x.column === this).index;\n        }\n\n        if (!this.pinned) {\n            const indexInCollection = unpinnedColumns.indexOf(col);\n            vIndex = indexInCollection === -1 ?\n                -1 :\n                (this.grid.isPinningToStart ?\n                    pinnedColumns.length + indexInCollection :\n                    indexInCollection);\n        } else {\n            const indexInCollection = pinnedColumns.indexOf(col);\n            vIndex = this.grid.isPinningToStart ?\n                indexInCollection :\n                unpinnedColumns.length + indexInCollection;\n        }\n        this._vIndex = vIndex;\n        return vIndex;\n    }\n    /**\n     * Returns a boolean indicating if the column is a `ColumnGroup`.\n     * ```typescript\n     * let columnGroup =  this.column.columnGroup;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    get columnGroup() {\n        return false;\n    }\n    /**\n     * Returns a boolean indicating if the column is a `ColumnLayout` for multi-row layout.\n     * ```typescript\n     * let columnGroup =  this.column.columnGroup;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    get columnLayout() {\n        return false;\n    }\n\n    /**\n     * Returns a boolean indicating if the column is a child of a `ColumnLayout` for multi-row layout.\n     * ```typescript\n     * let columnLayoutChild =  this.column.columnLayoutChild;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    get columnLayoutChild() {\n        return this.parent && this.parent.columnLayout;\n    }\n\n    /**\n     * Returns the children columns collection.\n     * Returns an empty array if the column does not contain children columns.\n     * ```typescript\n     * let childrenColumns =  this.column.allChildren;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    get allChildren(): IgxColumnComponent[] {\n        return [];\n    }\n    /**\n     * Returns the level of the column in a column group.\n     * Returns `0` if the column doesn't have a `parent`.\n     * ```typescript\n     * let columnLevel =  this.column.level;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    get level() {\n        let ptr = this.parent;\n        let lvl = 0;\n\n        while (ptr) {\n            lvl++;\n            ptr = ptr.parent;\n        }\n        return lvl;\n    }\n\n    get isLastPinned(): boolean {\n        return this.grid.isPinningToStart &&\n            this.grid.pinnedColumns[this.grid.pinnedColumns.length - 1] === this;\n    }\n\n    get isFirstPinned(): boolean {\n        const pinnedCols = this.grid.pinnedColumns.filter(x => !x.columnGroup);\n        return !this.grid.isPinningToStart && pinnedCols[0] === this;\n    }\n\n    get rightPinnedOffset(): string {\n        return this.pinned && !this.grid.isPinningToStart ?\n            - this.grid.pinnedWidth - this.grid.headerFeaturesWidth + 'px' :\n            null;\n    }\n\n    get gridRowSpan(): number {\n        return this.rowEnd && this.rowStart ? this.rowEnd - this.rowStart : 1;\n    }\n    get gridColumnSpan(): number {\n        return this.colEnd && this.colStart ? this.colEnd - this.colStart : 1;\n    }\n\n    /**\n     * Row index where the current field should end.\n     * The amount of rows between rowStart and rowEnd will determine the amount of spanning rows to that field\n     * ```html\n     * <igx-column-layout>\n     *   <igx-column [rowEnd]=\"2\" [rowStart]=\"1\" [colStart]=\"1\"></igx-column>\n     * </igx-column-layout>\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @Input()\n    public rowEnd: number;\n\n    /**\n     * Column index where the current field should end.\n     * The amount of columns between colStart and colEnd will determine the amount of spanning columns to that field\n     * ```html\n     * <igx-column-layout>\n     *   <igx-column [colEnd]=\"3\" [rowStart]=\"1\" [colStart]=\"1\"></igx-column>\n     * </igx-column-layout>\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @Input()\n    public colEnd: number;\n\n    /**\n     * Row index from which the field is starting.\n     * ```html\n     * <igx-column-layout>\n     *   <igx-column [rowStart]=\"1\" [colStart]=\"1\"></igx-column>\n     * </igx-column-layout>\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @Input() rowStart: number;\n\n    /**\n     * Column index from which the field is starting.\n     * ```html\n     * <igx-column-layout>\n     *   <igx-column [colStart]=\"1\" [rowStart]=\"1\"></igx-column>\n     * </igx-column-layout>\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @Input() colStart: number;\n\n    /**\n     * Indicates whether the column will be visible when its parent is collapsed.\n     * ```html\n     * <igx-column-group>\n     *   <igx-column [visibleWhenCollapsed]=\"true\"></igx-column>\n     * </igx-column-group>\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    @notifyChanges(true)\n    @Input()\n    set visibleWhenCollapsed(value: boolean) {\n        this._visibleWhenCollapsed = value;\n        this.visibleWhenCollapsedChange.emit(this._visibleWhenCollapsed);\n        if (this.parent) { this.parent.setExpandCollapseState(); }\n    }\n\n    get visibleWhenCollapsed(): boolean {\n        return this._visibleWhenCollapsed;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public collapsible = false;\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public expanded = true;\n\n    /**\n     * hidden\n     */\n    public defaultWidth: string;\n\n    /**\n     * hidden\n     */\n    public widthSetByUser: boolean;\n\n    /**\n     * Returns the filteringExpressionsTree of the column.\n     * ```typescript\n     * let tree =  this.column.filteringExpressionsTree;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    get filteringExpressionsTree(): FilteringExpressionsTree {\n        return this.grid.filteringExpressionsTree.find(this.field) as FilteringExpressionsTree;\n    }\n    /**\n     * Sets/gets the parent column.\n     * ```typescript\n     * let parentColumn = this.column.parent;\n     * ```\n     * ```typescript\n     * this.column.parent = higherLevelColumn;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    parent = null;\n    /**\n     * Sets/gets the children columns.\n     * ```typescript\n     * let columnChildren = this.column.children;\n     * ```\n     * ```typescript\n     * this.column.children = childrenColumns;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    children: QueryList<IgxColumnComponent>;\n\n    /**\n     * @hidden\n     */\n    protected _unpinnedIndex;\n    /**\n     * @hidden\n     */\n    protected _pinned = false;\n    /**\n     * @hidden\n     */\n    protected _bodyTemplate: TemplateRef<any>;\n    /**\n     * @hidden\n     */\n    protected _headerTemplate: TemplateRef<any>;\n    /**\n     * @hidden\n     */\n    protected _inlineEditorTemplate: TemplateRef<any>;\n    /**\n     * @hidden\n     */\n    protected _filterCellTemplate: TemplateRef<any>;\n    /**\n     * @hidden\n     */\n    protected _collapseIndicatorTemplate: TemplateRef<any>;\n    /**\n     * @hidden\n     */\n    protected _summaries = null;\n    /**\n     * @hidden\n     */\n    protected _filters = null;\n    /**\n     * @hidden\n     */\n    protected _sortStrategy: ISortingStrategy = DefaultSortingStrategy.instance();\n    /**\n     * @hidden\n     */\n    protected _groupingComparer: (a: any, b: any) => number;\n    /**\n     * @hidden\n     */\n    protected _hidden = false;\n    /**\n     * @hidden\n     */\n    protected _index: number;\n    /**\n     * @hidden\n     */\n    protected _disablePinning = false;\n    /**\n     * @hidden\n     */\n    protected _width: string;\n    /**\n     * @hidden\n     */\n    protected _defaultMinWidth = '';\n    /**\n     * @hidden\n     */\n    protected _hasSummary = false;\n    /**\n     * @hidden\n     */\n    protected _editable: boolean;\n    /**\n     *  @hidden\n     */\n    protected _visibleWhenCollapsed;\n    /**\n     * @hidden\n     */\n    protected _collapsible = false;\n    /**\n     * @hidden\n     */\n    protected _expanded = true;\n    /**\n     * @hidden\n     */\n    protected _selectable = true;\n    /**\n     * @hidden\n     */\n    protected get isPrimaryColumn(): boolean {\n        return this.field !== undefined && this.grid !== undefined && this.field === this.grid.primaryKey;\n    }\n    /**\n     * @hidden\n     */\n    @ContentChild(IgxCellTemplateDirective, { read: IgxCellTemplateDirective })\n    protected cellTemplate: IgxCellTemplateDirective;\n    /**\n     * @hidden\n     */\n    @ContentChildren(IgxCellHeaderTemplateDirective, { read: IgxCellHeaderTemplateDirective, descendants: false })\n    protected headTemplate: QueryList<IgxCellHeaderTemplateDirective>;\n    /**\n     * @hidden\n     */\n    @ContentChild(IgxCellEditorTemplateDirective, { read: IgxCellEditorTemplateDirective })\n    protected editorTemplate: IgxCellEditorTemplateDirective;\n\n    protected _vIndex = NaN;\n    /**\n     * @hidden\n     */\n    @ContentChild(IgxFilterCellTemplateDirective, { read: IgxFilterCellTemplateDirective })\n    public filterCellTemplateDirective: IgxFilterCellTemplateDirective;\n    /**\n     * @hidden\n     */\n    @ContentChild(IgxCollapsibleIndicatorTemplateDirective, { read: IgxCollapsibleIndicatorTemplateDirective, static: false })\n    protected collapseIndicatorTemplate:  IgxCollapsibleIndicatorTemplateDirective;\n\n    constructor(public gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>, public cdr: ChangeDetectorRef,\n        public rowIslandAPI: IgxRowIslandAPIService, public elementRef: ElementRef) { }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public resetCaches() {\n        this._vIndex = NaN;\n        if (this.grid) {\n            this.cacheCalcWidth();\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public ngAfterContentInit(): void {\n        if (this.cellTemplate) {\n            this._bodyTemplate = this.cellTemplate.template;\n        }\n        if (this.headTemplate && this.headTemplate.length) {\n            this._headerTemplate = this.headTemplate.toArray()[0].template;\n        }\n        if (this.editorTemplate) {\n            this._inlineEditorTemplate = this.editorTemplate.template;\n        }\n        if (this.filterCellTemplateDirective) {\n            this._filterCellTemplate = this.filterCellTemplateDirective.template;\n        }\n        if (!this.summaries) {\n            switch (this.dataType) {\n                case DataType.String:\n                case DataType.Boolean:\n                    this.summaries = IgxSummaryOperand;\n                    break;\n                case DataType.Number:\n                    this.summaries = IgxNumberSummaryOperand;\n                    break;\n                case DataType.Date:\n                    this.summaries = IgxDateSummaryOperand;\n                    break;\n                default:\n                    this.summaries = IgxSummaryOperand;\n                    break;\n            }\n        }\n        if (!this.filters) {\n            switch (this.dataType) {\n                case DataType.Boolean:\n                    this.filters = IgxBooleanFilteringOperand.instance();\n                    break;\n                case DataType.Number:\n                    this.filters = IgxNumberFilteringOperand.instance();\n                    break;\n                case DataType.Date:\n                    this.filters = IgxDateFilteringOperand.instance();\n                    break;\n                case DataType.String:\n                default:\n                    this.filters = IgxStringFilteringOperand.instance();\n                    break;\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    getGridTemplate(isRow: boolean, isIE: boolean): string {\n        if (isRow) {\n            const rowsCount = this.grid.multiRowLayoutRowSize;\n            return isIE ?\n                `(1fr)[${rowsCount}]` :\n                `repeat(${rowsCount},1fr)`;\n        } else {\n            return this.getColumnSizesString(this.children);\n        }\n    }\n\n    public getInitialChildColumnSizes(children: QueryList<IgxColumnComponent>): Array<MRLColumnSizeInfo> {\n        const columnSizes: MRLColumnSizeInfo[] = [];\n        // find the smallest col spans\n        children.forEach(col => {\n            if (!col.colStart) {\n                return;\n            }\n            const newWidthSet = col.widthSetByUser && columnSizes[col.colStart - 1] && !columnSizes[col.colStart - 1].widthSetByUser;\n            const newSpanSmaller = columnSizes[col.colStart - 1] && columnSizes[col.colStart - 1].colSpan > col.gridColumnSpan;\n            const bothWidthsSet = col.widthSetByUser && columnSizes[col.colStart - 1] && columnSizes[col.colStart - 1].widthSetByUser;\n            const bothWidthsNotSet = !col.widthSetByUser && columnSizes[col.colStart - 1] && !columnSizes[col.colStart - 1].widthSetByUser;\n\n            if (columnSizes[col.colStart - 1] === undefined) {\n                // If nothing is defined yet take any column at first\n                // We use colEnd to know where the column actually ends, because not always it starts where we have it set in columnSizes.\n                columnSizes[col.colStart - 1] = {\n                    ref: col,\n                    width: col.widthSetByUser || this.grid.columnWidthSetByUser ? parseInt(col.calcWidth, 10) : null,\n                    colSpan: col.gridColumnSpan,\n                    colEnd: col.colStart + col.gridColumnSpan,\n                    widthSetByUser: col.widthSetByUser\n                };\n            } else if (newWidthSet || (newSpanSmaller && ((bothWidthsSet) || (bothWidthsNotSet)))) {\n                // If a column is set already it should either not have width defined or have width with bigger span than the new one.\n\n                /**\n                 *  If replaced column has bigger span, we want to fill the remaining columns\n                 *  that the replacing column does not fill with the old one.\n                 */\n                if (bothWidthsSet && newSpanSmaller) {\n                    // Start from where the new column set would end and apply the old column to the rest depending on how much it spans.\n                    // We have not yet replaced it so we can use it directly from the columnSizes collection.\n                    // This is where colEnd is used because the colStart of the old column is not actually i + 1.\n                    for (let i = col.colStart - 1 + col.gridColumnSpan; i < columnSizes[col.colStart - 1].colEnd - 1; i++) {\n                        if (!columnSizes[i] || !columnSizes[i].widthSetByUser) {\n                            columnSizes[i] = columnSizes[col.colStart - 1];\n                        } else {\n                            break;\n                        }\n                    }\n                }\n\n                // Replace the old column with the new one.\n                columnSizes[col.colStart - 1] = {\n                    ref: col,\n                    width: col.widthSetByUser || this.grid.columnWidthSetByUser ? parseInt(col.calcWidth, 10) : null,\n                    colSpan: col.gridColumnSpan,\n                    colEnd: col.colStart + col.gridColumnSpan,\n                    widthSetByUser: col.widthSetByUser\n                };\n            } else if (bothWidthsSet && columnSizes[col.colStart - 1].colSpan < col.gridColumnSpan) {\n                // If the column already in the columnSizes has smaller span, we still need to fill any empty places with the current col.\n                // Start from where the smaller column set would end and apply the bigger column to the rest depending on how much it spans.\n                // Since here we do not have it in columnSizes we set it as a new column keeping the same colSpan.\n                for (let i = col.colStart - 1 + columnSizes[col.colStart - 1].colSpan; i < col.colStart - 1 + col.gridColumnSpan; i++) {\n                    if (!columnSizes[i] || !columnSizes[i].widthSetByUser) {\n                        columnSizes[i] = {\n                            ref: col,\n                            width: col.widthSetByUser || this.grid.columnWidthSetByUser ? parseInt(col.calcWidth, 10) : null,\n                            colSpan: col.gridColumnSpan,\n                            colEnd: col.colStart + col.gridColumnSpan,\n                            widthSetByUser: col.widthSetByUser\n                        };\n                    } else {\n                        break;\n                    }\n                }\n            }\n        });\n\n        // Flatten columnSizes so there are not columns with colSpan > 1\n        for (let i = 0; i < columnSizes.length; i++) {\n            if (columnSizes[i] && columnSizes[i].colSpan > 1) {\n                let j = 1;\n\n                // Replace all empty places depending on how much the current column spans starting from next col.\n                for (; j < columnSizes[i].colSpan && i + j + 1 < columnSizes[i].colEnd; j++) {\n                    if (columnSizes[i + j] &&\n                        ((!columnSizes[i].width && columnSizes[i + j].width) ||\n                            (!columnSizes[i].width && !columnSizes[i + j].width && columnSizes[i + j].colSpan <= columnSizes[i].colSpan) ||\n                            (!!columnSizes[i + j].width && columnSizes[i + j].colSpan <= columnSizes[i].colSpan))) {\n                        // If we reach an already defined column that has width and the current doesn't have or\n                        // if the reached column has bigger colSpan we stop.\n                        break;\n                    } else {\n                        const width = columnSizes[i].widthSetByUser ?\n                            columnSizes[i].width / columnSizes[i].colSpan :\n                            columnSizes[i].width;\n                        columnSizes[i + j] = {\n                            ref: columnSizes[i].ref,\n                            width: width,\n                            colSpan: 1,\n                            colEnd: columnSizes[i].colEnd,\n                            widthSetByUser: columnSizes[i].widthSetByUser\n                        };\n                    }\n                }\n\n                // Update the current column width so it is divided between all columns it spans and set it to 1.\n                columnSizes[i].width = columnSizes[i].widthSetByUser ?\n                    columnSizes[i].width / columnSizes[i].colSpan :\n                    columnSizes[i].width;\n                columnSizes[i].colSpan = 1;\n\n                // Update the index based on how much we have replaced. Subtract 1 because we started from 1.\n                i += j - 1;\n            }\n        }\n\n        return columnSizes;\n    }\n\n    public getFilledChildColumnSizes(children: QueryList<IgxColumnComponent>): Array<string> {\n        const columnSizes = this.getInitialChildColumnSizes(children);\n\n        // fill the gaps if there are any\n        const result: string[] = [];\n        for (let i = 0; i < columnSizes.length; i++) {\n            if (columnSizes[i] && !!columnSizes[i].width) {\n                result.push(columnSizes[i].width + 'px');\n            } else {\n                result.push(parseInt(this.grid.getPossibleColumnWidth(), 10) + 'px');\n            }\n        }\n        return result;\n    }\n\n    protected getColumnSizesString(children: QueryList<IgxColumnComponent>): string {\n        const res = this.getFilledChildColumnSizes(children);\n        return res.join(' ');\n    }\n\n    public getResizableColUnderEnd(): MRLResizeColumnInfo[] {\n        if (this.columnLayout || !this.columnLayoutChild || this.columnGroup) {\n            return [{ target: this, spanUsed: 1 }];\n        }\n\n        const columnSized = this.getInitialChildColumnSizes(this.parent.children);\n        const targets: MRLResizeColumnInfo[] = [];\n        const colEnd = this.colEnd ? this.colEnd : this.colStart + 1;\n\n        for (let i = 0; i < columnSized.length; i++) {\n            if (this.colStart <= i + 1 && i + 1 < colEnd) {\n                targets.push({ target: columnSized[i].ref, spanUsed: 1 });\n            }\n        }\n\n        const targetsSquashed: MRLResizeColumnInfo[] = [];\n        for (let j = 0; j < targets.length; j++) {\n            if (targetsSquashed.length && targetsSquashed[targetsSquashed.length - 1].target.field === targets[j].target.field) {\n                targetsSquashed[targetsSquashed.length - 1].spanUsed++;\n            } else {\n                targetsSquashed.push(targets[j]);\n            }\n        }\n\n        return targetsSquashed;\n    }\n\n    /**\n     * Pins the column at the provided index in the pinned area. Defaults to index `0` if not provided.\n     * Returns `true` if the column is successfully pinned. Returns `false` if the column cannot be pinned.\n     * Column cannot be pinned if:\n     * - Is already pinned\n     * - index argument is out of range\n     * - The pinned area exceeds 80% of the grid width\n     * ```typescript\n     * let success = this.column.pin();\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    public pin(index?: number): boolean {\n        // TODO: Probably should the return type of the old functions\n        // should be moved as a event parameter.\n        if (this.grid) {\n            this.grid.endEdit(true);\n        }\n        if (this._pinned) {\n            return false;\n        }\n\n        if (this.parent && !this.parent.pinned) {\n            return this.topLevelParent.pin(index);\n        }\n\n        const grid = (this.grid as any);\n        const hasIndex = index !== undefined;\n        if (hasIndex && (index < 0 || index >= grid.pinnedColumns.length)) {\n            return false;\n        }\n\n        if (!this.parent && !this.pinnable) {\n            return false;\n        }\n\n        this._pinned = true;\n        this.pinnedChange.emit(this._pinned);\n        this._unpinnedIndex = grid._unpinnedColumns.indexOf(this);\n        index = index !== undefined ? index : grid._pinnedColumns.length;\n        const targetColumn = grid._pinnedColumns[index];\n        const args = { column: this, insertAtIndex: index, isPinned: true };\n        grid.onColumnPinning.emit(args);\n\n        if (grid._pinnedColumns.indexOf(this) === -1) {\n            grid._pinnedColumns.splice(args.insertAtIndex, 0, this);\n\n            if (grid._unpinnedColumns.indexOf(this) !== -1) {\n                grid._unpinnedColumns.splice(grid._unpinnedColumns.indexOf(this), 1);\n            }\n        }\n\n        if (hasIndex) {\n            grid._moveColumns(this, targetColumn);\n        }\n\n        if (this.columnGroup) {\n            this.allChildren.forEach(child => child.pin());\n            grid.reinitPinStates();\n        }\n\n        grid.resetCaches();\n        grid.notifyChanges();\n        if (this.columnLayoutChild) {\n            this.grid.columns.filter(x => x.columnLayout).forEach(x => x.populateVisibleIndexes());\n        }\n        this.grid.filteringService.refreshExpressions();\n        return true;\n    }\n    /**\n     * Unpins the column and place it at the provided index in the unpinned area. Defaults to index `0` if not provided.\n     * Returns `true` if the column is successfully unpinned. Returns `false` if the column cannot be unpinned.\n     * Column cannot be unpinned if:\n     * - Is already unpinned\n     * - index argument is out of range\n     * ```typescript\n     * let success = this.column.unpin();\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    public unpin(index?: number): boolean {\n        if (this.grid) {\n            this.grid.endEdit(true);\n        }\n        if (!this._pinned) {\n            return false;\n        }\n\n        if (this.parent && this.parent.pinned) {\n            return this.topLevelParent.unpin(index);\n        }\n\n        const grid = (this.grid as any);\n        const hasIndex = index !== undefined;\n        if (hasIndex && (index < 0 || index >= grid._unpinnedColumns.length)) {\n            return false;\n        }\n\n        index = (index !== undefined ? index :\n            this._unpinnedIndex !== undefined ? this._unpinnedIndex : this.index);\n        this._pinned = false;\n        this.pinnedChange.emit(this._pinned);\n\n        const targetColumn = grid._unpinnedColumns[index];\n\n        grid._unpinnedColumns.splice(index, 0, this);\n        if (grid._pinnedColumns.indexOf(this) !== -1) {\n            grid._pinnedColumns.splice(grid._pinnedColumns.indexOf(this), 1);\n        }\n\n        if (hasIndex) {\n            grid._moveColumns(this, targetColumn);\n        }\n\n        if (this.columnGroup) {\n            this.allChildren.forEach(child => child.unpin());\n        }\n\n        grid.reinitPinStates();\n        grid.resetCaches();\n\n        const insertAtIndex = grid._unpinnedColumns.indexOf(this);\n        const args = { column: this, insertAtIndex, isPinned: false };\n        grid.onColumnPinning.emit(args);\n\n        grid.notifyChanges();\n        if (this.columnLayoutChild) {\n            this.grid.columns.filter(x => x.columnLayout).forEach(x => x.populateVisibleIndexes());\n        }\n        this.grid.filteringService.refreshExpressions();\n\n        return true;\n    }\n    /**\n     * Returns a reference to the top level parent column.\n     * ```typescript\n     * let topLevelParent =  this.column.topLevelParent;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    get topLevelParent() {\n        let parent = this.parent;\n        while (parent && parent.parent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n\n    /**\n     * Returns a reference to the header of the column.\n     * ```typescript\n     * let column = this.grid.columnList.filter(c => c.field === 'ID')[0];\n     * let headerCell = column.headerCell;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    get headerCell(): IgxGridHeaderComponent {\n        return this.grid.headerCellList.find((header) => header.column === this);\n    }\n\n    /**\n     * Returns a reference to the filter cell of the column.\n     * ```typescript\n     * let column = this.grid.columnList.filter(c => c.field === 'ID')[0];\n     * let filterell = column.filterell;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    get filterCell(): IgxGridFilteringCellComponent {\n        return this.grid.filterCellList.find((filterCell) => filterCell.column === this);\n    }\n\n    /**\n     * Returns a reference to the header group of the column.\n     * @memberof IgxColumnComponent\n     */\n    get headerGroup(): IgxGridHeaderGroupComponent {\n        return this.grid.headerGroupsList.find((headerGroup) => headerGroup.column === this);\n    }\n\n    /**\n     * Autosize the column to the longest currently visible cell value, including the header cell.\n     * ```typescript\n     * @ViewChild('grid') grid: IgxGridComponent;\n     * let column = this.grid.columnList.filter(c => c.field === 'ID')[0];\n     * column.autosize();\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    public autosize() {\n        if (!this.columnGroup) {\n            this.width = this.getLargestCellWidth();\n            this.grid.reflow();\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public getCalcWidth(): any {\n        if (this._calcWidth !== null && !isNaN(this.calcPixelWidth)) {\n            return this._calcWidth;\n        }\n        this.cacheCalcWidth();\n        return this._calcWidth;\n    }\n\n    /**\n     * @hidden\n     * Returns the size (in pixels) of the longest currently visible cell, including the header cell.\n     * ```typescript\n     * @ViewChild('grid') grid: IgxGridComponent;\n     *\n     * let column = this.grid.columnList.filter(c => c.field === 'ID')[0];\n     * let size = column.getLargestCellWidth();\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    public getLargestCellWidth(): string {\n        const range = this.grid.document.createRange();\n        const largest = new Map<number, number>();\n\n        if (this.cells.length > 0) {\n            let cellsContentWidths = [];\n            if (this.cells[0].nativeElement.children.length > 0) {\n                this.cells.forEach((cell) => cellsContentWidths.push(cell.calculateSizeToFit(range)));\n            } else {\n                cellsContentWidths = this.cells.map((cell) => getNodeSizeViaRange(range, cell.nativeElement));\n            }\n\n            const index = cellsContentWidths.indexOf(Math.max(...cellsContentWidths));\n            const cellStyle = this.grid.document.defaultView.getComputedStyle(this.cells[index].nativeElement);\n            const cellPadding = parseFloat(cellStyle.paddingLeft) + parseFloat(cellStyle.paddingRight) +\n                parseFloat(cellStyle.borderRightWidth);\n\n            largest.set(Math.max(...cellsContentWidths), cellPadding);\n        }\n\n        if (this.headerCell) {\n            let headerCell;\n            if (this.headerTemplate && this.headerCell.elementRef.nativeElement.children[0].children.length > 0) {\n                headerCell = Math.max(...Array.from(this.headerCell.elementRef.nativeElement.children[0].children)\n                    .map((child) => getNodeSizeViaRange(range, child)));\n            } else {\n                headerCell = getNodeSizeViaRange(range, this.headerCell.elementRef.nativeElement.children[0]);\n            }\n\n            if (this.sortable || this.filterable) {\n                headerCell += this.headerCell.elementRef.nativeElement.children[1].getBoundingClientRect().width;\n            }\n\n            const headerStyle = this.grid.document.defaultView.getComputedStyle(this.headerCell.elementRef.nativeElement);\n            const headerPadding = parseFloat(headerStyle.paddingLeft) + parseFloat(headerStyle.paddingRight) +\n                parseFloat(headerStyle.borderRightWidth);\n            largest.set(headerCell, headerPadding);\n\n        }\n\n        const largestCell = Math.max(...Array.from(largest.keys()));\n        const width = Math.ceil(largestCell + largest.get(largestCell));\n\n        if (Number.isNaN(width)) {\n            return this.width;\n        } else {\n            return width + 'px';\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public getCellWidth() {\n        const colWidth = this.width;\n        const isPercentageWidth = colWidth && typeof colWidth === 'string' && colWidth.indexOf('%') !== -1;\n\n        if (this.columnLayoutChild) {\n            return '';\n        }\n\n        if (colWidth && !isPercentageWidth) {\n\n            let cellWidth = colWidth;\n            if (typeof cellWidth !== 'string' || cellWidth.endsWith('px') === false) {\n                cellWidth += 'px';\n            }\n\n            return cellWidth;\n        } else {\n            return colWidth;\n        }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    protected cacheCalcWidth(): any {\n        const grid = this.gridAPI.grid;\n        const colWidth = this.width;\n        const isPercentageWidth = colWidth && typeof colWidth === 'string' && colWidth.indexOf('%') !== -1;\n        if (isPercentageWidth) {\n            this._calcWidth = parseInt(colWidth, 10) / 100 * (grid.calcWidth - grid.featureColumnsWidth());\n        } else if (!colWidth) {\n            // no width\n            this._calcWidth = this.defaultWidth || grid.getPossibleColumnWidth();\n        } else {\n            this._calcWidth = this.width;\n        }\n        this.calcPixelWidth = parseInt(this._calcWidth, 10);\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    protected setExpandCollapseState() {\n        this.children.filter(col => (col.visibleWhenCollapsed !== undefined)).forEach(c =>  {\n            if (!this.collapsible) { c.hidden = this.hidden; return; }\n            c.hidden = this._expanded ? c.visibleWhenCollapsed : !c.visibleWhenCollapsed;\n        });\n    }\n    /**\n     * @hidden\n     * @internal\n     */\n    protected checkCollapsibleState() {\n        if (!this.children) { return false; }\n        const cols = this.children.map(child => child.visibleWhenCollapsed);\n        return (cols.some(c => c === true) && cols.some(c => c === false));\n    }\n\n\n    /**\n     * @hidden\n     */\n    public get pinnable() {\n        return (this.grid as any)._init || !this.pinned;\n    }\n\n    /**\n     * @hidden\n     */\n    public populateVisibleIndexes() { }\n\n    /**\n     * @hidden\n     */\n    public get applySelectableClass(): boolean {\n        return this._applySelectableClass;\n    }\n\n    /**\n     * @hidden\n     */\n    public set applySelectableClass(value: boolean) {\n        if (this.selectable) {\n            this._applySelectableClass = value;\n        }\n    }\n}\n","import { Directive } from '@angular/core';\nimport { ConnectedPositioningStrategy } from '../services/public_api';\nimport { VerticalAlignment, PositionSettings } from '../services/overlay/utilities';\nimport { scaleInVerBottom, scaleInVerTop } from '../animations/main';\nimport { IgxForOfSyncService } from '../directives/for-of/for_of.sync.service';\nimport { ColumnPinningPosition, RowPinningPosition } from './common/enums';\n\n\n@Directive({\n    selector: '[igxGridBody]',\n    providers: [IgxForOfSyncService]\n})\nexport class IgxGridBodyDirective {}\n\n\n/**\n * @hidden\n */\nexport interface RowEditPositionSettings extends PositionSettings {\n    container?: HTMLElement;\n}\n\n/**\n * An interface describing settings for row/column pinning position.\n */\nexport interface IPinningConfig {\n    columns?: ColumnPinningPosition;\n    rows?: RowPinningPosition;\n}\n\n/**\n * @hidden\n */\nexport class RowEditPositionStrategy extends ConnectedPositioningStrategy {\n    isTop = false;\n    isTopInitialPosition = null;\n    public settings: RowEditPositionSettings;\n    position(contentElement: HTMLElement, size: { width: number, height: number }, document?: Document, initialCall?: boolean): void {\n        const container = this.settings.container; // grid.tbody\n        const target = <HTMLElement>this.settings.target; // current grid.row\n\n        // Position of the overlay depends on the available space in the grid.\n        // If the bottom space is not enough then the the row overlay will show at the top of the row.\n        // Once shown, either top or bottom, then this position stays until the overlay is closed (isTopInitialPosition property),\n        // which means that when scrolling then overlay may hide, while the row is still visible (UX requirement).\n        this.isTop = this.isTopInitialPosition !== null ?\n            this.isTopInitialPosition :\n            container.getBoundingClientRect().bottom <\n                target.getBoundingClientRect().bottom + contentElement.getBoundingClientRect().height;\n\n        // Set width of the row editing overlay to equal row width, otherwise it fits 100% of the grid.\n        contentElement.style.width = target.clientWidth + 'px';\n        this.settings.verticalStartPoint = this.settings.verticalDirection = this.isTop ? VerticalAlignment.Top : VerticalAlignment.Bottom;\n        this.settings.openAnimation = this.isTop ? scaleInVerBottom : scaleInVerTop;\n\n        super.position(contentElement, { width: target.clientWidth, height: target.clientHeight }, document, initialCall);\n    }\n}\n","import { EventEmitter, Input, Output, Directive } from '@angular/core';\nimport { IBaseEventArgs } from '../core/utils';\n\nexport interface IValueChangedEventArgs extends IBaseEventArgs {\n    oldValue: any;\n    newValue: any;\n}\n\n/**\n * @hidden\n */\n@Directive()\nexport abstract class ItemPropertyValueChangedDirective {\n    private _object: any;\n    private _propName: string;\n\n    get object() {\n        return this._object;\n    }\n\n    set object(value) {\n        if (value) {\n            this._object = value;\n        }\n    }\n\n    @Input()\n    get value() {\n        return (this.object) ? this.object[this._propName] : null;\n    }\n\n    set value(value) {\n        this.onValueChanged(value);\n    }\n\n    @Output()\n    public valueChanged = new EventEmitter<IValueChangedEventArgs>();\n\n    constructor(propName: string) {\n        this._propName = propName;\n    }\n\n    protected onValueChanged(value) {\n        const currentValue = this.value;\n        if (value !== currentValue) {\n            this.object[this._propName] = value;\n            this.valueChanged.emit({ oldValue: currentValue, newValue: value });\n        }\n    }\n}\n\n/** @hidden */\n@Directive()\nexport class ColumnChooserItemBaseDirective extends ItemPropertyValueChangedDirective {\n    @Input()\n    get column() {\n        return this.object;\n    }\n\n    set column(value) {\n        if (value) {\n            this.object = value;\n        }\n    }\n\n    @Input()\n    public indentation = 30;\n\n    @Input()\n    public container: any;\n\n    constructor(public prop: string) {\n        super(prop);\n    }\n\n    get name() {\n        return (this.column) ? ((this.column.header) ? this.column.header : this.column.field) : '';\n    }\n\n    get level() {\n        return this.column.level;\n    }\n\n    get calcIndent() {\n        return this.indentation * this.level;\n    }\n}\n","\nimport { Directive } from '@angular/core';\nimport { ColumnChooserItemBaseDirective } from '../column-chooser-item-base';\nimport { IBaseEventArgs } from '../../core/utils';\n\nexport interface IColumnVisibilityChangedEventArgs extends IBaseEventArgs {\n    column: any;\n    newValue: boolean;\n}\n\n/** @hidden */\n@Directive({\n    selector: '[igxColumnHidingItem]'\n})\nexport class IgxColumnHidingItemDirective extends ColumnChooserItemBaseDirective {\n\n    constructor() {\n        super('hidden');\n    }\n\n    get disabled() {\n        return this.column.disableHiding;\n    }\n}\n","import { ChangeDetectorRef, HostBinding, Input, OnDestroy, Directive } from '@angular/core';\nimport { IgxStringFilteringOperand } from '../data-operations/filtering-condition';\nimport { FilteringExpressionsTree, IFilteringExpressionsTree } from '../data-operations/filtering-expressions-tree';\nimport { FilteringLogic, IFilteringExpression } from '../data-operations/filtering-expression.interface';\nimport { FilteringStrategy } from '../data-operations/filtering-strategy';\nimport { ColumnChooserItemBaseDirective } from './column-chooser-item-base';\nimport { ColumnDisplayOrder } from './common/enums';\n\nclass CustomFilteringStrategy extends FilteringStrategy {\n    public filter(data: any[], expressionsTree: IFilteringExpressionsTree): any[] {\n        const res: ColumnChooserItemBaseDirective[] = [];\n        data.forEach((item: ColumnChooserItemBaseDirective) => {\n            if (this.matchRecord(item, expressionsTree.filteringOperands[0] as IFilteringExpression)) {\n                res.push(item);\n            } else if (item.column.columnGroup) {\n                if (item.column.allChildren.findIndex((child) =>\n                    this.matchRecord(child, expressionsTree.filteringOperands[1] as IFilteringExpression) ||\n                    this.matchRecord(child, expressionsTree.filteringOperands[2] as IFilteringExpression)) > -1) {\n                    res.push(item);\n                }\n            }\n        });\n\n        return res;\n    }\n}\n\n/** @hidden */\n@Directive()\nexport abstract class ColumnChooserBaseDirective implements OnDestroy {\n    /**\n     * Gets the grid columns that are going to be manipulated.\n     * ```typescript\n     * let gridColumns = this.columnHidingUI.columns;\n     * ```\n     */\n\n    @Input()\n    get columns() {\n        return this._gridColumns;\n    }\n    /**\n     * Sets the the grid columns that are going to be manipulated.\n     * ```html\n     * <igx-column-hiding [columns]=\"grid.columns\"></igx-column-hiding>\n     * ```\n     */\n    set columns(value) {\n        if (value) {\n            this._gridColumns = value;\n            this.createColumnItems();\n            if (this.filterCriteria) {\n                this.filter();\n            }\n        }\n    }\n    /**\n     * Sets/gets the title of the column chooser.\n     * ```typescript\n     * let title =  this.columnHidingUI.title;\n     * ```\n     */\n    @Input()\n    get title() {\n        return this._title;\n    }\n    /**\n     * ```html\n     * <igx-column-hiding [title]=\"'IgxColumnHidingComponent Title'\"></igx-column-hiding>\n     * ```\n     */\n    set title(value) {\n        this._title = (value) ? value : '';\n    }\n    /**\n     * Gets the prompt that is displayed in the filter input.\n     * ```typescript\n     * let filterColumnsPrompt =  this.columnHidingUI.filterColumnsPrompt;\n     * ```\n     */\n    @Input()\n    get filterColumnsPrompt() {\n        return this._filterColumnsPrompt;\n    }\n    /**\n     * Sets the prompt that is going to be displayed in the filter input.\n     * ```html\n     * <igx-column-hiding [filterColumnsPrompt]=\"'Type here to search'\"></igx-column-hiding>\n     * ```\n     */\n    set filterColumnsPrompt(value) {\n        this._filterColumnsPrompt = (value) ? value : '';\n    }\n    /**\n     * Hides/ shows the filtering columns input from the UI.\n     */\n    @Input()\n    public disableFilter = false;\n    /**\n     * Gets the items of the selected columns.\n     * ```typescript\n     * let columnItems =  this.columnHidingUI.columnItems;\n     * ```\n     */\n    @Input()\n    get columnItems() {\n        return this._currentColumns;\n    }\n    /**\n     * Gets the value which filters the columns list.\n     * ```typescript\n     * let filterCriteria =  this.columnHidingUI.filterCriteria;\n     * ```\n     */\n    @Input()\n    get filterCriteria() {\n        return this._filterCriteria;\n    }\n\n    /**\n     * Sets the value which filters the columns list.\n     * ```html\n     *  <igx-column-hiding [filterCriteria]=\"'ID'\"></igx-column-hiding>\n     * ```\n     */\n    set filterCriteria(value) {\n        if (!value || value.length === 0) {\n            this.clearFiltering();\n            this._filterCriteria = '';\n            this.cdr.detectChanges();\n            return;\n        } else if (this._filterCriteria && this._filterCriteria.length > value.length) {\n            this.clearFiltering();\n        }\n\n        this._filterCriteria = value;\n        this.filter();\n        this.cdr.detectChanges();\n    }\n    /**\n     * Gets the display order of the columns.\n     * ```typescript\n     * let columnDisplayOrder  =  this.columnHidingUI.columnDisplayOrder;\n     * ```\n     */\n    @Input()\n    get columnDisplayOrder() {\n        return this._columnDisplayOrder;\n    }\n    /**\n     * Sets the display order of the columns.\n     * ```typescript\n     * this.columnHidingUI.columnDisplayOrder = ColumnDisplayOrder.Alphabetical;\n     * ```\n     */\n    set columnDisplayOrder(value: ColumnDisplayOrder) {\n        if (value !== undefined) {\n            this.orderColumns(value);\n            if (this._filterCriteria.length > 0) {\n                this.filter();\n            }\n        }\n    }\n    /**\n     * Access to the columnHidingUI:\n     * ```typescript\n     * @ViewChild('column-hiding-component')\n     *  public columnHidingUI: IgxColumnHidingComponent;\n     * ```\n     * Sets/gets the max height of the column area.\n     * ```typescript\n     * let columnsAreaMaxHeight =  this.columnHidingUI.columnsAreaMaxHeight;\n     * ```\n     *\n     * ```html\n     * <igx-column-hiding [columnsAreaMaxHeight]=\"200px\"></igx-column-hiding>\n     * ```\n     */\n    @Input()\n    public columnsAreaMaxHeight = '100%';\n    /**\n     * Sets/Gets the css class selector.\n     * By default the value of the `class` attribute is `\"igx-column-hiding\"`.\n     * ```typescript\n     * let cssCLass =  this.columnHidingUI.cssClass;\n     * ```\n     * ```typescript\n     * this.columnHidingUI.cssClass = 'column-chooser';\n     * ```\n     */\n    @HostBinding('attr.class')\n    public cssClass = 'igx-column-hiding';\n    /**\n     * @hidden\n     */\n    private _currentColumns = [];\n    /**\n     * @hidden\n     */\n    private _gridColumns = [];\n    /**\n     * @hidden\n     */\n    private _rawColumns = [];\n    /**\n     * @hidden\n     */\n    private _columnDisplayOrder = ColumnDisplayOrder.DisplayOrder;\n    /**\n     * @hidden\n     */\n    private _filterCriteria = '';\n    /**\n     * @hidden\n     */\n    private _filterColumnsPrompt = '';\n    /**\n     * @hidden\n     */\n    private _title = '';\n\n    constructor(public cdr: ChangeDetectorRef) {\n    }\n    /**\n     * @hidden\n     */\n    ngOnDestroy() {\n        for (const item of this._currentColumns) {\n            item.valueChanged.unsubscribe();\n        }\n    }\n    /**\n     * @hidden\n     */\n    private createColumnItems() {\n        if (this._gridColumns.length > 0) {\n            this._rawColumns = [];\n            this._gridColumns.forEach((column) => {\n                const item = this.createColumnItem(this, column);\n                if (item) {\n                    this._rawColumns.push(item);\n                }\n            });\n            this._currentColumns = this._rawColumns.slice(0);\n            this.orderColumns(this._columnDisplayOrder);\n        }\n    }\n    /**\n     * @hidden\n     */\n    protected abstract createColumnItem(container: any, column: any);\n    /**\n     * @hidden\n     */\n    private orderColumns(value) {\n        this._columnDisplayOrder = value;\n        if (value === ColumnDisplayOrder[ColumnDisplayOrder.Alphabetical] ||\n            value === ColumnDisplayOrder.Alphabetical) {\n            this._currentColumns = this._rawColumns.slice(0).sort((current, next) => {\n                return current.name.toLowerCase().localeCompare(next.name.toLowerCase());\n            });\n        } else {\n            this._currentColumns = this._rawColumns;\n        }\n    }\n    /**\n     * @hidden\n     */\n    protected filter() {\n        const filteringExpressionsTree = new FilteringExpressionsTree(FilteringLogic.Or);\n        filteringExpressionsTree.filteringOperands.push(this.createFilteringExpression('name'));\n        filteringExpressionsTree.filteringOperands.push(this.createFilteringExpression('field'));\n        filteringExpressionsTree.filteringOperands.push(this.createFilteringExpression('header'));\n\n        const strategy = new CustomFilteringStrategy();\n        this._currentColumns = strategy.filter(this._currentColumns, filteringExpressionsTree);\n    }\n    /**\n     * @hidden\n     */\n    protected createFilteringExpression(fieldName: string): IFilteringExpression {\n        return {\n            condition: IgxStringFilteringOperand.instance().condition('contains'),\n            fieldName: fieldName,\n            ignoreCase: true,\n            searchVal: this._filterCriteria\n        };\n    }\n    /**\n     * @hidden\n     */\n    protected clearFiltering() {\n        this.createColumnItems();\n    }\n}\n\n\n","import {\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    OnDestroy\n} from '@angular/core';\nimport { IColumnVisibilityChangedEventArgs, IgxColumnHidingItemDirective } from './column-hiding-item.directive';\nimport { ColumnChooserBaseDirective } from '../column-chooser-base';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Component({\n    preserveWhitespaces: false,\n    selector: 'igx-column-hiding',\n    templateUrl: './column-hiding.component.html'\n})\nexport class IgxColumnHidingComponent extends ColumnChooserBaseDirective implements OnDestroy {\n    /**\n     * Returns a boolean indicating whether the `HIDE ALL` button is disabled.\n     * ```html\n     * <igx-column-hiding #columnHidingUI\n     *     [columns]=\"grid.columns\" [title]=\"'Column Hiding'\">\n     * </igx-column-hiding>\n     * ```\n     * ```typescript\n     * @ViewChild(\"'columnHidingUI'\")\n     * public columnHiding: IgxColumnHidingComponent;\n     * let isHideAlldisabled =  this.columnHiding.disableHideAll;\n     * ```\n     * @memberof IgxColumnHidingComponent\n     */\n    @Input()\n    get disableHideAll(): boolean {\n        if (!this.columnItems || this.columnItems.length < 1 ||\n            this.hiddenColumnsCount === this.columns.length) {\n            return true;\n        } else if (this.hidableColumns.length < 1 ||\n            this.hidableColumns.length === this.hidableColumns.filter((col) => col.value).length) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    /**\n     * Returns a boolean indicating whether the `SHOW ALL` button is disabled.\n     * ```typescript\n     * let isShowAlldisabled =  this.columnHiding.disableShowAll;\n     * ```\n     * @memberof IgxColumnHidingComponent\n     */\n    @Input()\n    get disableShowAll(): boolean {\n        if (!this.columnItems || this.columnItems.length < 1 ||\n            this.hiddenColumnsCount < 1 || this.hidableColumns.length < 1) {\n            return true;\n        } else if (this.hidableColumns.length === this.hidableColumns.filter((col) => !col.value).length) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    /**\n     * Sets/gets the text of the button that shows all columns if they are hidden.\n     * ```typescript\n     * let showAllButtonText =  this.columnHiding.showAllText;\n     * ```\n     *\n     * ```html\n     * <igx-column-hiding [showAllText] = \"'Show Columns'\"></igx-column-hiding>\n     * ```\n     * @memberof IgxColumnHidingComponent\n     */\n    @Input()\n    public showAllText = 'Show All';\n    /**\n     * Sets/gets the text of the button that hides all columns if they are shown.\n     * ```typescript\n     * let hideAllButtonText =  this.columnHiding.hideAllText;\n     * ```\n     *\n     * ```html\n     * <igx-column-hiding [hideAllText] = \"'Hide Columns'\"></igx-column-hiding>\n     * ```\n     * @memberof IgxColumnHidingComponent\n     */\n    @Input()\n    public hideAllText = 'Hide All';\n    /**\n     * An event that is emitted after the columns visibility is changed.\n     * Provides references to the `column` and the `newValue` properties as event arguments.\n     * ```html\n     *  <igx-column-hiding (onColumnVisibilityChanged) = \"onColumnVisibilityChanged($event)\"></igx-column-hiding>\n     * ```\n     * @memberof IgxColumnHidingComponent\n     */\n    @Output()\n    public onColumnVisibilityChanged = new EventEmitter<IColumnVisibilityChangedEventArgs>();\n    /**\n     * Gets the count of the hidden columns.\n     * ```typescript\n     * let hiddenColumnsCount =  this.columnHiding.hiddenColumnsCount;\n     * ```\n     * @memberof IgxColumnHidingComponent\n     */\n    public get hiddenColumnsCount() {\n        return (this.columns) ? this.columns.filter((col) => col.hidden).length : 0;\n    }\n\n    constructor(public cdr: ChangeDetectorRef) {\n        super(cdr);\n    }\n\n    /**\n     * @hidden\n     */\n    public get hidableColumns() {\n        return this.columnItems.filter((col) => !col.disabled);\n    }\n\n    private destroy$ = new Subject<boolean>();\n    /**\n     * @hidden\n     */\n    protected createColumnItem(container: any, column: any) {\n        if (column.grid.hasColumnLayouts && !column.columnLayout) {\n            return null;\n        }\n        const item = new IgxColumnHidingItemDirective();\n        item.container = container;\n        item.column = column;\n\n        item.valueChanged.pipe(takeUntil(this.destroy$)).subscribe((args) => {\n            this.onVisibilityChanged({ column: item.column, newValue: args.newValue });\n        });\n\n        return item;\n    }\n    /**\n     * Shows all columns in the grid.\n     * ```typescript\n     * this.columnHiding.showAllColumns();\n     * ```\n     * @memberof IgxColumnHidingComponent\n     */\n    public showAllColumns() {\n        const collection = this.hidableColumns;\n        for (const col of collection) {\n            col.value = false;\n        }\n    }\n    /**\n     * Hides all columns in the grid.\n     * ```typescript\n     * this.columnHiding.hideAllColumns();\n     * ```\n     * @memberof IgxColumnHidingComponent\n     */\n    public hideAllColumns() {\n        const collection = this.hidableColumns;\n        for (const col of collection) {\n            col.value = true;\n        }\n    }\n    /**\n     * @hidden\n     */\n    public onVisibilityChanged(args: IColumnVisibilityChangedEventArgs) {\n        this.onColumnVisibilityChanged.emit(args);\n    }\n\n    /**\n     * @hidden\n     */\n    public ngOnDestroy(): void {\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n}\n\n","import { Directive } from '@angular/core';\nimport { ColumnChooserItemBaseDirective } from '../column-chooser-item-base';\n\n\n@Directive({\n    selector: '[igxColumnPinningItem]'\n})\nexport class IgxColumnPinningItemDirective extends ColumnChooserItemBaseDirective {\n\n    constructor() {\n        super('pinned');\n    }\n\n    /**\n     * Returns whether a column could be pinned.\n     * It's not possible to pin a column if there is not enough space for the unpinned area.\n     * ```typescript\n     * const columnItem: IgxColumnPinningItemDirective;\n     * this.columnItem.pinnable;\n     * ```\n     */\n    get pinnable() {\n        return this.column.pinnable;\n    }\n    /**\n     * Returns whether a column have pinning enabled\n     */\n    public get pinningDisabled() {\n        return this.column.disablePinning;\n    }\n}\n","\nimport { Component, ChangeDetectorRef } from '@angular/core';\nimport { ColumnChooserBaseDirective } from '../column-chooser-base';\nimport { IgxColumnPinningItemDirective } from './pinning.directive';\n\n\n\n@Component({\n    preserveWhitespaces: false,\n    selector: 'igx-column-pinning',\n    templateUrl: './column-pinning.component.html'\n})\nexport class IgxColumnPinningComponent extends ColumnChooserBaseDirective {\n\n    constructor(public cdr: ChangeDetectorRef) {\n        super(cdr);\n    }\n\n    /**\n     * @hidden\n     */\n    createColumnItem(container: any, column: any) {\n        if (column.level !== 0 || column.disablePinning) {\n            return null;\n        }\n        const item = new IgxColumnPinningItemDirective();\n        item.container = container;\n        item.column = column;\n        return item;\n    }\n\n    /**\n     * @hidden\n     */\n    public checkboxValueChange(event, columnItem: IgxColumnPinningItemDirective) {\n        if (event.checked && !columnItem.pinnable) {\n            event.checkbox.checked = false;\n            return false;\n        }\n        columnItem.value = !columnItem.value;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public get pinnableColumns() {\n        return this.columnItems.filter((col) => !col.pinningDisabled);\n    }\n}\n\n","import { Injectable, SecurityContext, Inject } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { DOCUMENT } from '@angular/common';\nimport { Subject } from 'rxjs';\n\n/**\n * Event emitted when a SVG icon is loaded through\n * a HTTP request.\n */\nexport interface IgxIconLoadedEvent {\n    /** Name of the icon */\n    name: string;\n    /** The actual SVG text */\n    value: string;\n    /** The fontSet for the icon. Defaults to material. */\n    fontSet: string;\n}\n\n/**\n * **Ignite UI for Angular Icon Service** -\n *\n * The Ignite UI Icon Service makes it easy for developers to include custom SVG images and use them with IgxIconComponent.\n * In addition it could be used to associate a custom class to be applied on IgxIconComponent according to given fontSet.\n *\n * Example:\n * ```typescript\n * this.iconService.registerFontSetAlias('material', 'material-icons');\n * this.iconService.addSvgIcon('aruba', '/assets/svg/country_flags/aruba.svg', 'svg-flags');\n * ```\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class IgxIconService {\n    private _fontSet = 'material-icons';\n    private _fontSetAliases = new Map<string, string>();\n    private _svgContainer: HTMLElement;\n    private _cachedSvgIcons: Set<string> = new Set<string>();\n    private _iconLoaded = new Subject<IgxIconLoadedEvent>();\n\n    /**\n     * Observable that emits when an icon is successfully loaded\n     * through a HTTP request.\n     * @example\n     * ```typescript\n     * this.service.iconLoaded.subscribe((ev: IgxIconLoadedEvent) => ...);\n     * ```\n     */\n    public iconLoaded = this._iconLoaded.asObservable();\n\n    constructor(private _sanitizer: DomSanitizer, @Inject(DOCUMENT) private _document: any) { }\n\n    /**\n     *  Returns the default font set.\n     * ```typescript\n     *   const defaultFontSet = this.iconService.defaultFontSet;\n     * ```\n     */\n    get defaultFontSet(): string {\n        return this._fontSet;\n    }\n\n    /**\n     *  Sets the default font set.\n     * ```typescript\n     *   this.iconService.defaultFontSet = 'svg-flags';\n     * ```\n     */\n    set defaultFontSet(className: string) {\n        this._fontSet = className;\n    }\n\n    /**\n     *  Registers a custom class to be applied to IgxIconComponent for a given fontSet.\n     * ```typescript\n     *   this.iconService.registerFontSetAlias('material', 'material-icons');\n     * ```\n     */\n    public registerFontSetAlias(alias: string, className: string = alias): this {\n        this._fontSetAliases.set(alias, className);\n        return this;\n    }\n\n    /**\n     *  Returns the custom class, if any, associated to a given fontSet.\n     * ```typescript\n     *   const fontSetClass = this.iconService.fontSetClassName('material');\n     * ```\n     */\n    public fontSetClassName(alias: string): string {\n        return this._fontSetAliases.get(alias) || alias;\n    }\n\n    /**\n     *  Adds an SVG image to the cache. SVG source is an url.\n     * ```typescript\n     *   this.iconService.addSvgIcon('aruba', '/assets/svg/country_flags/aruba.svg', 'svg-flags');\n     * ```\n     */\n    public addSvgIcon(iconName: string, url: string, fontSet: string = '') {\n        if (iconName && url) {\n            const safeUrl = this._sanitizer.bypassSecurityTrustResourceUrl(url);\n            if (!safeUrl) {\n                throw new Error(`The provided URL could not be processed as trusted resource URL by Angular's DomSanitizer: \"${url}\".`);\n            }\n\n            const sanitizedUrl = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n            if (!sanitizedUrl) {\n                throw new Error(`The URL provided was not trusted as a resource URL: \"${url}\".`);\n            }\n\n            this.fetchSvg(iconName, url, fontSet);\n        } else {\n            throw new Error('You should provide at least `iconName` and `url` to register an svg icon.');\n        }\n    }\n\n    /**\n     *  Adds an SVG image to the cache. SVG source is its text.\n     * ```typescript\n     *   this.iconService.addSvgIcon('simple', '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 200 200\">\n     *   <path d=\"M74 74h54v54H74\" /></svg>', 'svg-flags');\n     * ```\n     */\n    public addSvgIconFromText(iconName: string, iconText: string, fontSet: string = '') {\n        if (iconName && iconText) {\n            this.cacheSvgIcon(iconName, iconText, fontSet);\n        } else {\n            throw new Error('You should provide at least `iconName` and `iconText` to register an svg icon.');\n        }\n    }\n\n    /**\n     *  Returns whether a given SVG image is present in the cache.\n     * ```typescript\n     *   const isSvgCached = this.iconService.isSvgIconCached('aruba', 'svg-flags');\n     * ```\n     */\n    public isSvgIconCached(iconName: string, fontSet: string = ''): boolean {\n        const iconKey = this.getSvgIconKey(iconName, fontSet);\n        return this._cachedSvgIcons.has(iconKey);\n    }\n\n    /**\n     *  Returns the key of a cached SVG image.\n     * ```typescript\n     *   const svgIconKey = this.iconService.getSvgIconKey('aruba', 'svg-flags');\n     * ```\n     */\n    public getSvgIconKey(iconName: string, fontSet: string = '') {\n        return fontSet + '_' + iconName;\n    }\n\n    /**\n     * @hidden\n     */\n    private fetchSvg(iconName: string, url: string, fontSet: string = '') {\n        const instance = this;\n        const httpRequest = new XMLHttpRequest();\n        httpRequest.open('GET', url, true);\n        httpRequest.responseType = 'text';\n\n        // load – when the result is ready, that includes HTTP errors like 404.\n        httpRequest.onload = function (event: ProgressEvent) {\n            if (event) {\n                const request = event.target as XMLHttpRequest;\n                if (request.status === 200) {\n                    instance.cacheSvgIcon(iconName, request.responseText, fontSet);\n                    instance._iconLoaded.next({ name: iconName, value: request.responseText, fontSet });\n                } else {\n                    throw new Error(`Could not fetch SVG from url: ${url}; error: ${request.status} (${request.statusText})`);\n                }\n            } else {\n                throw new Error(`Could not fetch SVG from url: ${url};`);\n            }\n        };\n\n        // error – when the request couldn’t be made, e.g.network down or invalid URL.\n        httpRequest.onerror = function (event: ProgressEvent) {\n            if (event) {\n                const request = event.target as XMLHttpRequest;\n                throw new Error(`Could not fetch SVG from url: ${url}; error status code: ${request.status} (${request.statusText})`);\n            }\n            throw new Error(`Could not fetch SVG from url: ${url};`);\n        };\n\n        httpRequest.send();\n    }\n\n    /**\n     * @hidden\n     */\n    private cacheSvgIcon(iconName: string, value: string, fontSet: string = '') {\n        if (iconName && value) {\n            this.ensureSvgContainerCreated();\n\n            const div = this._document.createElement('DIV');\n            div.innerHTML = value;\n            const svg = div.querySelector('svg') as SVGElement;\n\n            if (svg) {\n                const iconKey = this.getSvgIconKey(iconName, fontSet);\n\n                svg.setAttribute('id', iconKey);\n                svg.setAttribute('fit', '');\n                svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n                svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n\n                if (this._cachedSvgIcons.has(iconKey)) {\n                    const oldChild = this._svgContainer.querySelector(`svg[id='${iconKey}']`);\n                    this._svgContainer.removeChild(oldChild);\n                }\n\n                this._svgContainer.appendChild(svg);\n                this._cachedSvgIcons.add(iconKey);\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    private ensureSvgContainerCreated() {\n        if (!this._svgContainer) {\n            this._svgContainer = this._document.documentElement.querySelector('.igx-svg-container');\n            if (!this._svgContainer) {\n                this._svgContainer = this._document.createElement('DIV');\n                this._svgContainer.classList.add('igx-svg-container');\n                this._document.documentElement.appendChild(this._svgContainer);\n            }\n        }\n    }\n}\n","/* tslint:disable */\nexport default [\n    {\n        name: 'add_filter',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 15v-3h-2v3h-3v2h3v3h2v-3h3v-2h-3zM5 10h10v2H5zM2 5h16v2H2zM8 15h4v2H8z\"/>\n      </svg>`\n    },\n    {\n        name: 'contains',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" id=\"Layer_1\" data-name=\"Layer 1\" viewBox=\"0 0 24 24\">\n        <path d=\"M3 3v18h18V3zm16 16H5V5h14z\"/>\n        <path d=\"M12 11.3a4.39 4.39 0 0 0-2.54.63 2.07 2.07 0 0 0-.9 1.78 2.29 2.29 0 0 0 .66 1.74 2.63 2.63 0 0 0 1.89.63 2.39 2.39 0 0 0 1.32-.37 3.05 3.05 0 0 0 1-.93 3.72 3.72 0 0 0 .08.57c0 .19.1.38.16.58h1.79a4.51 4.51 0 0 1-.21-.88 5.57 5.57 0 0 1-.07-.93v-3.5a2.44 2.44 0 0 0-.84-2 3.34 3.34 0 0 0-2.22-.7 3.54 3.54 0 0 0-2.3.72A1.93 1.93 0 0 0 9 10.29h1.71a.93.93 0 0 1 .29-.71 1.5 1.5 0 0 1 1-.29 1.45 1.45 0 0 1 1 .35 1.3 1.3 0 0 1 .37 1v.69zm1.4 1.08v1.17a1.61 1.61 0 0 1-.71.77 2.27 2.27 0 0 1-1.21.34 1.18 1.18 0 0 1-.84-.27.92.92 0 0 1-.3-.72 1.16 1.16 0 0 1 .44-.9 1.76 1.76 0 0 1 1.22-.39z\"/>\n      </svg>`\n    },\n    {\n        name: 'does_not_contain',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M21,19.74V3H4.26L2.89,1.63,1.63,2.92,3,4.29V21H19.73l1.37,1.37,1.27-1.26ZM5,19V6.28l5.28,5.27a3.19,3.19,0,0,0-.81.38,2.07,2.07,0,0,0-.9,1.78,2.29,2.29,0,0,0,.66,1.74,2.63,2.63,0,0,0,1.89.63,2.39,2.39,0,0,0,1.32-.37,3.05,3.05,0,0,0,1-.93,3.72,3.72,0,0,0,.08.57c0,.19.1.38.16.58h1L17.73,19Zm5.79-6.23a1.31,1.31,0,0,1,.45-.25l1.37,1.36.28.29a1.57,1.57,0,0,1-.19.15,2.27,2.27,0,0,1-1.21.34,1.18,1.18,0,0,1-.84-.27.92.92,0,0,1-.3-.72A1.16,1.16,0,0,1,10.79,12.77Zm2.6-1.47h-.83L10.94,9.68l.08-.1a1.5,1.5,0,0,1,1-.29,1.45,1.45,0,0,1,1,.35,1.3,1.3,0,0,1,.37,1ZM19,17.74l-3.85-3.85V10.62a2.44,2.44,0,0,0-.84-2,3.34,3.34,0,0,0-2.22-.7,3.64,3.64,0,0,0-2.24.67L6.26,5H19Z\"/>\n    </svg>`\n    },\n    {\n        name: 'all',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M2 14h8v2H2zM2 6h12v2H2zM16 17l-3-3-1.5 1.5L16 20l7-7-1.5-1.5L16 17zM2 10h12v2H2z\"/>\n      </svg>\n      `\n    },\n    {\n        name: 'empty',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M5 17h2v2H5zM13 17h2v2h-2zM5 13h2v2H5zM17 17h2v2h-2zM13 5h2v2h-2zM9 17h2v2H9zM17 9h2v2h-2zM17 13h2v2h-2zM17 5h2v2h-2zM5 9h2v2H5zM5 5h2v2H5zM9 5h2v2H9z\"/>\n      </svg>`\n    },\n    {\n        name: 'end_expression',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M13.14 6.76L17.49 12l-4.35 5.24 1.54 1.28L20.09 12l-5.41-6.52-1.54 1.28z\"/>\n        <path d=\"M11.91 11h2v2h-2zM7.91 11h2v2h-2zM3.91 11h2v2h-2z\"/>\n      </svg>`\n    },\n    {\n        name: 'ends_with',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M3 14.5h2v2H3zM11 14.5h2v2h-2zM7 14.5h2v2H7zM20.8 14.8v-3A2.1 2.1 0 0 0 20 10a3 3 0 0 0-2-.6 3 3 0 0 0-2 .6 1.7 1.7 0 0 0-.7 1.5h1.5a.8.8 0 0 1 .3-.7 1.3 1.3 0 0 1 .9-.3 1.3 1.3 0 0 1 .9.4 1.1 1.1 0 0 1 .3.8v.6H18a3.8 3.8 0 0 0-2.2.6 1.8 1.8 0 0 0-.8 1.5 2 2 0 0 0 .6 1.6 2.3 2.3 0 0 0 1.6.6 2.1 2.1 0 0 0 1.2-.4 2.8 2.8 0 0 0 .8-.8 4.3 4.3 0 0 0 .1.5l.1.5H21a4.1 4.1 0 0 1-.2-.7 5.4 5.4 0 0 1 0-1zm-1.6-.5a1.5 1.5 0 0 1-.6.7 2 2 0 0 1-1 .2 1.1 1.1 0 0 1-.8-.2.8.8 0 0 1-.2-.6 1 1 0 0 1 .3-.8 1.5 1.5 0 0 1 1.1-.3h1.2z\"/>\n      </svg>`\n    },\n    {\n        name: 'equals',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M5 13.5h14v2H5zM5 8.5h14v2H5z\"/>\n      </svg>`\n    },\n    {\n        name: 'greater_than_or_equal',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M5.99 19h12.02v2H5.99zM18 9.47L6 3v2.11L15.09 10 6 14.9v2.11l12-6.47V9.47z\"/>\n      </svg>`\n    },\n    {\n        name: 'greater_than',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M6 7.11L15.09 12 6 16.89V19l12-6.46v-1.08L6 5v2.11z\"/>\n      </svg>\n      `\n    },\n    {\n        name: 'is_after',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M15 7h4v10h-4v2h6V5h-6v2zM11 3h2v18h-2zM7 5h2v2H7zM3 5h2v2H3zM3 17h2v2H3zM3 13h2v2H3zM3 9h2v2H3zM7 17h2v2H7z\"/>\n      </svg>`\n    },\n    {\n        name: 'is_before',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M3 19h6v-2H5V7h4V5H3v14zM11 3h2v18h-2zM15 5h2v2h-2zM19 5h2v2h-2zM19 13h2v2h-2zM15 17h2v2h-2zM19 17h2v2h-2zM19 9h2v2h-2z\"/>\n      </svg>`\n    },\n    {\n        name: 'is_false',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M8 5a7 7 0 1 0 7 7 7 7 0 0 0-7-7zm4.31 9.79l-1.52 1.52L8 13.52l-2.79 2.79-1.52-1.52L6.48 12 3.69 9.21l1.52-1.52L8 10.48l2.79-2.79 1.52 1.52L9.52 12zM18 7a5 5 0 0 0-3 1.06 7.48 7.48 0 0 1 .49 1 3.89 3.89 0 1 1 0 5.82 8.08 8.08 0 0 1-.49 1A5 5 0 1 0 18 7z\"/>\n        <path d=\"M17.52 13.85l2.91-2.92-.78-.78-2.13 2.12-1.17-1.15-.38.37-.41.41.42.42L17 13.34l.52.51z\"/>\n      </svg>`\n    },\n    {\n        name: 'is_not_null',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M16.58 6.07l.79-1.36-1.74-1-.78 1.35a7.5 7.5 0 0 0-7.43 12.87l-.79 1.36 1.74 1 .78-1.35a7.5 7.5 0 0 0 7.43-12.87zM6.5 12A5.5 5.5 0 0 1 12 6.5a5.65 5.65 0 0 1 1.84.32l-5.41 9.36A5.49 5.49 0 0 1 6.5 12zm5.5 5.5a5.65 5.65 0 0 1-1.84-.32l5.41-9.36A5.5 5.5 0 0 1 12 17.5z\"/>\n      </svg>`\n    },\n    {\n        name: 'is_null',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M12 4.5a7.5 7.5 0 1 0 7.5 7.5A7.5 7.5 0 0 0 12 4.5zm0 13a5.5 5.5 0 1 1 5.5-5.5 5.5 5.5 0 0 1-5.5 5.5z\"/>\n      </svg>`\n    },\n    {\n        name: 'is_true',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M19.44 14.22zM16.56 14.22zM16.56 14.22L18 12.79l1.44 1.43.78-.78L18.79 12l1.43-1.44-.78-.78L18 11.21l-1.44-1.43-.78.78L17.21 12l-1.43 1.44.78.78z\"/>\n        <path d=\"M18 7a5 5 0 0 0-3 1.06 7.48 7.48 0 0 1 .49 1 3.89 3.89 0 1 1 0 5.82 8.08 8.08 0 0 1-.49 1A5 5 0 1 0 18 7zM8 5a7 7 0 1 0 7 7 7 7 0 0 0-7-7zm-.93 10.18l-3.38-3.37 1.13-1.12 2.25 2.25 4.11-4.12 1.13 1.12z\"/>\n      </svg>`\n    },\n    {\n        name: 'last_month',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M17.5 14a4.48 4.48 0 1 0 4.5 4.5 4.47 4.47 0 0 0-4.5-4.5zm3.5 5.5h-4v2l-3-3 3-3v2h4zM5 9h2v2H5zM5 13h2v2H5zM10 13h2v2h-2zM5 17h2v2H5zM10 17h2v2h-2zM10 9h2v2h-2zM15 9h2v2h-2z\"/>\n        <path d=\"M4 8h14v4h2V5a2 2 0 0 0-2-2h-1V1h-2v2H7V1H5v2H4a2 2 0 0 0-2 2v15a2 2 0 0 0 2 2h7v-2H4z\"/>\n      </svg>`\n    },\n    {\n        name: 'last_year',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M21 10v11H7v2h14a2 2 0 0 0 2-2V10z\"/>\n        <path d=\"M19 17V5a2 2 0 0 0-2-2h-1V1h-2v2H6V1H4v2H3a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2zM3 17V7h14v10H3z\"/>\n        <path d=\"M8.87 9l-2.99 3 2.99 3v-2.25h5.26v-1.5H8.87V9z\"/>\n      </svg>`\n    },\n    {\n        name: 'less_than_or_equal',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M5.99 19h12.02v2H5.99zM18 14.9L8.91 10 18 5.11V3L6 9.47v1.07l12 6.47V14.9z\"/>\n      </svg>`\n    },\n    {\n        name: 'less_than',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M6 12.54L18 19v-2.11L8.91 12 18 7.11V5L6 11.46v1.08z\"/>\n      </svg>`\n    },\n    {\n        name: 'next_month',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M20 14.76a4.5 4.5 0 1 0 2 3.74 4.47 4.47 0 0 0-2-3.74zm-2 6.74v-2h-4v-2h4v-2l3 3zM5 9h2v2H5zM5 13h2v2H5zM10 13h2v2h-2zM5 17h2v2H5zM10 17h2v2h-2zM10 9h2v2h-2zM15 9h2v2h-2z\"/>\n        <path d=\"M4 8h14v4h2V5a2 2 0 0 0-2-2h-1V1h-2v2H7V1H5v2H4a2 2 0 0 0-2 2v15a2 2 0 0 0 2 2h7v-2H4z\"/>\n      </svg>`\n    },\n    {\n        name: 'next_year',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M21 21H7v2h14a2 2 0 0 0 2-2V10h-2z\"/>\n        <path d=\"M19 17V5a2 2 0 0 0-2-2h-1V1h-2v2H6V1H4v2H3a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2zM3 17V7h14v10H3z\"/>\n        <path d=\"M11.13 11.25H5.88v1.5h5.25V15l3-3-3-3v2.25z\"/>\n      </svg>`\n    },\n    {\n        name: 'not_empty',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M5 9h2v2H5zM9 17h2v2H9zM13 17h2v2h-2zM17 9h2v2h-2zM17 5h2v2h-2zM5 17h2v2H5zM13 5h2v2h-2zM5 13h2v2H5zM19 15v-2h-2v.47L18.53 15H19zM11 7V5H9v.46L10.54 7H11zM2.76 1.76L1.5 3.06 20.97 22.5l1.26-1.26-8.89-8.89L2.76 1.76z\"/>\n      </svg>`\n    },\n    {\n        name: 'not_equal',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M17.37 4.71l-1.74-1-2.76 4.79H5v2h6.71l-1.73 3H5v2h3.82l-2.19 3.79 1.74 1 2.76-4.79H19v-2h-6.71l1.73-3H19v-2h-3.82l2.19-3.79z\"/>\n      </svg>`\n    },\n    {\n        name: 'start_expression',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M18.1 11h2v2h-2zM10.1 11h2v2h-2z\"/>\n        <path d=\"M10.9 6.8L9.3 5.5 4 12l5.4 6.5 1.6-1.3L6.5 12 11 6.8zM14.1 11h2v2h-2z\"/>\n      </svg>`\n    },\n    {\n        name: 'starts_with',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path fill=\"none\" d=\"M4.97 13.23h3.06L6.5 9.12l-1.53 4.11z\"/>\n        <path d=\"M5.89 7.5L2 16.5h1.72l.73-1.8h4.1l.73 1.8H11l-3.89-9zM5 13.23l1.5-4.11L8 13.23zM12 14.5h2v2h-2zM20 14.5h2v2h-2zM16 14.5h2v2h-2z\"/>\n      </svg>`\n    },\n    {\n        name: 'this_month',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M6 9h2v2H6zM6 13h2v2H6zM11 13h2v2h-2zM6 17h2v2H6zM11 17h2v2h-2zM11 9h2v2h-2zM16 9h2v2h-2zM21 14.76a4.5 4.5 0 1 0 2 3.74 4.47 4.47 0 0 0-2-3.74zm-2.94 5.41l-1.75-1.76.69-.71 1.05 1L20 16.83l.71.71z\"/>\n        <path d=\"M5 8h14v4h2V5a2 2 0 0 0-2-2h-1V1h-2v2H8V1H6v2H5a2 2 0 0 0-2 2v15a2 2 0 0 0 2 2h7v-2H5z\"/>\n      </svg>`\n    },\n    {\n        name: 'this_year',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M21 21H7v2h14a2 2 0 0 0 2-2V10h-2z\"/>\n        <path d=\"M19 17V5a2 2 0 0 0-2-2h-1V1h-2v2H6V1H4v2H3a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2zM3 17V7h14v10H3z\"/>\n        <path d=\"M8.85 13.15l-1.77-1.77-.88.89 2.65 2.65 4.95-4.96-.88-.88-4.07 4.07z\"/>\n      </svg>`\n    },\n    {\n        name: 'today',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 4h-1V2h-2v2H8V2H6v2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2zm0 16H5V9h14z\"/>\n        <path d=\"M16.53 12.06L15.47 11l-4.88 4.88-2.12-2.12-1.06 1.06L10.59 18l5.94-5.94z\"/>\n      </svg>`\n    },\n    {\n        name: 'ungroup',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M15 15h5v5h-5zM6 13h5v5H6zM13 6h5v5h-5zM6 6h5v5H6z\"/>\n        <path d=\"M20 2H4a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h9v-2H4V4h16v9h2V4a2 2 0 0 0-2-2z\"/>\n      </svg>`\n    },\n    {\n        name: 'yesterday',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M10.68 15.38h6.13v-1.75h-6.13V11l-3.49 3.5 3.49 3.5v-2.62z\"/>\n        <path d=\"M19 4h-1V2h-2v2H8V2H6v2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2zm0 16H5V9h14z\"/>\n      </svg>`\n    },\n    {\n        name: 'pin',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M15.18 2.25l7.07 7.07-2.83-.01-3.54 3.55.01 4.24-3.53-3.54-5.66 5.66H5.28V17.8l5.66-5.66L7.4 8.61l4.24.01 3.55-3.54-.01-2.83z\"/>\n      </svg>`\n    },\n    {\n        name: 'unpin',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path fill=\"none\" d=\"M0 0h24v25H0V0z\"/>\n        <path d=\"M11.84 14.08L6.7 19.22H5.28V17.8l5.14-5.14L2 4.26 3.29 3l18 18L20 22.21zm4-.49l-5-5h.73l3.55-3.54v-2.8l7.07 7.07h-2.77l-3.54 3.54z\" />\n      </svg>`\n    },\n    {\n        name: 'ungroup',\n        value: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n          <path d=\"M18,4.5H6A1.5,1.5,0,0,0,4.5,6V18A1.5,1.5,0,0,0,6,19.5h6.75V18H6V6H18v6.75h1.5V6A1.5,1.5,0,0,0,18,4.5Z\"/>\n          <rect x=\"7.5\" y=\"12.75\" width=\"3.75\" height=\"3.75\"/>\n          <rect x=\"14.25\" y=\"14.25\" width=\"3.75\" height=\"3.75\"/>\n          <rect x=\"7.5\" y=\"7.5\" width=\"3.75\" height=\"3.75\"/>\n          <rect x=\"12.75\" y=\"7.5\" width=\"3.75\" height=\"3.75\"/>\n        </svg>`\n    },\n    {\n        name: 'jump_up',\n        value: `<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M6 8l4 4H7c0 3.31 2.69 6 6 6 1.01 0 1.97-.25 2.8-.7l1.46 1.46A7.93 7.93 0 0113 20c-4.42 0-8-3.58-8-8H2l4-4zm15-5v2H5V3h16z\"/>\n        </svg>`\n    },\n    {\n        name: 'jump_down',\n        value: `<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M21 19v2H5v-2h16zM13 4c1.57 0 3.03.46 4.26 1.24L15.8 6.7A5.87 5.87 0 0013 6c-3.31 0-6 2.69-6 6h3l-4 4-4-4h3c0-4.42 3.58-8 8-8z\"/>\n        </svg>`\n    }\n];\n","import {\n    ChangeDetectorRef,\n    Component,\n    HostBinding,\n    Input,\n    Optional,\n    ViewChild,\n    Inject,\n    TemplateRef,\n    AfterViewInit\n} from '@angular/core';\n\nimport { IDisplayDensityOptions, DisplayDensityToken, DisplayDensityBase } from '../../core/displayDensity';\nimport {\n    CsvFileTypes,\n    IgxBaseExporter,\n    IgxCsvExporterOptions,\n    IgxCsvExporterService,\n    IgxExcelExporterOptions,\n    IgxExcelExporterService,\n    AbsoluteScrollStrategy\n} from '../../services/public_api';\nimport { GridBaseAPIService } from '../api.service';\nimport { IgxButtonDirective } from '../../directives/button/button.directive';\nimport { IgxGridBaseDirective } from '../grid-base.directive';\nimport { IgxDropDownComponent } from '../../drop-down/drop-down.component';\nimport { IgxColumnHidingComponent } from '../hiding/column-hiding.component';\nimport { IgxColumnPinningComponent } from '../pinning/column-pinning.component';\nimport { OverlaySettings, PositionSettings, HorizontalAlignment, VerticalAlignment } from '../../services/overlay/utilities';\nimport { ConnectedPositioningStrategy } from '../../services/overlay/position';\nimport { GridType } from '../common/grid.interface';\nimport { IgxIconService } from '../../icon/icon.service';\nimport icons from './../filtering/svgIcons';\n\nconst FILTERING_ICONS_FONT_SET = 'filtering-icons';\n\n/**\n * This class encapsulates the Toolbar's logic and is internally used by\n * the `IgxGridComponent`, `IgxTreeGridComponent` and `IgxHierarchicalGridComponent`.\n */\n@Component({\n    selector: 'igx-grid-toolbar',\n    templateUrl: './grid-toolbar.component.html'\n})\nexport class IgxGridToolbarComponent extends DisplayDensityBase implements AfterViewInit {\n    /**\n     * @hidden\n     */\n    @HostBinding('class.igx-grid-toolbar')\n    @Input()\n    public gridID: string;\n\n    /**\n     * Gets the default text shown in the filtering box.\n     * ```typescript\n     * const filterPrompt = this.grid.toolbar.filterColumnsPrompt;\n     * ```\n     */\n    @Input()\n    public get filterColumnsPrompt() {\n        return this._filterColumnsPrompt;\n    }\n\n    /**\n     * Sets the default text shown in the filtering box.\n     * ```typescript\n     * this.grid.toolbar.filterColumnsPrompt('Filter columns ...');\n     * ```\n     */\n    public set filterColumnsPrompt(value: string) {\n        this._filterColumnsPrompt = value;\n    }\n\n    private _filterColumnsPrompt = 'Filter columns list ...';\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @Input()\n    public class = '';\n\n    /**\n     * Gets the height for the `IgxGridToolbarComponent`'s drop down panels.\n     * ```typescript\n     * const dropdownHeight = this.grid.toolbar.defaultDropDownsMaxHeight;\n     * ```\n     */\n    @Input()\n    get defaultDropDownsMaxHeight() {\n        const gridHeight = this.grid.totalHeight;\n        return (gridHeight) ? gridHeight * 0.7 + 'px' : '100%';\n    }\n\n    /**\n     * Provides a reference to the `IgxDropDownComponent` of the Column Hiding UI.\n     * ```typescript\n     * const dropdownHiding = this.grid.toolbar.columnHidingDropdown;\n     * ```\n     */\n    @ViewChild('columnHidingDropdown', { read: IgxDropDownComponent })\n    public columnHidingDropdown: IgxDropDownComponent;\n\n    /**\n     * Provides a reference to the `IgxColumnHidingComponent`.\n     * ```typescript\n     * const hidingUI = this.grid.toolbar.columnHidingUI;\n     * ```\n     */\n    @ViewChild(IgxColumnHidingComponent)\n    public columnHidingUI: IgxColumnHidingComponent;\n\n    /**\n     * Provides a reference to the Column Hiding button.\n     * ```typescript\n     * const hidingButton = this.grid.toolbar.columnHidingButton;\n     * ```\n     */\n    @ViewChild('columnHidingButton', { read: IgxButtonDirective })\n    public columnHidingButton: IgxButtonDirective;\n\n    /**\n     * Provides a reference to the `IgxDropDownComponent` of the Export button.\n     * ```typescript\n     * const exportDropdown = this.grid.toolbar.exportDropdown;\n     * ```\n     */\n    @ViewChild('exportDropdown', { read: IgxDropDownComponent })\n    public exportDropdown: IgxDropDownComponent;\n\n    /**\n     * Provides a reference to the Export button.\n     * ```typescript\n     * const exportBtn = this.grid.toolbar.exportButton;\n     * ```\n     */\n    @ViewChild('btnExport', { read: IgxButtonDirective })\n    public exportButton: IgxButtonDirective;\n\n    /**\n     * Provides a reference to the `IgxDropDownComponent` of the Column Pinning UI.\n     * ```typescript\n     * const dropdownPinning = this.grid.toolbar.columnPinningDropdown;\n     * ```\n     */\n    @ViewChild('columnPinningDropdown', { read: IgxDropDownComponent })\n    public columnPinningDropdown: IgxDropDownComponent;\n\n    /**\n     * Provides a reference to the `IgxColumnPinningComponent`.\n     * ```typescript\n     * const pinningUI = this.grid.toolbar.columnPinningDropdown;\n     * ```\n     */\n    @ViewChild(IgxColumnPinningComponent)\n    public columnPinningUI: IgxColumnPinningComponent;\n\n    /**\n     * Provides a reference to the Column Pinning button.\n     * ```typescript\n     * const pinningButton = this.grid.toolbar.columnPinningButton;\n     * ```\n     */\n    @ViewChild('columnPinningButton', { read: IgxButtonDirective })\n    public columnPinningButton: IgxButtonDirective;\n\n    /**\n     * Returns a reference to the `IgxGridComponent` component, hosting the `IgxGridToolbarComponent`.\n     * ```typescript\n     * const grid = this.igxGrid1.toolbar.grid;\n     * ```\n     */\n    public get grid(): IgxGridBaseDirective {\n        return this.gridAPI.grid;\n    }\n\n    /**\n     * Returns whether the `IgxGridComponent` renders an export button.\n     * ```typescript\n     * const exportButton = this.igxGrid1.toolbar.shouldShowExportButton;\n     * ```\n     */\n    public get shouldShowExportButton(): boolean {\n        return (this.grid != null && (this.grid.exportExcel || this.grid.exportCsv));\n    }\n\n    /**\n     * Returns whether the `IgxGridComponent` renders an Excel export button.\n     * ```typescript\n     * const exportExcelButton = this.igxGrid1.toolbar.shouldShowExportExcelButton;\n     * ```\n     */\n    public get shouldShowExportExcelButton(): boolean {\n        return (this.grid != null && this.grid.exportExcel);\n    }\n\n    /**\n     * Returns whether the `IgxGridComponent` renders an CSV export button.\n     * ```typescript\n     * const exportCSVButton = this.igxGrid1.toolbar.shouldShowExportCsvButton;\n     * ```\n     */\n    public get shouldShowExportCsvButton(): boolean {\n        return (this.grid != null && this.grid.exportCsv);\n    }\n\n    /**\n     * Returns how many columns are pinned.\n     * ```typescript\n     * const pinnedCount = this.igxGrid1.toolbar.pinnedColumnsCount;\n     * ```\n     */\n    public get pinnedColumnsCount() {\n        return this.grid.pinnedColumns.filter(col => !col.columnLayout).length;\n    }\n\n    /**\n     * Returns the theme of the `IgxGridToolbarComponent`.\n     * ```typescript\n     * const toolbarTheme = this.grid.toolbar.hostClass;\n     * ```\n     */\n\n    @HostBinding('attr.class')\n    get hostClass(): string {\n        const classes = [this.getComponentDensityClass('igx-grid-toolbar')];\n        // The custom classes should be at the end.\n        classes.push(this.class);\n        return classes.join(' ');\n        return this.getComponentDensityClass('igx-grid-toolbar');\n    }\n\n    constructor(public gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>,\n        public cdr: ChangeDetectorRef,\n        @Optional() public excelExporter: IgxExcelExporterService,\n        @Optional() public csvExporter: IgxCsvExporterService,\n        @Optional() @Inject(DisplayDensityToken) protected _displayDensityOptions: IDisplayDensityOptions,\n        private iconService: IgxIconService) {\n            super(_displayDensityOptions);\n    }\n\n    private _positionSettings: PositionSettings = {\n        horizontalDirection: HorizontalAlignment.Left,\n        horizontalStartPoint: HorizontalAlignment.Right,\n        verticalDirection: VerticalAlignment.Bottom,\n        verticalStartPoint: VerticalAlignment.Bottom\n    };\n\n    private _overlaySettings: OverlaySettings = {\n        positionStrategy: new ConnectedPositioningStrategy(this._positionSettings),\n        scrollStrategy: new AbsoluteScrollStrategy(),\n        modal: false,\n        closeOnOutsideClick: true,\n        excludePositionTarget: true\n    };\n\n    /**\n     * Returns the title of `IgxGridToolbarComponent`.\n     * ```typescript\n     * const toolbarTitle = this.igxGrid1.toolbar.getTitle();\n     * ```\n     */\n    public getTitle(): string {\n        return this.grid != null ? this.grid.toolbarTitle : '';\n    }\n\n    /**\n     * Returns the text of the export button of the `IgxGridToolbarComponent`.\n     * ```typescript\n     * const toolbarExportText = this.igxGrid1.toolbar.getTitle();\n     * ```\n     */\n    public getExportText(): string {\n        return this.grid != null ? this.grid.exportText : '';\n    }\n\n    /**\n     * Returns the text of the Excel export button of the `IgxGridToolbarComponent`.\n     * ```typescript\n     * const toolbarExcelText = this.igxGrid1.toolbar.getExportExcelText();\n     * ```\n     */\n    public getExportExcelText(): string {\n        return this.grid != null ? this.grid.exportExcelText : '';\n    }\n\n    /**\n     * Returns the text of the CSV export button of the `IgxGridToolbarComponent`.\n     * ```typescript\n     * const toolbarCSVText = this.igxGrid1.toolbar.getExportCsvText();\n     * ```\n     */\n    public getExportCsvText(): string {\n        return this.grid != null ? this.grid.exportCsvText : '';\n    }\n\n    /**\n     * Toggles the export button's dropdown menu.\n     * ```typescript\n     * this.igxGrid1.toolbar.exportClicked();\n     * ```\n     */\n    public exportClicked() {\n        this._overlaySettings.positionStrategy.settings.target = this.exportButton.nativeElement;\n        this._overlaySettings.outlet = this.grid.outletDirective;\n        this.exportDropdown.toggle(this._overlaySettings);\n    }\n\n    /**\n     * Exports the grid to excel.\n     * ```typescript\n     * this.igxGrid1.toolbar.exportToExcelClicked();\n     * ```\n     */\n    public exportToExcelClicked() {\n        this.performExport(this.excelExporter, 'excel');\n    }\n\n    /**\n     * Exports the grid to CSV.\n     * ```typescript\n     * this.igxGrid1.toolbar.exportToCsvClicked();\n     * ```\n     */\n    public exportToCsvClicked() {\n        this.performExport(this.csvExporter, 'csv');\n    }\n\n    private performExport(exp: IgxBaseExporter, exportType: string) {\n        this.exportClicked();\n\n        const fileName = 'ExportedData';\n        const options = exportType === 'excel' ?\n            new IgxExcelExporterOptions(fileName) :\n            new IgxCsvExporterOptions(fileName, CsvFileTypes.CSV);\n\n        const args = { grid: this.grid, exporter: exp, options: options, cancel: false };\n\n        this.grid.onToolbarExporting.emit(args);\n        if (args.cancel) {\n            return;\n        }\n        exp.export(this.grid, options);\n    }\n\n    /**\n     * Toggles the Column Hiding UI.\n     * ```typescript\n     * this.grid1.toolbar.toggleColumnHidingUI();\n     * ```\n     */\n    public toggleColumnHidingUI() {\n        this._overlaySettings.positionStrategy.settings.target = this.columnHidingButton.nativeElement;\n        this._overlaySettings.outlet = this.grid.outletDirective;\n        this.columnHidingDropdown.toggle(this._overlaySettings);\n    }\n\n    /**\n     * Toggles the Column Pinning UI.\n     * ```typescript\n     * this.grid1.toolbar.toggleColumnPinningUI();\n     * ```\n     */\n    public toggleColumnPinningUI() {\n        this._overlaySettings.positionStrategy.settings.target = this.columnPinningButton.nativeElement;\n        this._overlaySettings.outlet = this.grid.outletDirective;\n        this.columnPinningDropdown.toggle(this._overlaySettings);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public showAdvancedFilteringUI() {\n        this.grid.openAdvancedFilteringDialog();\n    }\n\n    /**\n     * Returns the `context` object which represents the `template context` binding into the\n     * `toolbar custom container` by providing references to the parent IgxGird and the toolbar itself.\n     * ```typescript\n     * const context =  this.igxGrid.toolbar.context;\n     * ```\n     */\n    public get context(): any {\n        return {\n            // $implicit: this\n            grid: this.grid,\n            toolbar: this\n        };\n    }\n\n    /** @hidden */\n    public get customContentTemplate(): TemplateRef<any> {\n        if (this.grid != null && this.grid.toolbarCustomContentTemplate != null) {\n            return this.grid.toolbarCustomContentTemplate.template;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    ngAfterViewInit() {\n        const pinnedIcons = icons.filter(icon => icon.name === 'pin' || icon.name === 'unpin');\n        for (const icon of pinnedIcons) {\n            if (!this.iconService.isSvgIconCached(icon.name, FILTERING_ICONS_FONT_SET)) {\n                this.iconService.addSvgIconFromText(icon.name, icon.value, FILTERING_ICONS_FONT_SET);\n            }\n        }\n    }\n}\n","import { Directive, ElementRef, HostListener } from '@angular/core';\nimport { GridBaseAPIService } from './api.service';\nimport { GridType } from './common/grid.interface';\n\n/** @hidden */\n@Directive({\n    selector: '[igxRowEdit]'\n})\nexport class IgxRowEditTemplateDirective { }\n\n/** @hidden */\n@Directive({\n    selector: '[igxRowEditText]'\n})\nexport class IgxRowEditTextDirective { }\n\n/** @hidden */\n@Directive({\n    selector: '[igxRowEditActions]'\n})\nexport class IgxRowEditActionsDirective { }\n\n\n// TODO: Refactor circular ref, deps and logic\n/** @hidden */\n@Directive({\n    selector: `[igxRowEditTabStop]`\n})\nexport class IgxRowEditTabStopDirective {\n    private currentCellIndex: number;\n\n\n    constructor(public api: GridBaseAPIService<any>, public element: ElementRef) {}\n\n    get grid() {\n        return this.api.grid;\n    }\n\n    @HostListener('keydown.Tab', [`$event`])\n    @HostListener('keydown.Shift.Tab', [`$event`])\n    public handleTab(event: KeyboardEvent): void {\n        event.stopPropagation();\n        if ((this.grid.rowEditTabs.last === this && !event.shiftKey) ||\n            (this.grid.rowEditTabs.first === this && event.shiftKey)\n        ) {\n            this.move(event);\n        }\n    }\n\n    @HostListener('keydown.Escape', [`$event`])\n    public handleEscape(event: KeyboardEvent): void {\n        this.grid.endEdit(false, event);\n        this.grid.tbody.nativeElement.focus();\n    }\n\n    /**\n     * Moves focus to first/last editable cell in the editable row and put the cell in edit mode.\n     * If cell is out of view first scrolls to the cell\n     * @param event keyboard event containing information about whether SHIFT key was pressed\n     */\n    private move(event: KeyboardEvent) {\n        event.preventDefault();\n        this.currentCellIndex = event.shiftKey ? this.grid.lastEditableColumnIndex : this.grid.firstEditableColumnIndex;\n        this.grid.navigation.activeNode.row = this.grid.rowInEditMode.index;\n        this.grid.navigation.activeNode.column = this.currentCellIndex;\n        this.grid.navigateTo(this.grid.rowInEditMode.index, this.currentCellIndex, (obj) => {\n            obj.target.activate(event);\n            this.grid.cdr.detectChanges();\n        });\n    }\n}\n","import { Directive, TemplateRef, EventEmitter, QueryList, Optional, Inject } from '@angular/core';\nimport { DisplayDensityBase, IDisplayDensityOptions, DisplayDensityToken } from '../core/density';\n\nexport interface IListChild {\n    index: number;\n}\n\n/** @hidden */\n@Directive({\n    selector: '[igxListBase]'\n})\nexport class IgxListBaseDirective extends DisplayDensityBase {\n    onItemClicked: EventEmitter<any>;\n    allowLeftPanning: boolean;\n    allowRightPanning: boolean;\n    panEndTriggeringThreshold: number;\n    onLeftPan: EventEmitter<any>;\n    onRightPan: EventEmitter<any>;\n    onPanStateChange: EventEmitter<any>;\n    children: QueryList<any>;\n    listItemLeftPanningTemplate: IgxListItemLeftPanningTemplateDirective;\n    listItemRightPanningTemplate: IgxListItemRightPanningTemplateDirective;\n\n    constructor(@Optional() @Inject(DisplayDensityToken) protected _displayDensityOptions: IDisplayDensityOptions) {\n        super(_displayDensityOptions);\n    }\n}\n\nexport enum IgxListPanState { NONE, LEFT, RIGHT }\n\n@Directive({\n    selector: '[igxEmptyList]'\n})\nexport class IgxEmptyListTemplateDirective {\n    constructor(public template: TemplateRef<any>) { }\n}\n\n@Directive({\n    selector: '[igxDataLoading]'\n})\nexport class IgxDataLoadingTemplateDirective {\n    constructor(public template: TemplateRef<any>) { }\n}\n\n@Directive({\n    selector: '[igxListItemLeftPanning]'\n})\nexport class IgxListItemLeftPanningTemplateDirective {\n    constructor(public template: TemplateRef<any>) { }\n}\n\n@Directive({\n    selector: '[igxListItemRightPanning]'\n})\nexport class IgxListItemRightPanningTemplateDirective {\n    constructor(public template: TemplateRef<any>) { }\n}\n","\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    HostBinding,\n    HostListener,\n    Input,\n    Renderer2,\n    ViewChild\n} from '@angular/core';\n\nimport {\n    IgxListPanState,\n    IListChild,\n    IgxListBaseDirective\n} from './list.common';\n\nimport { HammerGesturesManager } from '../core/touch';\n\n/**\n * The Ignite UI List Item component is a container intended for row items in the Ignite UI for Angular List component.\n *\n * Example:\n * ```html\n * <igx-list>\n *   <igx-list-item isHeader=\"true\">Contacts</igx-list-item>\n *   <igx-list-item *ngFor=\"let contact of contacts\">\n *     <span class=\"name\">{{ contact.name }}</span>\n *     <span class=\"phone\">{{ contact.phone }}</span>\n *   </igx-list-item>\n * </igx-list>\n * ```\n */\n@Component({\n    providers: [HammerGesturesManager],\n    selector: 'igx-list-item',\n    templateUrl: 'list-item.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class IgxListItemComponent implements IListChild {\n\n    /**\n     * @hidden\n     */\n    private _panState: IgxListPanState = IgxListPanState.NONE;\n\n    /**\n     * @hidden\n     */\n    private panOffset = 0;\n\n    /**\n     * @hidden\n     */\n    private _index: number = null;\n\n    /**\n     * @hidden\n     */\n    private lastPanDir = IgxListPanState.NONE;\n\n    /**\n     * Provides a reference to the template's base element shown when left panning a list item.\n     * ```typescript\n     * const leftPanTmpl = this.listItem.leftPanningTemplateElement;\n     * ```\n     */\n    @ViewChild('leftPanningTmpl')\n    public leftPanningTemplateElement;\n\n    /**\n     * Provides a reference to the template's base element shown when right panning a list item.\n     * ```typescript\n     * const rightPanTmpl = this.listItem.rightPanningTemplateElement;\n     * ```\n     */\n    @ViewChild('rightPanningTmpl')\n    public rightPanningTemplateElement;\n\n    constructor(\n        public list: IgxListBaseDirective,\n        private elementRef: ElementRef,\n        private _renderer: Renderer2) {\n    }\n\n    /**\n     * Sets/gets whether the `list item` is a header.\n     * ```html\n     * <igx-list-item [isHeader] = \"true\">Header</igx-list-item>\n     * ```\n     * ```typescript\n     * let isHeader =  this.listItem.isHeader;\n     * ```\n     * @memberof IgxListItemComponent\n     */\n    @Input()\n    public isHeader: boolean;\n\n    /**\n     * Sets/gets whether the `list item` is hidden.\n     * By default the `hidden` value is `false`.\n     * ```html\n     * <igx-list-item [hidden] = \"true\">Hidden Item</igx-list-item>\n     * ```\n     * ```typescript\n     * let isHidden =  this.listItem.hidden;\n     * ```\n     * @memberof IgxListItemComponent\n     */\n    @Input()\n    public hidden = false;\n\n    /**\n     * Gets the `role` attribute of the `list item`.\n     * ```typescript\n     * let itemRole =  this.listItem.role;\n     * ```\n     * @memberof IgxListItemComponent\n     */\n    @HostBinding('attr.role')\n    public get role() {\n        return this.isHeader ? 'separator' : 'listitem';\n    }\n\n    /**\n     * Sets/gets the `aria-label` attribute of the `list item`.\n     * ```typescript\n     * this.listItem.ariaLabel = \"Item1\";\n     * ```\n     * ```typescript\n     * let itemAriaLabel = this.listItem.ariaLabel;\n     * ```\n     * @memberof IgxListItemComponent\n     */\n    @HostBinding('attr.aria-label')\n    public ariaLabel: string;\n\n    /**\n     * Gets the `touch-action` style of the `list item`.\n     * ```typescript\n     * let touchAction = this.listItem.touchAction;\n     * ```\n     */\n    @HostBinding('style.touch-action')\n    public touchAction = 'pan-y';\n\n    /**\n     * Indicates whether `list item` should have header style.\n     * ```typescript\n     * let headerStyle =  this.listItem.headerStyle;\n     * ```\n     * @memberof IgxListItemComponent\n     */\n    @HostBinding('class.igx-list__header')\n    get headerStyle(): boolean {\n        return this.isHeader;\n    }\n\n    /**\n     * Applies the inner style of the `list item` if the item is not counted as header.\n     * ```typescript\n     * let innerStyle =  this.listItem.innerStyle;\n     * ```\n     * @memberof IgxListItemComponent\n     */\n    @HostBinding('class.igx-list__item-base')\n    get innerStyle(): boolean {\n        return !this.isHeader;\n    }\n\n    /**\n     * Returns string value which describes the display mode of the `list item`.\n     * ```typescript\n     * let isHidden = this.listItem.display;\n     * ```\n     * @memberof IgxListItemComponent\n     */\n    @HostBinding('style.display')\n    get display(): string {\n        return this.hidden ? 'none' : '';\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('click', ['$event'])\n    clicked(evt) {\n        this.list.onItemClicked.emit({ item: this, event: evt, direction: this.lastPanDir });\n        this.lastPanDir = IgxListPanState.NONE;\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('panstart', ['$event'])\n    panStart(ev) {\n        if (this.isTrue(this.isHeader)) {\n            return;\n        }\n        if (!this.isTrue(this.list.allowLeftPanning) && !this.isTrue(this.list.allowRightPanning)) {\n            return;\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('panmove', ['$event'])\n    panMove(ev) {\n        if (this.isTrue(this.isHeader)) {\n            return;\n        }\n        if (!this.isTrue(this.list.allowLeftPanning) && !this.isTrue(this.list.allowRightPanning)) {\n            return;\n        }\n        const isPanningToLeft = ev.deltaX < 0;\n        if (isPanningToLeft && this.isTrue(this.list.allowLeftPanning)) {\n            this.showLeftPanTemplate();\n            this.setContentElementLeft(Math.max(this.maxLeft, ev.deltaX));\n        } else if (!isPanningToLeft && this.isTrue(this.list.allowRightPanning)) {\n            this.showRightPanTemplate();\n            this.setContentElementLeft(Math.min(this.maxRight, ev.deltaX));\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('panend', ['$event'])\n    panEnd(ev) {\n        if (this.isTrue(this.isHeader)) {\n            return;\n        }\n        if (!this.isTrue(this.list.allowLeftPanning) && !this.isTrue(this.list.allowRightPanning)) {\n            return;\n        }\n\n        // the translation offset of the current list item content\n        const relativeOffset = this.panOffset;\n        const widthTriggeringGrip = this.width * this.list.panEndTriggeringThreshold;\n\n        if (relativeOffset === 0) {\n            return; // no panning has occured\n        }\n\n        const dir = relativeOffset > 0 ? IgxListPanState.RIGHT : IgxListPanState.LEFT;\n        this.lastPanDir = dir;\n\n        const oldPanState = this._panState;\n        if (Math.abs(relativeOffset) < widthTriggeringGrip) {\n            this.setContentElementLeft(0);\n            this._panState = IgxListPanState.NONE;\n            this.hideLeftAndRightPanTemplates();\n            return;\n        }\n\n        const args = { item: this, direction: dir, keepItem: false};\n\n        if (dir === IgxListPanState.LEFT) {\n            this.list.onLeftPan.emit(args);\n        } else {\n            this.list.onRightPan.emit(args);\n        }\n\n        if (args.keepItem === true) {\n            this.setContentElementLeft(0);\n            this._panState = IgxListPanState.NONE;\n        } else {\n            if (dir === IgxListPanState.LEFT) {\n                this.setContentElementLeft(this.maxLeft);\n                this._panState = IgxListPanState.LEFT;\n            } else {\n                this.setContentElementLeft(this.maxRight);\n                this._panState = IgxListPanState.RIGHT;\n            }\n        }\n\n        if (oldPanState !== this._panState) {\n            const args2 = { oldState: oldPanState, newState: this._panState, item: this };\n            this.list.onPanStateChange.emit(args2);\n        }\n        this.hideLeftAndRightPanTemplates();\n    }\n\n    /**\n     * @hidden\n     */\n    private showLeftPanTemplate() {\n        this.setLeftAndRightTemplatesVisibility('visible', 'hidden');\n    }\n\n    /**\n     * @hidden\n     */\n    private showRightPanTemplate() {\n        this.setLeftAndRightTemplatesVisibility('hidden', 'visible');\n    }\n\n    /**\n     * @hidden\n     */\n    private hideLeftAndRightPanTemplates() {\n        setTimeout(() => {\n            this.setLeftAndRightTemplatesVisibility('hidden', 'hidden');\n        }, 500);\n    }\n\n    /**\n     * @hidden\n     */\n    private setLeftAndRightTemplatesVisibility(leftVisibility, rightVisibility) {\n        if (this.leftPanningTemplateElement && this.leftPanningTemplateElement.nativeElement) {\n            this.leftPanningTemplateElement.nativeElement.style.visibility = leftVisibility;\n        }\n        if (this.rightPanningTemplateElement && this.rightPanningTemplateElement.nativeElement) {\n            this.rightPanningTemplateElement.nativeElement.style.visibility = rightVisibility;\n        }\n    }\n\n    /**\n     * Gets the `panState` of a `list item`.\n     * ```typescript\n     * let itemPanState =  this.listItem.panState;\n     * ```\n     * @memberof IgxListItemComponent\n     */\n    public get panState(): IgxListPanState {\n        return this._panState;\n    }\n\n    /**\n     * Gets the `index` of a `list item`.\n     * ```typescript\n     * let itemIndex =  this.listItem.index;\n     * ```\n     * @memberof IgxListItemComponent\n     */\n    @Input()\n    public get index(): number {\n        return this._index !== null ? this._index : this.list.children.toArray().indexOf(this);\n    }\n\n    /**\n     * Sets the `index` of the `list item`.\n     * ```typescript\n     * this.listItem.index = index;\n     * ```\n     * @memberof IgxListItemComponent\n     */\n    public set index(value: number) {\n        this._index = value;\n    }\n\n    /**\n     * Returns an element reference to the list item.\n     * ```typescript\n     * let listItemElement =  this.listItem.element.\n     * ```\n     * @memberof IgxListItemComponent\n     */\n    public get element() {\n        return this.elementRef.nativeElement;\n    }\n\n    /**\n     * Returns a reference container which contains the list item's content.\n     * ```typescript\n     * let listItemContainer =  this.listItem.contentElement.\n     * ```\n     * @memberof IgxListItemComponent\n     */\n    public get contentElement() {\n        const candidates = this.element.getElementsByClassName('igx-list__item-content');\n        return (candidates && candidates.length > 0) ? candidates[0] : null;\n    }\n\n    /**\n     * Returns the `context` object which represents the `template context` binding into the `list item container`\n     * by providing the `$implicit` declaration which is the `IgxListItemComponent` itself.\n     * ```typescript\n     * let listItemComponent = this.listItem.context;\n     * ```\n     */\n    public get context(): any {\n        return {\n            $implicit: this\n        };\n    }\n\n    /**\n     * Gets the width of a `list item`.\n     * ```typescript\n     * let itemWidth = this.listItem.width;\n     * ```\n     * @memberof IgxListItemComponent\n     */\n    public get width() {\n        if (this.element) {\n            return this.element.offsetWidth;\n        }\n    }\n\n    /**\n     * Gets the maximum left position of the `list item`.\n     * ```typescript\n     * let maxLeft = this.listItem.maxLeft;\n     * ```\n     * @memberof IgxListItemComponent\n     */\n    public get maxLeft() {\n        return -this.width;\n    }\n\n    /**\n     * Gets the maximum right position of the `list item`.\n     * ```typescript\n     * let maxRight = this.listItem.maxRight;\n     * ```\n     * @memberof IgxListItemComponent\n     */\n    public get maxRight() {\n        return this.width;\n    }\n\n    /**\n     * @hidden\n     */\n    private setContentElementLeft(value: number) {\n        this.panOffset = value;\n        this.contentElement.style.transform = 'translateX(' + value + 'px)';\n    }\n\n    /**\n     * @hidden\n     */\n    private isTrue(value: boolean): boolean {\n        if (typeof (value) === 'boolean') {\n            return value;\n        } else {\n            return value === 'true';\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n    Component,\n    ContentChild,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    HostBinding,\n    Input,\n    NgModule,\n    Output,\n    QueryList,\n    TemplateRef,\n    ViewChild,\n    Optional,\n    Inject, Directive\n} from '@angular/core';\n\nimport { IgxRippleModule } from '../directives/ripple/ripple.directive';\n\nimport { IgxListItemComponent } from './list-item.component';\nimport {\n    IgxListBaseDirective,\n    IgxDataLoadingTemplateDirective,\n    IgxEmptyListTemplateDirective,\n    IgxListPanState,\n    IgxListItemLeftPanningTemplateDirective,\n    IgxListItemRightPanningTemplateDirective\n} from './list.common';\nimport { IDisplayDensityOptions, DisplayDensityToken, DisplayDensity } from '../core/density';\nimport { IBaseEventArgs } from '../core/utils';\n\nlet NEXT_ID = 0;\n\n/**\n * Interface for the panStateChange igxList event arguments\n */\nexport interface IPanStateChangeEventArgs extends IBaseEventArgs {\n    oldState: IgxListPanState;\n    newState: IgxListPanState;\n    item: IgxListItemComponent;\n}\n\n/**\n * Interface for the listItemClick igxList event arguments\n */\nexport interface IListItemClickEventArgs extends IBaseEventArgs {\n    item: IgxListItemComponent;\n    event: Event;\n    direction: IgxListPanState;\n}\n\n/**\n * Interface for the listItemPanning igxList event arguments\n */\nexport interface IListItemPanningEventArgs extends IBaseEventArgs {\n    item: IgxListItemComponent;\n    direction: IgxListPanState;\n    keepItem: boolean;\n}\n\n/**\n * igxListThumbnail is container for the List media\n * Use it to wrap anything you want to be used as a thumbnail.\n */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[igxListThumbnail]'\n})\nexport class IgxListThumbnailDirective {}\n\n/**\n * igxListAction is container for the List action\n * Use it to wrap anything you want to be used as a list action: icon, checkbox...\n */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[igxListAction]'\n})\nexport class IgxListActionDirective {}\n\n/**\n * igxListLine is container for the List text content\n * Use it to wrap anything you want to be used as a plane text.\n */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[igxListLine]'\n})\nexport class IgxListLineDirective {}\n\n/**\n * igxListLineTitle is a directive that add class to the target element\n * Use it to make anything to look like list Title.\n */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[igxListLineTitle]'\n})\nexport class IgxListLineTitleDirective {\n    @HostBinding('class.igx-list__item-line-title')\n    public cssClass = 'igx-list__item-line-title';\n}\n\n/**\n * igxListLineSubTitle is a directive that add class to the target element\n * Use it to make anything to look like list Subtitle.\n */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[igxListLineSubTitle]'\n})\nexport class IgxListLineSubTitleDirective {\n    @HostBinding('class.igx-list__item-line-subtitle')\n    public cssClass = 'igx-list__item-line-subtitle';\n}\n\n/**\n * Displays a collection of data items in a templatable list format\n *\n * @igxModule IgxListModule\n *\n * @igxTheme igx-list-theme\n *\n * @igxKeywords list, data\n *\n * @igxGroup Grids & Lists\n *\n * @remarks\n * The Ignite UI List displays rows of items and supports one or more header items as well as search and filtering\n * of list items. Each list item is completely templatable and will support any valid HTML or Angular component.\n *\n * @example\n * ```html\n * <igx-list>\n *   <igx-list-item isHeader=\"true\">Contacts</igx-list-item>\n *   <igx-list-item *ngFor=\"let contact of contacts\">\n *     <span class=\"name\">{{ contact.name }}</span>\n *     <span class=\"phone\">{{ contact.phone }}</span>\n *   </igx-list-item>\n * </igx-list>\n * ```\n */\n@Component({\n    selector: 'igx-list',\n    templateUrl: 'list.component.html',\n    providers: [{ provide: IgxListBaseDirective, useExisting: IgxListComponent }]\n})\nexport class IgxListComponent extends IgxListBaseDirective {\n\n    constructor(public element: ElementRef,\n        @Optional() @Inject(DisplayDensityToken) protected _displayDensityOptions: IDisplayDensityOptions) {\n        super(_displayDensityOptions);\n    }\n\n    /**\n     * Returns a collection of all items and headers in the list.\n     *\n     * @example\n     * ```typescript\n     * let listChildren: QueryList = this.list.children;\n     * ```\n     */\n    @ContentChildren(forwardRef(() => IgxListItemComponent), { descendants: true })\n    public children: QueryList<IgxListItemComponent>;\n\n    /**\n     * @hidden\n     * @internal\n     */\n    protected get sortedChildren(): IgxListItemComponent[] {\n        if (this.children !== undefined) {\n            return this.children.toArray()\n                .sort((a: IgxListItemComponent, b: IgxListItemComponent) => {\n                    return a.index - b.index;\n                });\n        }\n        return null;\n    }\n\n    /**\n     * Sets/gets the empty list template.\n     *\n     * @remarks\n     * This template is used by IgxList in case there are no list items\n     * defined and `isLoading` is set to `false`.\n     *\n     * @example\n     * ```html\n     * <igx-list>\n     *   <ng-template igxEmptyList>\n     *     <p class=\"empty\">No contacts! :(</p>\n     *   </ng-template>\n     * </igx-list>\n     * ```\n     * ```typescript\n     * let emptyTemplate = this.list.emptyListTemplate;\n     * ```\n     */\n    @ContentChild(IgxEmptyListTemplateDirective, { read: IgxEmptyListTemplateDirective })\n    public emptyListTemplate: IgxEmptyListTemplateDirective;\n\n    /**\n     * Sets/gets the list loading template.\n     *\n     * @remarks\n     * This template is used by IgxList in case there are no list items defined and `isLoading` is set to `true`.\n     *\n     * @example\n     * ```html\n     * <igx-list>\n     *   <ng-template igxDataLoading>\n     *     <p>Patience, we are currently loading your data...</p>\n     *   </ng-template>\n     * </igx-list>\n     * ```\n     * ```typescript\n     * let loadingTemplate = this.list.dataLoadingTemplate;\n     * ```\n     */\n    @ContentChild(IgxDataLoadingTemplateDirective, { read: IgxDataLoadingTemplateDirective })\n    public dataLoadingTemplate: IgxDataLoadingTemplateDirective;\n\n    /**\n     * Sets/gets the template for left panning a list item.\n     *\n     * @remarks\n     * Default value is `null`.\n     *\n     * @example\n     * ```html\n     * <igx-list [allowLeftPanning]=\"true\">\n     *   <ng-template igxListItemLeftPanning>\n     *     <igx-icon>delete</igx-icon>Delete\n     *   </ng-template>\n     * </igx-list>\n     * ```\n     * ```typescript\n     * let itemLeftPanTmpl = this.list.listItemLeftPanningTemplate;\n     * ```\n     */\n    @ContentChild(IgxListItemLeftPanningTemplateDirective, { read: IgxListItemLeftPanningTemplateDirective })\n    public listItemLeftPanningTemplate: IgxListItemLeftPanningTemplateDirective;\n\n    /**\n     * Sets/gets the template for right panning a list item.\n     *\n     * @remarks\n     * Default value is `null`.\n     *\n     * @example\n     * ```html\n     * <igx-list [allowRightPanning] = \"true\">\n     *   <ng-template igxListItemRightPanning>\n     *     <igx-icon>call</igx-icon>Dial\n     *   </ng-template>\n     * </igx-list>\n     * ```\n     * ```typescript\n     * let itemRightPanTmpl = this.list.listItemRightPanningTemplate;\n     * ```\n     */\n    @ContentChild(IgxListItemRightPanningTemplateDirective, { read: IgxListItemRightPanningTemplateDirective })\n    public listItemRightPanningTemplate: IgxListItemRightPanningTemplateDirective;\n\n    /**\n     * Provides a threshold after which the item's panning will be completed automatically.\n     *\n     * @remarks\n     * By default this property is set to 0.5 which is 50% of the list item's width.\n     *\n     * @example\n     * ```html\n     * <igx-list [panEndTriggeringThreshold]=\"0.8\"></igx-list>\n     * ```\n     */\n    @Input()\n    public panEndTriggeringThreshold = 0.5;\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @ViewChild('defaultEmptyList', { read: TemplateRef, static: true })\n    protected defaultEmptyListTemplate: TemplateRef<any>;\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @ViewChild('defaultDataLoading', { read: TemplateRef, static: true })\n    protected defaultDataLoadingTemplate: TemplateRef<any>;\n\n    /**\n     * Sets/gets the `id` of the list.\n     *\n     * @remarks\n     * If not set, the `id` of the first list component will be `\"igx-list-0\"`.\n     *\n     * @example\n     * ```html\n     * <igx-list id=\"my-first-list\"></igx-list>\n     * ```\n     * ```typescript\n     * let listId = this.list.id;\n     * ```\n     */\n    @HostBinding('attr.id')\n    @Input()\n    public id = `igx-list-${NEXT_ID++}`;\n\n    /**\n     * Sets/gets whether the left panning of an item is allowed.\n     *\n     * @remarks\n     * Default value is `false`.\n     *\n     * @example\n     * ```html\n     * <igx-list [allowLeftPanning]=\"true\"></igx-list>\n     * ```\n     * ```typescript\n     * let isLeftPanningAllowed = this.list.allowLeftPanning;\n     * ```\n     */\n    @Input()\n    public allowLeftPanning = false;\n\n    /**\n     * Sets/gets whether the right panning of an item is allowed.\n     *\n     * @remarks\n     * Default value is `false`.\n     *\n     * @example\n     * ```html\n     * <igx-list [allowRightPanning]=\"true\"></igx-list>\n     * ```\n     * ```typescript\n     * let isRightPanningAllowed = this.list.allowRightPanning;\n     * ```\n     */\n    @Input()\n    public allowRightPanning = false;\n\n    /**\n     * Sets/gets whether the list is currently loading data.\n     *\n     * @remarks\n     * Set it to display the dataLoadingTemplate while data is being retrieved.\n     * Default value is `false`.\n     *\n     * @example\n     * ```html\n     *  <igx-list [isLoading]=\"true\"></igx-list>\n     * ```\n     * ```typescript\n     * let isLoading = this.list.isLoading;\n     * ```\n     */\n    @Input()\n    public isLoading = false;\n\n    /**\n     * Event emitted when a left pan gesture is executed on a list item.\n     *\n     * @remarks\n     * Provides a reference to an object of type `IListItemPanningEventArgs` as an event argument.\n     *\n     * @example\n     * ```html\n     * <igx-list [allowLeftPanning]=\"true\" (onLeftPan)=\"onLeftPan($event)\"></igx-list>\n     * ```\n     */\n    @Output()\n    public onLeftPan = new EventEmitter<IListItemPanningEventArgs>();\n\n    /**\n     * Event emitted when a right pan gesture is executed on a list item.\n     *\n     * @remarks\n     * Provides a reference to an object of type `IListItemPanningEventArgs` as an event argument.\n     *\n     * @example\n     * ```html\n     * <igx-list [allowRightPanning]=\"true\" (onRightPan)=\"onRightPan($event)\"></igx-list>\n     * ```\n     */\n    @Output()\n    public onRightPan = new EventEmitter<IListItemPanningEventArgs>();\n\n    /**\n     *\n     * Event emitted when a pan gesture is executed on a list item.\n     *\n     * @remarks\n     * Provides references to the `IgxListItemComponent` and `IgxListPanState` as event arguments.\n     *\n     * @example\n     * ```html\n     * <igx-list (onPanStateChange)=\"onPanStateChange($event)\"></igx-list>\n     * ```\n     */\n    @Output()\n    public onPanStateChange = new EventEmitter<IPanStateChangeEventArgs>();\n\n    /**\n     * Event emitted when a list item is clicked.\n     *\n     * @remarks\n     * Provides references to the `IgxListItemComponent` and `Event` as event arguments.\n     *\n     * @example\n     * ```html\n     * <igx-list (onItemClicked)=\"onItemClicked($event)\"></igx-list>\n     * ```\n     */\n    @Output()\n    public onItemClicked = new EventEmitter<IListItemClickEventArgs>();\n\n    /**\n     * Gets the `role` attribute value.\n     *\n     * @example\n     * ```typescript\n     * let listRole =  this.list.role;\n     * ```\n     */\n    @HostBinding('attr.role')\n    public get role() {\n        return 'list';\n    }\n\n    /**\n     * Gets a boolean indicating if the list is empty.\n     *\n     * @example\n     * ```typescript\n     * let isEmpty =  this.list.isListEmpty;\n     * ```\n     */\n    @HostBinding('class.igx-list-empty')\n    public get isListEmpty(): boolean {\n        return !this.children || this.children.length === 0;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @HostBinding('class.igx-list')\n    public get cssClass(): boolean {\n        return !this.isListEmpty && this.displayDensity === DisplayDensity.comfortable;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @HostBinding('class.igx-list--compact')\n    public get cssClassCompact(): boolean {\n        return !this.isListEmpty && this.displayDensity === DisplayDensity.compact;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @HostBinding('class.igx-list--cosy')\n    public get cssClassCosy(): boolean {\n        return !this.isListEmpty && this.displayDensity === DisplayDensity.cosy;\n    }\n\n    /**\n     * Gets the list `items` excluding the header ones.\n     *\n     * @example\n     * ```typescript\n     * let listItems: IgxListItemComponent[] = this.list.items;\n     * ```\n     */\n    public get items(): IgxListItemComponent[] {\n        const items: IgxListItemComponent[] = [];\n        if (this.children !== undefined) {\n            for (const child of this.sortedChildren) {\n                if (!child.isHeader) {\n                    items.push(child);\n                }\n            }\n        }\n        return items;\n    }\n\n    /**\n     * Gets the header list `items`.\n     *\n     * @example\n     * ```typescript\n     * let listHeaders: IgxListItemComponent[] =  this.list.headers;\n     * ```\n     */\n    public get headers(): IgxListItemComponent[] {\n        const headers: IgxListItemComponent[] = [];\n        if (this.children !== undefined) {\n            for (const child of this.children.toArray()) {\n                if (child.isHeader) {\n                    headers.push(child);\n                }\n            }\n        }\n        return headers;\n    }\n\n    /**\n     * Gets the `context` object of the template binding.\n     *\n     * @remark\n     * Gets the `context` object which represents the `template context` binding into the `list container`\n     * by providing the `$implicit` declaration which is the `IgxListComponent` itself.\n     *\n     * @example\n     * ```typescript\n     * let listComponent =  this.list.context;\n     * ```\n     */\n    public get context(): any {\n        return {\n            $implicit: this\n        };\n    }\n\n    /**\n     * Gets a `TemplateRef` to the currently used template.\n     *\n     * @example\n     * ```typescript\n     * let listTemplate = this.list.template;\n     * ```\n     */\n    public get template(): TemplateRef<any> {\n        if (this.isLoading) {\n            return this.dataLoadingTemplate ? this.dataLoadingTemplate.template : this.defaultDataLoadingTemplate;\n        } else {\n            return this.emptyListTemplate ? this.emptyListTemplate.template : this.defaultEmptyListTemplate;\n        }\n    }\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [\n        IgxListBaseDirective,\n        IgxListComponent,\n        IgxListItemComponent,\n        IgxListThumbnailDirective,\n        IgxListActionDirective,\n        IgxListLineDirective,\n        IgxListLineTitleDirective,\n        IgxListLineSubTitleDirective,\n        IgxDataLoadingTemplateDirective,\n        IgxEmptyListTemplateDirective,\n        IgxListItemLeftPanningTemplateDirective,\n        IgxListItemRightPanningTemplateDirective\n    ],\n    exports: [\n        IgxListComponent,\n        IgxListItemComponent,\n        IgxListThumbnailDirective,\n        IgxListActionDirective,\n        IgxListLineDirective,\n        IgxListLineTitleDirective,\n        IgxListLineSubTitleDirective,\n        IgxDataLoadingTemplateDirective,\n        IgxEmptyListTemplateDirective,\n        IgxListItemLeftPanningTemplateDirective,\n        IgxListItemRightPanningTemplateDirective\n    ],\n    imports: [\n        CommonModule,\n        IgxRippleModule\n    ]\n})\nexport class IgxListModule {\n}\n","import {\n    AfterViewInit,\n    Component,\n    ChangeDetectionStrategy,\n    Input,\n    ViewChild,\n    ChangeDetectorRef,\n    TemplateRef,\n    Directive\n} from '@angular/core';\nimport { IgxColumnComponent } from '../../columns/column.component';\nimport { IChangeCheckboxEventArgs } from '../../../checkbox/checkbox.component';\nimport { IgxInputDirective } from '../../../directives/input/input.directive';\nimport { DisplayDensity } from '../../../core/density';\nimport { IgxForOfDirective } from '../../../directives/for-of/for_of.directive';\nimport { FilterListItem } from './grid.excel-style-filtering.component';\nimport { IgxListComponent } from '../../../list/public_api';\n\n@Directive({\n    selector: '[igxExcelStyleLoading]'\n})\nexport class IgxExcelStyleLoadingValuesTemplateDirective {\n    constructor(public template: TemplateRef<any>) {}\n}\n\n/**\n * @hidden\n */\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false,\n    selector: 'igx-excel-style-search',\n    templateUrl: './excel-style-search.component.html'\n})\nexport class IgxExcelStyleSearchComponent implements AfterViewInit {\n\n    private _isLoading;\n\n    public get isLoading() {\n        return this._isLoading;\n    }\n\n    public set isLoading(value: boolean) {\n        this._isLoading = value;\n        if (!(this.cdr as any).destroyed) {\n            this.cdr.detectChanges();\n        }\n    }\n\n    public searchValue: any;\n\n    @Input()\n    public grid: any;\n\n    @Input()\n    public data: FilterListItem[];\n\n    @Input()\n    public inline: boolean;\n\n    @Input()\n    public column: IgxColumnComponent;\n\n    @ViewChild('input', { read: IgxInputDirective, static: true })\n    public searchInput: IgxInputDirective;\n\n    @ViewChild('list', { read: IgxListComponent, static: true })\n    public list: IgxListComponent;\n\n    @Input()\n    public displayDensity: DisplayDensity;\n\n    @ViewChild(IgxForOfDirective, { static: true })\n    protected virtDir: IgxForOfDirective<any>;\n\n    @ViewChild('defaultExcelStyleLoadingValuesTemplate', { read: TemplateRef, static: true })\n    protected defaultExcelStyleLoadingValuesTemplate: TemplateRef<any>;\n\n    public get valuesLoadingTemplate() {\n        if (this.grid.excelStyleLoadingValuesTemplateDirective) {\n            return this.grid.excelStyleLoadingValuesTemplateDirective.template;\n        } else {\n            return this.defaultExcelStyleLoadingValuesTemplate;\n        }\n    }\n\n    constructor(public cdr: ChangeDetectorRef) { }\n\n    public ngAfterViewInit() {\n        this.refreshSize();\n    }\n\n    public refreshSize() {\n        requestAnimationFrame(() => {\n            this.virtDir.recalcUpdateSizes();\n        });\n    }\n\n    public clearInput() {\n        this.searchValue = null;\n    }\n\n    public onCheckboxChange(eventArgs: IChangeCheckboxEventArgs) {\n        const selectedIndex = this.data.indexOf(eventArgs.checkbox.value);\n        if (selectedIndex === 0) {\n            this.data.forEach(element => {\n                element.isSelected = eventArgs.checked;\n                this.data[0].indeterminate = false;\n            });\n        } else {\n            eventArgs.checkbox.value.isSelected = eventArgs.checked;\n            if (!this.data.slice(1, this.data.length).find(el => el.isSelected === false)) {\n                this.data[0].indeterminate = false;\n                this.data[0].isSelected = true;\n            } else if (!this.data.slice(1, this.data.length).find(el => el.isSelected === true)) {\n                this.data[0].indeterminate = false;\n                this.data[0].isSelected = false;\n            } else {\n                this.data[0].indeterminate = true;\n            }\n        }\n        eventArgs.checkbox.nativeCheckbox.nativeElement.blur();\n    }\n\n    public get itemSize() {\n        let itemSize = '40px';\n        switch (this.displayDensity) {\n            case DisplayDensity.cosy: itemSize = '32px'; break;\n            case DisplayDensity.compact: itemSize = '24px'; break;\n            default: break;\n        }\n        return itemSize;\n    }\n\n    public get containerSize() {\n        return this.list.element.nativeElement.offsetHeight;\n    }\n}\n","import { Pipe, PipeTransform, Inject, LOCALE_ID } from '@angular/core';\nimport { GridBaseAPIService } from '../api.service';\nimport { IgxGridBaseDirective } from '../grid-base.directive';\nimport { DataUtil } from '../../data-operations/data-util';\nimport { cloneArray } from '../../core/utils';\nimport { GridType } from './grid.interface';\nimport { DatePipe, DecimalPipe } from '@angular/common';\n\n/**\n * @hidden\n * @internal\n */\n@Pipe({\n    name: 'igxCellStyleClasses'\n})\nexport class IgxGridCellStyleClassesPipe implements PipeTransform {\n\n    transform(cssClasses: { [prop: string]: any }, value: any, data: any, field: string, index: number): string {\n        if (!cssClasses) {\n            return '';\n        }\n\n        const result = [];\n\n        for (const cssClass of Object.keys(cssClasses)) {\n            const callbackOrValue = cssClasses[cssClass];\n            const apply = typeof callbackOrValue === 'function' ? callbackOrValue(data, field, value, index) : callbackOrValue;\n            if (apply) {\n                result.push(cssClass);\n            }\n        }\n\n        return result.join(' ');\n    }\n}\n\n/**\n * @hidden\n * @internal\n */\n@Pipe({\n    name: 'igxCellStyles'\n})\nexport class IgxGridCellStylesPipe implements PipeTransform {\n\n    transform(styles: { [prop: string]: any }, value: any, data: any, field: string, index: number): { [prop: string]: any } {\n        const css = {};\n        if (!styles) {\n            return css;\n        }\n\n        for (const prop of Object.keys(styles)) {\n            const res = styles[prop];\n            css[prop] = typeof res === 'function' ? res(data, field, value, index) : res;\n        }\n\n        return css;\n    }\n}\n\n/**\n * @hidden\n * @internal\n */\n@Pipe({\n    name: 'igxNotGrouped'\n})\nexport class IgxGridNotGroupedPipe implements PipeTransform {\n\n    transform(value: any[]): any[] {\n        return value.filter(item => !item.columnGroup);\n    }\n}\n\n/**\n * @hidden\n * @internal\n */\n@Pipe({\n    name: 'igxTopLevel'\n})\nexport class IgxGridTopLevelColumns implements PipeTransform {\n\n    transform(value: any[]): any[] {\n        return value.filter(item => item.level === 0);\n    }\n}\n\n/**\n * @hidden\n * @internal\n */\n@Pipe({\n    name: 'filterCondition',\n    pure: true\n})\nexport class IgxGridFilterConditionPipe implements PipeTransform {\n\n    public transform(value: string): string {\n        return value.split(/(?=[A-Z])/).join(' ');\n    }\n}\n\n/**\n * @hidden\n * @internal\n */\n@Pipe({\n    name: 'gridTransaction',\n    pure: true\n})\nexport class IgxGridTransactionPipe implements PipeTransform {\n\n    constructor(private gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>) { }\n\n    transform(collection: any[], id: string, pipeTrigger: number) {\n        const grid: IgxGridBaseDirective = this.gridAPI.grid;\n\n        if ( grid.transactions.enabled) {\n            const result = DataUtil.mergeTransactions(\n                cloneArray(collection),\n                grid.transactions.getAggregatedChanges(true),\n                grid.primaryKey);\n            return result;\n        }\n        return collection;\n    }\n}\n\n/**\n * @hidden\n * @internal\n */\n@Pipe({\n    name: 'paginatorOptions',\n    pure: true,\n})\nexport class IgxGridPaginatorOptionsPipe implements PipeTransform {\n    public transform(values: Array<number>) {\n        return Array.from(new Set([...values])).sort((a, b) => a - b);\n    }\n}\n\n/**\n * @hidden\n * @internal\n */\n@Pipe({\n    name: 'visibleColumns',\n    pure: true\n})\nexport class IgxHasVisibleColumnsPipe implements PipeTransform {\n    transform(values: any[], hasVisibleColumns) {\n        if (!(values && values.length)) {\n            return values;\n        }\n        return hasVisibleColumns ? values : [];\n    }\n\n}\n\n\n/**\n * @hidden\n * @internal\n */\n@Pipe({\n    name: 'igxdate'\n})\nexport class IgxDatePipeComponent extends DatePipe implements PipeTransform {\n\n    private readonly DEFAULT_DATE_FORMAT = 'mediumDate';\n\n    constructor(@Inject(LOCALE_ID) locale: string) {\n        // D.P. constructor duplication due to es6 compilation, might be obsolete in the future\n        super(locale);\n    }\n    transform(value: any, locale: string): string {\n        if (value && value instanceof Date) {\n            if (locale) {\n                return super.transform(value, this.DEFAULT_DATE_FORMAT, undefined, locale);\n            } else {\n                return super.transform(value);\n            }\n        } else {\n            return value;\n        }\n    }\n}\n\n/**\n * @hidden\n * @internal\n */\n@Pipe({\n    name: 'igxdecimal'\n})\nexport class IgxDecimalPipeComponent extends DecimalPipe implements PipeTransform {\n    constructor(@Inject(LOCALE_ID) locale: string) {\n        // D.P. constructor duplication due to es6 compilation, might be obsolete in the future\n        super(locale);\n    }\n    transform(value: any, locale: string): string {\n        if (value && typeof value === 'number') {\n            if (locale) {\n                return super.transform(value, undefined, locale);\n            } else {\n                return super.transform(value);\n            }\n        } else {\n            return value;\n        }\n    }\n}\n\n/**\n * @hidden\n */\n@Pipe({\n    name: 'gridRowPinning',\n    pure: true\n})\nexport class IgxGridRowPinningPipe implements PipeTransform {\n\n    constructor(private gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>) {}\n\n    public transform(collection: any[] , id: string, isPinned = false, pipeTrigger: number) {\n        const grid = this.gridAPI.grid;\n\n        if (grid.hasPinnedRecords && isPinned) {\n            const result = collection.filter(rec => grid.isRecordPinned(rec));\n            result.sort((rec1, rec2) => grid.getInitialPinnedIndex(rec1) - grid.getInitialPinnedIndex(rec2));\n            return result;\n        }\n\n        grid.unpinnedRecords = collection;\n        if (!grid.hasPinnedRecords) {\n            grid.pinnedRecords = [];\n            return isPinned ? [] : collection;\n        }\n\n        return collection.map((rec) => {\n            return grid.isRecordPinned(rec) ? { recordRef: rec, ghostRecord: true} : rec;\n        });\n    }\n}\n","import { AutoPositionStrategy } from '../../../services/overlay/position/auto-position-strategy';\nimport { ConnectedFit } from '../../../services/overlay/utilities';\n\n/** @hidden */\nexport class ExcelStylePositionStrategy extends AutoPositionStrategy {\n    protected shouldFitInViewPort(connectedFit: ConnectedFit) {\n        return true;\n    }\n\n    protected fitInViewport(element: HTMLElement, connectedFit: ConnectedFit) {\n        const heightOverflow = connectedFit.contentElementRect.height - connectedFit.viewPortRect.height;\n        if (heightOverflow > 0) {\n            element.style.width = 'auto';\n            element.style.height = `${connectedFit.viewPortRect.height}px`;\n        } else {\n            element.style.height = `${Math.max(\n                connectedFit.viewPortRect.height - connectedFit.targetRect.bottom - 1,\n                connectedFit.contentElementRect.height)}px`;\n        }\n\n        super.fitInViewport(element, connectedFit);\n    }\n}\n","import { Injectable, OnDestroy, NgModuleRef } from '@angular/core';\nimport { IgxIconService } from '../../icon/icon.service';\nimport { FilteringExpressionsTree, IFilteringExpressionsTree } from '../../data-operations/filtering-expressions-tree';\nimport { IgxGridBaseDirective } from '../grid-base.directive';\nimport icons from './svgIcons';\nimport { IFilteringExpression, FilteringLogic } from '../../data-operations/filtering-expression.interface';\nimport { Subject } from 'rxjs';\nimport { takeUntil, filter } from 'rxjs/operators';\nimport { IForOfState } from '../../directives/for-of/for_of.directive';\nimport { IgxColumnComponent } from '../columns/column.component';\nimport { IFilteringOperation } from '../../data-operations/filtering-condition';\nimport { GridBaseAPIService } from '../api.service';\nimport { IColumnResizeEventArgs } from '../common/events';\nimport { GridType } from '../common/grid.interface';\nimport { IgxDatePipeComponent } from '../common/pipes';\nimport { OverlaySettings, PositionSettings, VerticalAlignment } from '../../services/overlay/utilities';\nimport { IgxOverlayService } from '../../services/overlay/overlay';\nimport { useAnimation } from '@angular/animations';\nimport { fadeIn, fadeOut } from '../../animations/main';\nimport { ExcelStylePositionStrategy } from './excel-style/excel-style-position-strategy';\nimport { AbsoluteScrollStrategy } from '../../services/overlay/scroll/absolute-scroll-strategy';\n\nconst FILTERING_ICONS_FONT_SET = 'filtering-icons';\n\n/**\n * @hidden\n */\nexport class ExpressionUI {\n    public expression: IFilteringExpression;\n    public beforeOperator: FilteringLogic;\n    public afterOperator: FilteringLogic;\n    public isSelected = false;\n    public isVisible = true;\n}\n\n/**\n * @hidden\n */\n@Injectable()\nexport class IgxFilteringService implements OnDestroy {\n\n    private columnsWithComplexFilter = new Set<string>();\n    private areEventsSubscribed = false;\n    private destroy$ = new Subject<boolean>();\n    private isFiltering = false;\n    private columnToExpressionsMap = new Map<string, ExpressionUI[]>();\n    private _datePipe: IgxDatePipeComponent;\n    private columnStartIndex = -1;\n    private _filterIconsRegistered = false;\n    private _componentOverlayId: string;\n    private _filterMenuPositionSettings: PositionSettings;\n    private _filterMenuOverlaySettings: OverlaySettings;\n    private column;\n\n    public isFilterRowVisible = false;\n    public filteredColumn: IgxColumnComponent = null;\n    public selectedExpression: IFilteringExpression = null;\n    public columnToMoreIconHidden = new Map<string, boolean>();\n    public activeFilterCell = 0;\n    grid: IgxGridBaseDirective;\n\n    constructor(private gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>, private _moduleRef: NgModuleRef<any>,\n        private iconService: IgxIconService,  private _overlayService: IgxOverlayService) {}\n\n    ngOnDestroy(): void {\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n\n    public toggleFilterDropdown(element, column, classRef) {\n        if (!this._componentOverlayId || (this.column  && this.column.field !== column.field)) {\n            this.column = column;\n            const filterIcon = this.column.filteringExpressionsTree ? 'igx-excel-filter__icon--filtered' : 'igx-excel-filter__icon';\n            const filterIconTarget = element.querySelector('.' + filterIcon);\n\n            this._filterMenuOverlaySettings.positionStrategy.settings.target = filterIconTarget;\n            this._filterMenuOverlaySettings.outlet = (this.grid as any).outlet;\n            this._componentOverlayId =\n                this._overlayService.attach(classRef, this._filterMenuOverlaySettings, this._moduleRef);\n            this._overlayService.show(this._componentOverlayId, this._filterMenuOverlaySettings);\n        }\n    }\n\n    public initFilteringSettings() {\n        this._filterMenuPositionSettings = {\n            verticalStartPoint: VerticalAlignment.Bottom,\n            openAnimation: useAnimation(fadeIn, { params: { duration: '250ms' }}),\n            closeAnimation: useAnimation(fadeOut, { params: { duration: '200ms' }})\n        };\n        this._filterMenuOverlaySettings = {\n            closeOnOutsideClick: true,\n            modal: false,\n            positionStrategy: new ExcelStylePositionStrategy(this._filterMenuPositionSettings),\n            scrollStrategy: new AbsoluteScrollStrategy()\n        };\n        this._overlayService.onOpening.pipe(\n            filter((overlay) => overlay.id === this._componentOverlayId),\n            takeUntil(this.destroy$)).subscribe((eventArgs) => {\n                const instance = eventArgs.componentRef.instance as any;\n                if (instance) {\n                    instance.initialize(this.column, this._overlayService, eventArgs.id);\n                }\n            });\n\n        this._overlayService.onClosed.pipe(\n            filter(overlay => overlay.id === this._componentOverlayId),\n            takeUntil(this.destroy$)).subscribe(() => {\n                this._componentOverlayId = null;\n                this.grid.theadRow.nativeElement.focus();\n            });\n    }\n\n    public hideExcelFiltering() {\n        if (this._componentOverlayId) {\n            this._overlayService.hide(this._componentOverlayId);\n        }\n    }\n\n    public get datePipe(): IgxDatePipeComponent {\n        if (!this._datePipe) {\n            this._datePipe = new IgxDatePipeComponent(this.grid.locale);\n        }\n        return this._datePipe;\n    }\n\n    /**\n     * Subscribe to grid's events.\n     */\n    public subscribeToEvents() {\n        if (!this.areEventsSubscribed) {\n            this.areEventsSubscribed = true;\n\n            this.grid.onColumnResized.pipe(takeUntil(this.destroy$)).subscribe((eventArgs: IColumnResizeEventArgs) => {\n                this.updateFilteringCell(eventArgs.column);\n            });\n\n            this.grid.parentVirtDir.onChunkLoad.pipe(takeUntil(this.destroy$)).subscribe((eventArgs: IForOfState) => {\n                if (eventArgs.startIndex !== this.columnStartIndex) {\n                    this.columnStartIndex = eventArgs.startIndex;\n                    this.grid.filterCellList.forEach((filterCell) => {\n                        filterCell.updateFilterCellArea();\n                    });\n                }\n            });\n\n            this.grid.onColumnMovingEnd.pipe(takeUntil(this.destroy$)).subscribe(() => {\n                this.grid.filterCellList.forEach((filterCell) => {\n                    filterCell.updateFilterCellArea();\n                });\n            });\n        }\n    }\n\n    /**\n     * Close filtering row if a column is hidden.\n     */\n    public hideFilteringRowOnColumnVisibilityChange(col: IgxColumnComponent) {\n        const filteringRow = this.grid.filteringRow;\n\n        if (filteringRow && filteringRow.column && filteringRow.column === col) {\n            filteringRow.close();\n        }\n    }\n\n    /**\n     * Internal method to create expressionsTree and filter grid used in both filter modes.\n     */\n    public filterInternal(field: string, expressions: FilteringExpressionsTree | Array<ExpressionUI> = null): void {\n        this.isFiltering = true;\n\n        let expressionsTree;\n        if (expressions instanceof FilteringExpressionsTree) {\n            expressionsTree = expressions;\n        } else {\n            expressionsTree = this.createSimpleFilteringTree(field, expressions);\n        }\n\n        if (expressionsTree.filteringOperands.length === 0) {\n            this.clearFilter(field);\n        } else {\n            this.filter(field, null, expressionsTree);\n        }\n\n        this.isFiltering = false;\n    }\n\n    /**\n     * Execute filtering on the grid.\n     */\n    public filter(field: string, value: any, conditionOrExpressionTree?: IFilteringOperation | IFilteringExpressionsTree,\n        ignoreCase?: boolean) {\n        const col = this.gridAPI.get_column_by_name(field);\n        const filteringIgnoreCase = ignoreCase || (col ? col.filteringIgnoreCase : false);\n\n        if (conditionOrExpressionTree) {\n            this.gridAPI.filter(field, value, conditionOrExpressionTree, filteringIgnoreCase);\n        } else {\n            const expressionsTreeForColumn = this.grid.filteringExpressionsTree.find(field);\n            if (!expressionsTreeForColumn) {\n                throw new Error('Invalid condition or Expression Tree!');\n            } else if (expressionsTreeForColumn instanceof FilteringExpressionsTree) {\n                this.gridAPI.filter(field, value, expressionsTreeForColumn, filteringIgnoreCase);\n            } else {\n                const expressionForColumn = expressionsTreeForColumn as IFilteringExpression;\n                this.gridAPI.filter(field, value, expressionForColumn.condition, filteringIgnoreCase);\n            }\n        }\n\n        // Wait for the change detection to update filtered data through the pipes and then emit the event.\n        requestAnimationFrame(() => this.grid.onFilteringDone.emit(col.filteringExpressionsTree));\n    }\n\n    /**\n     * Clear the filter of a given column.\n     */\n    public clearFilter(field: string): void {\n        if (field) {\n            const column = this.gridAPI.get_column_by_name(field);\n            if (!column) {\n                return;\n            }\n        }\n\n        this.isFiltering = true;\n\n        this.gridAPI.clear_filter(field);\n\n        // Wait for the change detection to update filtered data through the pipes and then emit the event.\n        requestAnimationFrame(() => this.grid.onFilteringDone.emit(null));\n\n        if (field) {\n            const expressions = this.getExpressions(field);\n            expressions.length = 0;\n        }\n\n        this.isFiltering = false;\n    }\n\n    /**\n     * Filters all the `IgxColumnComponent` in the `IgxGridComponent` with the same condition.\n     */\n    public filterGlobal(value: any, condition, ignoreCase?) {\n        this.gridAPI.filter_global(value, condition, ignoreCase);\n\n        // Wait for the change detection to update filtered data through the pipes and then emit the event.\n        requestAnimationFrame(() => this.grid.onFilteringDone.emit(this.grid.filteringExpressionsTree));\n    }\n\n    /**\n     * Register filtering SVG icons in the icon service.\n     */\n    public registerSVGIcons(): void {\n        if (!this._filterIconsRegistered) {\n            for (const icon of icons) {\n                if (!this.iconService.isSvgIconCached(icon.name, FILTERING_ICONS_FONT_SET)) {\n                    this.iconService.addSvgIconFromText(icon.name, icon.value, FILTERING_ICONS_FONT_SET);\n                }\n            }\n            this._filterIconsRegistered = true;\n        }\n    }\n\n    /**\n     * Returns the ExpressionUI array for a given column.\n     */\n    public getExpressions(columnId: string): ExpressionUI[] {\n        if (!this.columnToExpressionsMap.has(columnId)) {\n            const column = this.grid.columns.find((col) => col.field === columnId);\n            const expressionUIs = new Array<ExpressionUI>();\n            if (column) {\n                this.generateExpressionsList(column.filteringExpressionsTree, this.grid.filteringExpressionsTree.operator, expressionUIs);\n                this.columnToExpressionsMap.set(columnId, expressionUIs);\n            }\n            return expressionUIs;\n        }\n\n        return this.columnToExpressionsMap.get(columnId);\n    }\n\n    /**\n     * Recreates all ExpressionUIs for all columns. Executed after filtering to refresh the cache.\n     */\n    public refreshExpressions() {\n        if (!this.isFiltering) {\n            this.columnsWithComplexFilter.clear();\n\n            this.columnToExpressionsMap.forEach((value: ExpressionUI[], key: string) => {\n                const column = this.grid.columns.find((col) => col.field === key);\n                if (column) {\n                    value.length = 0;\n\n                    this.generateExpressionsList(column.filteringExpressionsTree, this.grid.filteringExpressionsTree.operator, value);\n\n                    const isComplex = this.isFilteringTreeComplex(column.filteringExpressionsTree);\n                    if (isComplex) {\n                        this.columnsWithComplexFilter.add(key);\n                    }\n\n                    this.updateFilteringCell(column);\n                } else {\n                    this.columnToExpressionsMap.delete(key);\n                }\n            });\n        }\n    }\n\n    /**\n     * Remove an ExpressionUI for a given column.\n     */\n    public removeExpression(columnId: string, indexToRemove: number) {\n        const expressionsList = this.getExpressions(columnId);\n\n        if (indexToRemove === 0 && expressionsList.length > 1) {\n            expressionsList[1].beforeOperator = null;\n        } else if (indexToRemove === expressionsList.length - 1) {\n            expressionsList[indexToRemove - 1].afterOperator = null;\n        } else {\n            expressionsList[indexToRemove - 1].afterOperator = expressionsList[indexToRemove + 1].beforeOperator;\n            expressionsList[0].beforeOperator = null;\n            expressionsList[expressionsList.length - 1].afterOperator = null;\n        }\n\n        expressionsList.splice(indexToRemove, 1);\n    }\n\n    /**\n     * Generate filtering tree for a given column from existing ExpressionUIs.\n     */\n    public createSimpleFilteringTree(columnId: string, expressionUIList = null): FilteringExpressionsTree {\n        const expressionsList = expressionUIList ? expressionUIList : this.getExpressions(columnId);\n        const expressionsTree = new FilteringExpressionsTree(FilteringLogic.Or, columnId);\n        let currAndBranch: FilteringExpressionsTree;\n        let currExpressionUI: ExpressionUI;\n\n        for (let i = 0; i < expressionsList.length; i++) {\n            currExpressionUI = expressionsList[i];\n\n            if (!currExpressionUI.expression.condition.isUnary && currExpressionUI.expression.searchVal === null) {\n                if (currExpressionUI.afterOperator === FilteringLogic.And && !currAndBranch) {\n                    currAndBranch = new FilteringExpressionsTree(FilteringLogic.And, columnId);\n                    expressionsTree.filteringOperands.push(currAndBranch);\n                }\n                continue;\n            }\n\n            if ((currExpressionUI.beforeOperator === undefined || currExpressionUI.beforeOperator === null ||\n                 currExpressionUI.beforeOperator === FilteringLogic.Or) &&\n                currExpressionUI.afterOperator === FilteringLogic.And) {\n\n                currAndBranch = new FilteringExpressionsTree(FilteringLogic.And, columnId);\n                expressionsTree.filteringOperands.push(currAndBranch);\n                currAndBranch.filteringOperands.push(currExpressionUI.expression);\n\n            } else if (currExpressionUI.beforeOperator === FilteringLogic.And) {\n                currAndBranch.filteringOperands.push(currExpressionUI.expression);\n            } else {\n                expressionsTree.filteringOperands.push(currExpressionUI.expression);\n                currAndBranch = null;\n            }\n        }\n\n        return expressionsTree;\n    }\n\n    /**\n     * Returns whether a complex filter is applied to a given column.\n     */\n    public isFilterComplex(columnId: string) {\n        if (this.columnsWithComplexFilter.has(columnId)) {\n            return true;\n        }\n\n        const column = this.grid.columns.find((col) => col.field === columnId);\n        const isComplex = column && this.isFilteringTreeComplex(column.filteringExpressionsTree);\n        if (isComplex) {\n            this.columnsWithComplexFilter.add(columnId);\n        }\n\n        return isComplex;\n    }\n\n    /**\n     * Returns the string representation of the FilteringLogic operator.\n     */\n    public getOperatorAsString(operator: FilteringLogic): any {\n        if (operator === 0) {\n            return this.grid.resourceStrings.igx_grid_filter_operator_and;\n        } else {\n            return this.grid.resourceStrings.igx_grid_filter_operator_or;\n        }\n    }\n\n    /**\n     * Generate the label of a chip from a given filtering expression.\n     */\n    public getChipLabel(expression: IFilteringExpression): any {\n        if (expression.condition.isUnary) {\n            return this.grid.resourceStrings[`igx_grid_filter_${expression.condition.name}`] || expression.condition.name;\n        } else if (expression.searchVal instanceof Date) {\n            return this.datePipe.transform(expression.searchVal, this.grid.locale);\n        } else {\n            return expression.searchVal;\n        }\n    }\n\n    /**\n     * Updates the content of a filterCell.\n     */\n    public updateFilteringCell(column: IgxColumnComponent) {\n        const filterCell = column.filterCell;\n        if (filterCell) {\n            filterCell.updateFilterCellArea();\n        }\n    }\n\n    public get filteredData() {\n        return this.grid.filteredData;\n    }\n\n    private isFilteringTreeComplex(expressions: IFilteringExpressionsTree | IFilteringExpression): boolean {\n        if (!expressions) {\n            return false;\n        }\n\n        if (expressions instanceof FilteringExpressionsTree) {\n            const expressionsTree = expressions as FilteringExpressionsTree;\n            if (expressionsTree.operator === FilteringLogic.Or) {\n                const andOperatorsCount = this.getChildAndOperatorsCount(expressionsTree);\n\n                // having more that 'And' and operator in the sub-tree means that the filter could not be represented without parentheses.\n                return andOperatorsCount > 1;\n            }\n\n            let isComplex = false;\n            for (let i = 0; i < expressionsTree.filteringOperands.length; i++) {\n                isComplex = isComplex || this.isFilteringTreeComplex(expressionsTree.filteringOperands[i]);\n            }\n\n            return isComplex;\n        }\n\n        return false;\n    }\n\n    private getChildAndOperatorsCount(expressions: IFilteringExpressionsTree): number {\n        let count = 0;\n        let operand;\n        for (let i = 0; i < expressions.filteringOperands.length; i++) {\n            operand = expressions[i];\n            if (operand instanceof FilteringExpressionsTree) {\n                if (operand.operator === FilteringLogic.And) {\n                    count++;\n                }\n\n                count = count + this.getChildAndOperatorsCount(operand);\n            }\n        }\n\n        return count;\n    }\n\n    public generateExpressionsList(expressions: IFilteringExpressionsTree | IFilteringExpression,\n        operator: FilteringLogic,\n        expressionsUIs: ExpressionUI[]): void {\n        this.generateExpressionsListRecursive(expressions, operator, expressionsUIs);\n\n        // The beforeOperator of the first expression and the afterOperator of the last expression should be null\n        if (expressionsUIs.length) {\n            expressionsUIs[expressionsUIs.length - 1].afterOperator = null;\n        }\n    }\n\n    private generateExpressionsListRecursive(expressions: IFilteringExpressionsTree | IFilteringExpression,\n                                    operator: FilteringLogic,\n                                    expressionsUIs: ExpressionUI[]): void {\n        if (!expressions) {\n            return;\n        }\n\n        if (expressions instanceof FilteringExpressionsTree) {\n            const expressionsTree = expressions as FilteringExpressionsTree;\n            for (let i = 0; i < expressionsTree.filteringOperands.length; i++) {\n                this.generateExpressionsListRecursive(expressionsTree.filteringOperands[i], expressionsTree.operator, expressionsUIs);\n            }\n            if (expressionsUIs.length) {\n                expressionsUIs[expressionsUIs.length - 1].afterOperator = operator;\n            }\n        } else {\n            const exprUI = new ExpressionUI();\n            exprUI.expression = expressions as IFilteringExpression;\n            exprUI.afterOperator = operator;\n\n            const prevExprUI = expressionsUIs[expressionsUIs.length - 1];\n            if (prevExprUI) {\n                exprUI.beforeOperator = prevExprUI.afterOperator;\n            }\n\n            expressionsUIs.push(exprUI);\n        }\n    }\n\n    public isFilteringExpressionsTreeEmpty(expressionTree: IFilteringExpressionsTree): boolean {\n        if (FilteringExpressionsTree.empty(expressionTree)) {\n            return true;\n        }\n\n        let expr: any;\n\n        for (let i = 0; i < expressionTree.filteringOperands.length; i++) {\n            expr = expressionTree.filteringOperands[i];\n\n            if ((expr instanceof FilteringExpressionsTree)) {\n                const exprTree = expr as FilteringExpressionsTree;\n                if (exprTree.filteringOperands && exprTree.filteringOperands.length) {\n                    return false;\n                }\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n","import { Component, ElementRef, HostBinding, Input, OnInit, TemplateRef, ViewChild, ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { IgxIconService } from './icon.service';\nimport { first, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n/**\n * Icon provides a way to include material icons to markup\n *\n * @igxModule IgxIconModule\n *\n * @igxTheme igx-icon-theme\n *\n * @igxKeywords icon, picture\n *\n * @igxGroup Display\n *\n * @remarks\n *\n * The Ignite UI Icon makes it easy for developers to include material design icons directly in their markup. The icons\n * support custom colors and can be marked as active or disabled using the `isActive` property. This will change the appearance\n * of the icon.\n *\n * @example\n * ```html\n * <igx-icon color=\"#00ff00\" isActive=\"true\">home</igx-icon>\n * ```\n */\nlet NEXT_ID = 0;\n\n@Component({\n    selector: 'igx-icon',\n    templateUrl: 'icon.component.html'\n})\nexport class IgxIconComponent implements OnInit, OnDestroy {\n    @ViewChild('noLigature', { read: TemplateRef, static: true })\n    private noLigature: TemplateRef<HTMLElement>;\n\n    @ViewChild('explicitLigature', { read: TemplateRef, static: true })\n    private explicitLigature: TemplateRef<HTMLElement>;\n\n    @ViewChild('svgImage', { read: TemplateRef, static: true })\n    private svgImage: TemplateRef<HTMLElement>;\n\n    private destroy$ = new Subject<void>();\n\n    /**\n     *  This allows you to change the value of `class.igx-icon`. By default it's `igx-icon`.\n     *\n     * @hidden\n     * @internal\n     */\n    @HostBinding('class.igx-icon')\n    public cssClass = 'igx-icon';\n\n    /**\n     *  This allows you to disable the `aria-hidden` attribute. By default it's applied.\n     * @example\n     * ```typescript\n     * @ViewChild(\"MyIcon\") public icon: IgxIconComponent;\n     * constructor(private cdRef:ChangeDetectorRef) {}\n     * ngAfterViewInit() {\n     *     this.icon.ariaHidden = false;\n     *     this.cdRef.detectChanges();\n     * }\n     * ```\n     */\n    @HostBinding('attr.aria-hidden')\n    public ariaHidden = true;\n\n    /**\n     * An @Input property that sets the value of the `id` attribute.\n     * @example\n     * ```html\n     * <igx-icon id=\"igx-icon-1\" fontSet=\"material\">settings</igx-icon>\n     * ```\n     */\n    @HostBinding('attr.id')\n    @Input()\n    public id = `igx-icon-${NEXT_ID++}`;\n\n    /**\n     * An @Input property that sets the value of the `fontSet`. By default it's \"material\".\n     * @example\n     * ```html\n     * <igx-icon fontSet=\"material\">settings</igx-icon>\n     * ```\n     */\n    @Input('fontSet')\n    public font: string;\n\n    /**\n     * An @Input property that allows you to disable the `active` property. By default it's applied.\n     * @example\n     * ```html\n     * <igx-icon [isActive]=\"false\">settings</igx-icon>\n     * ```\n     */\n    @Input('isActive')\n    public active = true;\n\n    /**\n     * An @Input property that allows you to change the `iconColor` of the icon.\n     * @example\n     * ```html\n     * <igx-icon color=\"blue\">settings</igx-icon>\n     * ```\n     */\n    @Input('color')\n    public iconColor: string;\n\n    /**\n     *  An @Input property that allows you to set the `iconName` of the icon.\n     *  @example\n     * ```html\n     * <igx-icon name=\"contains\" fontSet=\"filter-icons\"></igx-icon>\n     * ```\n     */\n    @Input('name')\n    public iconName: string;\n\n    /**\n     * An ElementRef property of the `igx-icon` component.\n     */\n    public el: ElementRef;\n\n    constructor(\n            private _el: ElementRef,\n            private iconService: IgxIconService,\n            private ref: ChangeDetectorRef) {\n        this.el = _el;\n        this.font = this.iconService.defaultFontSet;\n        this.iconService.registerFontSetAlias('material', 'material-icons');\n        this.iconService.iconLoaded.pipe(\n            first(e => e.name === this.iconName && e.fontSet === this.font),\n            takeUntil(this.destroy$)\n        )\n        .subscribe(_ => this.ref.detectChanges());\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    ngOnInit() {\n        this.updateIconClass();\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    /**\n     *  An accessor that returns the value of the font property.\n     * @example\n     * ```typescript\n     *  @ViewChild(\"MyIcon\")\n     * public icon: IgxIconComponent;\n     * ngAfterViewInit() {\n     *    let iconFont = this.icon.getFontSet;\n     * }\n     * ```\n     */\n    get getFontSet(): string {\n        return this.font;\n    }\n\n    /**\n     *  An accessor that returns the value of the active property.\n     * @example\n     * ```typescript\n     * @ViewChild(\"MyIcon\")\n     * public icon: IgxIconComponent;\n     * ngAfterViewInit() {\n     *    let iconActive = this.icon.getActive;\n     * }\n     * ```\n     */\n    get getActive(): boolean {\n        return this.active;\n    }\n\n    /**\n     *  An accessor that returns inactive property.\n     * @example\n     * ```typescript\n     * @ViewChild(\"MyIcon\")\n     * public icon: IgxIconComponent;\n     * ngAfterViewInit() {\n     *    let iconActive = this.icon.getInactive;\n     * }\n     * ```\n     */\n    @HostBinding('class.igx-icon--inactive')\n    get getInactive(): boolean {\n        return !this.active;\n    }\n\n    /**\n     * An accessor that returns the opposite value of the `iconColor` property.\n     * @example\n     * ```typescript\n     * @ViewChild(\"MyIcon\")\n     * public icon: IgxIconComponent;\n     * ngAfterViewInit() {\n     *    let iconColor = this.icon.getIconColor;\n     * }\n     * ```\n     */\n    @HostBinding('style.color')\n    get getIconColor(): string {\n        return this.iconColor;\n    }\n\n    /**\n     * An accessor that returns the value of the iconName property.\n     * @example\n     * ```typescript\n     * @ViewChild(\"MyIcon\")\n     * public icon: IgxIconComponent;\n     * ngAfterViewInit() {\n     *    let iconName = this.icon.getIconName;\n     * }\n     * ```\n     */\n    get getIconName(): string {\n        return this.iconName;\n    }\n\n    /**\n     *  An accessor that returns the key of the SVG image.\n     *  The key consists of the fontSet and the iconName separated by underscore.\n     * @example\n     * ```typescript\n     * @ViewChild(\"MyIcon\")\n     * public icon: IgxIconComponent;\n     * ngAfterViewInit() {\n     *    let svgKey = this.icon.getSvgKey;\n     * }\n     * ```\n     */\n    get getSvgKey(): string {\n        if (this.iconService.isSvgIconCached(this.iconName, this.font)) {\n            return '#' + this.iconService.getSvgIconKey(this.iconName, this.font);\n        }\n\n        return null;\n    }\n\n    /**\n     *   An accessor that returns a TemplateRef to explicit, svg or no ligature.\n     * @example\n     * ```typescript\n     * @ViewChild(\"MyIcon\")\n     * public icon: IgxIconComponent;\n     * ngAfterViewInit() {\n     *    let iconTemplate = this.icon.template;\n     * }\n     * ```\n     */\n    get template(): TemplateRef<HTMLElement> {\n        if (this.iconName) {\n            if (this.iconService.isSvgIconCached(this.iconName, this.font)) {\n                return this.svgImage;\n            }\n\n            return this.noLigature;\n        }\n\n        return this.explicitLigature;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    private updateIconClass() {\n        const className = this.iconService.fontSetClassName(this.font);\n        this.el.nativeElement.classList.add(className);\n\n        if (this.iconName && !this.iconService.isSvgIconCached(this.iconName, this.font)) {\n            this.el.nativeElement.classList.add(this.iconName);\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { IgxIconComponent } from './icon.component';\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [IgxIconComponent],\n    exports: [IgxIconComponent],\n    imports: [CommonModule]\n})\nexport class IgxIconModule { }\n\nexport * from './icon.component';\nexport * from './icon.service';\n","import { CommonModule } from '@angular/common';\nimport {\n    AfterContentInit,\n    AfterViewInit,\n    Component,\n    ContentChildren,\n    ChangeDetectorRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    Input,\n    NgModule,\n    Output,\n    Optional,\n    QueryList,\n    Renderer2,\n    ViewChildren,\n    OnDestroy\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { IgxButtonDirective, IgxButtonModule } from '../directives/button/button.directive';\nimport { IgxRippleModule } from '../directives/ripple/ripple.directive';\nimport { IgxIconModule } from '../icon/public_api';\nimport { takeUntil } from 'rxjs/operators';\nimport { DisplayDensityBase, DisplayDensityToken, IDisplayDensityOptions } from '../core/density';\nimport { IBaseEventArgs } from '../core/utils';\n\nexport enum ButtonGroupAlignment { horizontal, vertical }\nlet NEXT_ID = 0;\n\n/**\n * **Ignite UI for Angular Button Group** -\n * [Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/buttongroup.html)\n *\n * The Ignite UI Button Group displays a group of buttons either vertically or horizontally.  The group supports\n * single, multiple and toggle selection.\n *\n * Example:\n * ```html\n * <igx-buttongroup multiSelection=\"true\" [values]=\"fontOptions\">\n * </igx-buttongroup>\n * ```\n * The `fontOptions` value shown above is defined as:\n * ```typescript\n * this.fontOptions = [\n *   { icon: 'format_bold', selected: false },\n *   { icon: 'format_italic', selected: false },\n *   { icon: 'format_underlined', selected: false }];\n * ```\n */\n@Component({\n    selector: 'igx-buttongroup',\n    templateUrl: 'buttongroup-content.component.html'\n})\n\nexport class IgxButtonGroupComponent extends DisplayDensityBase implements AfterContentInit, AfterViewInit, OnDestroy {\n\n    private _disabled = false;\n    protected buttonClickNotifier$ = new Subject<boolean>();\n    protected queryListNotifier$ = new Subject<boolean>();\n\n    @ViewChildren(IgxButtonDirective) private viewButtons: QueryList<IgxButtonDirective>;\n    @ContentChildren(IgxButtonDirective) private templateButtons: QueryList<IgxButtonDirective>;\n\n    /**\n     * A collection containing all buttons inside the button group.\n     */\n    public get buttons(): IgxButtonDirective[] {\n        return [...this.viewButtons.toArray(), ...this.templateButtons.toArray()];\n    }\n\n    /**\n     * An @Input property that sets the value of the `id` attribute. If not set it will be automatically generated.\n     * ```html\n     *  <igx-buttongroup [id]=\"'igx-dialog-56'\" [multiSelection]=\"!multi\" [values]=\"alignOptions\">\n     * ```\n     */\n    @HostBinding('attr.id')\n    @Input()\n    public id = `igx-buttongroup-${NEXT_ID++}`;\n\n    /**\n     * @hidden\n     */\n    @HostBinding('style.zIndex')\n    public zIndex = 0;\n\n    /**\n     * Allows you to set a style using the `itemContentCssClass` input.\n     * The value should be the CSS class name that will be applied to the button group.\n     * ```typescript\n     * public style1 = \"styleClass\";\n     *  //..\n     * ```\n     *  ```html\n     * <igx-buttongroup [itemContentCssClass]=\"style1\" [multiSelection]=\"!multi\" [values]=\"alignOptions\">\n     * ```\n     */\n    @Input() set itemContentCssClass(value: string) {\n        this._itemContentCssClass = value || this._itemContentCssClass;\n    }\n\n    /**\n     * Returns the CSS class of the item content of the `IgxButtonGroup`.\n     * ```typescript\n     *  @ViewChild(\"MyChild\")\n     * public buttonG: IgxButtonGroupComponent;\n     * ngAfterViewInit(){\n     *    let buttonSelect = this.buttonG.itemContentCssClass;\n     * }\n     * ```\n     */\n    get itemContentCssClass(): string {\n        return this._itemContentCssClass;\n    }\n\n    /**\n     * An @Input property that enables selecting multiple buttons. By default, multi-selection is false.\n     * ```html\n     * <igx-buttongroup [multiSelection]=\"false\" [alignment]=\"alignment\"></igx-buttongroup>\n     * ```\n     */\n    @Input() public multiSelection = false;\n    /**\n     * An @Input property that allows setting the buttons in the button group.\n     * ```typescript\n     *  public ngOnInit() {\n     *      this.cities = [\n     *        new Button({\n     *          label: \"Sofia\"\n     *      }),\n     *        new Button({\n     *          label: \"London\"\n     *      }),\n     *        new Button({\n     *          label: \"New York\",\n     *          selected: true\n     *      }),\n     *        new Button({\n     *          label: \"Tokyo\"\n     *      })\n     *  ];\n     *  }\n     *  //..\n     * ```\n     * ```html\n     *  <igx-buttongroup [multiSelection]=\"false\" [values]=\"cities\"></igx-buttongroup>\n     * ```\n     */\n    @Input() public values: any;\n    /**\n     * An @Input property that allows you to disable the `igx-buttongroup` component. By default it's false.\n     * ```html\n     * <igx-buttongroup [disabled]=\"true\" [multiSelection]=\"multi\" [values]=\"fontOptions\"></igx-buttongroup>\n     * ```\n     */\n    @Input()\n    public get disabled(): boolean {\n        return this._disabled;\n    }\n    public set disabled(value: boolean) {\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this.viewButtons && this.templateButtons) {\n                this.buttons.forEach((b) => b.disabled = this._disabled);\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public selectedIndexes: number[] = [];\n\n    /**\n     * Allows you to set the button group alignment.\n     * Available options are `ButtonGroupAlignment.horizontal` (default) and `ButtonGroupAlignment.vertical`.\n     * ```typescript\n     * public alignment = ButtonGroupAlignment.vertical;\n     * //..\n     * ```\n     * ```html\n     * <igx-buttongroup [multiSelection]=\"false\" [values]=\"cities\" [alignment]=\"alignment\"></igx-buttongroup>\n     * ```\n     */\n    @Input() set alignment(value: ButtonGroupAlignment) {\n        this._isVertical = value === ButtonGroupAlignment.vertical;\n    }\n    /**\n     * Returns the alignment of the `igx-buttongroup`.\n     * ```typescript\n     * @ViewChild(\"MyChild\")\n     * public buttonG: IgxButtonGroupComponent;\n     * ngAfterViewInit(){\n     *    let buttonAlignment = this.buttonG.alignment;\n     * }\n     * ```\n     */\n    get alignment(): ButtonGroupAlignment {\n        return this._isVertical ? ButtonGroupAlignment.vertical : ButtonGroupAlignment.horizontal;\n    }\n\n    /**\n     * An @Ouput property that emits an event when a button is selected.\n     * ```typescript\n     * @ViewChild(\"toast\")\n     * private toast: IgxToastComponent;\n     * public onSelect(buttongroup){\n     *     this.toast.show()\n     * }\n     *  //...\n     * ```\n     * ```html\n     * <igx-buttongroup #MyChild [multiSelection]=\"!multi\" (onSelect)=\"onSelect($event)\"></igx-buttongroup>\n     * <igx-toast #toast message=\"You have made a selection!\"></igx-toast>\n     * ```\n     */\n    @Output() public onSelect = new EventEmitter<IButtonGroupEventArgs>();\n\n    /**\n     * An @Ouput property that emits an event when a button is deselected.\n     * ```typescript\n     *  @ViewChild(\"toast\")\n     *  private toast: IgxToastComponent;\n     *  public onUnselect(buttongroup){\n     *     this.toast.show()\n     * }\n     *  //...\n     * ```\n     * ```html\n     * <igx-buttongroup> #MyChild [multiSelection]=\"multi\" (onUnselect)=\"onUnselect($event)\"></igx-buttongroup>\n     * <igx-toast #toast message=\"You have deselected a button!\"></igx-toast>\n     * ```\n     */\n    @Output() public onUnselect = new EventEmitter<IButtonGroupEventArgs>();\n\n    /**\n     * Returns true if the `igx-buttongroup` alignment is vertical.\n     * Note that in order for the accessor to work correctly the property should be set explicitly.\n     * ```html\n     * <igx-buttongroup #MyChild [alignment]=\"alignment\" [values]=\"alignOptions\">\n     * ```\n     * ```typescript\n     * //...\n     * @ViewChild(\"MyChild\")\n     * private buttonG: IgxButtonGroupComponent;\n     * ngAfterViewInit(){\n     *    let orientation = this.buttonG.isVertical;\n     * }\n     * ```\n     */\n    public get isVertical(): boolean {\n        return this._isVertical;\n    }\n    private _isVertical: boolean;\n    private _itemContentCssClass: string;\n\n    constructor(private _cdr: ChangeDetectorRef, private _renderer: Renderer2,\n        @Optional() @Inject(DisplayDensityToken) protected _displayDensityOptions: IDisplayDensityOptions) {\n        super(_displayDensityOptions);\n    }\n\n    /**\n     * Gets the selected button/buttons.\n     * ```typescript\n     * @ViewChild(\"MyChild\")\n     * private buttonG: IgxButtonGroupComponent;\n     * ngAfterViewInit(){\n     *    let selectedButton = this.buttonG.selectedButtons;\n     * }\n     * ```\n     */\n    get selectedButtons(): IgxButtonDirective[] {\n        return this.buttons.filter((b, i) => {\n            return this.selectedIndexes.indexOf(i) !== -1;\n        });\n\n    }\n\n    /**\n     * Selects a button by its index.\n     * ```typescript\n     * @ViewChild(\"MyChild\")\n     * private buttonG: IgxButtonGroupComponent;\n     * ngAfterViewInit(){\n     *    this.buttonG.selectButton(2);\n     *    this.cdr.detectChanges();\n     * }\n     * ```\n     * @memberOf {@link IgxButtonGroupComponent}\n     */\n    public selectButton(index: number) {\n        if (index >= this.buttons.length || index < 0) {\n            return;\n        }\n\n        const button = this.buttons[index];\n        const buttonElement = button.nativeElement;\n\n        this.selectedIndexes.push(index);\n        button.selected = true;\n\n        this._renderer.setAttribute(buttonElement, 'aria-pressed', 'true');\n        this._renderer.addClass(buttonElement, 'igx-button-group__item--selected');\n\n        this.onSelect.emit({ button: button, index: index });\n\n        const indexInViewButtons = this.viewButtons.toArray().indexOf(button);\n        if (indexInViewButtons !== -1) {\n            this.values[indexInViewButtons].selected = true;\n        }\n\n        // deselect other buttons if multiSelection is not enabled\n        if (!this.multiSelection && this.selectedIndexes.length > 1) {\n            this.buttons.forEach((b, i) => {\n                if (i !== index && this.selectedIndexes.indexOf(i) !== -1) {\n                    this.deselectButton(i);\n                }\n            });\n        }\n    }\n\n    /**\n     * Deselects a button by its index.\n     * ```typescript\n     * @ViewChild(\"MyChild\")\n     * private buttonG: IgxButtonGroupComponent;\n     * ngAfterViewInit(){\n     *    this.buttonG.deselectButton(2);\n     *    this.cdr.detectChanges();\n     * }\n     * ```\n     * @memberOf {@link IgxButtonGroupComponent}\n     */\n    public deselectButton(index: number) {\n        if (index >= this.buttons.length || index < 0) {\n            return;\n        }\n\n        const button = this.buttons[index];\n        const buttonElement = button.nativeElement;\n\n        this.selectedIndexes.splice(this.selectedIndexes.indexOf(index), 1);\n        button.selected = false;\n\n        this._renderer.setAttribute(buttonElement, 'aria-pressed', 'false');\n        this._renderer.removeClass(buttonElement, 'igx-button-group__item--selected');\n\n        this.onUnselect.emit({ button: button, index: index });\n\n        const indexInViewButtons = this.viewButtons.toArray().indexOf(button);\n        if (indexInViewButtons !== -1) {\n            this.values[indexInViewButtons].selected = false;\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public ngAfterContentInit() {\n        this.templateButtons.forEach((button) => {\n            if (!button.initialDensity) {\n                button.displayDensity = this.displayDensity;\n            }\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    public ngAfterViewInit() {\n        const initButtons = () => {\n            // Cancel any existing buttonClick subscriptions\n            this.buttonClickNotifier$.next();\n\n            this.selectedIndexes.splice(0, this.selectedIndexes.length);\n\n            // initial configuration\n            this.buttons.forEach((button, index) => {\n                const buttonElement = button.nativeElement;\n\n                if (this.disabled) {\n                    button.disabled = true;\n                }\n\n                if (button.selected) {\n                    this.selectButton(index);\n                }\n\n                button.buttonClick.pipe(takeUntil(this.buttonClickNotifier$)).subscribe((ev) => this._clickHandler(ev, index));\n                this._renderer.addClass(buttonElement, 'igx-button-group__item');\n            });\n        };\n\n        this.viewButtons.changes.pipe(takeUntil(this.queryListNotifier$)).subscribe(() => initButtons());\n        this.templateButtons.changes.pipe(takeUntil(this.queryListNotifier$)).subscribe(() => initButtons());\n        initButtons();\n\n        this._cdr.detectChanges();\n    }\n\n    /**\n     * @hidden\n     */\n    public ngOnDestroy() {\n        this.buttonClickNotifier$.next();\n        this.buttonClickNotifier$.complete();\n\n        this.queryListNotifier$.next();\n        this.queryListNotifier$.complete();\n    }\n\n    /**\n     * @hidden\n     */\n    public _clickHandler(event, i) {\n        if (this.selectedIndexes.indexOf(i) !== -1) {\n            this.deselectButton(i);\n        } else {\n            this.selectButton(i);\n        }\n    }\n}\n\nexport interface IButtonGroupEventArgs extends IBaseEventArgs {\n    button: IgxButtonDirective;\n    index: number;\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [IgxButtonGroupComponent],\n    exports: [IgxButtonGroupComponent],\n    imports: [IgxButtonModule, CommonModule, IgxRippleModule, IgxIconModule]\n})\n\nexport class IgxButtonGroupModule {\n}\n","import {\n    Component,\n    ChangeDetectionStrategy,\n    AfterViewInit,\n    Input,\n    Output,\n    EventEmitter,\n    ChangeDetectorRef,\n    ViewChild\n} from '@angular/core';\nimport { IgxColumnComponent } from '../../columns/column.component';\nimport { ExpressionUI } from '../grid-filtering.service';\nimport { IgxButtonGroupComponent } from '../../../buttonGroup/buttonGroup.component';\nimport { IgxDropDownItemComponent, IgxDropDownComponent } from '../../../drop-down/public_api';\nimport { IgxInputGroupComponent, IgxInputDirective } from '../../../input-group/public_api';\nimport { DataType, DataUtil } from '../../../data-operations/data-util';\nimport { IFilteringOperation } from '../../../data-operations/filtering-condition';\nimport { OverlaySettings, ConnectedPositioningStrategy, CloseScrollStrategy } from '../../../services/public_api';\nimport { KEYS, IBaseEventArgs } from '../../../core/utils';\nimport { FilteringLogic } from '../../../data-operations/filtering-expression.interface';\nimport { DisplayDensity } from '../../../core/density';\n\n/**\n * @hidden\n */\nexport interface ILogicOperatorChangedArgs extends IBaseEventArgs {\n    target: ExpressionUI;\n    newValue: FilteringLogic;\n}\n\n/**\n * @hidden\n */\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false,\n    selector: 'igx-excel-style-default-expression',\n    templateUrl: './excel-style-default-expression.component.html'\n})\nexport class IgxExcelStyleDefaultExpressionComponent implements AfterViewInit {\n\n    private _dropDownOverlaySettings: OverlaySettings = {\n        closeOnOutsideClick: true,\n        modal: false,\n        positionStrategy: new ConnectedPositioningStrategy(),\n        scrollStrategy: new CloseScrollStrategy()\n    };\n\n    @Input()\n    public column: IgxColumnComponent;\n\n    @Input()\n    public expressionUI: ExpressionUI;\n\n    @Input()\n    public expressionsList: Array<ExpressionUI>;\n\n    @Input()\n    public grid: any;\n\n    @Input()\n    public displayDensity: DisplayDensity;\n\n    @Output()\n    public onExpressionRemoved = new EventEmitter<ExpressionUI>();\n\n    @Output()\n    public onLogicOperatorChanged = new EventEmitter<ILogicOperatorChangedArgs>();\n\n    @ViewChild('inputGroupConditions', { read: IgxInputGroupComponent, static: true })\n    protected inputGroupConditions: IgxInputGroupComponent;\n\n    @ViewChild('inputValues', { read: IgxInputDirective, static: true })\n    protected inputValuesDirective: IgxInputDirective;\n\n    @ViewChild('dropdownConditions', { read: IgxDropDownComponent, static: true })\n    protected dropdownConditions: IgxDropDownComponent;\n\n    @ViewChild('logicOperatorButtonGroup', { read: IgxButtonGroupComponent })\n    protected logicOperatorButtonGroup: IgxButtonGroupComponent;\n\n    protected get inputValuesElement() {\n        return this.inputValuesDirective;\n    }\n\n    get isLast(): boolean {\n        return this.expressionsList[this.expressionsList.length - 1] === this.expressionUI;\n    }\n\n    get isSingle(): boolean {\n        return this.expressionsList.length === 1;\n    }\n\n    get inputConditionsPlaceholder(): string {\n        return this.grid.resourceStrings['igx_grid_filter_condition_placeholder'];\n    }\n\n    get inputValuePlaceholder(): string {\n        return this.grid.resourceStrings['igx_grid_filter_row_placeholder'];\n    }\n\n    get type() {\n        switch (this.column.dataType) {\n            case DataType.Number:\n                return 'number';\n            default:\n                return 'text';\n        }\n    }\n\n    constructor(public cdr: ChangeDetectorRef) {}\n\n    ngAfterViewInit(): void {\n        this._dropDownOverlaySettings.outlet = this.column.grid.outletDirective;\n        this._dropDownOverlaySettings.positionStrategy.settings.target = this.inputGroupConditions.element.nativeElement;\n    }\n\n    public focus() {\n        // use requestAnimationFrame to focus the values input because when initializing the component\n        // datepicker's input group is not yet fully initialized\n        requestAnimationFrame(() => this.inputValuesElement.focus());\n    }\n\n    public isConditionSelected(conditionName: string): boolean {\n        return this.expressionUI.expression.condition && this.expressionUI.expression.condition.name === conditionName;\n    }\n\n    public getConditionName(condition: IFilteringOperation) {\n        return condition ? this.translateCondition(condition.name) : null;\n    }\n\n    public getInputWidth() {\n        return this.inputGroupConditions.element.nativeElement.offsetWidth + 'px';\n    }\n\n    get conditions() {\n        return this.column.filters.conditionList();\n    }\n\n    public translateCondition(value: string): string {\n        return this.grid.resourceStrings[`igx_grid_filter_${this.getCondition(value).name}`] || value;\n    }\n\n    public getIconName(): string {\n        if (this.column.dataType === DataType.Boolean && this.expressionUI.expression.condition === null) {\n            return this.getCondition(this.conditions[0]).iconName;\n        } else if (!this.expressionUI.expression.condition) {\n            return 'filter_list';\n        } else {\n            return this.expressionUI.expression.condition.iconName;\n        }\n    }\n\n    public toggleCustomDialogDropDown() {\n        this.dropdownConditions.toggle(this._dropDownOverlaySettings);\n    }\n\n    public getCondition(value: string): IFilteringOperation {\n        return this.column.filters.condition(value);\n    }\n\n    public onConditionsChanged(eventArgs: any) {\n        const value = (eventArgs.newSelection as IgxDropDownItemComponent).value;\n        this.expressionUI.expression.condition = this.getCondition(value);\n\n        this.focus();\n    }\n\n    public onValuesInput(eventArgs) {\n        this.expressionUI.expression.searchVal = DataUtil.parseValue(this.column.dataType, eventArgs.target.value);\n    }\n\n    public onLogicOperatorButtonClicked(eventArgs, buttonIndex: number) {\n        if (this.logicOperatorButtonGroup.selectedButtons.length === 0) {\n            eventArgs.stopPropagation();\n            this.logicOperatorButtonGroup.selectButton(buttonIndex);\n        } else {\n            this.onLogicOperatorChanged.emit({\n                target: this.expressionUI,\n                newValue: buttonIndex as FilteringLogic\n            });\n        }\n    }\n\n    public onLogicOperatorKeyDown(eventArgs, buttonIndex: number) {\n        if (eventArgs.key === KEYS.ENTER) {\n            this.logicOperatorButtonGroup.selectButton(buttonIndex);\n            this.onLogicOperatorChanged.emit({\n                target: this.expressionUI,\n                newValue: buttonIndex as FilteringLogic\n            });\n        }\n    }\n\n    public onRemoveButtonClick() {\n        this.onExpressionRemoved.emit(this.expressionUI);\n    }\n\n    public onInputConditionsKeyDown(eventArgs) {\n        if (eventArgs.altKey && (eventArgs.key === KEYS.DOWN_ARROW || eventArgs.key === KEYS.DOWN_ARROW_IE)) {\n            this.toggleCustomDialogDropDown();\n        }\n\n        if (eventArgs.key === KEYS.TAB && eventArgs.shiftKey && this.expressionsList[0] === this.expressionUI) {\n            eventArgs.preventDefault();\n        }\n\n        eventArgs.stopPropagation();\n    }\n}\n","export interface DateRangeDescriptor {\n    type: DateRangeType;\n    dateRange?: Date[];\n}\n\nexport enum DateRangeType {\n    After,\n    Before,\n    Between,\n    Specific,\n    Weekdays,\n    Weekends\n}\n","import { DateRangeDescriptor, DateRangeType } from '../core/dates';\n\n/**\n * @hidden\n */\nenum TimeDeltaInterval {\n    Month = 'month',\n    Year = 'year'\n}\n\nconst MDAYS = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst FEBRUARY = 1;\n\nexport function range(start = 0, stop, step = 1) {\n    const res = [];\n    const cur = (stop === undefined) ? 0 : start;\n    const max = (stop === undefined) ? start : stop;\n    for (let i = cur; step < 0 ? i > max : i < max; i += step) {\n        res.push(i);\n    }\n    return res;\n}\n\n/**\n * Returns true for leap years, false for non-leap years.\n *\n * @export\n * @param year\n * @returns\n */\nexport function isLeap(year: number): boolean {\n    return (year % 4 === 0) && ((year % 100 !== 0) || (year % 400 === 0));\n}\n\nexport function weekDay(year: number, month: number, day: number): number {\n    return new Date(year, month, day).getDay();\n}\n\n/**\n * Return weekday and number of days for year, month.\n *\n * @export\n * @param year\n * @param month\n * @returns\n */\nexport function monthRange(year: number, month: number): number[] {\n    if ((month < 0) || (month > 11)) {\n        throw new Error('Invalid month specified');\n    }\n    const day = weekDay(year, month, 1);\n    let nDays = MDAYS[month];\n    if ((month === FEBRUARY) && (isLeap(year))) {\n        nDays++;\n    }\n    return [day, nDays];\n}\n\nexport function isDateInRanges(date: Date, ranges: DateRangeDescriptor[]): boolean {\n    date = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n    const dateInMs = date.getTime();\n\n    if (!ranges) {\n        return false;\n    }\n\n    for (const descriptor of ranges) {\n        const dRanges = descriptor.dateRange ? descriptor.dateRange.map(\n            r => new Date(r.getFullYear(), r.getMonth(), r.getDate())) : undefined;\n        switch (descriptor.type) {\n            case (DateRangeType.After):\n                if (dateInMs > dRanges[0].getTime()) {\n                    return true;\n                }\n\n                break;\n            case (DateRangeType.Before):\n                if (dateInMs < dRanges[0].getTime()) {\n                    return true;\n                }\n\n                break;\n            case (DateRangeType.Between):\n                const dRange = dRanges.map(d => d.getTime());\n                const min = Math.min(dRange[0], dRange[1]);\n                const max = Math.max(dRange[0], dRange[1]);\n                if (dateInMs >= min && dateInMs <= max) {\n                    return true;\n                }\n\n                break;\n            case (DateRangeType.Specific):\n                const datesInMs = dRanges.map(d => d.getTime());\n                for (const specificDateInMs of datesInMs) {\n                    if (dateInMs === specificDateInMs) {\n                        return true;\n                    }\n                }\n\n                break;\n            case (DateRangeType.Weekdays):\n                const day = date.getDay();\n                if (day % 6 !== 0) {\n                    return true;\n                }\n\n                break;\n            case (DateRangeType.Weekends):\n                const weekday = date.getDay();\n                if (weekday % 6 === 0) {\n                    return true;\n                }\n\n                break;\n            default:\n                return false;\n        }\n    }\n\n    return false;\n}\n\nexport interface ICalendarDate {\n    date: Date;\n    isCurrentMonth: boolean;\n    isPrevMonth: boolean;\n    isNextMonth: boolean;\n}\n\nexport interface IFormattedParts {\n    value: string;\n    literal?: string;\n    combined: string;\n}\n\nexport interface IFormattingOptions {\n    day?: string;\n    month?: string;\n    weekday?: string;\n    year?: string;\n}\n\n\nexport interface IFormattingViews {\n    day?: boolean;\n    month?: boolean;\n    year?: boolean;\n}\n\nexport enum WEEKDAYS {\n    SUNDAY = 0,\n    MONDAY = 1,\n    TUESDAY = 2,\n    WEDNESDAY = 3,\n    THURSDAY = 4,\n    FRIDAY = 5,\n    SATURDAY = 6\n}\n\nexport class Calendar {\n\n    private _firstWeekDay: number | WEEKDAYS;\n\n    constructor(firstWeekDay: number | WEEKDAYS = WEEKDAYS.SUNDAY) {\n        this._firstWeekDay = firstWeekDay;\n    }\n\n    public get firstWeekDay(): number {\n        return this._firstWeekDay % 7;\n    }\n\n    public set firstWeekDay(value: number) {\n        this._firstWeekDay = value;\n    }\n\n    /**\n     * Returns an array of weekdays for one week starting\n     * with the currently set `firstWeekDay`\n     *\n     * this.firstWeekDay = 0 (Sunday) --> [0, 1, 2, 3, 4, 5, 6]\n     * this.firstWeekDay = 1 (Monday) --> [1, 2, 3, 4, 5, 6, 0]\n     *\n     * @returns\n     *\n     * @memberof Calendar\n     */\n    public weekdays(): number[] {\n        const res = [];\n        for (const i of range(this.firstWeekDay, this.firstWeekDay + 7)) {\n            res.push(i % 7);\n        }\n        return res;\n    }\n\n    /**\n     * Returns the date values for one month. It will always iterate throught\n     * complete weeks, so it will contain dates outside the specified month.\n     *\n     * @param year\n     * @param month\n     * @param boolean\n     * @returns\n     *\n     * @memberof Calendar\n     */\n    public monthdates(year: number, month: number, extraWeek: boolean = false): ICalendarDate[] {\n        let date = new Date(year, month, 1);\n        let days = (date.getDay() - this.firstWeekDay) % 7;\n        if (days < 0) {\n            days = 7 - Math.abs(days);\n        }\n        date = this.timedelta(date, 'day', -days);\n        const res = [];\n        let value: ICalendarDate;\n\n        while (true) {\n\n            value = this.generateICalendarDate(date, year, month);\n            res.push(value);\n\n            date = this.timedelta(date, 'day', 1);\n\n            if ((date.getMonth() !== month) && (date.getDay() === this.firstWeekDay)) {\n                if (extraWeek && res.length <= 35) {\n                    for (const _ of range(0, 7)) {\n                        value = this.generateICalendarDate(date, year, month);\n                        res.push(value);\n                        date = this.timedelta(date, 'day', 1);\n                    }\n                }\n                break;\n            }\n        }\n        return res;\n    }\n\n    /**\n     * Returns a matrix (array of arrays) representing a month's calendar.\n     * Each row represents a full week; week entries are ICalendarDate objects.\n     *\n     * @param year\n     * @param month\n     * @returns\n     *\n     * @memberof Calendar\n     */\n    public monthdatescalendar(year: number, month: number, extraWeek: boolean = false): ICalendarDate[][] {\n        const dates = this.monthdates(year, month, extraWeek);\n        const res = [];\n        for (const i of range(0, dates.length, 7)) {\n            res.push(dates.slice(i, i + 7));\n        }\n        return res;\n    }\n\n    public timedelta(date: Date, interval: string, units: number): Date {\n        const ret = new Date(date);\n\n        const checkRollover = () => {\n            if (ret.getDate() !== date.getDate()) {\n                ret.setDate(0);\n            }\n        };\n\n        switch (interval.toLowerCase()) {\n            case 'year':\n                ret.setFullYear(ret.getFullYear() + units);\n                checkRollover();\n                break;\n            case 'quarter':\n                ret.setMonth(ret.getMonth() + 3 * units);\n                checkRollover();\n                break;\n            case 'month':\n                ret.setMonth(ret.getMonth() + units);\n                checkRollover();\n                break;\n            case 'week':\n                ret.setDate(ret.getDate() + 7 * units);\n                break;\n            case 'day':\n                ret.setDate(ret.getDate() + units);\n                break;\n            case 'hour':\n                ret.setTime(ret.getTime() + units * 3600000);\n                break;\n            case 'minute':\n                ret.setTime(ret.getTime() + units * 60000);\n                break;\n            case 'second':\n                ret.setTime(ret.getTime() + units * 1000);\n                break;\n            default:\n                throw new Error('Invalid interval specifier');\n        }\n        return ret;\n    }\n\n    public formatToParts(date: Date, locale: string, options: any, parts: string[]) {\n        const formatter = new Intl.DateTimeFormat(locale, options);\n        const result = {\n            date,\n            full: formatter.format(date)\n        };\n\n        if ((formatter as any).formatToParts) {\n            const formattedParts = (formatter as any).formatToParts(date);\n\n            const toType = (partType: string) => {\n                const index = formattedParts.findIndex(({ type }) => type === partType);\n                const o: IFormattedParts = { value: '', literal: '', combined: '' };\n\n                if (partType === 'era' && index > -1) {\n                    o.value = formattedParts[index].value;\n                    return o;\n                } else if (partType === 'era' && index === -1) {\n                    return o;\n                }\n\n                o.value = formattedParts[index].value;\n                o.literal = formattedParts[index + 1] ? formattedParts[index + 1].value : '';\n                o.combined = [o.value, o.literal].join('');\n                return o;\n            };\n\n            for (const each of parts) {\n                result[each] = toType(each);\n            }\n        } else {\n            for (const each of parts) {\n                result[each] = { value: '', literal: '', combined: '' };\n            }\n        }\n        return result;\n    }\n\n    public getFirstViewDate(date: Date, interval: string, activeViewIdx: number) {\n        return this.timedelta(date, interval, -activeViewIdx);\n    }\n\n    public getNextMonth(date: Date) {\n        return this.timedelta(date, TimeDeltaInterval.Month, 1);\n    }\n\n    public getPrevMonth(date: Date) {\n        return this.timedelta(date, TimeDeltaInterval.Month, -1);\n    }\n\n    public getNextYear(date: Date) {\n        return this.timedelta(date, TimeDeltaInterval.Year, 1);\n    }\n\n    public getPrevYear(date: Date) {\n        return this.timedelta(date, TimeDeltaInterval.Year, -1);\n    }\n\n    private generateICalendarDate(date: Date, year: number, month: number): ICalendarDate {\n        return {\n            date,\n            isCurrentMonth: date.getFullYear() === year && date.getMonth() === month,\n            isNextMonth: this.isNextMonth(date, year, month),\n            isPrevMonth: this.isPreviousMonth(date, year, month)\n        };\n    }\n\n    private isPreviousMonth(date: Date, year: number, month: number): boolean {\n        if (date.getFullYear() === year) {\n            return date.getMonth() < month;\n        }\n        return date.getFullYear() < year;\n    }\n\n    private isNextMonth(date: Date, year: number, month: number): boolean {\n        if (date.getFullYear() === year) {\n            return date.getMonth() > month;\n        }\n\n        return date.getFullYear() > year;\n    }\n}\n","/**\n * This file contains all the directives used by the @link IgxCalendarComponent.\n * Except for the directives which are used for templating the calendar itself\n * you should generally not use them directly.\n * @preferred\n */\nimport {\n    Directive,\n    EventEmitter,\n    HostBinding,\n    HostListener,\n    Input,\n    Output,\n    TemplateRef,\n    ElementRef,\n    AfterViewInit,\n    OnDestroy,\n    NgZone\n} from '@angular/core';\nimport { fromEvent, Subject, interval } from 'rxjs';\nimport { takeUntil, debounce, tap } from 'rxjs/operators';\nimport { KEYS } from '../core/utils';\n\n/**\n * @hidden\n */\n@Directive({\n    selector: '[igxCalendarYear]'\n})\nexport class IgxCalendarYearDirective {\n\n    @Input('igxCalendarYear')\n    public value: Date;\n\n    @Input()\n    public date: Date;\n\n    @Output()\n    public onYearSelection = new EventEmitter<Date>();\n\n    @HostBinding('class.igx-calendar__year')\n    public get defaultCSS(): boolean {\n        return !this.isCurrentYear;\n    }\n\n    @HostBinding('class.igx-calendar__year--current')\n    public get currentCSS(): boolean {\n        return this.isCurrentYear;\n    }\n\n    public get isCurrentYear(): boolean {\n        return this.date.getFullYear() === this.value.getFullYear();\n    }\n\n    @HostListener('click')\n    public onClick() {\n        this.onYearSelection.emit(this.value);\n    }\n}\n\n@Directive({\n    selector: '[igxCalendarMonth]'\n})\nexport class IgxCalendarMonthDirective {\n\n    @Input('igxCalendarMonth')\n    public value: Date;\n\n    @Input()\n    public date: Date;\n\n    @Input()\n    public index;\n\n    @Output()\n    public onMonthSelection = new EventEmitter<Date>();\n\n    @HostBinding('attr.tabindex')\n    public tabindex = 0;\n\n    @HostBinding('class.igx-calendar__month')\n    public get defaultCSS(): boolean {\n        return !this.isCurrentMonth;\n    }\n\n    @HostBinding('class.igx-calendar__month--current')\n    public get currentCSS(): boolean {\n        return this.isCurrentMonth;\n    }\n\n    public get isCurrentMonth(): boolean {\n        return this.date.getMonth() === this.value.getMonth();\n    }\n\n    public get nativeElement() {\n        return this.elementRef.nativeElement;\n    }\n\n    constructor(public elementRef: ElementRef) {}\n\n    @HostListener('click')\n    public onClick() {\n        const date = new Date(this.value.getFullYear(), this.value.getMonth(), this.date.getDate());\n        this.onMonthSelection.emit(date);\n    }\n}\n\n/**\n * @hidden\n */\n@Directive({\n    selector: '[igxCalendarHeader]'\n})\nexport class IgxCalendarHeaderTemplateDirective {\n\n    constructor(public template: TemplateRef<any>) {}\n}\n\n/**\n * @hidden\n */\n@Directive({\n    selector: '[igxCalendarSubheader]'\n})\nexport class IgxCalendarSubheaderTemplateDirective {\n    constructor(public template: TemplateRef<any>) {}\n}\n\n/**\n * @hidden\n */\n@Directive({\n    selector: '[igxCalendarScrollMonth]'\n})\nexport class IgxCalendarScrollMonthDirective implements AfterViewInit, OnDestroy {\n\n    /**\n     * A callback function to be invoked when month increment/decrement starts.\n     * @hidden\n     */\n    @Input()\n    public startScroll: (keydown?: boolean) => {};\n\n    /**\n     * A callback function to be invoked when month increment/decrement stops.\n     * @hidden\n     */\n    @Input()\n    public stopScroll: (event: any) => {};\n\n    /**\n     * @hidden\n     */\n    private destroy$ = new Subject<boolean>();\n\n    constructor(private element: ElementRef, private zone: NgZone) { }\n\n    /**\n     * @hidden\n     */\n    public ngAfterViewInit() {\n\n        fromEvent(this.element.nativeElement, 'keyup').pipe(\n            debounce(() => interval(100)),\n            takeUntil(this.destroy$)\n        ).subscribe((event: KeyboardEvent) => {\n            this.stopScroll(event);\n        });\n\n        this.zone.runOutsideAngular(() => {\n            fromEvent(this.element.nativeElement, 'keydown').pipe(\n                tap((event: KeyboardEvent) => {\n                    if (event.key === KEYS.SPACE || event.key === KEYS.SPACE_IE || event.key === KEYS.ENTER) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }),\n                debounce(() => interval(100)),\n                takeUntil(this.destroy$)\n            ).subscribe((event: KeyboardEvent) => {\n                if (event.key === KEYS.SPACE || event.key === KEYS.SPACE_IE || event.key === KEYS.ENTER) {\n                    this.zone.run(() => this.startScroll(true));\n                }\n            });\n        });\n\n    }\n\n    /**\n     * @hidden\n     */\n    public ngOnDestroy() {\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('mousedown')\n    public onMouseDown() {\n        this.startScroll();\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('mouseup', ['$event'])\n    public onMouseUp(event: MouseEvent) {\n        this.stopScroll(event);\n    }\n}\n","import { Input, Output, EventEmitter, Directive } from '@angular/core';\nimport { WEEKDAYS, Calendar, isDateInRanges, IFormattingOptions, IFormattingViews } from './calendar';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { DateRangeDescriptor } from '../core/dates';\nimport { Subject } from 'rxjs';\nimport { isDate } from '../core/utils';\n\n/**\n * Sets the selction type - single, multi or range.\n */\nexport enum CalendarSelection {\n    SINGLE = 'single',\n    MULTI = 'multi',\n    RANGE = 'range'\n}\n\nexport enum ScrollMonth {\n    PREV = 'prev',\n    NEXT = 'next',\n    NONE = 'none'\n}\n\n/** @hidden @internal */\n@Directive({\n    selector: '[igxCalendarBase]',\n})\nexport class IgxCalendarBaseDirective implements ControlValueAccessor {\n    /**\n     * Gets the start day of the week.\n     * Can return a numeric or an enum representation of the week day.\n     * Defaults to `Sunday` / `0`.\n     */\n    @Input()\n    public get weekStart(): WEEKDAYS | number {\n        return this.calendarModel.firstWeekDay;\n    }\n\n    /**\n     * Sets the start day of the week.\n     * Can be assigned to a numeric value or to `WEEKDAYS` enum value.\n     */\n    public set weekStart(value: WEEKDAYS | number) {\n        this.calendarModel.firstWeekDay = value;\n    }\n\n    /**\n     * Gets the `locale` of the calendar.\n     * Default value is `\"en\"`.\n     */\n    @Input()\n    public get locale(): string {\n        return this._locale;\n    }\n\n    /**\n     * Sets the `locale` of the calendar.\n     * Expects a valid BCP 47 language tag.\n     * Default value is `\"en\"`.\n     */\n    public set locale(value: string) {\n        this._locale = value;\n        this.initFormatters();\n    }\n\n    /**\n     * Gets the date format options of the days view.\n     */\n    @Input()\n    public get formatOptions(): IFormattingOptions {\n        return this._formatOptions;\n    }\n\n    /**\n     * Sets the date format options of the days view.\n     * Default is { day: 'numeric', month: 'short', weekday: 'short', year: 'numeric' }\n     */\n    public set formatOptions(formatOptions: IFormattingOptions) {\n        this._formatOptions = Object.assign(this._formatOptions, formatOptions);\n        this.initFormatters();\n    }\n\n    /**\n     * Gets whether the `day`, `month` and `year` should be rendered\n     * according to the locale and formatOptions, if any.\n     */\n    @Input()\n    public get formatViews(): IFormattingViews {\n        return this._formatViews;\n    }\n\n    /**\n     * Gets whether the `day`, `month` and `year` should be rendered\n     * according to the locale and formatOptions, if any.\n     */\n    public set formatViews(formatViews: IFormattingViews) {\n        this._formatViews = Object.assign(this._formatViews, formatViews);\n    }\n\n    /**\n     *\n     * Gets the selection type.\n     * Default value is `\"single\"`.\n     * Changing the type of selection resets the currently\n     * selected values if any.\n     */\n    @Input()\n    public get selection(): string {\n        return this._selection;\n    }\n\n    /**\n     * Sets the selection.\n     */\n    public set selection(value: string) {\n        switch (value) {\n            case CalendarSelection.SINGLE:\n                this.selectedDates = null;\n                break;\n            case CalendarSelection.MULTI:\n            case CalendarSelection.RANGE:\n                this.selectedDates = [];\n                break;\n            default:\n                throw new Error('Invalid selection value');\n        }\n        this._onChangeCallback(this.selectedDates);\n        this.rangeStarted = false;\n        this._selection = value;\n    }\n\n    /**\n     * Gets the selected date(s).\n     *\n     * When selection is set to `single`, it returns\n     * a single `Date` object.\n     * Otherwise it is an array of `Date` objects.\n     */\n    @Input()\n    public get value(): Date | Date[] {\n        return this.selectedDates;\n    }\n\n    /**\n     * Sets the selected date(s).\n     *\n     * When selection is set to `single`, it accepts\n     * a single `Date` object.\n     * Otherwise it is an array of `Date` objects.\n     */\n    public set value(value: Date | Date[]) {\n        if (!value || !!value && (value as Date[]).length === 0) {\n            return;\n        }\n\n        this.selectDate(value);\n    }\n\n    /**\n     * Gets the date that is presented.\n     * By default it is the current date.\n     */\n    @Input()\n    public get viewDate(): Date {\n        return this._viewDate;\n    }\n\n    /**\n     * Sets the date that will be presented in the default view when the component renders.\n     */\n    public set viewDate(value: Date) {\n        this._viewDate = this.getDateOnly(value);\n    }\n\n    /**\n     * Gets the disabled dates descriptors.\n     */\n    @Input()\n    public get disabledDates(): DateRangeDescriptor[] {\n        return this._disabledDates;\n    }\n\n    /**\n     * Sets the disabled dates' descriptors.\n     * ```typescript\n     * @ViewChild(\"MyCalendar\")\n     * public calendar: IgxCalendarComponent;\n     * ngOnInit(){\n     *    this.calendar.disabledDates = [\n     *     {type: DateRangeType.Between, dateRange: [new Date(\"2020-1-1\"), new Date(\"2020-1-15\")]},\n     *     {type: DateRangeType.Weekends}];\n     * }\n     * ```\n     */\n    public set disabledDates(value: DateRangeDescriptor[]) {\n        this._disabledDates = value;\n    }\n\n    /**\n     * Gets the special dates descriptors.\n     */\n    @Input()\n    public get specialDates(): DateRangeDescriptor[] {\n        return this._specialDates;\n    }\n\n    /**\n     * Sets the special dates' descriptors.\n     * ```typescript\n     * @ViewChild(\"MyCalendar\")\n     * public calendar: IgxCalendarComponent;\n     * ngOnInit(){\n     *    this.calendar.specialDates = [\n     *     {type: DateRangeType.Between, dateRange: [new Date(\"2020-1-1\"), new Date(\"2020-1-15\")]},\n     *     {type: DateRangeType.Weekends}];\n     * }\n     * ```\n     */\n    public set specialDates(value: DateRangeDescriptor[]) {\n        this._specialDates = value;\n    }\n\n    /**\n     * Sets/gets whether the outside dates (dates that are out of the current month) will be hidden.\n     * Default value is `false`.\n     * ```html\n     * <igx-calendar [hideOutsideDays] = \"true\"></igx-calendar>\n     * ```\n     * ```typescript\n     * let hideOutsideDays = this.calendar.hideOutsideDays;\n     * ```\n     */\n\n    @Input()\n    public hideOutsideDays = false;\n\n    /**\n     * Emits an event when a date is selected.\n     * Provides reference the `selectedDates` property.\n     */\n    @Output()\n    public onSelection = new EventEmitter<Date | Date[]>();\n\n    /**\n     * @hidden\n     */\n    private _selection: CalendarSelection | string = CalendarSelection.SINGLE;\n\n    /**\n     * @hidden\n     */\n    public rangeStarted = false;\n\n    /**\n     * @hidden\n     */\n    private _locale = 'en';\n\n    /**\n     * @hidden\n     */\n    private _viewDate: Date;\n\n    /**\n     * @hidden\n     */\n    private _disabledDates: DateRangeDescriptor[] = null;\n\n    /**\n     * @hidden\n     */\n    private _specialDates: DateRangeDescriptor[] = null;\n\n    /**\n     * @hidden\n     */\n    private _formatOptions: IFormattingOptions = {\n        day: 'numeric',\n        month: 'short',\n        weekday: 'short',\n        year: 'numeric'\n    };\n\n    /**\n     * @hidden\n     */\n    private _formatViews: IFormattingViews = {\n        day: false,\n        month: true,\n        year: false\n    };\n\n    /**\n     * @hidden\n     */\n    protected formatterWeekday;\n\n    /**\n     * @hidden\n     */\n    protected formatterDay;\n\n    /**\n     * @hidden\n     */\n    protected formatterMonth;\n\n    /**\n     * @hidden\n     */\n    protected formatterYear;\n\n    /**\n     * @hidden\n     */\n    protected formatterMonthday;\n\n    /**\n     * @hidden\n     */\n    protected calendarModel: Calendar;\n\n    /**\n     * @hidden\n     */\n    public monthScrollDirection = ScrollMonth.NONE;\n\n    /**\n     * @hidden\n     */\n    public scrollMonth$ = new Subject();\n\n    /**\n     * @hidden\n     */\n    public stopMonthScroll$ = new Subject<boolean>();\n\n    /**\n     * @hidden\n     */\n    public startMonthScroll$ = new Subject();\n\n    /**\n     * @hidden\n     */\n    public selectedDates;\n\n    /**\n     * @hidden\n     */\n    protected _onTouchedCallback: () => void = () => { };\n    /**\n     * @hidden\n     */\n    protected _onChangeCallback: (_: Date) => void = () => { };\n\n    /**\n     * @hidden\n     */\n    constructor() {\n        this.calendarModel = new Calendar();\n\n        this.viewDate = this.viewDate ? this.viewDate : new Date();\n\n        this.calendarModel.firstWeekDay = this.weekStart;\n        this.initFormatters();\n    }\n\n    /**\n     * @hidden\n     */\n    private getDateOnlyInMs(date: Date) {\n        return this.getDateOnly(date).getTime();\n    }\n\n    /**\n     * @hidden\n     */\n    private generateDateRange(start: Date, end: Date): Date[] {\n        const result = [];\n        start = this.getDateOnly(start);\n        end = this.getDateOnly(end);\n        while (start.getTime() !== end.getTime()) {\n            start = this.calendarModel.timedelta(start, 'day', 1);\n            result.push(start);\n        }\n\n        return result;\n    }\n\n    /**\n     * Performs a single selection.\n     * @hidden\n     */\n    private selectSingle(value: Date) {\n        this.selectedDates = this.getDateOnly(value);\n        this._onChangeCallback(this.selectedDates);\n    }\n\n    /**\n     * Performs a multiple selection\n     * @hidden\n     */\n    private selectMultiple(value: Date | Date[]) {\n        if (Array.isArray(value)) {\n            const newDates = value.map(v => this.getDateOnly(v).getTime());\n            const selDates = this.selectedDates.map(v => this.getDateOnly(v).getTime());\n\n            if (JSON.stringify(newDates) === JSON.stringify(selDates)) {\n                return;\n            }\n\n            this.selectedDates = Array.from(new Set([...newDates, ...selDates])).map(v => new Date(v));\n        } else {\n            const valueDateOnly = this.getDateOnly(value);\n            const newSelection = [];\n            if (this.selectedDates.every((date: Date) => date.getTime() !== valueDateOnly.getTime())) {\n                newSelection.push(valueDateOnly);\n            } else {\n                this.selectedDates = this.selectedDates.filter(\n                    (date: Date) => date.getTime() !== valueDateOnly.getTime()\n                );\n            }\n\n            if (newSelection.length > 0) {\n                this.selectedDates = this.selectedDates.concat(newSelection);\n            }\n        }\n        this.selectedDates = this.selectedDates.filter(d => !this.isDateDisabled(d));\n        this.selectedDates.sort((a: Date, b: Date) => a.valueOf() - b.valueOf());\n        this._onChangeCallback(this.selectedDates);\n    }\n\n    /**\n     * @hidden\n     */\n    private selectRange(value: Date | Date[], excludeDisabledDates: boolean = false) {\n        let start: Date;\n        let end: Date;\n\n        if (Array.isArray(value)) {\n            // this.rangeStarted = false;\n            value.sort((a: Date, b: Date) => a.valueOf() - b.valueOf());\n            start = this.getDateOnly(value[0]);\n            end = this.getDateOnly(value[value.length - 1]);\n            this.selectedDates = [start, ...this.generateDateRange(start, end)];\n        } else {\n            if (!this.rangeStarted) {\n                this.rangeStarted = true;\n                this.selectedDates = [value];\n            } else {\n                this.rangeStarted = false;\n\n                if (this.selectedDates[0].getTime() === value.getTime()) {\n                    this.selectedDates = [];\n                    this._onChangeCallback(this.selectedDates);\n                    return;\n                }\n\n                this.selectedDates.push(value);\n                this.selectedDates.sort((a: Date, b: Date) => a.valueOf() - b.valueOf());\n\n                start = this.selectedDates.shift();\n                end = this.selectedDates.pop();\n                this.selectedDates = [start, ...this.generateDateRange(start, end)];\n            }\n        }\n\n        if (excludeDisabledDates) {\n            this.selectedDates = this.selectedDates.filter(d => !this.isDateDisabled(d));\n        }\n\n        this._onChangeCallback(this.selectedDates);\n    }\n\n    /**\n     * Performs a single deselection.\n     * @hidden\n     */\n    private deselectSingle(value: Date) {\n        if (this.selectedDates !== null &&\n            this.getDateOnlyInMs(value as Date) === this.getDateOnlyInMs(this.selectedDates)) {\n            this.selectedDates = null;\n            this._onChangeCallback(this.selectedDates);\n        }\n    }\n\n    /**\n     * Performs a multiple deselection.\n     * @hidden\n     */\n    private deselectMultiple(value: Date[]) {\n        value = value.filter(v => v !== null);\n        const selectedDatesCount = this.selectedDates.length;\n        const datesInMsToDeselect: Set<number> = new Set<number>(\n            value.map(v => this.getDateOnlyInMs(v)));\n\n        for (let i = this.selectedDates.length - 1; i >= 0; i--) {\n            if (datesInMsToDeselect.has(this.getDateOnlyInMs(this.selectedDates[i]))) {\n                this.selectedDates.splice(i, 1);\n            }\n        }\n\n        if (this.selectedDates.length !== selectedDatesCount) {\n            this._onChangeCallback(this.selectedDates);\n        }\n    }\n\n    /**\n     * Performs deselection of a single value, when selection is multi\n     * Usually performed by the selectMultiple method, but leads to bug when multiple months are in view\n     * @hidden\n     */\n    public deselectMultipleInMonth(value: Date) {\n        const valueDateOnly = this.getDateOnly(value);\n        this.selectedDates = this.selectedDates.filter(\n            (date: Date) => date.getTime() !== valueDateOnly.getTime()\n        );\n    }\n\n    /**\n     * Performs a range deselection.\n     * @hidden\n     */\n    private deselectRange(value: Date[]) {\n        value = value.filter(v => v !== null);\n        if (value.length < 1) {\n            return;\n        }\n\n        value.sort((a: Date, b: Date) => a.valueOf() - b.valueOf());\n        const valueStart = this.getDateOnlyInMs(value[0]);\n        const valueEnd = this.getDateOnlyInMs(value[value.length - 1]);\n\n        this.selectedDates.sort((a: Date, b: Date) => a.valueOf() - b.valueOf());\n        const selectedDatesStart = this.getDateOnlyInMs(this.selectedDates[0]);\n        const selectedDatesEnd = this.getDateOnlyInMs(this.selectedDates[this.selectedDates.length - 1]);\n\n        if (!(valueEnd < selectedDatesStart) && !(valueStart > selectedDatesEnd)) {\n            this.selectedDates = [];\n            this.rangeStarted = false;\n            this._onChangeCallback(this.selectedDates);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    protected initFormatters() {\n        this.formatterDay = new Intl.DateTimeFormat(this._locale, { day: this._formatOptions.day });\n        this.formatterWeekday = new Intl.DateTimeFormat(this._locale, { weekday: this._formatOptions.weekday });\n        this.formatterMonth = new Intl.DateTimeFormat(this._locale, { month: this._formatOptions.month });\n        this.formatterYear = new Intl.DateTimeFormat(this._locale, { year: this._formatOptions.year });\n        this.formatterMonthday = new Intl.DateTimeFormat(this._locale, { month: this._formatOptions.month, day: this._formatOptions.day });\n    }\n\n    /**\n     * @hidden\n     */\n    protected getDateOnly(date: Date) {\n        return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n    }\n\n    /**\n     * @hidden\n     */\n    public registerOnChange(fn: (v: Date) => void) {\n        this._onChangeCallback = fn;\n    }\n\n    /**\n     * @hidden\n     */\n    public registerOnTouched(fn: () => void) {\n        this._onTouchedCallback = fn;\n    }\n\n    /**\n     * @hidden\n     */\n    public writeValue(value: Date | Date[]) {\n        this.selectDate(value as Date);\n    }\n\n    /**\n     * Checks whether a date is disabled.\n     * @hidden\n     */\n    public isDateDisabled(date: Date) {\n        if (this.disabledDates === null) {\n            return false;\n        }\n\n        return isDateInRanges(date, this.disabledDates);\n    }\n\n    /**\n     * Selects date(s) (based on the selection type).\n     */\n    public selectDate(value: Date | Date[]) {\n        if (value === null || value === undefined || (Array.isArray(value) && value.length === 0)) {\n            return;\n        }\n\n        switch (this.selection) {\n            case CalendarSelection.SINGLE:\n                if (isDate(value) && !this.isDateDisabled(value as Date)) {\n                    this.selectSingle(value as Date);\n                }\n                break;\n            case CalendarSelection.MULTI:\n                this.selectMultiple(value);\n                break;\n            case CalendarSelection.RANGE:\n                this.selectRange(value, true);\n                break;\n        }\n    }\n\n    /**\n     * Deselects date(s) (based on the selection type).\n     */\n    public deselectDate(value?: Date | Date[]) {\n        if (!this.selectedDates || this.selectedDates.length === 0) {\n            return;\n        }\n\n        if (value === null || value === undefined) {\n            this.selectedDates = this.selection === CalendarSelection.SINGLE ? null : [];\n            this.rangeStarted = false;\n            this._onChangeCallback(this.selectedDates);\n            return;\n        }\n\n        switch (this.selection) {\n            case CalendarSelection.SINGLE:\n                this.deselectSingle(value as Date);\n                break;\n            case CalendarSelection.MULTI:\n                this.deselectMultiple(value as Date[]);\n                break;\n            case CalendarSelection.RANGE:\n                this.deselectRange(value as Date[]);\n                break;\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public selectDateFromClient(value: Date) {\n        switch (this.selection) {\n            case CalendarSelection.SINGLE:\n            case CalendarSelection.MULTI:\n                this.selectDate(value);\n                break;\n            case CalendarSelection.RANGE:\n                this.selectRange(value, true);\n                break;\n        }\n    }\n}\n","import { IgxCalendarBaseDirective } from './calendar-base';\nimport { HostBinding, Directive, ViewChildren, ElementRef, QueryList } from '@angular/core';\nimport { KEYS } from '../core/utils';\n\n/**\n * Sets the calender view - days, months or years.\n */\nexport enum CalendarView {\n    DEFAULT,\n    YEAR,\n    DECADE\n}\n\n@Directive({\n    selector: '[igxMonthPickerBase]'\n})\nexport class IgxMonthPickerBaseDirective extends IgxCalendarBaseDirective {\n\n    /**\n     * Holds month view index we are operating on.\n     */\n    protected activeViewIdx = 0;\n\n    /**\n     * The default `tabindex` attribute for the component.\n     *\n     * @hidden\n     */\n    @HostBinding('attr.tabindex')\n    public tabindex = 0;\n\n    /**\n     * @hidden\n     */\n    @ViewChildren('yearsBtn')\n    public yearsBtns: QueryList<ElementRef>;\n\n\n    /**\n     * Gets the current active view.\n     */\n    public get activeView(): CalendarView {\n        return this._activeView;\n    }\n\n    /**\n     * Sets the current active view.\n     */\n    public set activeView(val: CalendarView) {\n        this._activeView = val;\n    }\n\n    /**\n     * @hidden\n     */\n    public get isDefaultView(): boolean {\n        return this._activeView === CalendarView.DEFAULT;\n    }\n\n    /**\n     * @hidden\n     */\n    public get isDecadeView(): boolean {\n        return this._activeView === CalendarView.DECADE;\n    }\n\n    /**\n     * @hidden\n     */\n    private _activeView = CalendarView.DEFAULT;\n\n    /**\n     * @hidden\n     */\n    public changeYear(event: Date) {\n        this.viewDate = this.calendarModel.getFirstViewDate(event, 'month', this.activeViewIdx);\n        this.activeView = CalendarView.DEFAULT;\n\n        requestAnimationFrame(() => {\n            if (this.yearsBtns && this.yearsBtns.length) {\n                this.yearsBtns.find((e: ElementRef, idx: number) => idx === this.activeViewIdx).nativeElement.focus();\n            }\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    public activeViewDecade(activeViewIdx = 0): void {\n        this._activeView = CalendarView.DECADE;\n        this.activeViewIdx = activeViewIdx;\n    }\n\n    /**\n     * @hidden\n     */\n    public activeViewDecadeKB(event, activeViewIdx = 0) {\n        if (event.key === KEYS.SPACE || event.key === KEYS.SPACE_IE || event.key === KEYS.ENTER) {\n            event.preventDefault();\n            this.activeViewDecade(activeViewIdx);\n        }\n    }\n\n    /**\n     * Returns the locale representation of the year in the year view if enabled,\n     * otherwise returns the default `Date.getFullYear()` value.\n     *\n     * @hidden\n     */\n    public formattedYear(value: Date): string {\n        if (this.formatViews.year) {\n            return this.formatterYear.format(value);\n        }\n        return `${value.getFullYear()}`;\n    }\n}\n","import {\n    Component,\n    Output,\n    EventEmitter,\n    Input,\n    HostBinding,\n    HostListener,\n    ViewChildren,\n    QueryList,\n    ElementRef\n} from '@angular/core';\nimport { Calendar } from '../calendar';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IgxCalendarMonthDirective } from '../calendar.directives';\n\nlet NEXT_ID = 0;\n\n@Component({\n    providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: IgxMonthsViewComponent, multi: true }],\n    selector: 'igx-months-view',\n    templateUrl: 'months-view.component.html'\n})\nexport class IgxMonthsViewComponent implements ControlValueAccessor {\n    /**\n     * Sets/gets the `id` of the months view.\n     * If not set, the `id` will have value `\"igx-months-view-0\"`.\n     * ```html\n     * <igx-months-view id=\"my-months-view\"></igx-months-view>\n     * ```\n     * ```typescript\n     * let monthsViewId =  this.monthsView.id;\n     * ```\n     * @memberof IgxMonthsViewComponent\n     */\n    @HostBinding('attr.id')\n    @Input()\n    public id = `igx-months-view-${NEXT_ID++}`;\n\n    /**\n     * Gets/sets the selected date of the months view.\n     * By default it is the current date.\n     * ```html\n     * <igx-months-view [date]=\"myDate\"></igx-months-view>\n     * ```\n     * ```typescript\n     * let date =  this.monthsView.date;\n     * ```\n     * @memberof IgxMonthsViewComponent\n     */\n    @Input()\n    public date = new Date();\n\n    /**\n     * Gets the month format option of the months view.\n     * ```typescript\n     * let monthFormat = this.monthsView.monthFormat.\n     * ```\n     */\n    @Input()\n    public get monthFormat(): string {\n        return this._monthFormat;\n    }\n\n    /**\n     * Sets the month format option of the months view.\n     * ```html\n     * <igx-months-view> [monthFormat] = \"short'\"</igx-months-view>\n     * ```\n     * @memberof IgxMonthsViewComponent\n     */\n    public set monthFormat(value: string) {\n        this._monthFormat = value;\n        this.initMonthFormatter();\n    }\n\n    /**\n     * Gets the `locale` of the months view.\n     * Default value is `\"en\"`.\n     * ```typescript\n     * let locale =  this.monthsView.locale;\n     * ```\n     * @memberof IgxMonthsViewComponent\n     */\n    @Input()\n    public get locale(): string {\n        return this._locale;\n    }\n\n    /**\n     * Sets the `locale` of the months view.\n     * Expects a valid BCP 47 language tag.\n     * Default value is `\"en\"`.\n     * ```html\n     * <igx-months-view [locale]=\"de\"></igx-months-view>\n     * ```\n     * @memberof IgxMonthsViewComponent\n     */\n    public set locale(value: string) {\n        this._locale = value;\n        this.initMonthFormatter();\n    }\n\n    /**\n     * Gets/sets whether the view should be rendered\n     * according to the locale and monthFormat, if any.\n     */\n    @Input()\n    public formatView = true;\n\n    /**\n     * Emits an event when a selection is made in the months view.\n     * Provides reference the `date` property in the `IgxMonthsViewComponent`.\n     * ```html\n     * <igx-months-view (onSelection)=\"onSelection($event)\"></igx-months-view>\n     * ```\n     * @memberof IgxMonthsViewComponent\n     */\n    @Output()\n    public onSelection = new EventEmitter<Date>();\n\n    /**\n     * The default css class applied to the component.\n     *\n     * @hidden\n     */\n    @HostBinding('class.igx-calendar')\n    public styleClass = true;\n\n    /**\n     * @hidden\n     */\n    @ViewChildren(IgxCalendarMonthDirective, { read: IgxCalendarMonthDirective })\n    public monthsRef: QueryList<IgxCalendarMonthDirective>;\n\n\n    /**\n     * The default `tabindex` attribute for the component.\n     *\n     * @hidden\n     */\n    @HostBinding('attr.tabindex')\n    public tabindex = 0;\n\n    /**\n     * Returns an array of date objects which are then used to\n     * properly render the month names.\n     *\n     * Used in the template of the component\n     *\n     * @hidden\n     */\n    get months(): Date[] {\n        let start = new Date(this.date.getFullYear(), 0, 1);\n        const result = [];\n\n        for (let i = 0; i < 12; i++) {\n            result.push(start);\n            start = this._calendarModel.timedelta(start, 'month', 1);\n        }\n\n        return result;\n    }\n\n    /**\n     * @hidden\n     */\n    private _formatterMonth: any;\n\n    /**\n     * @hidden\n     */\n    private _locale = 'en';\n\n    /**\n     * @hidden\n     */\n    private _monthFormat = 'short';\n\n    /**\n     * @hidden\n     */\n    private _calendarModel: Calendar;\n\n    /**\n     * @hidden\n     */\n    private _onTouchedCallback: () => void = () => { };\n    /**\n     * @hidden\n     */\n    private _onChangeCallback: (_: Date) => void = () => { };\n\n    constructor(public el: ElementRef) {\n        this.initMonthFormatter();\n        this._calendarModel = new Calendar();\n    }\n\n    /**\n     * Returns the locale representation of the month in the months view.\n     *\n     * @hidden\n     */\n    public formattedMonth(value: Date): string {\n        if (this.formatView) {\n            return this._formatterMonth.format(value);\n        }\n        return `${value.getMonth()}`;\n    }\n\n    /**\n     * @hidden\n     */\n    public selectMonth(event) {\n        this.onSelection.emit(event);\n\n        this.date = event;\n        this._onChangeCallback(this.date);\n    }\n\n    /**\n     * @hidden\n     */\n    public registerOnChange(fn: (v: Date) => void) {\n        this._onChangeCallback = fn;\n    }\n\n    /**\n     * @hidden\n     */\n    public registerOnTouched(fn: () => void) {\n        this._onTouchedCallback = fn;\n    }\n\n    /**\n     * @hidden\n     */\n    public writeValue(value: Date) {\n        if (value) {\n            this.date = value;\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public monthTracker(index, item): string {\n        return `${item.getMonth()}}`;\n    }\n\n    /**\n     * @hidden\n     */\n    private initMonthFormatter() {\n        this._formatterMonth = new Intl.DateTimeFormat(this._locale, { month: this.monthFormat });\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('keydown.arrowup', ['$event'])\n    public onKeydownArrowUp(event: KeyboardEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const node = this.monthsRef.find((date) => date.nativeElement === event.target);\n        if (!node) {\n            return;\n        }\n\n        const months = this.monthsRef.toArray();\n        const nodeRect = node.nativeElement.getBoundingClientRect();\n\n        for (let index = months.indexOf(node) - 1; index >= 0; index--) {\n            const nextNodeRect = months[index].nativeElement.getBoundingClientRect();\n            const tolerance = 6;\n            if (nodeRect.top !== nextNodeRect.top && (nextNodeRect.left - nodeRect.left) < tolerance) {\n                months[index].nativeElement.focus();\n                break;\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('keydown.arrowdown', ['$event'])\n    public onKeydownArrowDown(event: KeyboardEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const node = this.monthsRef.find((date) => date.nativeElement === event.target);\n        if (!node) {\n            return;\n        }\n\n        const months = this.monthsRef.toArray();\n        const nodeRect = node.nativeElement.getBoundingClientRect();\n\n        for (let index = months.indexOf(node) + 1; index < months.length; index++) {\n            const nextNodeRect = months[index].nativeElement.getBoundingClientRect();\n            const tolerance = 6;\n            if (nextNodeRect.top !== nodeRect.top && (nodeRect.left - nextNodeRect.left) < tolerance ) {\n                months[index].nativeElement.focus();\n                break;\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('keydown.arrowright', ['$event'])\n    public onKeydownArrowRight(event: KeyboardEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const node = this.monthsRef.find((date) => date.nativeElement === event.target);\n        if (!node) { return; }\n\n        const months = this.monthsRef.toArray();\n        if (months.indexOf(node) + 1 < months.length) {\n            const month = months[months.indexOf(node) + 1];\n\n            month.nativeElement.focus();\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('keydown.arrowleft', ['$event'])\n    public onKeydownArrowLeft(event: KeyboardEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const node = this.monthsRef.find((date) => date.nativeElement === event.target);\n        if (!node) { return; }\n\n        const months = this.monthsRef.toArray();\n        if (months.indexOf(node) - 1 >= 0) {\n            const month = months[months.indexOf(node) - 1];\n\n            month.nativeElement.focus();\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('keydown.home', ['$event'])\n    public onKeydownHome(event: KeyboardEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const month = this.monthsRef.toArray()[0];\n\n        month.nativeElement.focus();\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('keydown.end', ['$event'])\n    public onKeydownEnd(event: KeyboardEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const months = this.monthsRef.toArray();\n        const month = months[months.length - 1];\n\n        month.nativeElement.focus();\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('keydown.enter', ['$event'])\n    public onKeydownEnter(event) {\n        const value = this.monthsRef.find((date) => date.nativeElement === event.target).value;\n        this.date = new Date(value.getFullYear(), value.getMonth(), this.date.getDate());\n\n        this.onSelection.emit(this.date);\n        this._onChangeCallback(this.date);\n    }\n}\n","import { Component, Output, EventEmitter, Input, HostBinding, HostListener, ElementRef, Injectable} from '@angular/core';\nimport { range, Calendar } from '../calendar';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { HammerGestureConfig, HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\n\nlet NEXT_ID = 0;\n\n@Injectable()\nexport class CalendarHammerConfig extends HammerGestureConfig {\n    public overrides = {\n        pan: { direction: Hammer.DIRECTION_VERTICAL, threshold: 1 }\n    };\n}\n\n@Component({\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: IgxYearsViewComponent,\n            multi: true\n        },\n        {\n            provide: HAMMER_GESTURE_CONFIG,\n            useClass: CalendarHammerConfig\n        }\n    ],\n    selector: 'igx-years-view',\n    templateUrl: 'years-view.component.html'\n})\nexport class IgxYearsViewComponent implements ControlValueAccessor {\n\n    /**\n     * Sets/gets the `id` of the years view.\n     * If not set, the `id` will have value `\"igx-years-view-0\"`.\n     * ```html\n     * <igx-years-view id = \"my-years-view\"></igx-years-view>\n     * ```\n     * ```typescript\n     * let yearsViewId =  this.yearsView.id;\n     * ```\n     * @memberof IgxCalendarComponent\n     */\n    @HostBinding('attr.id')\n    @Input()\n    public id = `igx-years-view-${NEXT_ID++}`;\n\n    /**\n     * Gets/sets the selected date of the years view.\n     * By default it is the current date.\n     * ```html\n     * <igx-years-view [date]=\"myDate\"></igx-years-view>\n     * ```\n     * ```typescript\n     * let date =  this.yearsView.date;\n     * ```\n     * @memberof IgxYearsViewComponent\n     */\n    @Input()\n    public date = new Date();\n\n    /**\n     * Gets the year format option of the years view.\n     * ```typescript\n     * let yearFormat = this.yearsView.yearFormat.\n     * ```\n     */\n    @Input()\n    public get yearFormat(): string {\n        return this._yearFormat;\n    }\n\n    /**\n     * Sets the year format option of the years view.\n     * ```html\n     * <igx-years-view [yearFormat]=\"numeric\"></igx-years-view>\n     * ```\n     * @memberof IgxYearsViewComponent\n     */\n    public set yearFormat(value: string) {\n        this._yearFormat = value;\n        this.initYearFormatter();\n    }\n\n    /**\n     * Gets the `locale` of the years view.\n     * Default value is `\"en\"`.\n     * ```typescript\n     * let locale =  this.yearsView.locale;\n     * ```\n     * @memberof IgxYearsViewComponent\n     */\n    @Input()\n    public get locale(): string {\n        return this._locale;\n    }\n\n    /**\n     * Sets the `locale` of the years view.\n     * Expects a valid BCP 47 language tag.\n     * Default value is `\"en\"`.\n     * ```html\n     * <igx-years-view [locale]=\"de\"></igx-years-view>\n     * ```\n     * @memberof IgxYearsViewComponent\n     */\n    public set locale(value: string) {\n        this._locale = value;\n        this.initYearFormatter();\n    }\n\n    /**\n     * Gets/sets whether the view should be rendered\n     * according to the locale and yearFormat, if any.\n     */\n    @Input()\n    public formatView: boolean;\n\n    /**\n     * Emits an event when a selection is made in the years view.\n     * Provides reference the `date` property in the `IgxYearsViewComponent`.\n     * ```html\n     * <igx-years-view (onSelection)=\"onSelection($event)\"></igx-years-view>\n     * ```\n     * @memberof IgxYearsViewComponent\n     */\n    @Output()\n    public onSelection = new EventEmitter<Date>();\n\n    /**\n     * The default css class applied to the component.\n     *\n     * @hidden\n     */\n    @HostBinding('class.igx-calendar')\n    public styleClass = true;\n\n    /**\n     * The default `tabindex` attribute for the component.\n     *\n     * @hidden\n     */\n    @HostBinding('attr.tabindex')\n    public tabindex = 0;\n\n    /**\n     * Returns an array of date objects which are then used to properly\n     * render the years.\n     *\n     * Used in the template of the component.\n     *\n     * @hidden\n     */\n    get decade(): number[] {\n        const result = [];\n        const start = this.date.getFullYear() - 3;\n        const end = this.date.getFullYear() + 4;\n\n        for (const year of range(start, end)) {\n            result.push(new Date(year, this.date.getMonth(), this.date.getDate()));\n        }\n\n        return result;\n    }\n\n    /**\n     * @hidden\n     */\n    private _formatterYear: any;\n\n    /**\n     * @hidden\n     */\n    private _locale = 'en';\n\n    /**\n     * @hidden\n     */\n    private _yearFormat = 'numeric';\n\n    /**\n     * @hidden\n     */\n    private _calendarModel: Calendar;\n\n    /**\n     * @hidden\n     */\n    private _onTouchedCallback: () => void = () => { };\n    /**\n     * @hidden\n     */\n    private _onChangeCallback: (_: Date) => void = () => { };\n\n    constructor(public el: ElementRef) {\n        this.initYearFormatter();\n        this._calendarModel = new Calendar();\n    }\n\n    /**\n     * Returns the locale representation of the year in the years view.\n     *\n     * @hidden\n     */\n    public formattedYear(value: Date): string {\n        if (this.formatView) {\n            return this._formatterYear.format(value);\n        }\n        return `${value.getFullYear()}`;\n    }\n\n    /**\n     * @hidden\n     */\n    public selectYear(event) {\n        this.date = event;\n\n        this.onSelection.emit(this.date);\n        this._onChangeCallback(this.date);\n    }\n\n    /**\n     * @hidden\n     */\n    public scroll(event) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const delta = event.deltaY < 0 ? -1 : 1;\n        this.generateYearRange(delta);\n    }\n\n    /**\n     * @hidden\n     */\n    public pan(event) {\n        const delta = event.deltaY < 0 ? 1 : -1;\n        this.generateYearRange(delta);\n    }\n\n    /**\n     * @hidden\n     */\n    public registerOnChange(fn: (v: Date) => void) {\n        this._onChangeCallback = fn;\n    }\n\n    /**\n     * @hidden\n     */\n    public registerOnTouched(fn: () => void) {\n        this._onTouchedCallback = fn;\n    }\n\n    /**\n     * @hidden\n     */\n    public yearTracker(index, item): string {\n        return `${item.getFullYear()}}`;\n    }\n\n    /**\n     * @hidden\n     */\n    public writeValue(value: Date) {\n        if (value) {\n            this.date = value;\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('keydown.arrowdown', ['$event'])\n    public onKeydownArrowDown(event: KeyboardEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.generateYearRange(1);\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('keydown.arrowup', ['$event'])\n    public onKeydownArrowUp(event: KeyboardEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.generateYearRange(-1);\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('keydown.enter')\n    public onKeydownEnter() {\n        this.onSelection.emit(this.date);\n        this._onChangeCallback(this.date);\n    }\n\n    /**\n     * @hidden\n     */\n    private initYearFormatter() {\n        this._formatterYear = new Intl.DateTimeFormat(this._locale, { year: this.yearFormat });\n    }\n\n    /**\n     * @hidden\n     */\n    private generateYearRange(delta: number) {\n        const currentYear = new Date().getFullYear();\n\n        if ((delta > 0 && this.date.getFullYear() - currentYear >= 95) ||\n            (delta < 0 && currentYear - this.date.getFullYear() >= 95)) {\n            return;\n        }\n        this.date = this._calendarModel.timedelta(this.date, 'year', delta);\n    }\n}\n","import { Component, Input, Output, EventEmitter, HostBinding, ElementRef, HostListener } from '@angular/core';\nimport { ICalendarDate, isDateInRanges } from '../calendar';\nimport { DateRangeDescriptor } from '../../core/dates';\nimport { CalendarSelection } from '../calendar-base';\n\n/**\n * @hidden\n */\n@Component({\n    selector: 'igx-day-item',\n    templateUrl: 'day-item.component.html'\n})\nexport class IgxDayItemComponent {\n    @Input()\n    public date: ICalendarDate;\n\n    @Input()\n    public selection: string;\n\n    /**\n     * Returns boolean indicating if the day is selected\n     *\n     */\n    @Input()\n    public get selected(): any {\n        return this._selected;\n    }\n\n    /**\n     * Selects the day\n     */\n    public set selected(value: any) {\n        this._selected = value;\n    }\n\n    @Input()\n    public disabledDates: DateRangeDescriptor[];\n\n    @Input()\n    public outOfRangeDates: DateRangeDescriptor[];\n\n    @Input()\n    public specialDates: DateRangeDescriptor[];\n\n    @Input()\n    public hideOutsideDays = false;\n\n    @Input()\n    @HostBinding('class.igx-calendar__date--last')\n    public isLastInRange = false;\n\n    @Input()\n    @HostBinding('class.igx-calendar__date--first')\n    public isFirstInRange = false;\n\n    @Input()\n    public isWithinRange = false;\n\n    @Output()\n    public onDateSelection = new EventEmitter<ICalendarDate>();\n\n    public get isCurrentMonth(): boolean {\n        return this.date.isCurrentMonth;\n    }\n\n    public get isPreviousMonth(): boolean {\n        return this.date.isPrevMonth;\n    }\n\n    public get isNextMonth(): boolean {\n        return this.date.isNextMonth;\n    }\n\n    public get nativeElement() {\n        return this.elementRef.nativeElement;\n    }\n\n    @HostBinding('class.igx-calendar__date--selected')\n    public get isSelectedCSS(): boolean {\n        return (!this.isDisabled && this.selected);\n    }\n\n    @HostBinding('class.igx-calendar__date--inactive')\n    public get isInactive(): boolean {\n        return this.date.isNextMonth || this.date.isPrevMonth;\n    }\n\n    @HostBinding('class.igx-calendar__date--hidden')\n    public get isHidden(): boolean {\n        return this.hideOutsideDays && this.isInactive;\n    }\n\n    @HostBinding('class.igx-calendar__date--current')\n    public get isToday(): boolean {\n        const today = new Date(Date.now());\n        const date = this.date.date;\n        return (date.getFullYear() === today.getFullYear() &&\n            date.getMonth() === today.getMonth() &&\n            date.getDate() === today.getDate()\n        );\n    }\n\n    @HostBinding('class.igx-calendar__date--weekend')\n    public get isWeekend(): boolean {\n        const day = this.date.date.getDay();\n        return day === 0 || day === 6;\n    }\n\n    public get isDisabled(): boolean {\n        if (this.disabledDates === null) {\n            return false;\n        }\n\n        return isDateInRanges(this.date.date, this.disabledDates);\n    }\n\n    public get isOutOfRange(): boolean {\n        if (!this.outOfRangeDates) {\n            return false;\n        }\n\n        return isDateInRanges(this.date.date, this.outOfRangeDates);\n    }\n\n    public get isFocusable(): boolean {\n        return this.isCurrentMonth && !this.isHidden && !this.isDisabled && !this.isOutOfRange;\n    }\n\n    @HostBinding('class.igx-calendar__date--range')\n    public get isWithinRangeCSS(): boolean {\n        return !this.isSingleSelection && this.isWithinRange;\n    }\n\n    @HostBinding('class.igx-calendar__date--special')\n    public get isSpecial(): boolean {\n        if (this.specialDates === null) {\n            return false;\n        }\n\n        return isDateInRanges(this.date.date, this.specialDates);\n    }\n\n    @HostBinding('class.igx-calendar__date')\n    public get defaultCSS(): boolean {\n        return this.date.isCurrentMonth && !(this.isWeekend && this.selected);\n    }\n\n    @HostBinding('class.igx-calendar__date--disabled')\n    public get isDisabledCSS(): boolean {\n        return this.isHidden || this.isDisabled || this.isOutOfRange;\n    }\n\n    @HostBinding('class.igx-calendar__date--single')\n    public get isSingleSelection(): boolean {\n        return this.selection !== CalendarSelection.RANGE;\n    }\n\n    @HostBinding('attr.tabindex')\n    public get tabindex(): number {\n        return this.isDisabled || this.isHidden ? -1 : 0;\n    }\n\n    private _selected = false;\n\n    constructor(private elementRef: ElementRef) { }\n\n    @HostListener('click')\n    @HostListener('keydown.enter')\n    public onSelect() {\n        this.onDateSelection.emit(this.date);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { IgxDayItemComponent } from './day-item.component';\nimport { IgxDaysViewComponent } from './days-view.component';\nimport { ScrollMonth } from '../calendar-base';\n\nenum Direction {\n    Up = 'ArrowUp',\n    Down = 'ArrowDown',\n    Left = 'ArrowLeft',\n    Right = 'ArrowRight',\n}\n\nconst ARROW = 'Arrow';\n\n/** @hidden */\n@Injectable()\nexport class IgxDaysViewNavigationService {\n    public monthView: IgxDaysViewComponent;\n    /**\n     * Implements kb navigation in all MoveDirections. nextDate and nextMonthView naming convention is used for both previous/next\n     * @hidden\n     */\n    public focusNextDate(target: HTMLElement, key: string, nextView = false) {\n        if (target.childElementCount === 0) { target = target.parentElement; }\n        if (key.indexOf('Arrow') === -1) { key = ARROW.concat(key); }\n        const monthView = this.monthView;\n        const node = monthView.dates.find((date) => date.nativeElement === target);\n        let dates = monthView.dates.toArray(),\n            day: IgxDayItemComponent, step, i, nextDate: Date;\n        const index = dates.indexOf(node);\n\n        if (!node) { return; }\n\n        // focus item in current month\n        switch (key) {\n            case Direction.Left: {\n                step = -1;\n                nextDate = this.timedelta(node.date.date, step);\n                for (i = index; i > 0; i--) {\n                    day = nextView ? dates[i] : dates[i - 1];\n                    nextDate = day.date.date;\n                    if (day.date.isPrevMonth) {\n                        break;\n                    }\n                    if (day && day.isFocusable) {\n                        day.nativeElement.focus();\n                        return;\n                    }\n                }\n                break;\n            }\n            case Direction.Right: {\n                step = 1;\n                nextDate = this.timedelta(node.date.date, step);\n                for (i = index; i < dates.length - 1; i++) {\n                    day = nextView ? dates[i] : dates[i + 1];\n                    nextDate = day.date.date;\n                    if (day.date.isNextMonth) {\n                        break;\n                    }\n                    if (day && day.isFocusable) {\n                        day.nativeElement.focus();\n                        return;\n                    }\n                }\n                break;\n            }\n            case Direction.Up: {\n                step = -7;\n                nextDate = this.timedelta(node.date.date, step);\n                for (i = index; i - 7 > -1; i -= 7) {\n                    day = nextView ? dates[i] : dates[i - 7];\n                    nextDate = day.date.date;\n                    if (day.date.isPrevMonth) {\n                        break;\n                    }\n                    if (day && day.isFocusable) {\n                        day.nativeElement.focus();\n                        return;\n                    }\n                }\n                break;\n            }\n            case Direction.Down: {\n                step = 7;\n                nextDate = this.timedelta(node.date.date, step);\n                for (i = index; i + 7 < 42; i += 7) {\n                    day = nextView ? dates[i] : dates[i + 7];\n                    nextDate = day.date.date;\n                    if (day.date.isNextMonth) {\n                        break;\n                    }\n                    if (day && day.isFocusable) {\n                        day.nativeElement.focus();\n                        return;\n                    }\n                }\n                break;\n            }\n        }\n\n        // focus item in prev/next visible month\n        const nextMonthView = step > 0 ? monthView.nextMonthView : monthView.prevMonthView;\n        if (nextMonthView) {\n            dates = nextMonthView.dates.toArray();\n            day = dates.find((item) => item.date.date.getTime() === nextDate.getTime());\n\n            if (day && day.isFocusable) {\n                day.nativeElement.focus();\n                return;\n            }\n            nextMonthView.daysNavService.focusNextDate(day.nativeElement, key);\n        }\n\n        // if iterating in the visible prev/next moths above found a day that is not focusable, ie is disabled, hidden, etc\n        // then it is needed to recalculate the next day, which is going to be part of the prev/next months\n        if (day && !day.isFocusable) {\n            day = dates[i + step];\n            if (!day) {\n                nextDate = this.timedelta(node.date.date, step + i - index);\n            }\n        }\n\n        // focus item in prev/next month, which is currently out of view\n        let dayIsNextMonth: boolean; // determine what we need to check for next date - if it belongs to prev or next month\n        if (day) { dayIsNextMonth = step > 0 ? day.date.isNextMonth : day.date.isPrevMonth; }\n        if (monthView.changeDaysView && !nextMonthView && ((day && dayIsNextMonth) || !day)) {\n            const monthAction = step > 0 ? ScrollMonth.NEXT : ScrollMonth.PREV;\n            monthView.onViewChanging.emit({monthAction: monthAction, key: key, nextDate: nextDate});\n        }\n    }\n\n    /**\n     * Focuses first focusable day in the month. Will go to next visible month, if no day in the first month is focusable\n     * @hidden\n     */\n    public focusHomeDate() {\n        let monthView = this.monthView;\n        while (!this.focusFirstDay(monthView) && monthView.nextMonthView) {\n            monthView = monthView.nextMonthView;\n        }\n    }\n\n    /**\n     * Focuses last focusable day in the month. Will go to previous visible month, if no day in the first month is focusable\n     * @hidden\n     */\n    public focusEndDate() {\n        let monthView = this.monthView;\n        while (!this.focusLastDay(monthView) && monthView.prevMonthView) {\n            monthView = monthView.prevMonthView;\n        }\n    }\n\n    private timedelta(date: Date, units: number): Date {\n        const ret = new Date(date);\n        ret.setDate(ret.getDate() + units);\n        return ret;\n    }\n\n    private focusFirstDay(monthView: IgxDaysViewComponent): boolean {\n        const dates = monthView.dates.filter(d => d.isCurrentMonth);\n        for (let i = 0; i < dates.length; i++) {\n            if (dates[i].isFocusable) {\n                dates[i].nativeElement.focus();\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private focusLastDay(monthView: IgxDaysViewComponent): boolean {\n        const dates = monthView.dates.filter(d => d.isCurrentMonth);\n        for (let i = dates.length - 1; i >= 0; i--) {\n            if (dates[i].isFocusable) {\n                dates[i].nativeElement.focus();\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","import {\n    Component,\n    Output,\n    EventEmitter,\n    Input,\n    HostListener,\n    ViewChildren,\n    QueryList,\n    HostBinding,\n    DoCheck,\n    OnInit\n} from '@angular/core';\nimport { ICalendarDate, isDateInRanges } from '../../calendar/calendar';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IgxDayItemComponent } from './day-item.component';\nimport { DateRangeDescriptor, DateRangeType } from '../../core/dates';\nimport { IgxCalendarBaseDirective, CalendarSelection } from '../calendar-base';\nimport { isEqual } from '../../core/utils';\nimport { IViewChangingEventArgs } from './days-view.interface';\nimport { IgxDaysViewNavigationService } from '../days-view/daysview-navigation.service';\n\nlet NEXT_ID = 0;\n\n@Component({\n    providers: [\n        {\n            multi: true,\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: IgxDaysViewComponent\n        },\n        { provide: IgxDaysViewNavigationService, useClass: IgxDaysViewNavigationService }\n    ],\n    selector: 'igx-days-view',\n    templateUrl: 'days-view.component.html'\n})\nexport class IgxDaysViewComponent extends IgxCalendarBaseDirective implements DoCheck, OnInit {\n    /**\n     * Sets/gets the `id` of the days view.\n     * If not set, the `id` will have value `\"igx-days-view-0\"`.\n     * ```html\n     * <igx-days-view id=\"my-days-view\"></igx-days-view>\n     * ```\n     * ```typescript\n     * let daysViewId =  this.daysView.id;\n     * ```\n     */\n    @HostBinding('attr.id')\n    @Input()\n    public id = `igx-days-view-${NEXT_ID++}`;\n\n    /**\n     * @hidden\n     */\n    @Input()\n    public changeDaysView = false;\n\n    /**\n     * @hidden\n     */\n    @Output()\n    public onDateSelection = new EventEmitter<ICalendarDate>();\n\n    /**\n     * @hidden\n     */\n    @Output()\n    public onViewChanging = new EventEmitter<IViewChangingEventArgs>();\n\n    /**\n     * @hidden\n     */\n    @ViewChildren(IgxDayItemComponent, { read: IgxDayItemComponent })\n    public dates: QueryList<IgxDayItemComponent>;\n\n    /**\n     * @hidden\n     */\n    public outOfRangeDates: DateRangeDescriptor[];\n\n    /**\n     * @hidden\n     */\n    public nextMonthView: IgxDaysViewComponent;\n\n    /**\n     * @hidden\n     */\n    public prevMonthView: IgxDaysViewComponent;\n\n    /**\n     * The default css class applied to the component.\n     *\n     * @hidden\n     */\n    @HostBinding('class.igx-calendar')\n    public styleClass = true;\n\n    /**\n     * @hidden\n     */\n    constructor(public daysNavService: IgxDaysViewNavigationService) {\n        super();\n    }\n\n    /**\n     * @hidden\n     */\n    public get getCalendarMonth(): ICalendarDate[][] {\n        return this.calendarModel.monthdatescalendar(this.viewDate.getFullYear(), this.viewDate.getMonth(), true);\n    }\n\n    /**\n     * @hidden\n     */\n    public ngOnInit() {\n        this.daysNavService.monthView = this;\n    }\n\n    /**\n     * @hidden\n     */\n    public ngDoCheck() {\n        if (!this.changeDaysView && this.dates) {\n            this.disableOutOfRangeDates();\n        }\n    }\n\n    /**\n     * Returns the locale representation of the date in the days view.\n     *\n     * @hidden\n     */\n    public formattedDate(value: Date): string {\n        if (this.formatViews.day) {\n            return this.formatterDay.format(value);\n        }\n        return `${value.getDate()}`;\n    }\n\n    /**\n     * @hidden\n     */\n    public generateWeekHeader(): string[] {\n        const dayNames = [];\n        const rv = this.calendarModel.monthdatescalendar(this.viewDate.getFullYear(), this.viewDate.getMonth())[0];\n        for (const day of rv) {\n            dayNames.push(this.formatterWeekday.format(day.date));\n        }\n\n        return dayNames;\n    }\n\n    /**\n     * @hidden\n     */\n    public rowTracker(index, item): string {\n        return `${item[index].date.getMonth()}${item[index].date.getDate()}`;\n    }\n\n    /**\n     * @hidden\n     */\n    public dateTracker(index, item): string {\n        return `${item.date.getMonth()}--${item.date.getDate()}`;\n    }\n\n    /**\n     * @hidden\n     */\n    public isCurrentMonth(value: Date): boolean {\n        return this.viewDate.getMonth() === value.getMonth();\n    }\n\n    /**\n     * @hidden\n     */\n    public isCurrentYear(value: Date): boolean {\n        return this.viewDate.getFullYear() === value.getFullYear();\n    }\n\n    /**\n     * @hidden\n     */\n    public isSelected(date: ICalendarDate): boolean {\n        let selectedDates: Date | Date[];\n        if (this.isDateDisabled(date.date) || !this.value ||\n            (Array.isArray(this.value) && this.value.length === 0)\n            )  {\n            return false;\n        }\n\n        if (this.selection === CalendarSelection.SINGLE) {\n            selectedDates = (this.value as Date);\n            return this.getDateOnly(selectedDates).getTime() === date.date.getTime();\n        }\n\n        selectedDates = (this.value as Date[]);\n        if (this.selection === CalendarSelection.RANGE && selectedDates.length === 1) {\n            return this.getDateOnly(selectedDates[0]).getTime() === date.date.getTime();\n        }\n\n        if (this.selection === CalendarSelection.MULTI) {\n            const start = this.getDateOnly(selectedDates[0]);\n            const end = this.getDateOnly(selectedDates[selectedDates.length - 1]);\n\n            if (this.isWithinRange(date.date, false, start, end)) {\n                const currentDate = selectedDates.find(element => element.getTime() === date.date.getTime());\n                return !!currentDate;\n            } else {\n                return false;\n            }\n\n        } else {\n            return this.isWithinRange(date.date, true);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public isLastInRange(date: ICalendarDate): boolean {\n        if (this.isSingleSelection || !this.value) {\n            return false;\n        }\n\n        const dates = this.value as Date[];\n        const lastDate = dates[dates.length - 1];\n        return isEqual(lastDate, date.date);\n    }\n\n    /**\n     * @hidden\n     */\n    public isFirstInRange(date: ICalendarDate): boolean {\n        if (this.isSingleSelection || !this.value) {\n            return false;\n        }\n\n        return isEqual((this.value as Date[])[0], date.date);\n    }\n\n    /**\n     * @hidden\n     */\n    public isWithinRange(date: Date, checkForRange: boolean, min?: Date, max?: Date): boolean {\n        if (checkForRange && !(Array.isArray(this.value) && this.value.length > 1)) {\n            return false;\n        }\n\n        min = min ? min : this.value[0];\n        max = max ? max : this.value[(this.value as Date[]).length - 1];\n\n        return isDateInRanges(date,\n            [\n                {\n                    type: DateRangeType.Between,\n                    dateRange: [min, max]\n                }\n            ]\n        );\n    }\n\n    /**\n     * @hidden\n     */\n    public focusActiveDate() {\n        let date = this.dates.find((d) => d.selected);\n\n        if (!date) {\n            date = this.dates.find((d) => d.isToday);\n        }\n\n        if (date.isFocusable) {\n            date.nativeElement.focus();\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public selectDay(event) {\n        this.selectDateFromClient(event.date);\n        this.onDateSelection.emit(event);\n\n        this.onSelection.emit(this.selectedDates);\n    }\n\n    /**\n     * @hidden\n     */\n    private disableOutOfRangeDates() {\n        const dateRange = [];\n        this.dates.toArray().forEach((date) => {\n            if (!date.isCurrentMonth) {\n                dateRange.push(date.date.date);\n            }\n        });\n\n        this.outOfRangeDates = [{\n            type: DateRangeType.Specific,\n            dateRange: dateRange\n        }];\n    }\n\n    /**\n     * @hidden\n     */\n    public getFirstMonthView(): IgxDaysViewComponent {\n        let monthView = this as IgxDaysViewComponent;\n        while (monthView.prevMonthView) {\n            monthView = monthView.prevMonthView;\n        }\n        return monthView;\n    }\n\n    /**\n     * @hidden\n     */\n    private getLastMonthView(): IgxDaysViewComponent {\n        let monthView = this as IgxDaysViewComponent;\n        while (monthView.nextMonthView) {\n            monthView = monthView.nextMonthView;\n        }\n        return monthView;\n    }\n\n    /**\n     * @hidden\n     */\n    private get isSingleSelection(): boolean {\n        return this.selection !== CalendarSelection.RANGE;\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('keydown.arrowleft', ['$event'])\n    @HostListener('keydown.arrowright', ['$event'])\n    @HostListener('keydown.arrowup', ['$event'])\n    @HostListener('keydown.arrowdown', ['$event'])\n    public onKeydownArrow(event: KeyboardEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.daysNavService.focusNextDate(event.target as HTMLElement, event.key);\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('keydown.home', ['$event'])\n    public onKeydownHome(event: KeyboardEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.getFirstMonthView().daysNavService.focusHomeDate();\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('keydown.end', ['$event'])\n    public onKeydownEnd(event: KeyboardEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.getLastMonthView().daysNavService.focusEndDate();\n    }\n}\n","import { transition, trigger, useAnimation } from '@angular/animations';\nimport {\n    Component,\n    ContentChild,\n    forwardRef,\n    HostBinding,\n    HostListener,\n    Input,\n    ViewChild,\n    ElementRef,\n    AfterViewInit,\n    ViewChildren,\n    QueryList,\n    OnDestroy\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { fadeIn, scaleInCenter, slideInLeft, slideInRight } from '../animations/main';\nimport {\n    IgxCalendarHeaderTemplateDirective,\n    IgxCalendarSubheaderTemplateDirective\n} from './calendar.directives';\nimport { KEYS } from '../core/utils';\nimport { ICalendarDate, monthRange } from './calendar';\nimport { CalendarView, IgxMonthPickerBaseDirective } from './month-picker-base';\nimport { IgxMonthsViewComponent } from './months-view/months-view.component';\nimport { IgxYearsViewComponent } from './years-view/years-view.component';\nimport { IgxDaysViewComponent } from './days-view/days-view.component';\nimport { interval, Subscription } from 'rxjs';\nimport { takeUntil, debounce, skipLast, switchMap } from 'rxjs/operators';\nimport { ScrollMonth } from './calendar-base';\nimport { IViewChangingEventArgs } from './days-view/days-view.interface';\n\nlet NEXT_ID = 0;\n\n/**\n * Calendar provides a way to display date information.\n *\n * @igxModule IgxCalendarModule\n *\n * @igxTheme igx-calendar-theme, igx-icon-theme\n *\n * @igxKeywords calendar, datepicker, schedule, date\n *\n * @igxGroup Scheduling\n *\n * @remarks\n * The Ignite UI Calendar provides an easy way to display a calendar and allow users to select dates using single, multiple\n * or range selection.\n *\n * @example:\n * ```html\n * <igx-calendar selection=\"range\"></igx-calendar>\n * ```\n */\n@Component({\n    providers: [\n        {\n            multi: true,\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: IgxCalendarComponent\n        }\n    ],\n    animations: [\n        trigger('animateView', [\n            transition('void => 0', useAnimation(fadeIn)),\n            transition('void => *', useAnimation(scaleInCenter, {\n                params: {\n                    duration: '.2s',\n                    fromScale: .9\n                }\n            }))\n        ]),\n        trigger('animateChange', [\n            transition('* => prev', useAnimation(slideInLeft, {\n                params: {\n                    fromPosition: 'translateX(-30%)'\n                }\n            })),\n            transition('* => next', useAnimation(slideInRight, {\n                params: {\n                    fromPosition: 'translateX(30%)'\n                }\n            }))\n        ])\n    ],\n    selector: 'igx-calendar',\n    templateUrl: 'calendar.component.html'\n})\nexport class IgxCalendarComponent extends IgxMonthPickerBaseDirective implements AfterViewInit, OnDestroy {\n\n    /**\n     * Sets/gets the `id` of the calendar.\n     *\n     * @remarks\n     * If not set, the `id` will have value `\"igx-calendar-0\"`.\n     *\n     * @example\n     * ```html\n     * <igx-calendar id=\"my-first-calendar\"></igx-calendar>\n     * ```\n     * @memberof IgxCalendarComponent\n     */\n    @HostBinding('attr.id')\n    @Input()\n    public id = `igx-calendar-${NEXT_ID++}`;\n\n    /**\n     * Sets/gets whether the calendar has header.\n     * Default value is `true`.\n     *\n     * @example\n     * ```html\n     * <igx-calendar [hasHeader]=\"false\"></igx-calendar>\n     * ```\n     */\n    @Input()\n    public hasHeader = true;\n\n    /**\n     * Sets/gets whether the calendar header will be in vertical position.\n     * Default value is `false`.\n     *\n     * @example\n     * ```html\n     * <igx-calendar [vertical] = \"true\"></igx-calendar>\n     * ```\n     */\n    @Input()\n    public vertical = false;\n\n    /**\n     * Sets/gets the number of month views displayed.\n     * Default value is `1`.\n     *\n     * @example\n     * ```html\n     * <igx-calendar [monthsViewNumber]=\"2\"></igx-calendar>\n     * ```\n     */\n    @Input()\n    get monthsViewNumber() {\n        return this._monthsViewNumber;\n    }\n\n    set monthsViewNumber(val: number) {\n        if (val < 1 ) {\n            return;\n        }\n\n        this._monthsViewNumber = val;\n    }\n\n    /**\n     * Apply the different states for the transitions of animateChange\n     * @hidden\n     * @internal\n     */\n    @Input()\n    public animationAction: any = '';\n\n    /**\n     * Used to apply the active date when the calendar view is changed\n     *\n     * @hidden\n     * @internal\n     */\n    public nextDate: Date;\n\n    /**\n     * Denote if the calendar view was changed with the keyboard\n     *\n     * @hidden\n     * @internal\n     */\n    public isKeydownTrigger = false;\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public callback: (next) => void;\n\n    /**\n     * The default `tabindex` attribute for the component.\n     *\n     * @hidden\n     * @internal\n     */\n    @HostBinding('attr.tabindex')\n    public tabindex = 0;\n\n    /**\n     * The default aria role attribute for the component.\n     *\n     * @hidden\n     * @internal\n     */\n    @HostBinding('attr.role')\n    public role = 'grid';\n\n    /**\n     * The default aria lebelled by attribute for the component.\n     *\n     * @hidden\n     * @internal\n     */\n    @HostBinding('attr.aria-labelledby')\n    public ariaLabelledBy = 'calendar';\n\n    /**\n     * The default css class applied to the component.\n     *\n     * @hidden\n     * @internal\n     */\n    @HostBinding('class.igx-calendar--vertical')\n    get styleVerticalClass(): boolean {\n        return this.vertical;\n    }\n\n    /**\n     * The default css class applied to the component.\n     *\n     * @hidden\n     * @internal\n     */\n    @HostBinding('class.igx-calendar')\n    public styleClass = true;\n\n    /**\n     * ViewChild that represents the months view.\n     *\n     * @hidden\n     * @internal\n     */\n    @ViewChild('months', { read: IgxMonthsViewComponent })\n    public monthsView: IgxMonthsViewComponent;\n\n    /**\n     * Month button, that displays the months view.\n     * @hidden\n     * @internal\n     */\n    @ViewChildren('monthsBtn')\n    public monthsBtns: QueryList<ElementRef>;\n\n    /**\n     * ViewChild that represents the decade view.\n     *\n     * @hidden\n     * @internal\n     */\n    @ViewChild('decade', { read: IgxYearsViewComponent })\n    public dacadeView: IgxYearsViewComponent;\n\n    /**\n     * ViewChild that represents the days view.\n     *\n     * @hidden\n     * @internal\n     */\n    @ViewChild('days', { read: IgxDaysViewComponent })\n    public daysView: IgxDaysViewComponent;\n\n    /**\n     * ViewChildrenden representing all of the rendered days views.\n     * @hidden\n     * @internal\n     */\n    @ViewChildren('days', { read: IgxDaysViewComponent })\n    public monthViews: QueryList<IgxDaysViewComponent>;\n\n    /**\n     * Button for previous month.\n     *\n     * @hidden\n     * @internal\n     */\n    @ViewChild('prevMonthBtn')\n    public prevMonthBtn: ElementRef;\n\n    /**\n     * Button for next month.\n     *\n     * @hidden\n     * @internal\n     */\n    @ViewChild('nextMonthBtn')\n    public nextMonthBtn: ElementRef;\n\n    /**\n     * Denote if the year view is active.\n     * @hidden\n     * @internal\n     */\n    get isYearView(): boolean {\n        return this.activeView === CalendarView.YEAR;\n    }\n\n    /**\n     * Gets the header template.\n     *\n     * @example\n     * ```typescript\n     * let headerTemplate =  this.calendar.headerTeamplate;\n     * ```\n     * @memberof IgxCalendarComponent\n     */\n    get headerTemplate(): any {\n        if (this.headerTemplateDirective) {\n            return this.headerTemplateDirective.template;\n        }\n        return null;\n    }\n\n    /**\n     * Sets the header template.\n     *\n     * @example\n     * ```html\n     * <igx-calendar headerTemplateDirective = \"igxCalendarHeader\"></igx-calendar>\n     * ```\n     * @memberof IgxCalendarComponent\n     */\n    set headerTemplate(directive: any) {\n        this.headerTemplateDirective = directive;\n    }\n\n    /**\n     * Gets the subheader template.\n     *\n     * @example\n     * ```typescript\n     * let subheaderTemplate = this.calendar.subheaderTemplate;\n     * ```\n     */\n    get subheaderTemplate(): any {\n        if (this.subheaderTemplateDirective) {\n            return this.subheaderTemplateDirective.template;\n        }\n        return null;\n    }\n\n    /**\n     * Sets the subheader template.\n     *\n     * @example\n     * ```html\n     * <igx-calendar subheaderTemplate = \"igxCalendarSubheader\"></igx-calendar>\n     * ```\n     * @memberof IgxCalendarComponent\n     */\n    set subheaderTemplate(directive: any) {\n        this.subheaderTemplateDirective = directive;\n    }\n\n    /**\n     * Gets the context for the template marked with the `igxCalendarHeader` directive.\n     *\n     * @example\n     * ```typescript\n     * let headerContext =  this.calendar.headerContext;\n     * ```\n     */\n    get headerContext() {\n        const date: Date = this.headerDate;\n        return this.generateContext(date);\n    }\n\n    /**\n     * Gets the context for the template marked with either `igxCalendarSubHeaderMonth`\n     * or `igxCalendarSubHeaderYear` directive.\n     *\n     * @example\n     * ```typescript\n     * let context =  this.calendar.context;\n     * ```\n     */\n    get context() {\n        const date: Date = this.viewDate;\n        return this.generateContext(date);\n    }\n\n    /**\n     * Date displayed in header\n     *\n     * @hidden\n     * @internal\n     */\n    get headerDate(): Date {\n        return this.selectedDates ? this.selectedDates : new Date();\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @ContentChild(forwardRef(() => IgxCalendarHeaderTemplateDirective), { read: IgxCalendarHeaderTemplateDirective, static: true  })\n    private headerTemplateDirective: IgxCalendarHeaderTemplateDirective;\n\n    /**\n     * @hidden\n     * @internal\n     */\n    // tslint:disable-next-line:max-line-length\n    @ContentChild(forwardRef(() => IgxCalendarSubheaderTemplateDirective), { read: IgxCalendarSubheaderTemplateDirective, static: true  })\n    private subheaderTemplateDirective: IgxCalendarSubheaderTemplateDirective;\n\n    /**\n     * @hidden\n     * @internal\n     */\n    private _monthsViewNumber = 1;\n\n    /**\n     * @hidden\n     * @internal\n     */\n    private _monthViewsChanges$: Subscription;\n\n    public ngAfterViewInit() {\n        this.setSiblingMonths(this.monthViews);\n        this._monthViewsChanges$ = this.monthViews.changes.subscribe(c => {\n            this.setSiblingMonths(c);\n        });\n\n        this.startMonthScroll$.pipe(\n            takeUntil(this.stopMonthScroll$),\n            switchMap(() => this.scrollMonth$.pipe(\n                skipLast(1),\n                debounce(() => interval(300)),\n                takeUntil(this.stopMonthScroll$)\n            ))).subscribe(() => {\n                switch (this.monthScrollDirection) {\n                    case ScrollMonth.PREV:\n                        this.previousMonth();\n                        break;\n                    case ScrollMonth.NEXT:\n                        this.nextMonth();\n                        break;\n                    case ScrollMonth.NONE:\n                    default:\n                        break;\n                }\n        });\n    }\n\n    /**\n     * Returns the locale representation of the month in the month view if enabled,\n     * otherwise returns the default `Date.getMonth()` value.\n     *\n     * @hidden\n     * @internal\n     */\n    public formattedMonth(value: Date): string {\n        if (this.formatViews.month) {\n            return this.formatterMonth.format(value);\n        }\n        return `${value.getMonth()}`;\n    }\n\n    /**\n     * Change to previous month\n     *\n     * @hidden\n     * @internal\n     */\n    public previousMonth(isKeydownTrigger = false) {\n        this.viewDate = this.calendarModel.getPrevMonth(this.viewDate);\n        this.animationAction = ScrollMonth.PREV;\n        this.isKeydownTrigger = isKeydownTrigger;\n    }\n\n    /**\n     * Change to next month\n     *\n     * @hidden\n     * @internal\n     */\n    public nextMonth(isKeydownTrigger = false) {\n        this.viewDate = this.calendarModel.getNextMonth(this.viewDate);\n        this.animationAction = ScrollMonth.NEXT;\n        this.isKeydownTrigger = isKeydownTrigger;\n    }\n\n    /**\n     * Continious navigation through the previous months\n     * @hidden\n     * @internal\n     */\n    public startPrevMonthScroll = (isKeydownTrigger = false) => {\n        this.startMonthScroll$.next();\n        this.monthScrollDirection = ScrollMonth.PREV;\n\n        this.previousMonth(isKeydownTrigger);\n    }\n\n    /**\n     * Continious navigation through the next months\n     * @hidden\n     * @internal\n     */\n    public startNextMonthScroll = (isKeydownTrigger = false) => {\n        this.startMonthScroll$.next();\n        this.monthScrollDirection = ScrollMonth.NEXT;\n\n        this.nextMonth(isKeydownTrigger);\n    }\n\n    /**\n     * Stop continuous navigation\n     * @hidden\n     * @internal\n     */\n    public stopMonthScroll = (event) => {\n        event.stopPropagation();\n\n        // generally the scrolling is built on the calendar component\n        // and all start/stop scrolling methods are called on the calendar\n        // if we change below lines to call stopMonthScroll$ on the calendar instead of on the views,\n        // strange bug is introduced --> after changing number of months, continuous scrolling on mouse click does not happen\n        this.daysView.stopMonthScroll$.next(true);\n        this.daysView.stopMonthScroll$.complete();\n\n\n        if (this.monthScrollDirection === ScrollMonth.PREV) {\n            this.prevMonthBtn.nativeElement.focus();\n        } else if (this.monthScrollDirection === ScrollMonth.NEXT) {\n            this.nextMonthBtn.nativeElement.focus();\n        }\n\n        this.monthScrollDirection = ScrollMonth.NONE;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public onActiveViewDecade(args: Date, activeViewIdx: number) {\n        super.activeViewDecade(activeViewIdx);\n        requestAnimationFrame(() => {\n            if (this.dacadeView) {\n                this.dacadeView.date = args;\n                this.dacadeView.el.nativeElement.focus();\n            }\n        });\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public onActiveViewDecadeKB(event, args: Date, activeViewIdx: number) {\n        super.activeViewDecadeKB(event, activeViewIdx);\n\n        requestAnimationFrame(() => {\n            if (this.dacadeView) {\n                this.dacadeView.date = args;\n                this.dacadeView.el.nativeElement.focus();\n            }\n        });\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public getFormattedDate(): { weekday: string, monthday: string } {\n\n        const date = this.headerDate;\n\n        return {\n            monthday: this.formatterMonthday.format(date),\n            weekday: this.formatterWeekday.format(date),\n        };\n    }\n\n    /**\n     * Handles invoked on date selection\n     * @hidden\n     * @internal\n     */\n    public childClicked(instance: ICalendarDate) {\n        if (instance.isPrevMonth) {\n            this.previousMonth();\n        }\n\n        if (instance.isNextMonth) {\n            this.nextMonth();\n        }\n\n        this.selectDateFromClient(instance.date);\n        if (this.selection === 'multi') {\n            this.deselectDateInMonthViews(instance.date);\n        }\n        this.onSelection.emit(this.selectedDates);\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public viewChanging(args: IViewChangingEventArgs) {\n        this.animationAction = args.monthAction;\n        this.isKeydownTrigger = true;\n        this.nextDate = args.nextDate;\n        this.callback = (next) => {\n            const day = this.daysView.dates.find((item) => item.date.date.getTime() === next.getTime());\n            if (day) {\n                this.daysView.daysNavService.focusNextDate(day.nativeElement, args.key, true);\n            }\n        };\n        this.viewDate = this.nextDate;\n    }\n\n    /**\n     * @hidden\n     * @intenal\n     */\n    public changeMonth(event: Date) {\n        this.viewDate = this.calendarModel.getFirstViewDate(event, 'month', this.activeViewIdx);\n        this.activeView = CalendarView.DEFAULT;\n\n        requestAnimationFrame(() => {\n            const elem = this.monthsBtns.find((e: ElementRef, idx: number) => idx === this.activeViewIdx);\n            if (elem) { elem.nativeElement.focus(); }\n        });\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public onActiveViewYear(args: Date, activeViewIdx: number, event?): void {\n        this.activeView = CalendarView.YEAR;\n        this.activeViewIdx = activeViewIdx;\n        requestAnimationFrame(() => {\n            this.monthsView.date = args;\n            this.focusMonth(event.target);\n        });\n    }\n\n    private focusMonth(target: HTMLElement) {\n        const month = this.monthsView.monthsRef.find((e) =>\n            e.index === parseInt(target.parentElement.attributes['data-month'].value, 10));\n        if (month) { month.nativeElement.focus(); }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public onActiveViewYearKB(args: Date, event, activeViewIdx: number): void {\n        if (event.key === KEYS.SPACE || event.key === KEYS.SPACE_IE || event.key === KEYS.ENTER) {\n            event.preventDefault();\n            this.onActiveViewYear(args, activeViewIdx, event);\n        }\n    }\n\n    /**\n     * Deselects date(s) (based on the selection type).\n     *\n     * @example\n     * ```typescript\n     *  this.calendar.deselectDate(new Date(`2018-06-12`));\n     * ````\n     */\n    public deselectDate(value?: Date | Date[]) {\n        super.deselectDate(value);\n\n        this.monthViews.forEach((view) => {\n            view.selectedDates = this.selectedDates;\n            view.rangeStarted = false;\n        });\n        this._onChangeCallback(this.selectedDates);\n    }\n\n    /**\n     * Helper method that does deselection for all month views when selection is \"multi\"\n     * If not called, selection in other month views stays\n     * @hidden\n     * @internal\n     */\n    private deselectDateInMonthViews(value: Date) {\n        this.monthViews.forEach(m => {\n            m.deselectMultipleInMonth(value);\n         });\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public getViewDate(i: number): Date {\n        const date = this.calendarModel.timedelta(this.viewDate, 'month', i);\n        return date;\n    }\n\n    /**\n     * Getter for the context object inside the calendar templates.\n     * @hidden\n     * @internal\n     */\n    public getContext(i: number) {\n        const date = this.getViewDate(i);\n        return this.generateContext(date, i);\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public animationDone(event) {\n        if (this.monthScrollDirection !== ScrollMonth.NONE) {\n            this.scrollMonth$.next();\n        }\n\n        if (this.activeView !== CalendarView.DEFAULT) {\n            return;\n        }\n\n        let monthView = this.daysView as IgxDaysViewComponent;\n        let date = monthView.dates.find((d) => d.selected);\n\n        while (!date && monthView.nextMonthView) {\n            monthView = monthView.nextMonthView;\n            date = monthView.dates.find((d) => d.selected);\n        }\n        if (date && date.isFocusable && !this.isKeydownTrigger) {\n            setTimeout(() => {\n                date.nativeElement.focus();\n            }, parseInt(slideInRight.options.params.duration, 10));\n        } else if (this.callback && (event.toState === ScrollMonth.NEXT || event.toState === ScrollMonth.PREV)) {\n            this.callback(this.nextDate);\n        }\n        this.animationAction = ScrollMonth.NONE;\n    }\n\n    /**\n     * Keyboard navigation of the calendar\n     * @hidden\n     * @internal\n     */\n    @HostListener('keydown.pagedown', ['$event'])\n    @HostListener('keydown.pageup', ['$event'])\n    public onKeydownPageDown(event: KeyboardEvent) {\n        event.preventDefault();\n\n        if (this.activeView !== CalendarView.DEFAULT) {\n            return;\n        }\n\n        const isPageDown = event.key === 'PageDown';\n        const step = isPageDown ? 1 : -1;\n        let monthView = this.daysView as IgxDaysViewComponent;\n        let activeDate;\n\n        while (!activeDate && monthView) {\n            activeDate = monthView.dates.find((date) => date.nativeElement === document.activeElement);\n            monthView = monthView.nextMonthView;\n        }\n\n        if (activeDate) {\n            this.nextDate = new Date(activeDate.date.date);\n\n            let year = this.nextDate.getFullYear();\n\n            let month = this.nextDate.getMonth() + step;\n            if (isPageDown) {\n                if (month > 11) { month = 0; year += step; }\n            } else {\n                if (month < 0) { month = 11; year += step; }\n            }\n\n            const range = monthRange(this.nextDate.getFullYear(), month);\n\n            let day = this.nextDate.getDate();\n            if (day > range[1]) { day = range[1]; }\n\n            this.nextDate.setDate(day);\n            this.nextDate.setMonth(month);\n            this.nextDate.setFullYear(year);\n\n            this.callback = (next) => {\n                monthView = this.daysView as IgxDaysViewComponent;\n                let dayItem;\n                while ((!dayItem && monthView) || (dayItem && !dayItem.isCurrentMonth)) {\n                    dayItem = monthView.dates.find((d) => d.date.date.getTime() === next.getTime());\n                    monthView = monthView.nextMonthView;\n                }\n                if (dayItem && dayItem.isFocusable) { dayItem.nativeElement.focus(); }\n            };\n        }\n\n        if (isPageDown) { this.nextMonth(true); } else {\n            this.previousMonth(true);\n        }\n    }\n\n    /**\n     * Keyboard navigation of the calendar\n     * @hidden\n     * @internal\n     */\n    @HostListener('keydown.shift.pageup', ['$event'])\n    @HostListener('keydown.shift.pagedown', ['$event'])\n    public onKeydownShiftPageUp(event: KeyboardEvent) {\n        event.preventDefault();\n\n        if (this.activeView !== CalendarView.DEFAULT) {\n            return;\n        }\n\n        const isPageDown = event.key === 'PageDown';\n        const step = isPageDown ? 1 : -1;\n        this.viewDate = this.calendarModel.timedelta(this.viewDate, 'year', step);\n\n        this.animationAction = isPageDown ? ScrollMonth.NEXT : ScrollMonth.PREV;\n        this.isKeydownTrigger = true;\n\n        let monthView = this.daysView as IgxDaysViewComponent;\n        let activeDate;\n\n        while (!activeDate && monthView) {\n            activeDate = monthView.dates.find((date) => date.nativeElement === document.activeElement);\n            monthView = monthView.nextMonthView;\n        }\n\n        if (activeDate) {\n            this.nextDate = new Date(activeDate.date.date);\n\n            const year = this.nextDate.getFullYear() + step;\n\n            const range = monthRange(year, this.nextDate.getMonth());\n\n            let day = this.nextDate.getDate();\n            if (day > range[1]) { day = range[1]; }\n\n            this.nextDate.setDate(day);\n            this.nextDate.setFullYear(year);\n\n            this.callback = (next) => {\n                monthView = this.daysView as IgxDaysViewComponent;\n                let dayItem;\n                while ((!dayItem && monthView) || (dayItem && !dayItem.isCurrentMonth)) {\n                    dayItem = monthView.dates.find((d) => d.date.date.getTime() === next.getTime());\n                    monthView = monthView.nextMonthView;\n                }\n                if (dayItem && dayItem.isFocusable) { dayItem.nativeElement.focus(); }\n            };\n        }\n    }\n\n    /**\n     * Keyboard navigation of the calendar\n     * @hidden\n     * @internal\n     */\n    @HostListener('keydown.home', ['$event'])\n    public onKeydownHome(event: KeyboardEvent) {\n        if (this.daysView) {\n            this.daysView.onKeydownHome(event);\n        }\n    }\n\n    /**\n     * Keyboard navigation of the calendar\n     * @hidden\n     * @internal\n     */\n    @HostListener('keydown.end', ['$event'])\n    public onKeydownEnd(event: KeyboardEvent) {\n        if (this.daysView) {\n            this.daysView.onKeydownEnd(event);\n        }\n    }\n\n    /**\n     * Stop continuous navigation on mouseup event\n     * @hidden\n     * @internal\n     */\n    @HostListener('document:mouseup', ['$event'])\n    public onMouseUp(event: KeyboardEvent) {\n        if (this.monthScrollDirection !== ScrollMonth.NONE) {\n            this.stopMonthScroll(event);\n        }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public ngOnDestroy(): void {\n        if (this._monthViewsChanges$) {\n            this._monthViewsChanges$.unsubscribe();\n        }\n    }\n\n    /**\n     * Helper method building and returning the context object inside\n     * the calendar templates.\n     * @hidden\n     * @internal\n     */\n    private generateContext(value: Date, i?: number) {\n        const formatObject = {\n            index: i,\n            monthView: () => this.onActiveViewYear(value, i),\n            yearView: () => this.onActiveViewDecade(value, i),\n            ...this.calendarModel.formatToParts(value, this.locale, this.formatOptions,\n                ['era', 'year', 'month', 'day', 'weekday'])\n        };\n        return { $implicit: formatObject };\n    }\n\n    /**\n     * Helper method that sets references for prev/next months for each month in the view\n     * @hidden\n     * @internal\n     */\n    private setSiblingMonths(monthViews: QueryList<IgxDaysViewComponent>) {\n        monthViews.forEach((item, index) => {\n            const prevMonthView = this.getMonthView(index - 1);\n            const nextMonthView = this.getMonthView(index + 1);\n            item.nextMonthView = nextMonthView;\n            item.prevMonthView = prevMonthView;\n        });\n    }\n\n    /**\n     * Helper method returning previous/next day views\n     * @hidden\n     * @internal\n     */\n    private getMonthView(index: number): IgxDaysViewComponent {\n        if (index === -1 || index === this.monthViews.length ) {\n            return null;\n        } else {\n            return this.monthViews.toArray()[index];\n        }\n    }\n}\n","import {\n    Component,\n    HostListener,\n    ViewChild,\n    HostBinding,\n    Input,\n    ElementRef\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { trigger, transition, useAnimation } from '@angular/animations';\nimport { fadeIn, scaleInCenter, slideInLeft, slideInRight } from '../../animations/main';\nimport { KEYS } from '../../core/utils';\nimport { IgxMonthsViewComponent } from '../months-view/months-view.component';\nimport { IgxMonthPickerBaseDirective, CalendarView } from '../month-picker-base';\nimport { IgxYearsViewComponent } from '../years-view/years-view.component';\nimport { IgxDaysViewComponent } from '../days-view/days-view.component';\n\nlet NEXT_ID = 0;\n@Component({\n    providers: [\n        {\n            multi: true,\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: IgxMonthPickerComponent\n        }\n    ],\n    animations: [\n        trigger('animateView', [\n            transition('void => 0', useAnimation(fadeIn)),\n            transition('void => *', useAnimation(scaleInCenter, {\n                params: {\n                    duration: '.2s',\n                    fromScale: .9\n                }\n            }))\n        ]),\n        trigger('animateChange', [\n            transition('* => prev', useAnimation(slideInLeft, {\n                params: {\n                    fromPosition: 'translateX(-30%)'\n                }\n            })),\n            transition('* => next', useAnimation(slideInRight, {\n                params: {\n                    fromPosition: 'translateX(30%)'\n                }\n            }))\n        ])\n    ],\n    selector: 'igx-month-picker',\n    templateUrl: 'month-picker.component.html'\n})\nexport class IgxMonthPickerComponent extends IgxMonthPickerBaseDirective {\n    /**\n     * Sets/gets the `id` of the month picker.\n     * If not set, the `id` will have value `\"igx-month-picker-0\"`.\n     */\n    @HostBinding('attr.id')\n    @Input()\n    public id = `igx-month-picker-${NEXT_ID++}`;\n\n    /**\n     * The default css class applied to the component.\n     *\n     * @hidden\n     */\n    @HostBinding('class.igx-calendar')\n    public styleClass = true;\n\n    /**\n     * @hidden\n     */\n    @ViewChild('months', { read: IgxMonthsViewComponent })\n    public monthsView: IgxMonthsViewComponent;\n\n    /**\n     * @hidden\n     */\n    @ViewChild('decade', { read: IgxYearsViewComponent })\n    public dacadeView: IgxYearsViewComponent;\n\n    /**\n     * @hidden\n     */\n    @ViewChild('days', { read: IgxDaysViewComponent })\n    public daysView: IgxDaysViewComponent;\n\n    /**\n     * @hidden\n     */\n    @ViewChild('yearsBtn')\n    public yearsBtn: ElementRef;\n\n    /**\n     * @hidden\n     */\n    public yearAction = '';\n\n    /**\n     * @hidden\n     */\n    public animationDone() {\n        this.yearAction = '';\n    }\n\n    /**\n     * @hidden\n     */\n    public activeViewDecadeKB(event) {\n        super.activeViewDecadeKB(event);\n\n        if (event.key === KEYS.RIGHT_ARROW || event.key === KEYS.RIGHT_ARROW_IE) {\n            event.preventDefault();\n            this.nextYear();\n        }\n\n        if (event.key === KEYS.LEFT_ARROW || event.key === KEYS.LEFT_ARROW_IE) {\n            event.preventDefault();\n            this.previousYear();\n        }\n\n        requestAnimationFrame(() => {\n            if (this.dacadeView) { this.dacadeView.el.nativeElement.focus(); }\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    public activeViewDecade() {\n        super.activeViewDecade();\n\n        requestAnimationFrame(() => {\n            this.dacadeView.el.nativeElement.focus();\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    public nextYear() {\n        this.yearAction = 'next';\n        this.viewDate = this.calendarModel.getNextYear(this.viewDate);\n\n        this.selectDate(this.viewDate);\n        this.onSelection.emit(this.selectedDates);\n    }\n\n    /**\n     * @hidden\n     */\n    public nextYearKB(event) {\n        if (event.key === KEYS.SPACE || event.key === KEYS.SPACE_IE || event.key === KEYS.ENTER) {\n            event.preventDefault();\n            event.stopPropagation();\n\n            this.nextYear();\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public previousYear() {\n        this.yearAction = 'prev';\n        this.viewDate = this.calendarModel.getPrevYear(this.viewDate);\n\n        this.selectDate(this.viewDate);\n        this.onSelection.emit(this.selectedDates);\n    }\n\n    /**\n     * @hidden\n     */\n    public previousYearKB(event) {\n        if (event.key === KEYS.SPACE || event.key === KEYS.SPACE_IE || event.key === KEYS.ENTER) {\n            event.preventDefault();\n            event.stopPropagation();\n\n            this.previousYear();\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public selectYear(event: Date) {\n        this.viewDate = new Date(event.getFullYear(), event.getMonth(), event.getDate());\n        this.activeView = CalendarView.DEFAULT;\n\n        this.selectDate(event);\n        this.onSelection.emit(this.selectedDates);\n\n        requestAnimationFrame(() => {\n            if (this.yearsBtn) { this.yearsBtn.nativeElement.focus(); }\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    public selectMonth(event: Date) {\n        this.selectDate(event);\n        this.onSelection.emit(this.selectedDates);\n    }\n\n    /**\n     * Selects a date.\n     * ```typescript\n     *  this.monPicker.selectDate(new Date(`2018-06-12`));\n     * ```\n     */\n    public selectDate(value: Date) {\n        if (!value) {\n            return new Date();\n        }\n\n        // TO DO: to be refactored after discussion on the desired behavior\n        super.selectDate(value);\n        this.viewDate = value;\n    }\n\n    /**\n     * @hidden\n     */\n    public writeValue(value: Date) {\n\n        // TO DO: to be refactored after discussion on the desired behavior\n        if (value) {\n            this.viewDate = this.selectedDates = value;\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('keydown.pageup', ['$event'])\n    public onKeydownPageUp(event: KeyboardEvent) {\n        event.preventDefault();\n        this.yearAction = 'prev';\n        this.viewDate = this.calendarModel.getPrevYear(this.viewDate);\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('keydown.pagedown', ['$event'])\n    public onKeydownPageDown(event: KeyboardEvent) {\n        event.preventDefault();\n        this.yearAction = 'next';\n        this.viewDate = this.calendarModel.getNextYear(this.viewDate);\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('keydown.home', ['$event'])\n    public onKeydownHome(event: KeyboardEvent) {\n        if (this.monthsView) {\n            this.monthsView.el.nativeElement.focus();\n            this.monthsView.onKeydownHome(event);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('keydown.end', ['$event'])\n    public onKeydownEnd(event: KeyboardEvent) {\n        if (this.monthsView) {\n            this.monthsView.el.nativeElement.focus();\n            this.monthsView.onKeydownEnd(event);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Calendar } from './calendar';\n\n@Pipe({\n    name: 'IgxMonthViewSlots'\n})\nexport class IgxMonthViewSlotsCalendar implements PipeTransform {\n    public transform(monthViews: number) {\n        return new Array(monthViews);\n    }\n}\n\n@Pipe({\n    name: 'IgxGetViewDate'\n})\nexport class IgxGetViewDateCalendar implements PipeTransform {\n    private calendar: Calendar;\n    constructor() {\n        this.calendar = new Calendar();\n    }\n    public transform(index: number, viewDate: Date, wholeDate = true) {\n        const date = this.calendar.timedelta(viewDate, 'month', index);\n        return wholeDate ? date : date.getMonth();\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { IgxIconModule } from '../icon/public_api';\nimport { IgxCalendarComponent } from './calendar.component';\nimport {\n    IgxCalendarHeaderTemplateDirective,\n    IgxCalendarMonthDirective,\n    IgxCalendarSubheaderTemplateDirective,\n    IgxCalendarYearDirective,\n    IgxCalendarScrollMonthDirective\n} from './calendar.directives';\nimport { IgxMonthsViewComponent } from './months-view/months-view.component';\nimport { IgxYearsViewComponent } from './years-view/years-view.component';\nimport { IgxDaysViewComponent } from './days-view/days-view.component';\nimport { IgxDayItemComponent } from './days-view/day-item.component';\nimport { IgxMonthPickerComponent } from './month-picker/month-picker.component';\nimport { IgxCalendarBaseDirective } from './calendar-base';\nimport { IgxMonthPickerBaseDirective } from './month-picker-base';\nimport { IgxMonthViewSlotsCalendar, IgxGetViewDateCalendar } from './months-view.pipe';\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [\n        IgxCalendarBaseDirective,\n        IgxMonthPickerBaseDirective,\n        IgxDayItemComponent,\n        IgxDaysViewComponent,\n        IgxCalendarComponent,\n        IgxCalendarHeaderTemplateDirective,\n        IgxCalendarMonthDirective,\n        IgxCalendarYearDirective,\n        IgxCalendarSubheaderTemplateDirective,\n        IgxCalendarScrollMonthDirective,\n        IgxMonthsViewComponent,\n        IgxYearsViewComponent,\n        IgxMonthPickerComponent,\n        IgxMonthViewSlotsCalendar,\n        IgxGetViewDateCalendar\n    ],\n    exports: [\n        IgxCalendarComponent,\n        IgxDaysViewComponent,\n        IgxMonthsViewComponent,\n        IgxYearsViewComponent,\n        IgxMonthPickerComponent,\n        IgxCalendarHeaderTemplateDirective,\n        IgxCalendarMonthDirective,\n        IgxCalendarYearDirective,\n        IgxCalendarSubheaderTemplateDirective\n    ],\n    imports: [CommonModule, FormsModule, IgxIconModule]\n})\nexport class IgxCalendarModule { }\n","/** @hidden */\nexport const IGX_DATE_PICKER_COMPONENT = 'IgxDatePickerComponentToken';\n\n/** @hidden */\nexport interface IDatePicker {\n    value: Date;\n    mask: string;\n    inputMask: string;\n    rawDateString: string;\n    dateFormatParts: any[];\n    invalidDate: string;\n}\n","import { PipeTransform, Pipe, Inject } from '@angular/core';\nimport { IGX_DATE_PICKER_COMPONENT, IDatePicker } from './date-picker.common';\nimport { DatePickerUtil } from './date-picker.utils';\n\n/**\n * @hidden\n */\n@Pipe({\n    name: 'displayValue'\n})\nexport class DatePickerDisplayValuePipe implements PipeTransform {\n    constructor(@Inject(IGX_DATE_PICKER_COMPONENT) private _datePicker: IDatePicker) { }\n    transform(value: any, args?: any): any {\n        if (value !== '') {\n            if (value === DatePickerUtil.maskToPromptChars(this._datePicker.inputMask)) {\n                return '';\n            }\n            this._datePicker.rawDateString = value;\n            return DatePickerUtil.trimEmptyPlaceholders(value);\n        }\n        return '';\n    }\n}\n\n/**\n * @hidden\n */\n@Pipe({\n    name: 'inputValue'\n})\nexport class DatePickerInputValuePipe implements PipeTransform {\n    constructor(@Inject(IGX_DATE_PICKER_COMPONENT) private _datePicker: IDatePicker) { }\n    transform(value: any, args?: any): any {\n        /**\n         * TODO(D.P.): This plugs into the mask, but constantly received display strings it can't handle at all\n         * Those are almost immediately overridden by the pickers onFocus handling anyway; Refactor ASAP\n         */\n        if (this._datePicker.invalidDate !== '') {\n            return this._datePicker.invalidDate;\n        } else {\n            if (this._datePicker.value === null || this._datePicker.value === undefined) {\n                return DatePickerUtil.maskToPromptChars(this._datePicker.inputMask);\n            } else {\n                return (this._datePicker as any)._getEditorDate(this._datePicker.value);\n                // return DatePickerUtil.addPromptCharsEditMode(this._datePicker.dateFormatParts, this._datePicker.value, value);\n            }\n        }\n    }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n    selector: '[igxDatePickerTemplate]'\n})\n\n/**\n * IgxDatePickerTemplateDirective can be used to re-template the date-picker input-group.\n *\n * @hidden\n */\nexport class IgxDatePickerTemplateDirective {\n    constructor(public template: TemplateRef<any>) { }\n}\n\n/**\n * IgxDatePickerActionsDirective can be used to re-template the dropdown/dialog action buttons.\n */\n@Directive({\n    selector: '[igxDatePickerActions]'\n})\nexport class IgxDatePickerActionsDirective {\n    constructor(public template: TemplateRef<any>) { }\n}\n","/**\n * This enumeration is used to configure whether the date/time picker has an editable input with drop down\n * or is readonly - the date/time is selected only through a dialog.\n */\nexport enum InteractionMode {\n    DropDown = 'dropdown',\n    Dialog = 'dialog'\n}\n","import { Component, ViewChild, Input, Output, EventEmitter, HostListener, HostBinding } from '@angular/core';\nimport { IgxCalendarComponent } from '../calendar/public_api';\nimport { InteractionMode } from '../core/enums';\nimport { IgxDatePickerActionsDirective } from './date-picker.directives';\n\n/**\n * @hidden\n */\n@Component({\n    selector: 'igx-calendar-container',\n    styles: [':host {display: block;}'],\n    templateUrl: 'calendar-container.component.html'\n})\nexport class IgxCalendarContainerComponent {\n    @ViewChild('calendar', { static: true })\n    public calendar: IgxCalendarComponent;\n\n    @Input()\n    public mode: InteractionMode = InteractionMode.Dialog;\n\n    @Input()\n    public vertical = false;\n\n    @Input()\n    public cancelButtonLabel: string;\n\n    @Input()\n    public todayButtonLabel: string;\n\n    @Input()\n    public datePickerActions: IgxDatePickerActionsDirective;\n\n    @Output()\n    public onClose = new EventEmitter();\n\n    @Output()\n    public onTodaySelection = new EventEmitter();\n\n    @HostBinding('class.igx-date-picker')\n    public styleClass = 'igx-date-picker';\n\n    @HostBinding('class.igx-date-picker--dropdown')\n    get dropdownCSS(): boolean {\n        return this.mode === InteractionMode.DropDown;\n    }\n\n    @HostBinding('class.igx-date-picker--vertical')\n    get verticalCSS(): boolean {\n        return this.vertical && this.mode === InteractionMode.Dialog;\n    }\n\n    @HostListener('keydown.esc', ['$event'])\n    @HostListener('keydown.alt.arrowup', ['$event'])\n    public onEscape(event) {\n        event.preventDefault();\n        this.onClose.emit();\n    }\n\n    /**\n     * Returns whether the date-picker is in readonly dialog mode.\n     *\n     * @hidden\n     */\n    public get isReadonly() {\n        return this.mode === InteractionMode.Dialog;\n    }\n\n    /**\n     * Emits close event for the calendar.\n     */\n    public closeCalendar() {\n        this.onClose.emit();\n    }\n\n    /**\n     * Emits today selection event for the calendar.\n     */\n    public triggerTodaySelection() {\n        this.onTodaySelection.emit();\n    }\n}\n","import { CommonModule, formatDate } from '@angular/common';\nimport {\n    Component,\n    ContentChild,\n    EventEmitter,\n    HostBinding,\n    Input,\n    NgModule,\n    OnDestroy,\n    Output,\n    ViewChild,\n    ElementRef,\n    TemplateRef,\n    Inject,\n    ChangeDetectorRef,\n    HostListener,\n    NgModuleRef,\n    OnInit,\n    AfterViewInit,\n    Injector,\n    AfterViewChecked\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NgControl, AbstractControl } from '@angular/forms';\nimport {\n    IgxCalendarComponent,\n    IgxCalendarHeaderTemplateDirective,\n    IgxCalendarModule,\n    IgxCalendarSubheaderTemplateDirective,\n    WEEKDAYS,\n    isDateInRanges\n} from '../calendar/public_api';\nimport { IgxIconModule } from '../icon/public_api';\nimport { IgxInputGroupModule, IgxInputDirective, IgxInputGroupComponent, IgxInputState } from '../input-group/public_api';\nimport { Subject, fromEvent, animationFrameScheduler, interval, Subscription } from 'rxjs';\nimport { filter, takeUntil, throttle } from 'rxjs/operators';\nimport { IgxOverlayOutletDirective } from '../directives/toggle/toggle.directive';\nimport { IgxTextSelectionModule} from '../directives/text-selection/text-selection.directive';\nimport {\n    OverlaySettings,\n    IgxOverlayService,\n    PositionSettings,\n    AbsoluteScrollStrategy,\n    AutoPositionStrategy,\n    OverlayCancelableEventArgs\n} from '../services/public_api';\nimport { DateRangeDescriptor } from '../core/dates/dateRange';\nimport { EditorProvider } from '../core/edit-provider';\nimport { IgxButtonModule } from '../directives/button/button.directive';\nimport { IgxRippleModule } from '../directives/ripple/ripple.directive';\nimport { IgxMaskModule } from '../directives/mask/mask.directive';\nimport {\n    DatePickerUtil,\n    DateState\n} from './date-picker.utils';\nimport { DatePickerDisplayValuePipe, DatePickerInputValuePipe } from './date-picker.pipes';\nimport { IDatePicker } from './date-picker.common';\nimport { KEYS, CancelableBrowserEventArgs, isIE, isEqual, IBaseEventArgs } from '../core/utils';\nimport { IgxDatePickerTemplateDirective, IgxDatePickerActionsDirective } from './date-picker.directives';\nimport { IgxCalendarContainerComponent } from './calendar-container.component';\nimport { InteractionMode } from '../core/enums';\nimport { fadeIn, fadeOut } from '../animations/fade';\n\nlet NEXT_ID = 0;\n\n/**\n * This interface is used to provide information about date picker reference and its current value\n * when onDisabledDate event is fired.\n */\nexport interface IDatePickerDisabledDateEventArgs extends IBaseEventArgs {\n    datePicker: IgxDatePickerComponent;\n    currentValue: Date;\n}\n\n/**\n * This interface is used to provide information about date picker reference and its previously valid value\n * when onValidationFailed event is fired.\n */\nexport interface IDatePickerValidationFailedEventArgs extends IBaseEventArgs {\n    datePicker: IgxDatePickerComponent;\n    prevValue: Date;\n}\n\n/**\n * This interface is used to configure calendar format view options.\n */\nexport interface IFormatViews {\n    day?: boolean;\n    month?: boolean;\n    year?: boolean;\n}\n\n/**\n * This interface is used to configure calendar format options.\n */\nexport interface IFormatOptions {\n    day?: string;\n    month?: string;\n    weekday?: string;\n    year?: string;\n}\n\n/**\n * This enumeration is used to configure the date picker to operate with pre-defined format option used in Angular DatePipe.\n * 'https://angular.io/api/common/DatePipe'\n * 'shortDate': equivalent to 'M/d/yy' (6/15/15).\n * 'mediumDate': equivalent to 'MMM d, y' (Jun 15, 2015).\n * 'longDate': equivalent to 'MMMM d, y' (June 15, 2015).\n * 'fullDate': equivalent to 'EEEE, MMMM d, y' (Monday, June 15, 2015).\n */\nexport enum PredefinedFormatOptions {\n    ShortDate = 'shortDate',\n    MediumDate = 'mediumDate',\n    LongDate = 'longDate',\n    FullDate = 'fullDate'\n}\n\nconst noop = () => { };\n\n/**\n * Date Picker displays a popup calendar that lets users select a single date.\n * @igxModule IgxDatePickerModule\n * @igxTheme igx-calendar-theme, igx-icon-theme\n * @igxGroup Scheduling\n * @igxKeywords  datepicker, calendar, schedule, date\n * @example\n * ```html\n * <igx-date-picker [(ngModel)]=\"selectedDate\"></igx-date-picker>\n * ```\n */\n@Component({\n    providers:\n        [{\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: IgxDatePickerComponent,\n            multi: true\n        }],\n    // tslint:disable-next-line:component-selector\n    selector: 'igx-date-picker',\n    templateUrl: 'date-picker.component.html',\n    styles: [`\n        :host {\n            display: block;\n        }\n    `]\n})\nexport class IgxDatePickerComponent implements IDatePicker, ControlValueAccessor,\n          EditorProvider, OnInit, AfterViewInit, OnDestroy, AfterViewChecked {\n    /**\n     * Gets/Sets the `IgxDatePickerComponent` label.\n     * @remarks\n     * The default label is 'Date'.\n     * @example\n     * ```html\n     * <igx-date-picker [label]=\"Calendar\"></igx-date-picker>\n     * ```\n     */\n    @Input()\n    public label = 'Date';\n\n    /**\n     * Gets/Sets the `IgxDatePickerComponent` label visibility.\n     * @remarks\n     * By default the visibility is set to true.\n     * @example\n     * <igx-date-picker [labelVisibility]=\"false\"></igx-date-picker>\n     */\n    @Input()\n    public labelVisibility = true;\n\n    /**\n     * Gets/Sets the locales.\n     * @remarks Default locale is en.\n     * @example\n     * ```html\n     * <igx-date-picker locale=\"ja-JP\" [value]=\"date\"></igx-date-picker>\n     * ```\n     */\n    @Input() public locale: 'en';\n\n    /**\n     * Gets/Sets on which day the week starts.\n     * @example\n     * ```html\n     * <igx-date-picker [weekStart]=\"WEEKDAYS.FRIDAY\" cancelButtonLabel=\"cancel\" todayButtonLabel=\"today\"></igx-date-picker>\n     * ```\n     */\n    @Input() public weekStart: WEEKDAYS | number = WEEKDAYS.SUNDAY;\n\n    /**\n     * Gets the format options of the `IgxDatePickerComponent`.\n     * @example\n     * ```typescript\n     * let formatOptions = this.datePicker.formatOptions;\n     * ```\n     */\n    @Input()\n    public get formatOptions(): IFormatOptions {\n        return this._formatOptions;\n    }\n\n    /**\n     * Gets/Sets whether the inactive dates will be hidden.\n     * @remarks\n     * Apllies to dates that are out of the current month.\n     * Default value is `false`.\n     * @example\n     * ```html\n     * <igx-date-picker [hideOutsideDays]=\"true\"></igx-date-picker>\n     * ```\n     * @example\n     * ```typescript\n     * let hideOutsideDays = this.datePicker.hideOutsideDays;\n     * ```\n     */\n    @Input()\n    public hideOutsideDays: boolean;\n\n    /**\n     * Gets/Sets the number of month views displayed.\n     * @remarks\n     * Default value is `1`.\n     * @example\n     * ```html\n     * <igx-date-picker [monthsViewNumber]=\"2\"></igx-date-picker>\n     * ```\n     * @example\n     * ```typescript\n     * let monthViewsDisplayed = this.datePicker.monthsViewNumber;\n     * ```\n     */\n    @Input()\n    public monthsViewNumber = 1;\n\n    /**\n     * Sets the format options of the `IgxDatePickerComponent`.\n     * @example\n     * ```typescript\n     * this.datePicker.formatOptions = {  day: \"numeric\",  month: \"long\", weekday: \"long\", year: \"numeric\"};\n     * ```\n     */\n    public set formatOptions(formatOptions: IFormatOptions) {\n        this._formatOptions = Object.assign(this._formatOptions, formatOptions);\n    }\n\n    /**\n     * Gets/Sets the date display format of the `IgxDatePickerComponent` in dropdown mode.\n     * @example\n     * ```typescript\n     * let format = this.datePicker.format;\n     * this.datePicker.format = 'yyyy-M-d';\n     * ```\n     */\n    @Input()\n    public get format(): string {\n        return (this._format === undefined) ? PredefinedFormatOptions.ShortDate : this._format;\n    }\n    public set format(format: string) {\n        this._format = format;\n    }\n\n    /**\n     * Gets/Sets the date mask of the `IgxDatePickerComponent` when in editable dropdown mode.\n     *  @example\n     * ```typescript\n     * let mask = this.datePicker.mask;\n     * ```\n     */\n    @Input()\n    public mask: string;\n\n    /**\n     * Gets/Sets the format views of the `IgxDatePickerComponent`.\n     * @example\n     * ```typescript\n     * let formatViews = this.datePicker.formatViews;\n     *  this.datePicker.formatViews = {day:false, month: false, year:false};\n     * ```\n     */\n    @Input()\n    public get formatViews(): IFormatViews {\n        return this._formatViews;\n    }\n\n    public set formatViews(formatViews: IFormatViews) {\n        this._formatViews = Object.assign(this._formatViews, formatViews);\n    }\n\n    /**\n     * Gets/Sets the disabled dates descriptors.\n     * @example\n     * ```typescript\n     * let disabledDates = this.datepicker.disabledDates;\n     * this.datePicker.disabledDates = [ {type: DateRangeType.Weekends}, ...];\n     * ```\n     */\n    @Input()\n    public get disabledDates(): DateRangeDescriptor[] {\n        return this._disabledDates;\n    }\n    public set disabledDates(value: DateRangeDescriptor[]) {\n        this._disabledDates = value;\n    }\n\n    /**\n     * Gets/Sets the special dates descriptors.\n     * @example\n     * ```typescript\n     * let specialDates = this.datepicker.specialDates;\n     * this.datePicker.specialDates = [ {type: DateRangeType.Weekends}, ... ];\n     * ```\n     */\n    @Input()\n    public get specialDates(): DateRangeDescriptor[] {\n        return this._specialDates;\n    }\n    public set specialDates(value: DateRangeDescriptor[]) {\n        this._specialDates = value;\n    }\n\n    /**\n     * Gets/Sets the modal overlay settings.\n     */\n    @Input()\n    public get modalOverlaySettings(): OverlaySettings {\n        return this._modalOverlay;\n    }\n\n    public set modalOverlaySettings(value: OverlaySettings) {\n        this._modalOverlay = value;\n    }\n\n    /**\n     * Gets/Sets the drop-down overlay settings.\n     */\n    @Input()\n    public get dropDownOverlaySettings(): OverlaySettings {\n        return this._dropDownOverlaySettings || this._defaultDropDownOverlaySettings;\n    }\n\n    public set dropDownOverlaySettings(value: OverlaySettings) {\n        this._dropDownOverlaySettings = value;\n    }\n\n    /**\n     * Gets the formatted date when `IgxDatePickerComponent` is in dialog mode.\n     *  @example\n     * ```typescript\n     * let selectedDate = this.datePicker.displayData;\n     * ```\n     */\n    public get displayData(): string {\n        if (this.value) {\n            return this._customFormatChecker(this.formatter, this.value);\n        }\n        return '';\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public get transformedDate(): string {\n        if (this._value) {\n            this._transformedDate = (this._isInEditMode) ? this._getEditorDate(this._value) : this._getDisplayDate(this._value);\n            this.isEmpty = false;\n        } else {\n            this._transformedDate = (this._isInEditMode) ? DatePickerUtil.maskToPromptChars(this.inputMask) : '';\n        }\n        return this._transformedDate;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public set transformedDate(value) {\n        this._transformedDate = value;\n    }\n\n    constructor(@Inject(\n        IgxOverlayService) private _overlayService: IgxOverlayService,\n        public element: ElementRef,\n        private _cdr: ChangeDetectorRef,\n        private _moduleRef: NgModuleRef<any>,\n        private _injector: Injector) { }\n\n    /**\n     * Gets the input group template.\n     * @example\n     * ```typescript\n     * let template = this.template();\n     * ```\n     */\n    get template(): TemplateRef<any> {\n        if (this.datePickerTemplateDirective) {\n            return this.datePickerTemplateDirective.template;\n        }\n        return (this.mode === InteractionMode.Dialog) ? this.readOnlyDatePickerTemplate : this.editableDatePickerTemplate;\n    }\n\n    /**\n     * Gets the context passed to the input group template.\n     */\n    get context() {\n        return {\n            disabled: this.disabled,\n            disabledDates: this.disabledDates,\n            displayData: this.displayData,\n            format: this.format,\n            isSpinLoop: this.isSpinLoop,\n            label: this.label,\n            labelVisibility: this.labelVisibility,\n            locale: this.locale,\n            mask: this.mask,\n            mode: this.mode,\n            specialDates: this.specialDates,\n            value: this.value,\n            openDialog: () => this.openDialog()\n        };\n    }\n\n    private get required(): boolean {\n        if (this._ngControl && this._ngControl.control && this._ngControl.control.validator) {\n            // Run the validation with empty object to check if required is enabled.\n            const error = this._ngControl.control.validator({} as AbstractControl);\n            return error && error.required;\n        }\n\n        return false;\n    }\n\n\n    /**\n     * Gets/Sets the selected date.\n     *  @example\n     * ```html\n     * <igx-date-picker [value]=\"date\"></igx-date-picker>\n     * ```\n     */\n    @Input()\n    public get value(): Date {\n        return this._value;\n    }\n\n    public set value(date: Date) {\n        this._value = date;\n        this._onChangeCallback(date);\n    }\n\n    /**\n     * Gets/Sets the value of `id` attribute.\n     * @remarks If not provided it will be automatically generated.\n     * @example\n     * ```html\n     * <igx-date-picker [id]=\"'igx-date-picker-3'\" cancelButtonLabel=\"cancel\" todayButtonLabel=\"today\"></igx-date-picker>\n     * ```\n     */\n    @HostBinding('attr.id')\n    @Input()\n    public id = `igx-date-picker-${NEXT_ID++}`;\n\n    /**\n     * Gets/Sets a custom formatter function on the selected or passed date.\n     * @example\n     * ```html\n     * <igx-date-picker [value]=\"date\" [formatter]=\"formatter\"></igx-date-picker>\n     * ```\n     */\n    @Input()\n    public formatter: (val: Date) => string;\n\n    /**\n     * Enables/Disables the `IgxDatePickerComponent`.\n     *  @example\n     * ```html\n     * <igx-date-picker [disabled]=\"'true'\" cancelButtonLabel=\"cancel\" todayButtonLabel=\"today\"></igx-date-picker>\n     * ```\n     */\n    @Input()\n    public disabled: boolean;\n\n    /**\n     * Gets/Sets the orientation of the `IgxDatePickerComponent` header.\n     *  @example\n     * ```html\n     * <igx-date-picker [vertical]=\"'true'\" cancelButtonLabel=\"cancel\" todayButtonLabel=\"today\"></igx-date-picker>\n     * ```\n     */\n    @Input()\n    public vertical = false;\n\n    /**\n     * Gets/Sets the today button's label.\n     *  @example\n     * ```html\n     * <igx-date-picker cancelButtonLabel=\"cancel\" todayButtonLabel=\"Tomorrow\"></igx-date-picker>\n     * ```\n     */\n    @Input()\n    public todayButtonLabel: string;\n\n    /**\n     * *Gets/Sets the cancel button's label.\n     * @example\n     * ```html\n     * <igx-date-picker cancelButtonLabel=\"Close\" todayButtonLabel=\"Today\"></igx-date-picker>\n     * ```\n     */\n    @Input()\n    public cancelButtonLabel: string;\n\n    /**\n     * Gets/Sets the interaction mode - dialog or drop down.\n     *  @example\n     * ```html\n     * <igx-date-picker mode=\"dropdown\"></igx-date-picker>\n     * ```\n     */\n    @Input()\n    public mode = InteractionMode.Dialog;\n\n    /**\n     * Gets/Sets whether date should spin continuously or stop when min/max is reached.\n     *  @example\n     * ```html\n     * <igx-date-picker [isSpinLoop]=\"false\"></igx-date-picker>\n     * ```\n     */\n    @Input()\n    public isSpinLoop = true;\n\n    /**\n     * Gets/Sets the container used for the popup element.\n     * @remarks\n     *  `outlet` is an instance of `IgxOverlayOutletDirective` or an `ElementRef`.\n     * @example\n     * ```html\n     * <div igxOverlayOutlet #outlet=\"overlay-outlet\"></div>\n     * //..\n     * <igx-date-picker [outlet]=\"outlet\"></igx-date-picker>\n     * //..\n     * ```\n     */\n    @Input()\n    public outlet: IgxOverlayOutletDirective | ElementRef;\n\n    /**\n     * Emitted when the `IgxDatePickerComponent` calendar is opened.\n     */\n    @Output()\n    public onOpened = new EventEmitter<IgxDatePickerComponent>();\n\n    /**\n     * Emitted after the `IgxDatePickerComponent` is closed.\n     */\n    @Output()\n    public onClosed = new EventEmitter<IgxDatePickerComponent>();\n\n    /**\n     * Emitted when the `IgxDatePickerComponent` is being closed.\n     */\n    @Output()\n    public onClosing = new EventEmitter<CancelableBrowserEventArgs & IBaseEventArgs>();\n\n    /**\n     * Emitted when selection is made in the calendar.\n     *  @example\n     * ```html\n     * <igx-date-picker (onSelection)=\"selection($event)\"></igx-date-picker>\n     * ```\n     */\n    @Output()\n    public onSelection = new EventEmitter<Date>();\n\n    /**\n     * Emitted when date picker value is changed.\n     * @example\n     * ```html\n     * <igx-date-picker (valueChange)=\"valueChanged($event)\" mode=\"dropdown\"></igx-date-picker>\n     * ```\n     */\n    @Output()\n    public valueChange = new EventEmitter<Date>();\n\n    /**\n     * Emitted when the user types/spins to a disabled date in the date-picker editor.\n     *  @example\n     * ```html\n     * <igx-date-picker (onDisabledDate)=\"onDisabledDate($event)\"></igx-date-picker>\n     * ```\n     */\n    @Output()\n    public onDisabledDate = new EventEmitter<IDatePickerDisabledDateEventArgs>();\n\n    /**\n     * Emitted when the user types/spins invalid date in the date-picker editor.\n     *  @example\n     * ```html\n     * <igx-date-picker (onValidationFailed)=\"onValidationFailed($event)\"></igx-date-picker>\n     * ```\n     */\n    @Output()\n    public onValidationFailed = new EventEmitter<IDatePickerValidationFailedEventArgs>();\n\n    /*\n     * @hidden\n     */\n    @ViewChild('readOnlyDatePickerTemplate', { read: TemplateRef, static: true })\n    protected readOnlyDatePickerTemplate: TemplateRef<any>;\n\n    /*\n     * @hidden\n     */\n    @ViewChild('editableDatePickerTemplate', { read: TemplateRef, static: true })\n    protected editableDatePickerTemplate: TemplateRef<any>;\n\n    /*\n     * @hidden\n     */\n    @ViewChild(IgxInputGroupComponent)\n    protected inputGroup: IgxInputGroupComponent;\n\n    @ContentChild(IgxInputGroupComponent)\n    protected inputGroupUserTemplate: IgxInputGroupComponent;\n\n    @ViewChild(IgxInputDirective, { read: ElementRef })\n    private _inputElementRef: ElementRef;\n\n    @ContentChild(IgxInputDirective, { read: ElementRef })\n    protected _inputUserTemplateElementRef: ElementRef;\n\n    @ViewChild(IgxInputDirective)\n    private _inputDirective: IgxInputDirective;\n\n    @ContentChild(IgxInputDirective)\n    private _inputDirectiveUserTemplate: IgxInputDirective;\n\n    /**\n     * @hidden\n     */\n    @ContentChild(IgxDatePickerTemplateDirective, { read: IgxDatePickerTemplateDirective })\n    protected datePickerTemplateDirective: IgxDatePickerTemplateDirective;\n\n    /**\n     * @hidden\n     */\n    @ContentChild(IgxCalendarHeaderTemplateDirective, { read: IgxCalendarHeaderTemplateDirective })\n    public headerTemplate: IgxCalendarHeaderTemplateDirective;\n\n    /**\n     * @hidden\n     */\n    @ContentChild(IgxCalendarSubheaderTemplateDirective, { read: IgxCalendarSubheaderTemplateDirective })\n    public subheaderTemplate: IgxCalendarSubheaderTemplateDirective;\n\n    /**\n     * @hidden\n     */\n    @ContentChild(IgxDatePickerActionsDirective, { read: IgxDatePickerActionsDirective })\n    public datePickerActionsDirective: IgxDatePickerActionsDirective;\n\n    /** @hidden @internal */\n    public calendar: IgxCalendarComponent;\n    /** @hidden @internal */\n    public hasHeader = true;\n    /** @hidden @internal */\n    public collapsed = true;\n    /** @hidden @internal */\n    public displayValuePipe = new DatePickerDisplayValuePipe(this);\n    /** @hidden @internal */\n    public inputValuePipe = new DatePickerInputValuePipe(this);\n    /** @hidden @internal */\n    public dateFormatParts = [];\n    /** @hidden @internal */\n    public rawDateString: string;\n    /** @hidden @internal */\n    public inputMask: string;\n    /** @hidden @internal */\n    public isEmpty = true;\n    /** @hidden @internal */\n    public invalidDate = '';\n\n    private readonly spinDelta = 1;\n    private readonly defaultLocale = 'en';\n\n    private _formatOptions = {\n        day: 'numeric',\n        month: 'short',\n        weekday: 'short',\n        year: 'numeric'\n    };\n    private _formatViews = {\n        day: false,\n        month: true,\n        year: false\n    };\n    private _destroy$ = new Subject<boolean>();\n    private _statusChanges$: Subscription;\n    private _componentID: string;\n    private _format: string;\n    private _value: Date;\n    private _isInEditMode: boolean;\n    private _disabledDates: DateRangeDescriptor[] = null;\n    private _specialDates: DateRangeDescriptor[] = null;\n    private _modalOverlay: OverlaySettings;\n    private _dropDownOverlaySettings: OverlaySettings;\n    private _positionSettings: PositionSettings;\n    private _defaultDropDownOverlaySettings: OverlaySettings;\n    private _modalOverlaySettings: OverlaySettings;\n    private _transformedDate;\n    private _onOpen = new EventEmitter<IgxDatePickerComponent>();\n    private _onClose = new EventEmitter<IgxDatePickerComponent>();\n    private _ngControl: NgControl = null;\n\n    //#region ControlValueAccessor\n\n    private _onChangeCallback: (_: Date) => void = noop;\n\n    private _onTouchedCallback: () => void = noop;\n\n    /** @hidden @internal */\n    public writeValue(value: Date) {\n        this._value = value;\n        // TODO: do we need next call\n        this._cdr.markForCheck();\n    }\n\n    /** @hidden @internal */\n    public registerOnChange(fn: (_: Date) => void) { this._onChangeCallback = fn; }\n\n    /** @hidden @internal */\n    public registerOnTouched(fn: () => void) { this._onTouchedCallback = fn; }\n\n    /** @hidden @internal */\n    public setDisabledState(isDisabled: boolean): void { this.disabled = isDisabled; }\n\n    //#endregion\n\n    /**\n     * @hidden\n     */\n    @HostListener('keydown.spacebar', ['$event'])\n    @HostListener('keydown.space', ['$event'])\n    public onSpaceClick(event: KeyboardEvent) {\n        this.openDialog();\n        event.preventDefault();\n    }\n\n\n    /** @hidden */\n    public getEditElement() {\n        const inputDirectiveElementRef = this._inputElementRef || this._inputUserTemplateElementRef;\n        return (inputDirectiveElementRef) ? inputDirectiveElementRef.nativeElement : null;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public getInputGroupElement() {\n        if (this.inputGroup) {\n            return this.inputGroup.element.nativeElement;\n        }\n        if (this.inputGroupUserTemplate) {\n            return this.inputGroupUserTemplate.element.nativeElement;\n        }\n        return null;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public ngOnInit(): void {\n        this._positionSettings = {\n            openAnimation: fadeIn,\n            closeAnimation: fadeOut\n        };\n\n        this._defaultDropDownOverlaySettings = {\n            closeOnOutsideClick: true,\n            modal: false,\n            scrollStrategy: new AbsoluteScrollStrategy(),\n            positionStrategy: new AutoPositionStrategy(this._positionSettings),\n            outlet: this.outlet\n        };\n\n        this._modalOverlaySettings = {\n            closeOnOutsideClick: true,\n            modal: true,\n            outlet: this.outlet\n        };\n\n        this._overlayService.onOpening.pipe(\n            filter((overlay) => overlay.id === this._componentID),\n            takeUntil(this._destroy$)).subscribe((eventArgs) => {\n                this._onOpening(eventArgs);\n            });\n\n        this._overlayService.onOpened.pipe(\n            filter((overlay) => overlay.id === this._componentID),\n            takeUntil(this._destroy$)).subscribe(() => {\n                this._onOpened();\n            });\n\n        this._overlayService.onClosed.pipe(\n            filter(overlay => overlay.id === this._componentID),\n            takeUntil(this._destroy$)).subscribe(() => {\n                this._onClosed();\n            });\n\n        this._overlayService.onClosing.pipe(\n            filter(overlay => overlay.id === this._componentID),\n            takeUntil(this._destroy$)).subscribe((event) => {\n                this.onClosing.emit(event);\n                // If canceled in a user onClosing handler\n                if (event.cancel) {\n                    return;\n                }\n                // Do not focus the input if clicking outside in dropdown mode\n                const input = this.getEditElement();\n                if (input && !(event.event && this.mode === InteractionMode.DropDown)) {\n                    input.focus();\n                } else {\n                    // outside click\n                    this._updateValidityOnBlur();\n                }\n            });\n\n        if (this.mode === InteractionMode.DropDown) {\n            this.dateFormatParts = DatePickerUtil.parseDateFormat(this.mask, this.locale);\n            if (this.mask === undefined) {\n                this.mask = DatePickerUtil.getMask(this.dateFormatParts);\n            }\n            this.inputMask = DatePickerUtil.getInputMask(this.dateFormatParts);\n        }\n\n        this._ngControl = this._injector.get<NgControl>(NgControl, null);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public ngAfterViewInit() {\n        if (this.mode === InteractionMode.DropDown && this._inputElementRef) {\n            fromEvent(this._inputElementRef.nativeElement, 'keydown').pipe(\n                throttle(() => interval(0, animationFrameScheduler)),\n                takeUntil(this._destroy$)\n            ).subscribe((res) => this.onKeyDown(res));\n        }\n\n        if (this._ngControl) {\n            this._statusChanges$ = this._ngControl.statusChanges.subscribe(this.onStatusChanged.bind(this));\n        }\n    }\n\n    public ngAfterViewChecked() {\n        // if one sets mode at run time this forces initialization of new igxInputGroup\n        // As a result a new igxInputDirective is initialized too. In ngAfterViewInit of\n        // the new directive isRequired of the igxInputGroup is set again. However\n        // ngAfterViewInit of date picker is not called again and we may finish with wrong\n        // isRequired in igxInputGroup. This is why we should set it her, only when needed\n        if (this.inputGroup && this.inputGroup.isRequired !== this.required) {\n            this.inputGroup.isRequired = this.required;\n            this._cdr.detectChanges();\n        }\n    }\n\n    protected onStatusChanged() {\n        if ((this._ngControl.control.touched || this._ngControl.control.dirty) &&\n            (this._ngControl.control.validator || this._ngControl.control.asyncValidator)) {\n            if (this.inputGroup.isFocused) {\n                this._inputDirective.valid = this._ngControl.valid ? IgxInputState.VALID : IgxInputState.INVALID;\n            } else {\n                this._inputDirective.valid = this._ngControl.valid ? IgxInputState.INITIAL : IgxInputState.INVALID;\n            }\n        }\n\n        if (this.inputGroup && this.inputGroup.isRequired !== this.required) {\n            this.inputGroup.isRequired = this.required;\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public ngOnDestroy(): void {\n        if (this._componentID) {\n            this._overlayService.hide(this._componentID);\n        }\n        this._destroy$.next(true);\n        this._destroy$.complete();\n    }\n\n    /**\n     * Selects today's date from calendar.\n     *  @remarks\n     * Changes the input field value, @calendar.viewDate and @calendar.value.\n     *  @example\n     * ```typescript\n     * this.datePicker.triggerTodaySelection();\n     * ```\n     */\n    public triggerTodaySelection(): void {\n        const today = new Date(Date.now());\n        this.handleSelection(today);\n    }\n\n    /**\n     * Change the calendar selection.\n     * @remarks\n     * Calling this method will emit the @calendar.onSelection event,\n     * which will fire @handleSelection method.\n     * @example\n     * ```typescript\n     * this.datePicker.selectDate(this.date);\n     * ```\n     * @param date passed date that has to be set to the calendar.\n     */\n    public selectDate(date: Date): void {\n        const oldValue =  this.value;\n        this.value = date;\n\n        this.emitValueChangeEvent(oldValue, this.value );\n        this.onSelection.emit(date);\n    }\n\n    /**\n     * Deselects the calendar date.\n     * @example\n     * ```typescript\n     * this.datePicker.deselectDate();\n     * ```\n     */\n    public deselectDate(): void {\n        const oldValue =  this.value;\n        this.value = null;\n        this.emitValueChangeEvent(oldValue, this.value );\n        if (this.calendar) {\n            this.calendar.deselectDate();\n        }\n    }\n\n    /**\n     * Opens the date picker drop down or dialog.\n     * @param target HTMLElement - the target element to use for positioning the drop down container according to\n     * @example\n     * ```typescript\n     * this.datePicker.openDialog(target);\n     * ```\n     */\n    public openDialog(): void {\n        if (!this.collapsed) {\n            return;\n        }\n\n        switch (this.mode) {\n            case InteractionMode.Dialog: {\n                this.hasHeader = true;\n                const modalOverlay = (this.modalOverlaySettings !== undefined) ? this._modalOverlay : this._modalOverlaySettings;\n                this._componentID = this._overlayService.attach(IgxCalendarContainerComponent, modalOverlay, this._moduleRef);\n                this._overlayService.show(this._componentID);\n                break;\n            }\n            case InteractionMode.DropDown: {\n                this.hasHeader = false;\n                const target = this.getInputGroupElement();\n                if (target) {\n                    this.dropDownOverlaySettings.positionStrategy.settings.target = target;\n                }\n                this._componentID = this._overlayService.attach(IgxCalendarContainerComponent,\n                    this.dropDownOverlaySettings, this._moduleRef);\n                this._overlayService.show(this._componentID);\n                break;\n            }\n        }\n    }\n\n    /**\n     * Close the calendar.\n     *\n     * @hidden @internal\n     */\n    public closeCalendar(): void {\n        this._overlayService.hide(this._componentID);\n    }\n\n    /**\n     * Clear the input field, date picker value and calendar selection.\n     *\n     * @hidden @internal\n     */\n    public clear(): void {\n        this.isEmpty = true;\n        this.invalidDate = '';\n        this.deselectDate();\n        this._setCursorPosition(0);\n    }\n\n    /**\n     * Evaluates when @calendar.onSelection event was fired\n     * and update the input value.\n     *\n     * @param event selected value from calendar.\n     *\n     * @hidden @internal\n     */\n    public handleSelection(date: Date): void {\n        if (this.value) {\n            date.setHours(this.value.getHours());\n            date.setMinutes(this.value.getMinutes());\n            date.setSeconds(this.value.getSeconds());\n            date.setMilliseconds(this.value.getMilliseconds());\n        }\n        const oldValue =  this.value;\n        this.value = date;\n\n        this.emitValueChangeEvent(oldValue, this.value );\n        this.calendar.viewDate = date;\n        this.closeCalendar();\n        this.onSelection.emit(date);\n    }\n\n    /** @hidden @internal */\n    public onOpenClick(event: MouseEvent) {\n        event.stopPropagation();\n        this.openDialog();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onBlur(event): void {\n        this._isInEditMode = false;\n        if (this.mode === InteractionMode.DropDown) {\n            this.calculateDate(event.target.value, event.type);\n        }\n\n        if (this.collapsed) {\n            this._updateValidityOnBlur();\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onFocus(): void {\n        this._isInEditMode = true;\n        if (this.value && this.invalidDate === '') {\n            this._transformedDate = this._getEditorDate(this.value);\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onKeyDown(event) {\n        switch (event.key) {\n            case KEYS.UP_ARROW:\n            case KEYS.UP_ARROW_IE:\n                event.preventDefault();\n                event.stopPropagation();\n                this.spinValue(event.target.value, 1, event.type);\n                break;\n            case KEYS.DOWN_ARROW:\n            case KEYS.DOWN_ARROW_IE:\n                if (event.altKey) {\n                    this.openDialog();\n                } else {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    this.spinValue(event.target.value, -1, event.type);\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onWheel(event) {\n        if (this._isInEditMode) {\n            event.preventDefault();\n            event.stopPropagation();\n            const sign = (event.deltaY > 0) ? -1 : 1;\n            this.spinValue(event.target.value, sign, event.type);\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onInput(event) {\n        const targetValue = event.target.value;\n        const cursorPosition = this._getCursorPosition();\n        const checkInput = DatePickerUtil.checkForCompleteDateInput(this.dateFormatParts, targetValue);\n        this._isInEditMode = true;\n\n        if (targetValue !== DatePickerUtil.maskToPromptChars(this.inputMask)) {\n            this.isEmpty = false;\n        }\n\n        // If all date parts are completed, change the date-picker value, stay in edit mode\n        if (checkInput === 'complete' && event.inputType !== 'deleteContentBackward') {\n            this._transformedDate = targetValue;\n            this.calculateDate(targetValue, event.type);\n            this._setCursorPosition(cursorPosition);\n        } else if (checkInput === 'partial') {\n            // While editing, if one date part is deleted, date-picker value is set to null, the remaining input stays intact.\n            this.deselectDate();\n            requestAnimationFrame(() => {\n                this.getEditElement().value = targetValue;\n                this._setCursorPosition(cursorPosition);\n            });\n        } else if (checkInput === 'empty') {\n            // Total clean-up as input is deleted.\n            this.isEmpty = true;\n            this.deselectDate();\n        }\n    }\n\n    private emitValueChangeEvent(oldValue: Date, newValue: Date) {\n        if (!isEqual(oldValue, newValue)) {\n            this.valueChange.emit(newValue);\n        }\n    }\n\n    private calculateDate(dateString: string, invokedByEvent: string): void {\n        if (dateString !== '') {\n            const prevDateValue = this.value;\n            const inputValue = (invokedByEvent === 'blur') ? this.rawDateString : dateString;\n            const newDateArray = DatePickerUtil.parseDateArray(this.dateFormatParts, prevDateValue, inputValue);\n\n            if (newDateArray.state === DateState.Valid) {\n                const newValue = newDateArray.date;\n                // Restore the time part if any\n                if (prevDateValue) {\n                    newValue.setHours(prevDateValue.getHours());\n                    newValue.setMinutes(prevDateValue.getMinutes());\n                    newValue.setSeconds(prevDateValue.getSeconds());\n                    newValue.setMilliseconds(prevDateValue.getMilliseconds());\n                }\n\n                if (this.disabledDates === null\n                    || (this.disabledDates !== null && !isDateInRanges(newValue, this.disabledDates))) {\n                        const oldValue =  this.value;\n                        this.value = newValue;\n\n                        this.emitValueChangeEvent(oldValue, this.value );\n                        this.invalidDate = '';\n                } else {\n                    const args: IDatePickerDisabledDateEventArgs = {\n                        datePicker: this,\n                        currentValue: newValue,\n                    };\n                    this.onDisabledDate.emit(args);\n                }\n            } else {\n                const args: IDatePickerValidationFailedEventArgs = {\n                    datePicker: this,\n                    prevValue: prevDateValue\n                };\n                this.invalidDate = dateString;\n                this.onValidationFailed.emit(args);\n            }\n        }\n    }\n\n    private spinValue(inputValue: string, sign: number, eventType: string): void {\n        this._isInEditMode = true;\n        this.isEmpty = false;\n        const cursorPosition = this._getCursorPosition();\n\n        const modifiedInputValue =\n            DatePickerUtil.getModifiedDateInput(this.dateFormatParts, inputValue, cursorPosition, this.spinDelta * sign, this.isSpinLoop);\n\n        this.getEditElement().value = modifiedInputValue;\n        this._setCursorPosition(cursorPosition);\n\n        const checkInput = DatePickerUtil.checkForCompleteDateInput(this.dateFormatParts, modifiedInputValue);\n        if (checkInput === 'complete') {\n            this._isInEditMode = true;\n            this.calculateDate(modifiedInputValue, eventType);\n            this._setCursorPosition(cursorPosition);\n        }\n    }\n\n    private _onOpening(event: OverlayCancelableEventArgs) {\n        this._initializeCalendarContainer(event.componentRef.instance as IgxCalendarContainerComponent);\n        this.collapsed = false;\n    }\n\n    private _onOpened(): void {\n        this.onOpened.emit(this);\n\n        if (this.calendar) {\n            this._focusCalendarDate();\n        }\n    }\n\n    private _onClosed(): void {\n        this.collapsed = true;\n        this._componentID = null;\n        this.onClosed.emit(this);\n    }\n\n    private _initializeCalendarContainer(componentInstance: IgxCalendarContainerComponent) {\n        this.calendar = componentInstance.calendar;\n        const isVertical = (this.vertical && this.mode === InteractionMode.Dialog);\n        this.calendar.hasHeader = this.hasHeader;\n        this.calendar.formatOptions = this.formatOptions;\n        this.calendar.formatViews = this.formatViews;\n        this.calendar.locale = this.locale;\n        this.calendar.vertical = isVertical;\n        this.calendar.weekStart = this.weekStart;\n        this.calendar.specialDates = this.specialDates;\n        this.calendar.disabledDates = this.disabledDates;\n        this.calendar.headerTemplate = this.headerTemplate;\n        this.calendar.subheaderTemplate = this.subheaderTemplate;\n        this.calendar.hideOutsideDays = this.hideOutsideDays;\n        this.calendar.monthsViewNumber = this.monthsViewNumber;\n        this.calendar.onSelection.pipe(takeUntil(this._destroy$)).subscribe((ev: Date) => this.handleSelection(ev));\n\n        if (this.value) {\n            this.calendar.value = this.value;\n            this.calendar.viewDate = this.value;\n        }\n\n        componentInstance.mode = this.mode;\n        componentInstance.vertical = isVertical;\n        componentInstance.cancelButtonLabel = this.cancelButtonLabel;\n        componentInstance.todayButtonLabel = this.todayButtonLabel;\n        componentInstance.datePickerActions = this.datePickerActionsDirective;\n\n        componentInstance.onClose.pipe(takeUntil(this._destroy$)).subscribe(() => this.closeCalendar());\n        componentInstance.onTodaySelection.pipe(takeUntil(this._destroy$)).subscribe(() => this.triggerTodaySelection());\n    }\n\n    // Focus a date, after the calendar appearance into DOM.\n    private _focusCalendarDate(): void {\n        requestAnimationFrame(() => {\n            this.calendar.daysView.focusActiveDate();\n        });\n    }\n\n    private _setLocaleToDate(value: Date): string {\n        if (isIE()) {\n            // this is a workaround fixing the following IE11 issue:\n            // IE11 has added character code 8206 (mark for RTL) to the output of toLocaleDateString() that\n            // precedes each portion that comprises the total date... For more information read this article:\n            // tslint:disable-next-line: max-line-length\n            // https://www.csgpro.com/blog/2016/08/a-bad-date-with-internet-explorer-11-trouble-with-new-unicode-characters-in-javascript-date-strings/\n            const localeDateStrIE = new Date(value.getFullYear(), value.getMonth(), value.getDate(),\n                value.getHours(), value.getMinutes(), value.getSeconds(), value.getMilliseconds());\n            return localeDateStrIE.toLocaleDateString(this.locale);\n        }\n\n        return value.toLocaleDateString(this.locale);\n    }\n\n    private _getCursorPosition(): number {\n        return this.getEditElement().selectionStart;\n    }\n\n    private _setCursorPosition(start: number, end: number = start): void {\n        requestAnimationFrame(() => {\n            this.getEditElement().setSelectionRange(start, end);\n        });\n    }\n\n    /**\n     * Apply custom user formatter upon date.\n     * @param formatter custom formatter function.\n     * @param date passed date\n     */\n    private _customFormatChecker(formatter: (_: Date) => string, date: Date) {\n        return this.formatter ? this.formatter(date) : this._setLocaleToDate(date);\n    }\n\n    /*\n    * Transforms the date according to the specified format when `IgxDatePickerComponent` is in edit mode\n    * using @angular/common formatDate method: https://angular.io/api/common/formatDate\n    * @param  value: string | number | Date\n    * @returns formatted string\n    */\n    private _getDisplayDate(value: any): string {\n        if (this.format && !this.formatter) {\n            const locale = this.locale || this.defaultLocale;\n            return formatDate(value, this.format, locale);\n        } else {\n            return this._customFormatChecker(this.formatter, value);\n        }\n    }\n\n    private _getEditorDate(value: any) {\n        const locale = this.locale || this.defaultLocale;\n        const changedValue = (value) ? formatDate(value, this.mask, locale) : '';\n        return DatePickerUtil.addPromptCharsEditMode(this.dateFormatParts, this.value, changedValue);\n    }\n\n    public _updateValidityOnBlur() {\n        this._onTouchedCallback();\n        const input = this._inputDirective || this._inputDirectiveUserTemplate;\n        if (input && this._ngControl && !this._ngControl.valid) {\n            input.valid = IgxInputState.INVALID;\n        } else {\n            input.valid = IgxInputState.INITIAL;\n        }\n    }\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [\n        IgxDatePickerComponent,\n        IgxCalendarContainerComponent,\n        IgxDatePickerActionsDirective,\n        IgxDatePickerTemplateDirective,\n        DatePickerDisplayValuePipe,\n        DatePickerInputValuePipe\n    ],\n    entryComponents: [\n        IgxCalendarContainerComponent\n    ],\n    exports: [\n        IgxDatePickerComponent,\n        IgxDatePickerTemplateDirective,\n        IgxDatePickerActionsDirective,\n        DatePickerDisplayValuePipe,\n        DatePickerInputValuePipe\n    ],\n    imports: [\n        CommonModule,\n        IgxIconModule,\n        IgxInputGroupModule,\n        IgxCalendarModule,\n        IgxButtonModule,\n        IgxRippleModule,\n        IgxMaskModule,\n        IgxTextSelectionModule\n    ]\n})\nexport class IgxDatePickerModule { }\n","import {\n    Component,\n    ChangeDetectionStrategy,\n    ViewChild,\n    Input\n} from '@angular/core';\nimport { IgxExcelStyleDefaultExpressionComponent } from './excel-style-default-expression.component';\nimport { IgxDatePickerComponent } from '../../../date-picker/date-picker.component';\nimport { DisplayDensity } from '../../../core/density';\n\n/**\n * @hidden\n */\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false,\n    selector: 'igx-excel-style-date-expression',\n    templateUrl: './excel-style-date-expression.component.html'\n})\nexport class IgxExcelStyleDateExpressionComponent extends IgxExcelStyleDefaultExpressionComponent {\n\n    @ViewChild('datePicker', { read: IgxDatePickerComponent, static: true })\n    private datePicker: IgxDatePickerComponent;\n\n    protected get inputValuesElement() {\n        return this.datePicker.getEditElement();\n    }\n\n    @Input()\n    public displayDensity: DisplayDensity;\n\n    get inputDatePlaceholder(): string {\n        return this.grid.resourceStrings['igx_grid_filter_row_date_placeholder'];\n    }\n}\n","import {\n    Component,\n    ChangeDetectionStrategy,\n    Input,\n    ChangeDetectorRef,\n    ViewChild,\n    AfterViewInit,\n    TemplateRef,\n    ViewChildren,\n    QueryList,\n    ElementRef\n} from '@angular/core';\nimport { IgxColumnComponent } from '../../columns/column.component';\nimport { IgxFilteringService, ExpressionUI } from '../grid-filtering.service';\nimport { FilteringLogic } from '../../../data-operations/filtering-expression.interface';\nimport { DataType } from '../../../data-operations/data-util';\nimport {\n    IgxStringFilteringOperand,\n    IgxBooleanFilteringOperand,\n    IgxNumberFilteringOperand,\n    IgxDateFilteringOperand\n} from '../../../data-operations/filtering-condition';\nimport { IgxToggleDirective } from '../../../directives/toggle/toggle.directive';\nimport {\n    ConnectedPositioningStrategy,\n    AutoPositionStrategy,\n    OverlaySettings,\n    VerticalAlignment,\n    PositionSettings,\n    HorizontalAlignment,\n    IgxOverlayService,\n    AbsoluteScrollStrategy\n} from '../../../services/public_api';\nimport { ILogicOperatorChangedArgs, IgxExcelStyleDefaultExpressionComponent } from './excel-style-default-expression.component';\nimport { KEYS } from '../../../core/utils';\nimport { IgxExcelStyleDateExpressionComponent } from './excel-style-date-expression.component';\nimport { DisplayDensity } from '../../../core/density';\n\n/**\n * @hidden\n */\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false,\n    selector: 'igx-excel-style-custom-dialog',\n    templateUrl: './excel-style-custom-dialog.component.html'\n})\nexport class IgxExcelStyleCustomDialogComponent implements AfterViewInit {\n\n    @Input()\n    public expressionsList = new Array<ExpressionUI>();\n\n    private _customDialogPositionSettings: PositionSettings = {\n        verticalDirection: VerticalAlignment.Middle,\n        horizontalDirection: HorizontalAlignment.Center,\n        horizontalStartPoint: HorizontalAlignment.Center,\n        verticalStartPoint: VerticalAlignment.Middle\n    };\n\n    private _customDialogOverlaySettings: OverlaySettings = {\n        closeOnOutsideClick: true,\n        modal: false,\n        positionStrategy: new AutoPositionStrategy(this._customDialogPositionSettings),\n        scrollStrategy: new AbsoluteScrollStrategy()\n    };\n\n    @Input()\n    public column: IgxColumnComponent;\n\n    @Input()\n    public selectedOperator: string;\n\n    @Input()\n    public filteringService: IgxFilteringService;\n\n    @Input()\n    public overlayComponentId: string;\n\n    @Input()\n    public overlayService: IgxOverlayService;\n\n    @Input()\n    public displayDensity: DisplayDensity;\n\n    @ViewChildren(IgxExcelStyleDefaultExpressionComponent)\n    private expressionComponents: QueryList<IgxExcelStyleDefaultExpressionComponent>;\n\n    @ViewChildren(IgxExcelStyleDateExpressionComponent)\n    private expressionDateComponents: QueryList<IgxExcelStyleDateExpressionComponent>;\n\n    @ViewChild('toggle', { read: IgxToggleDirective, static: true })\n    public toggle: IgxToggleDirective;\n\n    @ViewChild('defaultExpressionTemplate', { read: TemplateRef })\n    protected defaultExpressionTemplate: TemplateRef<any>;\n\n    @ViewChild('dateExpressionTemplate', { read: TemplateRef })\n    protected dateExpressionTemplate: TemplateRef<any>;\n\n    @ViewChild('expressionsContainer', { static: true })\n    protected expressionsContainer: ElementRef;\n\n    constructor(private cdr: ChangeDetectorRef) {}\n\n    ngAfterViewInit(): void {\n        this._customDialogOverlaySettings.outlet = this.grid.outlet;\n    }\n\n    get template(): TemplateRef<any> {\n        if (this.column.dataType === DataType.Date) {\n            return this.dateExpressionTemplate;\n        }\n\n        return this.defaultExpressionTemplate;\n    }\n\n    get grid(): any {\n        return this.filteringService.grid;\n    }\n\n    public onCustomDialogOpening() {\n        if (this.selectedOperator) {\n            this.createInitialExpressionUIElement();\n        }\n    }\n\n    public onCustomDialogOpened() {\n        if (this.expressionComponents.first) {\n            this.expressionComponents.first.focus();\n        }\n    }\n\n    public open(esf) {\n        this._customDialogOverlaySettings.positionStrategy.settings.target =\n            this.overlayComponentId ?\n                this.grid.rootGrid ? this.grid.rootGrid.nativeElement : this.grid.nativeElement :\n                esf;\n        this.toggle.open(this._customDialogOverlaySettings);\n    }\n\n    public onClearButtonClick() {\n        this.filteringService.clearFilter(this.column.field);\n        this.createInitialExpressionUIElement();\n        this.cdr.detectChanges();\n    }\n\n    public closeDialog() {\n        if (this.overlayComponentId) {\n            this.overlayService.hide(this.overlayComponentId);\n        } else {\n            this.toggle.close();\n        }\n    }\n\n    public onApplyButtonClick() {\n        this.expressionsList = this.expressionsList.filter(\n            element => element.expression.condition &&\n            (element.expression.searchVal || element.expression.searchVal === 0 || element.expression.condition.isUnary));\n\n        if (this.expressionsList.length > 0) {\n            this.expressionsList[0].beforeOperator = null;\n            this.expressionsList[this.expressionsList.length - 1].afterOperator = null;\n        }\n\n        this.filteringService.filterInternal(this.column.field, this.expressionsList);\n        this.closeDialog();\n    }\n\n    public onAddButtonClick() {\n        const exprUI = new ExpressionUI();\n        exprUI.expression = {\n            condition: null,\n            fieldName: this.column.field,\n            ignoreCase: this.column.filteringIgnoreCase,\n            searchVal: null\n        };\n\n        this.expressionsList[this.expressionsList.length - 1].afterOperator = FilteringLogic.And;\n        exprUI.beforeOperator = this.expressionsList[this.expressionsList.length - 1].afterOperator;\n\n        this.expressionsList.push(exprUI);\n\n        this.markChildrenForCheck();\n        this.scrollToBottom();\n    }\n\n    public onExpressionRemoved(event: ExpressionUI) {\n        const indexToRemove = this.expressionsList.indexOf(event);\n\n        if (indexToRemove === 0 && this.expressionsList.length > 1) {\n            this.expressionsList[1].beforeOperator = null;\n        } else if (indexToRemove === this.expressionsList.length - 1) {\n            this.expressionsList[indexToRemove - 1].afterOperator = null;\n        } else {\n            this.expressionsList[indexToRemove - 1].afterOperator = this.expressionsList[indexToRemove + 1].beforeOperator;\n            this.expressionsList[0].beforeOperator = null;\n            this.expressionsList[this.expressionsList.length - 1].afterOperator = null;\n        }\n\n        this.expressionsList.splice(indexToRemove, 1);\n\n        this.cdr.detectChanges();\n\n        this.markChildrenForCheck();\n    }\n\n    public onLogicOperatorChanged(event: ILogicOperatorChangedArgs) {\n        const index = this.expressionsList.indexOf(event.target);\n        event.target.afterOperator = event.newValue;\n        if (index + 1 < this.expressionsList.length) {\n            this.expressionsList[index + 1].beforeOperator = event.newValue;\n        }\n    }\n\n    public onKeyDown(eventArgs) {\n        eventArgs.stopPropagation();\n    }\n\n    public onApplyButtonKeyDown(eventArgs) {\n        if (eventArgs.key === KEYS.TAB && !eventArgs.shiftKey) {\n            eventArgs.stopPropagation();\n            eventArgs.preventDefault();\n        }\n    }\n\n    private createCondition(conditionName: string) {\n        switch (this.column.dataType) {\n            case DataType.Boolean:\n                return IgxBooleanFilteringOperand.instance().condition(conditionName);\n            case DataType.Number:\n                return IgxNumberFilteringOperand.instance().condition(conditionName);\n            case DataType.Date:\n                return IgxDateFilteringOperand.instance().condition(conditionName);\n            default:\n                return IgxStringFilteringOperand.instance().condition(conditionName);\n        }\n    }\n\n    private markChildrenForCheck() {\n        this.expressionComponents.forEach(x => x.cdr.markForCheck());\n        this.expressionDateComponents.forEach(x => x.cdr.markForCheck());\n    }\n\n    private createInitialExpressionUIElement() {\n        this.expressionsList = [];\n        const firstExprUI = new ExpressionUI();\n\n        firstExprUI.expression = {\n            condition: this.createCondition(this.selectedOperator),\n            fieldName: this.column.field,\n            ignoreCase: this.column.filteringIgnoreCase,\n            searchVal: null\n        };\n        firstExprUI.afterOperator = FilteringLogic.And;\n\n        this.expressionsList.push(firstExprUI);\n\n        const secondExprUI = new ExpressionUI();\n        secondExprUI.expression = {\n            condition: null,\n            fieldName: this.column.field,\n            ignoreCase: this.column.filteringIgnoreCase,\n            searchVal: null\n        };\n\n        secondExprUI.beforeOperator = FilteringLogic.And;\n\n        this.expressionsList.push(secondExprUI);\n    }\n\n    private scrollToBottom() {\n        requestAnimationFrame(() => {\n            this.expressionsContainer.nativeElement.scrollTop = this.expressionsContainer.nativeElement.scrollHeight;\n        });\n    }\n}\n","import {\n    Component,\n    ChangeDetectionStrategy,\n    ViewChild,\n    Input,\n    AfterViewInit,\n    OnDestroy,\n    OnChanges,\n    SimpleChanges\n} from '@angular/core';\nimport { IgxColumnComponent } from '../../columns/column.component';\nimport { IgxButtonGroupComponent } from '../../../buttonGroup/buttonGroup.component';\nimport { DisplayDensity } from '../../../core/density';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { GridType } from '../../common/grid.interface';\n\n/**\n * @hidden\n */\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false,\n    selector: 'igx-excel-style-sorting',\n    templateUrl: './excel-style-sorting.component.html'\n})\nexport class IgxExcelStyleSortingComponent implements AfterViewInit, OnDestroy, OnChanges {\n    private destroy$ = new Subject<boolean>();\n\n    @Input()\n    public column: IgxColumnComponent;\n\n    @Input()\n    public grid: GridType;\n\n    @Input()\n    public displayDensity: DisplayDensity;\n\n    @ViewChild('sortButtonGroup', { read: IgxButtonGroupComponent, static: true })\n    public sortButtonGroup: IgxButtonGroupComponent;\n\n    constructor() {}\n\n    ngAfterViewInit(): void {\n        this.grid.sortingExpressionsChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            this.updateSelectedButtons(this.column.field);\n        });\n        this.updateSelectedButtons(this.column.field);\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.column && !changes.column.firstChange) {\n            this.updateSelectedButtons(changes.column.currentValue.field);\n        }\n    }\n\n    private updateSelectedButtons(fieldName: string) {\n        const sortIndex = this.grid.sortingExpressions.findIndex(s => s.fieldName === fieldName);\n\n        this.sortButtonGroup.buttons.forEach((b, i) => {\n            this.sortButtonGroup.deselectButton(i);\n        });\n\n        if (sortIndex !== -1 ) {\n            const sortDirection = this.grid.sortingExpressions[sortIndex].dir;\n            this.sortButtonGroup.selectButton(sortDirection - 1);\n        }\n    }\n\n    public onSortButtonClicked(sortDirection) {\n        if (this.sortButtonGroup.selectedIndexes.length === 0) {\n            if (this.grid.isColumnGrouped(this.column.field)) {\n                this.sortButtonGroup.selectButton(sortDirection - 1);\n            } else {\n                this.grid.clearSort(this.column.field);\n            }\n        } else {\n            this.grid.sort({ fieldName: this.column.field, dir: sortDirection, ignoreCase: true });\n        }\n    }\n}\n","import {\n    ChangeDetectorRef,\n    Component,\n    ViewChild,\n    HostBinding,\n    ChangeDetectionStrategy,\n    TemplateRef,\n    Directive,\n    OnDestroy,\n    ElementRef,\n    Input,\n    ViewRef\n} from '@angular/core';\nimport {\n    HorizontalAlignment,\n    VerticalAlignment,\n    OverlaySettings,\n    IgxOverlayService,\n    AbsoluteScrollStrategy,\n    AutoPositionStrategy\n} from '../../../services/public_api';\nimport { IgxFilteringService, ExpressionUI } from '../grid-filtering.service';\nimport {\n    IFilteringOperation,\n    IgxStringFilteringOperand,\n    IgxNumberFilteringOperand,\n    IgxBooleanFilteringOperand,\n    IgxDateFilteringOperand\n} from '../../../data-operations/filtering-condition';\nimport { FilteringExpressionsTree, IFilteringExpressionsTree } from '../../../data-operations/filtering-expressions-tree';\nimport { FilteringLogic, IFilteringExpression } from '../../../data-operations/filtering-expression.interface';\nimport { cloneArray, KEYS } from '../../../core/utils';\nimport { DataType, DataUtil } from '../../../data-operations/data-util';\nimport { IgxExcelStyleSearchComponent } from './excel-style-search.component';\nimport { IgxExcelStyleCustomDialogComponent } from './excel-style-custom-dialog.component';\nimport { Subscription, Subject } from 'rxjs';\nimport { IgxExcelStyleSortingComponent } from './excel-style-sorting.component';\nimport { takeUntil } from 'rxjs/operators';\nimport { ISelectionEventArgs, IgxDropDownComponent } from '../../../drop-down/public_api';\nimport { IgxColumnComponent } from '../../columns/column.component';\nimport { IgxGridBaseDirective } from '../../grid-base.directive';\nimport { DisplayDensity } from '../../../core/density';\nimport { GridSelectionMode } from '../../common/enums';\nimport { IgxDecimalPipeComponent, IgxDatePipeComponent } from '../../common/pipes';\n\n/**\n * @hidden\n */\nexport class FilterListItem {\n    public value: any;\n    public label: any;\n    public isSelected: boolean;\n    public indeterminate: boolean;\n    public isSpecial = false;\n    public isBlanks = false;\n}\n\n@Directive({\n    selector: '[igxExcelStyleSorting]'\n})\nexport class IgxExcelStyleSortingTemplateDirective {\n    constructor(public template: TemplateRef<any>) {}\n}\n\n@Directive({\n    selector: '[igxExcelStyleMoving]'\n})\nexport class IgxExcelStyleMovingTemplateDirective {\n    constructor(public template: TemplateRef<any>) {}\n}\n\n@Directive({\n    selector: '[igxExcelStyleHiding]'\n})\nexport class IgxExcelStyleHidingTemplateDirective {\n    constructor(public template: TemplateRef<any>) {}\n}\n\n@Directive({\n    selector: '[igxExcelStyleSelecting]'\n})\nexport class IgxExcelStyleSelectingTemplateDirective {\n    constructor(public template: TemplateRef<any>) {}\n}\n\n@Directive({\n    selector: '[igxExcelStylePinning]'\n})\nexport class IgxExcelStylePinningTemplateDirective {\n    constructor(public template: TemplateRef<any>) {}\n}\n\n/**\n * A component used for presenting Excel style filtering UI for a specific column.\n * It is used internally in the Grid, but could also be hosted in a container outside of it.\n *\n * Example:\n * ```html\n * <igx-grid-excel-style-filtering\n *     [column]=\"grid1.columns[0]\">\n * </igx-grid-excel-style-filtering>\n * ```\n */\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false,\n    selector: 'igx-grid-excel-style-filtering',\n    templateUrl: './grid.excel-style-filtering.component.html'\n})\nexport class IgxGridExcelStyleFilteringComponent implements OnDestroy {\n    private static readonly filterOptimizationThreshold = 2;\n\n    private shouldOpenSubMenu = true;\n    private expressionsList = new Array<ExpressionUI>();\n    private destroy$ = new Subject<boolean>();\n    private containsNullOrEmpty = false;\n    private selectAllSelected = true;\n    private selectAllIndeterminate = false;\n    private filterValues = new Set<any>();\n    private _column: IgxColumnComponent;\n    private _columnPinning: Subscription;\n    private _columnVisibilityChanged: Subscription;\n    private _filteringChanged: Subscription;\n    private _densityChanged: Subscription;\n\n    /**\n     * An @Input property that sets the column.\n     */\n    @Input()\n    public set column(value: IgxColumnComponent) {\n        this._column = value;\n\n        if (this._columnPinning) {\n            this._columnPinning.unsubscribe();\n        }\n\n        if (this._columnVisibilityChanged) {\n            this._columnVisibilityChanged.unsubscribe();\n        }\n\n        if (this._filteringChanged) {\n            this._filteringChanged.unsubscribe();\n        }\n\n        if (this._densityChanged) {\n            this._densityChanged.unsubscribe();\n        }\n\n        if (this._column) {\n            this._column.grid.filteringService.registerSVGIcons();\n            this.isColumnPinnable = this.column.pinnable;\n            this.init();\n\n            this._columnPinning = this.grid.onColumnPinning.pipe(takeUntil(this.destroy$)).subscribe(() => {\n                requestAnimationFrame(() => {\n                    this.isColumnPinnable = this.column.pinnable;\n                    if (!(this.cdr as ViewRef).destroyed) {\n                       this.cdr.detectChanges();\n                    }\n                });\n            });\n            this._columnVisibilityChanged = this.grid.onColumnVisibilityChanged.pipe(takeUntil(this.destroy$)).subscribe(() => {\n                this.cdr.detectChanges();\n            });\n            this._filteringChanged = this.grid.filteringExpressionsTreeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n                this.init();\n            });\n            this._densityChanged = this.grid.onDensityChanged.pipe(takeUntil(this.destroy$)).subscribe(() => {\n                this.cdr.detectChanges();\n            });\n        }\n    }\n\n    /**\n     * Returns the current column.\n     */\n    public get column(): IgxColumnComponent {\n        return this._column;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public get filteringService(): IgxFilteringService {\n        return this.grid.filteringService;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public listData = new Array<FilterListItem>();\n    /**\n     * @hidden @internal\n     */\n    public uniqueValues = [];\n    /**\n     * @hidden @internal\n     */\n    public overlayService: IgxOverlayService;\n    /**\n     * @hidden @internal\n     */\n    public overlayComponentId: string;\n\n    private _subMenuPositionSettings = {\n        verticalStartPoint: VerticalAlignment.Top\n    };\n\n    private _subMenuOverlaySettings: OverlaySettings = {\n        closeOnOutsideClick: true,\n        modal: false,\n        positionStrategy: new AutoPositionStrategy(this._subMenuPositionSettings),\n        scrollStrategy: new AbsoluteScrollStrategy()\n    };\n\n    /**\n     * @hidden @internal\n     */\n    get minHeight() {\n        if (!this.inline) {\n            let minHeight = 645;\n            switch (this.grid.displayDensity) {\n                case DisplayDensity.cosy: minHeight = 465; break;\n                case DisplayDensity.compact: minHeight = 330; break;\n                default: break;\n            }\n            return `${minHeight}px`;\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    @HostBinding('style.max-height') get maxHeight() {\n        if (!this.inline) {\n            let maxHeight = 775;\n            switch (this.grid.displayDensity) {\n                case DisplayDensity.cosy: maxHeight = 565; break;\n                case DisplayDensity.compact: maxHeight = 405; break;\n                default: break;\n            }\n            return `${maxHeight}px`;\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    @HostBinding('class.igx-excel-filter')\n    className = 'igx-excel-filter';\n\n    /**\n     * @hidden @internal\n     */\n    @HostBinding('class.igx-excel-filter--inline')\n    public inline = true;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('dropdown', { read: ElementRef })\n    public mainDropdown: ElementRef;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('subMenu', { read: IgxDropDownComponent })\n    public subMenu: IgxDropDownComponent;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('customDialog', { read: IgxExcelStyleCustomDialogComponent })\n    public customDialog: IgxExcelStyleCustomDialogComponent;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('excelStyleSearch', { read: IgxExcelStyleSearchComponent })\n    protected excelStyleSearch: IgxExcelStyleSearchComponent;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('excelStyleSorting', { read: IgxExcelStyleSortingComponent })\n    protected excelStyleSorting: IgxExcelStyleSortingComponent;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('defaultExcelStyleSortingTemplate', { read: TemplateRef, static: true })\n    protected defaultExcelStyleSortingTemplate: TemplateRef<any>;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('defaultExcelStyleHidingTemplate', { read: TemplateRef, static: true })\n    protected defaultExcelStyleHidingTemplate: TemplateRef<any>;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('defaultExcelStyleSelectingTemplate', { read: TemplateRef, static: true })\n    protected defaultExcelStyleSelectingTemplate: TemplateRef<any>;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('defaultExcelStyleMovingTemplate', { read: TemplateRef, static: true })\n    protected defaultExcelStyleMovingTemplate: TemplateRef<any>;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('defaultExcelStylePinningTemplate', { read: TemplateRef, static: true })\n    protected defaultExcelStylePinningTemplate: TemplateRef<any>;\n\n    /**\n     * @hidden @internal\n     */\n    public isColumnPinnable: boolean;\n\n    /**\n     * @hidden @internal\n     */\n    get grid(): IgxGridBaseDirective {\n        return this.column.grid;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    get conditions() {\n        return this.column.filters.conditionList();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    get subMenuText() {\n        switch (this.column.dataType) {\n            case DataType.Boolean:\n                return this.grid.resourceStrings.igx_grid_excel_boolean_filter;\n            case DataType.Number:\n                return this.grid.resourceStrings.igx_grid_excel_number_filter;\n            case DataType.Date:\n                return this.grid.resourceStrings.igx_grid_excel_date_filter;\n            default:\n                return this.grid.resourceStrings.igx_grid_excel_text_filter;\n        }\n    }\n\n    constructor(private cdr: ChangeDetectorRef, private element: ElementRef) {}\n\n    /**\n     * @hidden @internal\n     */\n    ngOnDestroy(): void {\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n\n    private init() {\n        this.expressionsList = new Array<ExpressionUI>();\n        this.filteringService.generateExpressionsList(this.column.filteringExpressionsTree, this.grid.filteringLogic, this.expressionsList);\n        this.populateColumnData();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public clearFilterClass() {\n        if (this.column.filteringExpressionsTree) {\n            return 'igx-excel-filter__actions-clear';\n        }\n\n        return 'igx-excel-filter__actions-clear--disabled';\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public pinClass() {\n        return this.isColumnPinnable ? 'igx-excel-filter__actions-pin' : 'igx-excel-filter__actions-pin--disabled';\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public selectedClass() {\n        return this.column.selected ? 'igx-excel-filter__actions-selected' : 'igx-excel-filter__actions-select';\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public initialize(column: IgxColumnComponent, overlayService: IgxOverlayService,\n        overlayComponentId: string) {\n        this.inline = false;\n        this.column = column;\n        this.overlayService = overlayService;\n        this.overlayComponentId = overlayComponentId;\n\n        this._subMenuOverlaySettings.outlet = (this.grid as any).outlet;\n\n        requestAnimationFrame(() => {\n            this.excelStyleSearch.searchInput.nativeElement.focus();\n        });\n\n        this.grid.onColumnMoving.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            this.closeDropdown();\n        });\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public getCondition(value: string): IFilteringOperation {\n        return this.column.filters.condition(value);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public translateCondition(value: string): string {\n        return this.grid.resourceStrings[`igx_grid_filter_${this.getCondition(value).name}`] || value;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onPin() {\n        this.column.pinned = !this.column.pinned;\n        this.closeDropdown();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onSelect() {\n        if (!this.column.selected) {\n            this.grid.selectionService.selectColumn(this.column.field, this.grid.columnSelection === GridSelectionMode.single);\n        } else {\n            this.grid.selectionService.deselectColumn(this.column.field);\n        }\n        this.grid.notifyChanges();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public columnSelectable() {\n        return this.grid.columnSelection !== GridSelectionMode.none && this.column.selectable;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onHideToggle() {\n        this.column.hidden = !this.column.hidden;\n        this.grid.onColumnVisibilityChanged.emit({ column: this.column, newValue: this.column.hidden });\n        this.closeDropdown();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onTextFilterClick(eventArgs) {\n        if (this.shouldOpenSubMenu) {\n            this._subMenuOverlaySettings.positionStrategy.settings.target = eventArgs.currentTarget;\n\n            const gridRect = this.grid.nativeElement.getBoundingClientRect();\n            const dropdownRect = this.mainDropdown.nativeElement.getBoundingClientRect();\n\n            let x = dropdownRect.left + dropdownRect.width;\n            let x1 = gridRect.left + gridRect.width;\n            x += window.pageXOffset;\n            x1 += window.pageXOffset;\n            if (Math.abs(x - x1) < 200) {\n                this._subMenuOverlaySettings.positionStrategy.settings.horizontalDirection = HorizontalAlignment.Left;\n                this._subMenuOverlaySettings.positionStrategy.settings.horizontalStartPoint = HorizontalAlignment.Left;\n            } else {\n                this._subMenuOverlaySettings.positionStrategy.settings.horizontalDirection = HorizontalAlignment.Right;\n                this._subMenuOverlaySettings.positionStrategy.settings.horizontalStartPoint = HorizontalAlignment.Right;\n            }\n\n            this.subMenu.open(this._subMenuOverlaySettings);\n            this.shouldOpenSubMenu = false;\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onTextFilterKeyDown(eventArgs) {\n        if (eventArgs.key === KEYS.ENTER) {\n            this.onTextFilterClick(eventArgs);\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onSubMenuClosed() {\n        requestAnimationFrame(() => {\n            this.shouldOpenSubMenu = true;\n        });\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onSubMenuSelection(eventArgs: ISelectionEventArgs) {\n        if (this.expressionsList && this.expressionsList.length &&\n            this.expressionsList[0].expression.condition.name !== 'in') {\n            this.customDialog.expressionsList = this.expressionsList;\n        }\n\n        this.customDialog.selectedOperator = eventArgs.newSelection.value;\n        eventArgs.cancel = true;\n        if (this.overlayComponentId) {\n            this.element.nativeElement.style.display = 'none';\n        }\n        this.subMenu.close();\n        this.customDialog.open(this.mainDropdown.nativeElement);\n    }\n\n    private areExpressionsSelectable () {\n        if (this.expressionsList.length === 1 &&\n            (this.expressionsList[0].expression.condition.name === 'equals' ||\n             this.expressionsList[0].expression.condition.name === 'true' ||\n             this.expressionsList[0].expression.condition.name === 'false' ||\n             this.expressionsList[0].expression.condition.name === 'empty' ||\n             this.expressionsList[0].expression.condition.name === 'in')) {\n            return true;\n        }\n\n        const selectableExpressionsCount = this.expressionsList.filter(exp =>\n            (exp.beforeOperator === 1 || exp.afterOperator === 1) &&\n            (exp.expression.condition.name === 'equals' ||\n             exp.expression.condition.name === 'true' ||\n             exp.expression.condition.name === 'false' ||\n             exp.expression.condition.name === 'empty' ||\n             exp.expression.condition.name === 'in')).length;\n\n        return selectableExpressionsCount === this.expressionsList.length;\n    }\n\n    private areExpressionsValuesInTheList() {\n        if (this.column.dataType === DataType.Boolean) {\n            return true;\n        }\n\n        if (this.filterValues.size === 1) {\n            const firstValue = this.filterValues.values().next().value;\n\n            if (!firstValue && firstValue !== 0) {\n                return true;\n            }\n        }\n\n        for (let index = 0; index < this.uniqueValues.length; index++) {\n            if (this.filterValues.has(this.uniqueValues[index])) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    private populateColumnData() {\n        if (this.grid.uniqueColumnValuesStrategy) {\n            this.cdr.detectChanges();\n            this.renderColumnValuesRemotely();\n        } else {\n            this.renderColumnValuesFromData();\n        }\n    }\n\n    private renderColumnValuesRemotely() {\n        this.excelStyleSearch.isLoading = true;\n        const expressionsTree: FilteringExpressionsTree = this.getColumnFilterExpressionsTree();\n\n        this.grid.uniqueColumnValuesStrategy(this.column, expressionsTree, (colVals: any[]) => {\n            const columnValues = (this.column.dataType === DataType.Date) ?\n                colVals.map(val => val ? val.toDateString() : val) : colVals;\n\n            this.renderValues(columnValues);\n            this.excelStyleSearch.isLoading = false;\n            this.excelStyleSearch.refreshSize();\n        });\n    }\n\n    private renderColumnValuesFromData() {\n        let data = this.column.gridAPI.get_all_data((this.grid as any).id);\n        const expressionsTree = this.getColumnFilterExpressionsTree();\n\n        if (expressionsTree.filteringOperands.length) {\n            const state = { expressionsTree: expressionsTree };\n            data = DataUtil.filter(cloneArray(data), state);\n        }\n\n        const columnField = this.column.field;\n        const columnValues = (this.column.dataType === DataType.Date) ?\n            data.map(record => record[columnField] ? record[columnField].toDateString() : record[columnField]) :\n            data.map(record => record[columnField]);\n\n        this.renderValues(columnValues);\n    }\n\n    private renderValues(columnValues: any[]) {\n        this.generateUniqueValues(columnValues);\n        this.generateFilterValues(this.column.dataType === DataType.Date);\n        this.generateListData();\n    }\n\n    private generateUniqueValues(columnValues: any[]) {\n        this.uniqueValues = Array.from(new Set(columnValues));\n    }\n\n    private generateFilterValues(isDateColumn: boolean = false) {\n        if (isDateColumn) {\n            this.filterValues = new Set<any>(this.expressionsList.reduce((arr, e) => {\n                if (e.expression.condition.name === 'in') {\n                    return [ ...arr, ...Array.from((e.expression.searchVal as Set<any>).values()).map(v =>\n                        new Date(v).toDateString()) ];\n                }\n                return [ ...arr, ...[e.expression.searchVal ? e.expression.searchVal.toDateString() : e.expression.searchVal] ];\n            }, []));\n        } else {\n            this.filterValues = new Set<any>(this.expressionsList.reduce((arr, e) => {\n                if (e.expression.condition.name === 'in') {\n                    return [ ...arr, ...Array.from((e.expression.searchVal as Set<any>).values()) ];\n                }\n                return [ ...arr, ...[e.expression.searchVal] ];\n            }, []));\n        }\n    }\n\n    private generateListData() {\n        this.listData = new Array<FilterListItem>();\n\n        const shouldUpdateSelection = this.areExpressionsSelectable() && this.areExpressionsValuesInTheList();\n\n        if (this.column.dataType === DataType.Boolean) {\n            this.addBooleanItems();\n        } else {\n            this.addItems(shouldUpdateSelection);\n        }\n\n        this.listData.sort((a, b) => this.sortData(a, b));\n\n        if (this.column.dataType === DataType.Date) {\n            this.uniqueValues = this.uniqueValues.map(value => new Date(value));\n        }\n\n        if (this.containsNullOrEmpty) {\n            this.addBlanksItem(shouldUpdateSelection);\n        }\n\n        this.addSelectAllItem();\n\n        if (!(this.cdr as any).destroyed) {\n            this.cdr.detectChanges();\n        }\n    }\n\n    private getColumnFilterExpressionsTree() {\n        const gridExpressionsTree: IFilteringExpressionsTree = this.grid.filteringExpressionsTree;\n        const expressionsTree = new FilteringExpressionsTree(gridExpressionsTree.operator, gridExpressionsTree.fieldName);\n\n        for (const operand of gridExpressionsTree.filteringOperands) {\n            if (operand instanceof FilteringExpressionsTree) {\n                const columnExprTree = operand as FilteringExpressionsTree;\n                if (columnExprTree.fieldName === this.column.field) {\n                    break;\n                }\n            }\n            expressionsTree.filteringOperands.push(operand);\n        }\n\n        return expressionsTree;\n    }\n\n    private addBooleanItems() {\n        this.selectAllSelected = true;\n        this.selectAllIndeterminate = false;\n        this.uniqueValues.forEach(element => {\n            const filterListItem = new FilterListItem();\n            if (element !== undefined && element !== null && element !== '') {\n                if (this.column.filteringExpressionsTree) {\n                    if (element === true && this.expressionsList.find(exp => exp.expression.condition.name === 'true' )) {\n                        filterListItem.isSelected = true;\n                        this.selectAllIndeterminate = true;\n                    } else if (element === false && this.expressionsList.find(exp => exp.expression.condition.name === 'false' )) {\n                            filterListItem.isSelected = true;\n                            this.selectAllIndeterminate = true;\n                    } else {\n                        filterListItem.isSelected = false;\n                    }\n                } else {\n                    filterListItem.isSelected = true;\n                }\n                filterListItem.value = element;\n                filterListItem.label = element;\n                filterListItem.indeterminate = false;\n                this.listData.push(filterListItem);\n            } else {\n                this.containsNullOrEmpty = true;\n            }\n        });\n    }\n\n    private addItems(shouldUpdateSelection: boolean) {\n        this.selectAllSelected = true;\n        this.selectAllIndeterminate = false;\n\n        const numberPipe = new IgxDecimalPipeComponent(this.column.grid.locale);\n        const datePipe = new IgxDatePipeComponent(this.column.grid.locale);\n\n        this.uniqueValues.forEach(element => {\n            if (element !== undefined && element !== null && element !== '') {\n                const filterListItem = new FilterListItem();\n                if (this.column.filteringExpressionsTree) {\n                    if (shouldUpdateSelection) {\n                        if (this.filterValues.has(element)) {\n                            filterListItem.isSelected = true;\n                        } else {\n                            filterListItem.isSelected = false;\n                        }\n                        this.selectAllIndeterminate = true;\n                    } else {\n                        filterListItem.isSelected = false;\n                        this.selectAllSelected = false;\n                    }\n                } else {\n                    filterListItem.isSelected = true;\n                }\n                if (this.column.dataType === DataType.Date) {\n                    const date = new Date(element);\n\n                    filterListItem.value = date;\n\n                    filterListItem.label = this.column.formatter ?\n                        this.column.formatter(date) :\n                        datePipe.transform(date, this.column.grid.locale);\n\n                } else if (this.column.dataType === DataType.Number) {\n                    filterListItem.value = element;\n\n                    filterListItem.label = this.column.formatter ?\n                        this.column.formatter(element) :\n                        numberPipe.transform(element, this.column.grid.locale);\n\n                } else {\n                    filterListItem.value = element;\n\n                    filterListItem.label = this.column.formatter ?\n                        this.column.formatter(element) :\n                        element;\n                }\n\n                filterListItem.indeterminate = false;\n                this.listData.push(filterListItem);\n            } else {\n                this.containsNullOrEmpty = true;\n            }\n        });\n    }\n\n    private addSelectAllItem() {\n        const selectAll =  new FilterListItem();\n        selectAll.isSelected = this.selectAllSelected;\n        selectAll.value = this.grid.resourceStrings.igx_grid_excel_select_all;\n        selectAll.label = this.grid.resourceStrings.igx_grid_excel_select_all;\n        selectAll.indeterminate = this.selectAllIndeterminate;\n        selectAll.isSpecial = true;\n        this.listData.unshift(selectAll);\n    }\n\n    private addBlanksItem(shouldUpdateSelection) {\n        const blanks =  new FilterListItem();\n        if (this.column.filteringExpressionsTree) {\n            if (shouldUpdateSelection) {\n                if (this.filterValues.has(null)) {\n                    blanks.isSelected = true;\n                } else {\n                    blanks.isSelected = false;\n                }\n            }\n        } else {\n            blanks.isSelected = true;\n        }\n        blanks.value = null;\n        blanks.label = this.grid.resourceStrings.igx_grid_excel_blanks;\n        blanks.indeterminate = false;\n        blanks.isSpecial = true;\n        blanks.isBlanks = true;\n        this.listData.unshift(blanks);\n    }\n\n    private sortData(a: FilterListItem, b: FilterListItem) {\n        let valueA = a.value;\n        let valueB = b.value;\n        if (typeof(a) === DataType.String) {\n            valueA = a.value.toUpperCase();\n            valueB = b.value.toUpperCase();\n        }\n        if (valueA < valueB) {\n            return -1;\n        } else if (valueA > valueB) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n\n    private selectAllFilterItems() {\n        this.listData.forEach(filterListItem => {\n            filterListItem.isSelected = true;\n            filterListItem.indeterminate = false;\n        });\n        this.excelStyleSearch.cdr.detectChanges();\n    }\n\n    // TODO: sort members by access modifier\n\n    /**\n     * @hidden @internal\n     */\n    get sortingTemplate() {\n        if (this.grid.excelStyleSortingTemplateDirective) {\n            return this.grid.excelStyleSortingTemplateDirective.template;\n        } else {\n            return this.defaultExcelStyleSortingTemplate;\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    get movingTemplate() {\n        if (this.grid.excelStyleMovingTemplateDirective) {\n            return this.grid.excelStyleMovingTemplateDirective.template;\n        } else {\n            return this.defaultExcelStyleMovingTemplate;\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    get pinningTemplate() {\n        if (this.grid.excelStylePinningTemplateDirective) {\n            return this.grid.excelStylePinningTemplateDirective.template;\n        } else {\n            return this.defaultExcelStylePinningTemplate;\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    get hidingTemplate() {\n        if (this.grid.excelStyleHidingTemplateDirective) {\n            return this.grid.excelStyleHidingTemplateDirective.template;\n        } else {\n            return this.defaultExcelStyleHidingTemplate;\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    get selectingTemplate() {\n        if (this.grid.excelStyleSelectingTemplateDirective) {\n            return this.grid.excelStyleSelectingTemplateDirective.template;\n        } else {\n            return this.defaultExcelStyleSelectingTemplate;\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    get applyButtonDisabled() {\n        return this.listData[0] && !this.listData[0].isSelected && !this.listData[0].indeterminate;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public applyFilter() {\n        const filterTree = new FilteringExpressionsTree(FilteringLogic.Or, this.column.field);\n        const selectedItems = this.listData.slice(1, this.listData.length).filter(el => el.isSelected === true);\n        const unselectedItem = this.listData.slice(1, this.listData.length).find(el => el.isSelected === false);\n\n        if (unselectedItem) {\n            if (selectedItems.length <= IgxGridExcelStyleFilteringComponent.filterOptimizationThreshold) {\n                selectedItems.forEach(element => {\n                    let condition = null;\n                    if (element.value !== null && element.value !== undefined) {\n                        if (this.column.dataType === DataType.Boolean) {\n                            condition = this.createCondition(element.value.toString());\n                        } else {\n                            condition = this.createCondition('equals');\n                        }\n                    } else {\n                        condition = this.createCondition('empty');\n                    }\n                    filterTree.filteringOperands.push({\n                        condition: condition,\n                        fieldName: this.column.field,\n                        ignoreCase: this.column.filteringIgnoreCase,\n                        searchVal: element.value\n                    });\n                });\n            } else {\n                const blanksItemIndex = selectedItems.findIndex(e => e.value === null || e.value === undefined);\n                let blanksItem: any;\n                if (blanksItemIndex >= 0) {\n                    blanksItem = selectedItems[blanksItemIndex];\n                    selectedItems.splice(blanksItemIndex, 1);\n                }\n\n                filterTree.filteringOperands.push({\n                    condition: this.createCondition('in'),\n                    fieldName: this.column.field,\n                    ignoreCase: this.column.filteringIgnoreCase,\n                    searchVal: new Set(this.column.dataType === DataType.Date ?\n                        selectedItems.map(d => new Date(d.value.getFullYear(), d.value.getMonth(), d.value.getDate()).toISOString()) :\n                        selectedItems.map(e => e.value))\n                });\n\n                if (blanksItem) {\n                    filterTree.filteringOperands.push({\n                        condition: this.createCondition('empty'),\n                        fieldName: this.column.field,\n                        ignoreCase: this.column.filteringIgnoreCase,\n                        searchVal: blanksItem.value\n                    });\n                }\n            }\n\n            this.filteringService.filterInternal(this.column.field, filterTree);\n            this.expressionsList = new Array<ExpressionUI>();\n            this.filteringService.generateExpressionsList(this.column.filteringExpressionsTree,\n                this.grid.filteringLogic, this.expressionsList);\n        } else {\n            this.filteringService.clearFilter(this.column.field);\n        }\n\n        this.closeDropdown();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public cancel() {\n        if (!this.overlayComponentId) {\n            this.init();\n        }\n        this.closeDropdown();\n    }\n\n    private closeDropdown() {\n        if (this.overlayComponentId) {\n            this.overlayService.hide(this.overlayComponentId);\n            this.overlayComponentId = null;\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onKeyDown(eventArgs) {\n        if (eventArgs.key === KEYS.ESCAPE || eventArgs.key === KEYS.ESCAPE_IE) {\n            this.closeDropdown();\n        }\n        eventArgs.stopPropagation();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public clearFilter() {\n        this.filteringService.clearFilter(this.column.field);\n        this.selectAllFilterItems();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onClearFilterKeyDown(eventArgs) {\n        if (eventArgs.key === KEYS.ENTER) {\n            this.clearFilter();\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public showCustomFilterItem(): boolean {\n        const exprTree = this.column.filteringExpressionsTree;\n        return exprTree && exprTree.filteringOperands && exprTree.filteringOperands.length &&\n            !((exprTree.filteringOperands[0] as IFilteringExpression).condition &&\n            (exprTree.filteringOperands[0] as IFilteringExpression).condition.name === 'in');\n    }\n\n    private createCondition(conditionName: string) {\n        switch (this.column.dataType) {\n            case DataType.Boolean:\n                return IgxBooleanFilteringOperand.instance().condition(conditionName);\n            case DataType.Number:\n                return IgxNumberFilteringOperand.instance().condition(conditionName);\n            case DataType.Date:\n                return IgxDateFilteringOperand.instance().condition(conditionName);\n            default:\n                return IgxStringFilteringOperand.instance().condition(conditionName);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { IgxForOfDirective } from '../directives/for-of/for_of.directive';\nimport { GridType } from './common/grid.interface';\nimport { NAVIGATION_KEYS, ROW_COLLAPSE_KEYS, ROW_EXPAND_KEYS, SUPPORTED_KEYS, HORIZONTAL_NAV_KEYS, HEADER_KEYS } from '../core/utils';\nimport { IgxGridBaseDirective } from './grid-base.directive';\nimport { IMultiRowLayoutNode } from './selection/selection.service';\nimport { GridKeydownTargetType, GridSelectionMode, FilterMode } from './common/enums';\nimport { SortingDirection } from '../data-operations/sorting-expression.interface';\nimport { IgxGridExcelStyleFilteringComponent } from './filtering/excel-style/grid.excel-style-filtering.component';\nexport interface ColumnGroupsCache {\n    level: number;\n    visibleIndex: number;\n}\nexport interface IActiveNode {\n    gridID?: string;\n    row: number;\n    column?: number;\n    level?: number;\n    mchCache?: ColumnGroupsCache;\n    layout?: IMultiRowLayoutNode;\n}\n\n/** @hidden */\n@Injectable()\nexport class IgxGridNavigationService {\n    public grid: IgxGridBaseDirective & GridType;\n    public activeNode: IActiveNode;\n    protected pendingNavigation = false;\n\n    handleNavigation(event: KeyboardEvent) {\n        const key = event.key.toLowerCase();\n        if (event.repeat && SUPPORTED_KEYS.has(key) || (key === 'tab' && this.grid.crudService.cell)) {\n            event.preventDefault();\n        }\n        event.repeat ? setTimeout(() => this.dispatchEvent(event), 1) : this.dispatchEvent(event);\n    }\n\n    dispatchEvent(event: KeyboardEvent) {\n        const key = event.key.toLowerCase();\n        if (!this.activeNode || !(SUPPORTED_KEYS.has(key) || (key === 'tab' && this.grid.crudService.cell))) { return; }\n        const shift = event.shiftKey;\n        const ctrl = event.ctrlKey;\n        if (NAVIGATION_KEYS.has(key) && this.pendingNavigation) { event.preventDefault(); return; }\n\n        const type = this.isDataRow(this.activeNode.row) ? GridKeydownTargetType.dataCell :\n            this.isDataRow(this.activeNode.row, true) ? GridKeydownTargetType.summaryCell : GridKeydownTargetType.groupRow;\n        if (this.emitKeyDown(type, this.activeNode.row, event)) {\n            return;\n        }\n        if (event.altKey) {\n            this.handleAlt(key, event);\n            return;\n        }\n        if ([' ', 'spacebar', 'space'].indexOf(key) === -1) {\n            this.grid.selectionService.keyboardStateOnKeydown(this.activeNode, shift, shift && key === 'tab');\n        }\n        if (this.grid.crudService.cell && NAVIGATION_KEYS.has(key)) { return; }\n\n        const position = this.getNextPosition(this.activeNode.row, this.activeNode.column, key, shift, ctrl, event);\n        if (NAVIGATION_KEYS.has(key)) {\n            event.preventDefault();\n            this.navigateInBody(position.rowIndex, position.colIndex, (obj) => { obj.target.activate(event); });\n        }\n        this.grid.cdr.detectChanges();\n    }\n\n    protected getNextPosition(rowIndex: number, colIndex: number, key: string, shift: boolean, ctrl: boolean, event: KeyboardEvent) {\n        if (!this.isDataRow(rowIndex, true) && (key.indexOf('down') < 0 || key.indexOf('up') < 0) && ctrl) {\n            return { rowIndex, colIndex };\n        }\n        switch (key) {\n            case 'pagedown':\n            case 'pageup':\n                event.preventDefault();\n                key === 'pagedown' ? this.grid.verticalScrollContainer.scrollNextPage() :\n                    this.grid.verticalScrollContainer.scrollPrevPage();\n                break;\n            case 'tab':\n                this.handleEditing(shift, event);\n                break;\n            case 'end':\n                rowIndex = ctrl ? this.findLastDataRowIndex() : this.activeNode.row;\n                colIndex = this.lastColumnIndex;\n                break;\n            case 'home':\n                rowIndex = ctrl ? this.findFirstDataRowIndex() : this.activeNode.row;\n                colIndex = 0;\n                break;\n            case 'arrowleft':\n            case 'left':\n                colIndex = ctrl ? 0 : this.activeNode.column - 1;\n                break;\n            case 'arrowright':\n            case 'right':\n                colIndex = ctrl ? this.lastColumnIndex : this.activeNode.column + 1;\n                break;\n            case 'arrowup':\n            case 'up':\n                if (ctrl && !this.isDataRow(rowIndex)) { break; }\n                colIndex = this.activeNode.column !== undefined ? this.activeNode.column : 0;\n                rowIndex = ctrl ? this.findFirstDataRowIndex() : this.activeNode.row - 1;\n                break;\n            case 'arrowdown':\n            case 'down':\n                if (ctrl && !this.isDataRow(rowIndex)) { break; }\n                colIndex = this.activeNode.column !== undefined ? this.activeNode.column : 0;\n                rowIndex = ctrl ? this.findLastDataRowIndex() : this.activeNode.row + 1;\n                break;\n            case 'enter':\n            case 'f2':\n                const cell = this.grid.getCellByColumnVisibleIndex(this.activeNode.row, this.activeNode.column);\n                if (!this.isDataRow(rowIndex) || !cell.editable) { break; }\n                this.grid.crudService.enterEditMode(cell);\n                break;\n            case 'escape':\n            case 'esc':\n                if (!this.isDataRow(rowIndex)) { break; }\n                this.grid.crudService.exitEditMode();\n                break;\n            case ' ':\n            case 'spacebar':\n            case 'space':\n                const rowObj = this.grid.getRowByIndex(this.activeNode.row);\n                if (this.grid.isRowSelectable && this.isDataRow(rowIndex)) {\n                    rowObj && rowObj.selected ? this.grid.selectionService.deselectRow(rowObj.rowID, event) :\n                        this.grid.selectionService.selectRowById(rowObj.rowID, false, event);\n                }\n                break;\n            default:\n                return;\n        }\n        return { rowIndex, colIndex };\n    }\n\n    summaryNav(event: KeyboardEvent) {\n        this.horizontalNav(event, event.key.toLowerCase(), this.grid.dataView.length);\n    }\n\n    headerNavigation(event: KeyboardEvent) {\n        const key = event.key.toLowerCase();\n        if (!HEADER_KEYS.has(key)) { return; }\n        event.preventDefault();\n\n        const ctrl = event.ctrlKey;\n        const shift = event.shiftKey;\n        const alt = event.altKey;\n\n        this.performHeaderKeyCombination(this.currentActiveColumn, key, shift, ctrl, alt, event);\n        if (shift || alt || (ctrl && (key.includes('down') || key.includes('down')))) { return; }\n        !this.grid.hasColumnGroups ? this.horizontalNav(event, key, -1) : this.handleMCHeaderNav(key, ctrl);\n    }\n\n    protected horizontalNav(event: KeyboardEvent, key: string, rowIndex: number) {\n        const ctrl = event.ctrlKey;\n        if (!HORIZONTAL_NAV_KEYS.has(event.key.toLowerCase())) { return; }\n        event.preventDefault();\n        this.activeNode.row = rowIndex;\n        if (rowIndex > 0) {\n            if (this.emitKeyDown(GridKeydownTargetType.summaryCell, this.activeNode.row, event)) {\n                return;\n            }\n        }\n        if ((key.includes('left') || key === 'home') && this.activeNode.column > 0) {\n            this.activeNode.column = ctrl || key === 'home' ? 0 : this.activeNode.column - 1;\n        }\n        if ((key.includes('right') || key === 'end') && this.activeNode.column < this.lastColumnIndex) {\n            this.activeNode.column = ctrl || key === 'end' ? this.lastColumnIndex : this.activeNode.column + 1;\n        }\n        this.performHorizontalScrollToCell(this.activeNode.column);\n    }\n\n    focusTbody(event) {\n        const gridRows = this.grid.verticalScrollContainer.totalItemCount ?? this.grid.dataView.length;\n        if (!this.activeNode || this.activeNode.row < 0 || this.activeNode.row > gridRows - 1) {\n            this.activeNode = { row: 0, column: 0 };\n            this.grid.navigateTo(0, 0, (obj) => {\n                this.grid.clearCellSelection();\n                obj.target.activate(event);\n            });\n        }\n    }\n\n    focusFirstCell(header = true) {\n        if (this.activeNode && (this.activeNode.row === -1 || this.activeNode.row === this.grid.dataView.length)) { return; }\n        this.activeNode = { row: header ? -1 : this.grid.dataView.length, column: 0,\n                level: this.grid.hasColumnLayouts ? 1 : 0, mchCache: { level: 0, visibleIndex: 0} };\n        this.performHorizontalScrollToCell(0);\n    }\n\n    get lastColumnIndex() {\n        return Math.max(...this.grid.visibleColumns.map(col => col.visibleIndex));\n    }\n    get displayContainerWidth() {\n        return Math.round(this.grid.parentVirtDir.dc.instance._viewContainer.element.nativeElement.offsetWidth);\n    }\n    get displayContainerScrollLeft() {\n        return Math.ceil(this.grid.headerContainer.scrollPosition);\n    }\n    get containerTopOffset() {\n        return parseInt(this.grid.verticalScrollContainer.dc.instance._viewContainer.element.nativeElement.style.top, 10);\n    }\n\n    public isColumnFullyVisible(columnIndex: number) {\n        if (columnIndex < 0 || this.isColumnPinned(columnIndex, this.forOfDir())) {\n            return true;\n        }\n        const index = this.getColumnUnpinnedIndex(columnIndex);\n        const width = this.forOfDir().getColumnScrollLeft(index + 1) - this.forOfDir().getColumnScrollLeft(index);\n        if (this.displayContainerWidth < width && this.displayContainerScrollLeft === this.forOfDir().getColumnScrollLeft(index)) {\n            return true;\n        }\n        return this.displayContainerWidth >= this.forOfDir().getColumnScrollLeft(index + 1) - this.displayContainerScrollLeft &&\n            this.displayContainerScrollLeft <= this.forOfDir().getColumnScrollLeft(index);\n    }\n\n    protected getColumnUnpinnedIndex(visibleColumnIndex: number) {\n        const column = this.grid.unpinnedColumns.find((col) => !col.columnGroup && col.visibleIndex === visibleColumnIndex);\n        return this.grid.pinnedColumns.length ? this.grid.unpinnedColumns.filter((c) => !c.columnGroup).indexOf(column) :\n            visibleColumnIndex;\n    }\n\n    protected forOfDir(): IgxForOfDirective<any> {\n        const forOfDir = this.grid.dataRowList.length > 0 ? this.grid.dataRowList.first.virtDirRow : this.grid.headerContainer;\n        return forOfDir as IgxForOfDirective<any>;\n    }\n\n    protected handleAlt(key: string, event: KeyboardEvent) {\n        event.preventDefault();\n        const row = this.grid.getRowByIndex(this.activeNode.row) as any;\n        if (!this.isToggleKey(key) || !row) { return; }\n\n        if (!row.expanded && ROW_EXPAND_KEYS.has(key)) {\n            row.rowID === undefined ? row.toggle() :\n                this.grid.gridAPI.set_row_expansion_state(row.rowID, true, event);\n        } else if (row.expanded && ROW_COLLAPSE_KEYS.has(key)) {\n            row.rowID === undefined ? row.toggle() :\n                this.grid.gridAPI.set_row_expansion_state(row.rowID, false, event);\n        }\n        this.grid.notifyChanges();\n    }\n\n    protected handleEditing(shift: boolean, event: KeyboardEvent) {\n        const next = shift ? this.grid.getPreviousCell(this.activeNode.row, this.activeNode.column, col => col.editable) :\n            this.grid.getNextCell(this.activeNode.row, this.activeNode.column, col => col.editable);\n        if (!this.grid.rowInEditMode && this.isActiveNode(next.rowIndex, next.visibleColumnIndex)) {\n            this.grid.endEdit(true);\n            return;\n        }\n        event.preventDefault();\n        if ((this.grid.rowInEditMode && this.grid.rowEditTabs.length) &&\n            (this.activeNode.row !== next.rowIndex || this.isActiveNode(next.rowIndex, next.visibleColumnIndex))) {\n            this.grid.gridAPI.submit_value();\n            shift ? this.grid.rowEditTabs.last.element.nativeElement.focus() :\n                this.grid.rowEditTabs.first.element.nativeElement.focus();\n            return;\n        }\n\n        if (this.grid.rowInEditMode && !this.grid.rowEditTabs.length) {\n            if (shift && next.rowIndex === this.activeNode.row && next.visibleColumnIndex === this.activeNode.column) {\n                next.visibleColumnIndex = this.grid.lastEditableColumnIndex;\n            } else if ( !shift && next.rowIndex === this.activeNode.row && next.visibleColumnIndex === this.activeNode.column) {\n                next.visibleColumnIndex = this.grid.firstEditableColumnIndex;\n            } else {\n                next.rowIndex = this.activeNode.row;\n            }\n        }\n\n        this.navigateInBody(next.rowIndex, next.visibleColumnIndex, (obj) => {\n            obj.target.activate(event);\n            this.grid.cdr.detectChanges();\n        });\n    }\n\n    public shouldPerformHorizontalScroll(visibleColIndex: number, rowIndex = -1) {\n        if (visibleColIndex < 0 || visibleColIndex > this.grid.visibleColumns.length - 1) { return false; }\n        if (rowIndex < 0 || rowIndex > this.grid.dataView.length - 1) {\n            return !this.isColumnFullyVisible(visibleColIndex);\n        }\n        const row = this.grid.dataView[rowIndex];\n        return row.expression || row.detailsData ? false : !this.isColumnFullyVisible(visibleColIndex);\n    }\n\n    public shouldPerformVerticalScroll(targetRowIndex: number, visibleColIndex: number): boolean {\n        if (this.grid.isRecordPinnedByViewIndex(targetRowIndex)) { return false; }\n        const scrollRowIndex = this.grid.hasPinnedRecords && this.grid.isRowPinningToTop ?\n            targetRowIndex - this.grid.pinnedDataView.length : targetRowIndex;\n        const targetRow = this.getRowElementByIndex(targetRowIndex);\n        const rowHeight = this.grid.verticalScrollContainer.getSizeAt(scrollRowIndex);\n        const containerHeight = this.grid.calcHeight ? Math.ceil(this.grid.calcHeight) : 0;\n        const endTopOffset = targetRow ? targetRow.offsetTop + rowHeight + this.containerTopOffset : containerHeight + rowHeight;\n        // this is workaround: endTopOffset - containerHeight > 5 and should be replaced with: containerHeight < endTopOffset\n        // when the page is zoomed the grid does not scroll the row completely in the view\n        return !targetRow || targetRow.offsetTop < Math.abs(this.containerTopOffset)\n        || containerHeight && endTopOffset - containerHeight > 5;\n    }\n\n    protected navigateInBody(rowIndex, visibleColIndex, cb: Function = null): void {\n        if (!this.isValidPosition(rowIndex, visibleColIndex) || this.isActiveNode(rowIndex, visibleColIndex)) { return; }\n        this.grid.navigateTo(this.activeNode.row = rowIndex, this.activeNode.column = visibleColIndex, cb);\n    }\n\n    public performVerticalScrollToCell(rowIndex: number, visibleColIndex = -1, cb?: () => void) {\n        if (!this.shouldPerformVerticalScroll(rowIndex, visibleColIndex)) { return; }\n        this.pendingNavigation = true;\n        // Only for top pinning we need to subtract pinned count because virtualization indexing doesn't count pinned rows.\n        const scrollRowIndex = this.grid.hasPinnedRecords && this.grid.isRowPinningToTop ?\n            rowIndex - this.grid.pinnedDataView.length : rowIndex;\n        this.grid.verticalScrollContainer.scrollTo(scrollRowIndex);\n        this.grid.verticalScrollContainer.onChunkLoad\n            .pipe(first()).subscribe(() => {\n                this.pendingNavigation = false;\n                if (cb) { cb(); }\n            });\n    }\n\n    public performHorizontalScrollToCell(visibleColumnIndex: number, cb?: () => void) {\n        if (!this.shouldPerformHorizontalScroll(visibleColumnIndex)) { return; }\n        this.pendingNavigation = true;\n        this.grid.parentVirtDir.onChunkLoad\n            .pipe(first())\n            .subscribe(() => {\n                this.pendingNavigation = false;\n                if (cb) { cb(); }\n            });\n        this.forOfDir().scrollTo(this.getColumnUnpinnedIndex(visibleColumnIndex));\n    }\n\n    public isDataRow(rowIndex: number, includeSummary = false) {\n        if (rowIndex < 0 || rowIndex > this.grid.dataView.length - 1) { return true; }\n        const curRow = this.grid.dataView[rowIndex];\n        return curRow && !this.grid.isGroupByRecord(curRow) && !this.grid.isDetailRecord(curRow)\n            && !curRow.childGridsData && (includeSummary || !curRow.summaries);\n    }\n\n    protected emitKeyDown(type: GridKeydownTargetType, rowIndex, event) {\n        const row = this.grid.summariesRowList.toArray().concat(this.grid.rowList.toArray()).find(r => r.index === rowIndex);\n        if (!row) { return; }\n\n        const target = type === GridKeydownTargetType.groupRow ? row :\n            type === GridKeydownTargetType.dataCell ? row.cells?.find(c => c.visibleColumnIndex === this.activeNode.column) :\n                row.summaryCells?.find(c => c.visibleColumnIndex === this.activeNode.column);\n        const keydownArgs = { targetType: type, event: event, cancel: false, target: target };\n        this.grid.onGridKeydown.emit(keydownArgs);\n        if (keydownArgs.cancel && type === GridKeydownTargetType.dataCell) {\n            this.grid.selectionService.clear();\n            this.grid.selectionService.keyboardState.active = true;\n            return keydownArgs.cancel;\n        }\n    }\n\n    protected isColumnPinned(columnIndex: number, forOfDir: IgxForOfDirective<any>): boolean {\n        const horizontalScroll = forOfDir.getScroll();\n        return (!horizontalScroll.clientWidth || this.grid.getColumnByVisibleIndex(columnIndex)?.pinned);\n    }\n\n    protected findFirstDataRowIndex(): number {\n        return this.grid.dataView.findIndex(rec => !this.grid.isGroupByRecord(rec) && !this.grid.isDetailRecord(rec));\n    }\n\n    protected findLastDataRowIndex(): number {\n        let i = this.grid.dataView.length;\n        while (i--) {\n            if (this.isDataRow(i)) {\n                return i;\n            }\n        }\n    }\n\n    protected getRowElementByIndex(index) {\n        if (this.grid.hasDetails) {\n            const detail = this.grid.nativeElement.querySelector(`[detail=\"true\"][data-rowindex=\"${index}\"]`);\n            if (detail) { return detail; }\n        }\n        return this.grid.rowList.toArray().concat(this.grid.summariesRowList.toArray()).find(r => r.index === index)?.nativeElement;\n    }\n\n    protected isValidPosition(rowIndex: number, colIndex: number): boolean {\n        if (rowIndex < 0 || colIndex < 0 || this.grid.dataView.length - 1 < rowIndex || this.lastColumnIndex < colIndex) {\n            return false;\n        }\n        return this.activeNode.column !== colIndex && !this.isDataRow(rowIndex, true) ? false : true;\n    }\n    protected performHeaderKeyCombination(column, key, shift, ctrl, alt, event) {\n        let direction =  this.grid.sortingExpressions.find(expr => expr.fieldName === column.field)?.dir;\n        if (ctrl && key.includes('up') && column.sortable && !column.columnGroup) {\n            direction = direction === SortingDirection.Asc ? SortingDirection.None : SortingDirection.Asc;\n            this.grid.sort({ fieldName:  column.field, dir: direction, ignoreCase: false });\n            return;\n        }\n        if (ctrl && key.includes('down') && column.sortable && !column.columnGroup) {\n            direction = direction === SortingDirection.Desc ? SortingDirection.None : SortingDirection.Desc;\n            this.grid.sort({ fieldName:  column.field, dir: direction, ignoreCase: false });\n            return;\n        }\n        if (shift && alt && this.isToggleKey(key) && !column.columnGroup && column.groupable) {\n            direction = direction ? SortingDirection.Desc : SortingDirection.Asc;\n            key.includes('right') ? (this.grid as any).groupBy({ fieldName: column.field, dir: direction, ignoreCase: false }) :\n                (this.grid as any).clearGrouping(column.field);\n            this.activeNode.column = key.includes('right') && (this.grid as any).hideGroupedColumns &&\n                column.visibleIndex === this.lastColumnIndex ? this.lastColumnIndex - 1 : this.activeNode.column;\n            return;\n        }\n        if (alt && (ROW_EXPAND_KEYS.has(key) || ROW_COLLAPSE_KEYS.has(key))) {\n            this.handleMCHExpandCollapse(key, column);\n            return;\n        }\n        if ([' ', 'spacebar', 'space'].indexOf(key) !== -1) {\n            this.handleColumnSelection(column, event);\n        }\n        if (alt && key === 'l' && this.grid.allowAdvancedFiltering) {\n            this.grid.openAdvancedFilteringDialog();\n        }\n        if (ctrl && shift && key === 'l' && this.grid.allowFiltering && !column.columnGroup && column.filterable) {\n            if (this.grid.filterMode === FilterMode.excelStyleFilter) {\n                const headerEl = this.grid.nativeElement.querySelector(`.igx-grid__th--active`);\n                this.grid.filteringService.toggleFilterDropdown(headerEl, column, IgxGridExcelStyleFilteringComponent);\n            } else {\n                this.performHorizontalScrollToCell(column.visibleIndex);\n                this.grid.filteringService.filteredColumn = column;\n                this.grid.filteringService.isFilterRowVisible = true;\n            }\n        }\n    }\n\n    private handleMCHeaderNav(key: string, ctrl: boolean) {\n        const activeCol = this.currentActiveColumn;\n        const lastGroupIndex = Math.max(... this.grid.visibleColumns.\n                filter(c => c.level <= this.activeNode.level).map(col => col.visibleIndex));\n        let nextCol = activeCol;\n        if ((key.includes('left') || key === 'home') && this.activeNode.column > 0) {\n            const index = ctrl || key === 'home' ? 0 : this.activeNode.column - 1;\n            nextCol =  this.getNextColumnMCH(index);\n            this.activeNode.mchCache.visibleIndex = nextCol.visibleIndex;\n        }\n        if ((key.includes('right') || key === 'end') && activeCol.visibleIndex < lastGroupIndex) {\n            const nextVIndex = activeCol.children ? Math.max(...activeCol.allChildren.map(c => c.visibleIndex)) + 1 :\n            activeCol.visibleIndex + 1;\n            nextCol = ctrl || key === 'end' ? this.getNextColumnMCH(this.lastColumnIndex) : this.getNextColumnMCH(nextVIndex);\n            this.activeNode.mchCache.visibleIndex = nextCol.visibleIndex;\n        }\n        if (!ctrl && key.includes('up') && this.activeNode.level > 0) {\n            nextCol = activeCol.parent;\n            this.activeNode.mchCache.level = nextCol.level;\n        }\n        if (!ctrl && key.includes('down') && activeCol.children) {\n            nextCol = activeCol.children.find(c => c.visibleIndex === this.activeNode.mchCache.visibleIndex) ||\n            activeCol.children.toArray().sort((a, b) => b.visibleIndex - a.visibleIndex)\n            .filter(col => col.visibleIndex < this.activeNode.mchCache.visibleIndex)[0];\n            this.activeNode.mchCache.level = nextCol.level;\n        }\n        this.activeNode.column = nextCol.visibleIndex;\n        this.activeNode.level = nextCol.level;\n        this.performHorizontalScrollToCell(this.activeNode.column);\n    }\n\n    private handleMCHExpandCollapse(key, column) {\n        if (!column.children || !column.collapsible) { return; }\n        if (!column.expanded && ROW_EXPAND_KEYS.has(key)) {\n            column.expanded = true;\n        } else if (column.expanded && ROW_COLLAPSE_KEYS.has(key)) {\n            column.expanded = false;\n        }\n    }\n\n    private handleColumnSelection(column, event) {\n        if (!column.selectable || this.grid.columnSelection === GridSelectionMode.none ) { return; }\n        const clearSelection = this.grid.columnSelection === GridSelectionMode.single;\n        const columnsToSelect = !column.children ? [column.field] :\n            column.allChildren.filter(c => !c.hidden && c.selectable && !c.columnGroup).map(c => c.field);\n        column.selected ? this.grid.selectionService.deselectColumns(columnsToSelect, event) :\n        this.grid.selectionService.selectColumns(columnsToSelect, clearSelection, false, event);\n    }\n\n    private getNextColumnMCH(visibleIndex) {\n        let col = this.grid.getColumnByVisibleIndex(visibleIndex);\n        let parent = col.parent;\n        while (parent && col.level > this.activeNode.mchCache.level) {\n            col = col.parent;\n            parent = col.parent;\n        }\n        return col;\n    }\n\n    private get currentActiveColumn() {\n        return this.grid.visibleColumns.find(c => c.visibleIndex === this.activeNode.column && c.level === this.activeNode.level);\n    }\n\n    private isActiveNode(rIndex: number, cIndex: number): boolean {\n        return this.activeNode ? this.activeNode.row === rIndex && this.activeNode.column === cIndex : false;\n    }\n\n    private isToggleKey(key: string): boolean {\n        return ROW_COLLAPSE_KEYS.has(key) || ROW_EXPAND_KEYS.has(key);\n    }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { IgxColumnComponent } from '../columns/column.component';\n\n/**\n * @hidden\n * @internal\n */\n@Injectable()\nexport class IgxColumnResizingService {\n\n    private pinnedMaxWidth: string;\n\n    /**\n     * @hidden\n     */\n    public startResizePos: number;\n    /**\n     * Indicates that a column is currently being resized.\n     */\n    public isColumnResizing: boolean;\n    /**\n     * @hidden\n     */\n    public resizeCursor: string = null;\n    /**\n     * @hidden\n     */\n    public showResizer = false;\n    /**\n     * The column being resized.\n     */\n    public column: IgxColumnComponent;\n\n    constructor(private zone: NgZone) { }\n\n    /**\n     * @hidden\n     */\n    get resizerHeight(): number {\n        let height = this.column.grid.getVisibleContentHeight();\n\n        // Column height multiplier in case there are Column Layouts. The resizer height need to take into account rowStart.\n        let columnHeightMultiplier = 1;\n        if (this.column.columnLayoutChild) {\n            columnHeightMultiplier = this.column.grid.multiRowLayoutRowSize - this.column.rowStart + 1;\n        }\n\n        if (this.column.level !== 0) {\n            height -= this.column.topLevelParent.headerGroup.height - this.column.headerGroup.height * columnHeightMultiplier;\n        }\n\n        return height;\n    }\n\n    /**\n     * Returns the minimal possible width to which the column can be resized.\n     */\n    get restrictResizeMin(): number {\n        const actualMinWidth = parseFloat(this.column.minWidth);\n        const minWidth = actualMinWidth < parseFloat(this.column.width) ? actualMinWidth : parseFloat(this.column.width);\n\n        return this.column.headerCell.elementRef.nativeElement.getBoundingClientRect().width - minWidth;\n    }\n\n    /**\n     * Returns the maximal possible width to which the column can be resized.\n     */\n    get restrictResizeMax(): number {\n        const actualWidth = this.column.headerCell.elementRef.nativeElement.getBoundingClientRect().width;\n        if (this.column.maxWidth) {\n            return parseFloat(this.column.maxWidth) - actualWidth;\n        } else {\n            return Number.MAX_SAFE_INTEGER;\n        }\n    }\n\n    /**\n     * Autosizes the column to the longest currently visible cell value, including the header cell.\n     * If the column has a predifined maxWidth and the autosized column width will become bigger than it,\n     * then the column is sized to its maxWidth.\n     * If the column is pinned and the autosized column width will cause the pinned area to become bigger\n     * than the maximum allowed pinned area width (80% of the total grid width), autosizing will be deismissed.\n     */\n    public autosizeColumnOnDblClick() {\n        const currentColWidth = this.column.headerCell.elementRef.nativeElement.getBoundingClientRect().width;\n\n        const size = this.column.getLargestCellWidth();\n        if (this.column.maxWidth && (parseFloat(size) > parseFloat(this.column.maxWidth))) {\n            this.column.width = parseFloat(this.column.maxWidth) + 'px';\n        } else if (parseFloat(size) < parseFloat(this.column.minWidth)) {\n            this.column.width = parseFloat(this.column.minWidth) + 'px';\n        } else {\n            this.column.width = size;\n        }\n\n        this.zone.run(() => {});\n\n        this.column.grid.onColumnResized.emit({\n            column: this.column,\n            prevWidth: currentColWidth.toString(),\n            newWidth: this.column.width\n        });\n    }\n\n    /**\n     * Resizes the column regaridng to the column minWidth and maxWidth.\n     */\n    public resizeColumn(event: MouseEvent) {\n        this.showResizer = false;\n        const diff = event.clientX - this.startResizePos;\n\n        let currentColWidth = parseFloat(this.column.width);\n        const actualWidth = this.column.headerCell.elementRef.nativeElement.getBoundingClientRect().width;\n        currentColWidth = Number.isNaN(currentColWidth) || (currentColWidth < actualWidth) ? actualWidth : currentColWidth;\n\n        const colMinWidth = this.getColMinWidth(this.column);\n        const colMaxWidth = this.getColMaxWidth(this.column);\n        if (this.column.grid.hasColumnLayouts) {\n            this.resizeColumnLayoutFor(this.column, diff);\n        } else {\n            if (currentColWidth + diff < colMinWidth) {\n                this.column.width = colMinWidth + 'px';\n            } else if (colMaxWidth && (currentColWidth + diff > colMaxWidth)) {\n                this.column.width = colMaxWidth + 'px';\n            } else {\n                this.column.width = (currentColWidth + diff) + 'px';\n            }\n        }\n\n        this.zone.run(() => {});\n\n        if (currentColWidth !== parseFloat(this.column.width)) {\n            this.column.grid.onColumnResized.emit({\n                column: this.column,\n                prevWidth: currentColWidth.toString(),\n                newWidth: this.column.width\n            });\n        }\n\n        this.isColumnResizing = false;\n    }\n\n    protected getColMinWidth(column: IgxColumnComponent) {\n        let currentColWidth = parseFloat(column.width);\n        const actualWidth = column.headerCell.elementRef.nativeElement.getBoundingClientRect().width;\n        currentColWidth = Number.isNaN(currentColWidth) || (currentColWidth < actualWidth) ? actualWidth : currentColWidth;\n\n        const actualMinWidth = parseFloat(column.minWidth);\n        return actualMinWidth < currentColWidth ? actualMinWidth : currentColWidth;\n    }\n\n    protected getColMaxWidth(column: IgxColumnComponent) {\n        return column.pinned ? parseFloat(this.pinnedMaxWidth) : parseFloat(column.maxWidth);\n    }\n\n    protected resizeColumnLayoutFor(column: IgxColumnComponent, diff: number) {\n        const relativeColumns = column.getResizableColUnderEnd();\n        const combinedSpan = relativeColumns.reduce((acc, col) =>  acc + col.spanUsed, 0);\n\n        // Resize first those who might reach min/max width\n        let columnsToResize = [...relativeColumns];\n        let updatedDiff = diff;\n        let updatedCombinedSpan = combinedSpan;\n        let setMinMaxCols = false;\n        do {\n            // Cycle them until there are not ones that reach min/max size, because the diff accumulates after each cycle.\n            // This is because we can have at first 2 cols reaching min width and then after\n            // recalculating the diff there might be 1 more that reaches min width.\n            setMinMaxCols = false;\n            let newCombinedSpan = updatedCombinedSpan;\n            const newColsToResize = [];\n            columnsToResize.forEach((col) => {\n                const currentResizeWidth = parseFloat(col.target.calcWidth);\n                const resizeScaled = (diff / updatedCombinedSpan) * col.target.gridColumnSpan;\n\n                const minWidth = this.getColMinWidth(col.target);\n                const maxWidth = this.getColMaxWidth(col.target);\n                if (currentResizeWidth + resizeScaled < minWidth) {\n                    col.target.width = minWidth + 'px';\n                    updatedDiff += (currentResizeWidth - minWidth);\n                    newCombinedSpan -= col.spanUsed;\n                    setMinMaxCols = true;\n                } else if (maxWidth && (currentResizeWidth + resizeScaled > maxWidth)) {\n                    col.target.width = maxWidth + 'px';\n                    updatedDiff -= (maxWidth - currentResizeWidth);\n                    newCombinedSpan -= col.spanUsed;\n                    setMinMaxCols = true;\n                } else {\n                    // Save new ones that can be resized\n                    newColsToResize.push(col);\n                }\n            });\n\n            updatedCombinedSpan = newCombinedSpan;\n            columnsToResize = newColsToResize;\n        } while (setMinMaxCols);\n\n        // Those left that don't reach min/max size resize them normally.\n        columnsToResize.forEach((col) => {\n            const currentResizeWidth = parseFloat(col.target.calcWidth);\n            const resizeScaled = (updatedDiff / updatedCombinedSpan) * col.target.gridColumnSpan;\n            col.target.width = (currentResizeWidth + resizeScaled) + 'px';\n        });\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    DoCheck,\n    ElementRef,\n    HostBinding,\n    HostListener,\n    Input,\n    NgZone,\n    OnInit,\n    OnDestroy\n} from '@angular/core';\nimport { DataType } from '../../data-operations/data-util';\nimport { SortingDirection } from '../../data-operations/sorting-expression.interface';\nimport { GridBaseAPIService } from '../api.service';\nimport { IgxColumnComponent } from '../columns/column.component';\nimport { IgxGridBaseDirective } from '../grid-base.directive';\nimport { IgxColumnResizingService } from '../resizing/resizing.service';\nimport { Subject } from 'rxjs';\nimport { GridType } from '../common/grid.interface';\nimport { GridSelectionMode } from '../common/enums';\nimport { IgxGridExcelStyleFilteringComponent } from '../filtering/excel-style/grid.excel-style-filtering.component';\n\n/**\n * @hidden\n */\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false,\n    selector: 'igx-grid-header',\n    templateUrl: './grid-header.component.html'\n})\nexport class IgxGridHeaderComponent implements DoCheck, OnInit, OnDestroy {\n\n    private _destroy$ = new Subject<boolean>();\n\n    @Input()\n    public column: IgxColumnComponent;\n\n    @Input()\n    public gridID: string;\n\n    /**\n     * Returns the `aria-selected` of the header.\n     */\n    @HostBinding('attr.aria-selected')\n    public get ariaSelected(): boolean {\n        return this.column.selected;\n    }\n\n    @HostBinding('class')\n    get styleClasses(): string {\n        const defaultClasses = [\n            'igx-grid__th--fw',\n            this.column.headerClasses\n        ];\n\n        const classList = {\n            'igx-grid__th': !this.column.columnGroup,\n            'asc': this.ascending,\n            'desc': this.descending,\n            'igx-grid__th--number': this.column.dataType === DataType.Number,\n            'igx-grid__th--sortable': this.column.sortable,\n            'igx-grid__th--selectable': this.selectable,\n            'igx-grid__th--filtrable': this.column.filterable && this.grid.filteringService.isFilterRowVisible,\n            'igx-grid__th--sorted': this.sorted,\n            'igx-grid__th--selected': this.selected\n        };\n\n        for (const klass of Object.keys(classList)) {\n            if (classList[klass]) {\n                defaultClasses.push(klass);\n            }\n        }\n        return defaultClasses.join(' ');\n    }\n\n    @HostBinding('style.height.rem')\n    get height() {\n        if (this.grid.hasColumnGroups) {\n            return (this.grid.maxLevelHeaderDepth + 1 - this.column.level) * this.grid.defaultRowHeight / this.grid._baseFontSize;\n        }\n        return null;\n    }\n\n    get ascending() {\n        return this.sortDirection === SortingDirection.Asc;\n    }\n\n    get descending() {\n        return this.sortDirection === SortingDirection.Desc;\n    }\n\n    get sortingIcon(): string {\n        if (this.sortDirection !== SortingDirection.None) {\n            // arrow_downward and arrow_upward\n            // are material icons ligature strings\n            return this.sortDirection === SortingDirection.Asc ? 'arrow_upward' : 'arrow_downward';\n        }\n        return 'arrow_upward';\n    }\n\n    get sorted() {\n        return this.sortDirection !== SortingDirection.None;\n    }\n\n    get filterIconClassName() {\n        return this.column.filteringExpressionsTree ? 'igx-excel-filter__icon--filtered' : 'igx-excel-filter__icon';\n    }\n\n    get selectable() {\n        return this.grid.columnSelection !== GridSelectionMode.none &&\n            this.column.applySelectableClass &&\n            !this.column.selected &&\n            !this.grid.filteringService.isFilterRowVisible;\n    }\n\n    get selected() {\n        return this.column.selected\n            && (!this.grid.filteringService.isFilterRowVisible || this.grid.filteringService.filteredColumn !== this.column);\n    }\n\n    get columnTitle() {\n        return this.column.elementRef.nativeElement.getAttribute('title') ||\n            this.column.header || this.column.field;\n    }\n\n    @HostBinding('attr.role')\n    public hostRole = 'columnheader';\n\n    @HostBinding('attr.id')\n    get headerID() {\n        return `${this.gridID}_${this.column.field}`;\n    }\n\n    protected sortDirection = SortingDirection.None;\n\n    constructor(\n        public gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>,\n        public colResizingService: IgxColumnResizingService,\n        public cdr: ChangeDetectorRef,\n        public elementRef: ElementRef,\n        public zone: NgZone\n    ) { }\n\n    public ngOnInit() {\n        this.grid.filteringService.initFilteringSettings();\n    }\n\n    public ngDoCheck() {\n        this.getSortDirection();\n        this.cdr.markForCheck();\n    }\n\n    ngOnDestroy(): void {\n        this._destroy$.next(true);\n        this._destroy$.complete();\n        this.grid.filteringService.hideExcelFiltering();\n    }\n\n    @HostListener('click', ['$event'])\n    public onClick(event) {\n        if (!this.colResizingService.isColumnResizing) {\n\n            if (this.grid.filteringService.isFilterRowVisible) {\n                if (this.column.filterCellTemplate) {\n                    this.grid.filteringRow.close();\n                    return;\n                }\n\n                if (this.column.filterable && !this.column.columnGroup &&\n                    !this.grid.filteringService.isFilterComplex(this.column.field)) {\n                    this.grid.filteringService.filteredColumn = this.column;\n                }\n            } else if (this.grid.columnSelection !== GridSelectionMode.none && this.column.selectable) {\n                const clearSelection = this.grid.columnSelection === GridSelectionMode.single || !event.ctrlKey;\n                const rangeSelection = this.grid.columnSelection === GridSelectionMode.multiple && event.shiftKey;\n\n                if (!this.column.selected || (this.grid.selectionService.getSelectedColumns().length > 1 && clearSelection)) {\n                    this.grid.selectionService.selectColumn(this.column.field, clearSelection, rangeSelection, event);\n                } else {\n                    this.grid.selectionService.deselectColumn(this.column.field, event);\n                }\n            }\n        }\n        this.grid.theadRow.nativeElement.focus();\n    }\n\n\n    public onFilteringIconClick(event) {\n        event.stopPropagation();\n        this.grid.filteringService.toggleFilterDropdown(this.elementRef.nativeElement, this.column, IgxGridExcelStyleFilteringComponent);\n    }\n\n    get grid(): any {\n        return this.gridAPI.grid;\n    }\n\n    protected getSortDirection() {\n        const expr = this.gridAPI.grid.sortingExpressions.find((x) => x.fieldName === this.column.field);\n        this.sortDirection = expr ? expr.dir : SortingDirection.None;\n    }\n\n    public onSortingIconClick(event) {\n        event.stopPropagation();\n        this.triggerSort();\n    }\n\n    private triggerSort() {\n        const groupingExpr = this.grid.groupingExpressions ?\n            this.grid.groupingExpressions.find((expr) => expr.fieldName === this.column.field) : null;\n        const sortDir = groupingExpr ?\n            this.sortDirection + 1 > SortingDirection.Desc ? SortingDirection.Asc : SortingDirection.Desc\n            : this.sortDirection + 1 > SortingDirection.Desc ? SortingDirection.None : this.sortDirection + 1;\n        this.sortDirection = sortDir;\n        this.grid.sort({\n            fieldName: this.column.field, dir: this.sortDirection, ignoreCase: this.column.sortingIgnoreCase,\n            strategy: this.column.sortStrategy\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('pointerenter')\n    public onPinterEnter() {\n        this.column.applySelectableClass = true;\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('pointerleave')\n    public onPointerLeave() {\n        this.column.applySelectableClass = false;\n    }\n}\n","import {\n    Component,\n    ChangeDetectorRef,\n    EventEmitter,\n    ElementRef,\n    HostBinding,\n    Input,\n    Output,\n    ViewChild,\n    Renderer2,\n    TemplateRef,\n    Inject,\n    Optional\n} from '@angular/core';\nimport { IDisplayDensityOptions, DisplayDensityToken, DisplayDensityBase } from '../core/displayDensity';\nimport {\n    IgxDragDirective,\n    IDragBaseEventArgs,\n    IDragStartEventArgs,\n    IDropBaseEventArgs,\n    IDropDroppedEventArgs\n} from '../directives/drag-drop/drag-drop.directive';\nimport { IBaseEventArgs } from '../core/utils';\nimport { fromEvent } from 'rxjs';\nimport { take, filter } from 'rxjs/operators';\n\n\nexport interface IBaseChipEventArgs extends IBaseEventArgs {\n    originalEvent: IDragBaseEventArgs | IDropBaseEventArgs | KeyboardEvent | MouseEvent | TouchEvent;\n    owner: IgxChipComponent;\n}\n\nexport interface IChipClickEventArgs extends IBaseChipEventArgs {\n    cancel: boolean;\n}\n\nexport interface IChipKeyDownEventArgs extends IBaseChipEventArgs {\n    originalEvent: KeyboardEvent;\n    cancel: boolean;\n}\n\nexport interface IChipEnterDragAreaEventArgs extends IBaseChipEventArgs {\n    dragChip: IgxChipComponent;\n}\n\nexport interface IChipSelectEventArgs extends IBaseChipEventArgs {\n    cancel: boolean;\n    selected: boolean;\n}\n\nlet CHIP_ID = 0;\n\n/**\n * Chip is compact visual component that displays information in an obround.\n *\n * @igxModule IgxChipsModule\n *\n * @igxTheme igx-chip-theme\n *\n * @igxKeywords chip\n *\n * @igxGroup display\n *\n * @remarks\n * The Ignite UI Chip can be templated, deleted, and selected.\n * Multiple chips can be reordered and visually connected to each other.\n * Chips reside in a container called chips area which is responsible for managing the interactions between the chips.\n *\n * @example\n * ```html\n * <igx-chip class=\"chipStyle\" [id]=\"901\" [draggable]=\"true\" [removable]=\"true\" (onRemove)=\"chipRemoved($event)\">\n *    <igx-avatar class=\"chip-avatar-resized\" igxPrefix fontSet=\"material\" roundShape=\"true\"></igx-avatar>\n * </igx-chip>\n * ```\n */\n@Component({\n    selector: 'igx-chip',\n    templateUrl: 'chip.component.html'\n})\nexport class IgxChipComponent extends DisplayDensityBase {\n\n    /**\n     * An @Input property that sets the value of `id` attribute. If not provided it will be automatically generated.\n     * @example\n     * ```html\n     * <igx-chip [id]=\"'igx-chip-1'\"></igx-chip>\n     * ```\n     */\n    @HostBinding('attr.id')\n    @Input()\n    public id = `igx-chip-${CHIP_ID++}`;\n\n    /**\n     * An @Input property that sets the value of `tabindex` attribute. If not provided it will use the element's tabindex if set.\n     * @example\n     * ```html\n     * <igx-chip [id]=\"'igx-chip-1'\" [tabIndex]=\"1\"></igx-chip>\n     * ```\n     */\n    @Input()\n    public set tabIndex(value: number) {\n        this._tabIndex = value;\n    }\n\n    public get tabIndex() {\n        if (this._tabIndex !== null) {\n            return this._tabIndex;\n        }\n        return !this.disabled ? 0 : null;\n    }\n\n    /**\n     * An @Input property that stores data related to the chip.\n     * @example\n     * ```html\n     * <igx-chip [data]=\"{ value: 'Country' }\"></igx-chip>\n     * ```\n     */\n    @Input()\n    public data: any;\n\n    /**\n     * An @Input property that defines if the `IgxChipComponent` can be dragged in order to change it's position.\n     * By default it is set to false.\n     * @example\n     * ```html\n     * <igx-chip [id]=\"'igx-chip-1'\" [draggable]=\"true\"></igx-chip>\n     * ```\n     */\n    @Input()\n    public draggable = false;\n\n    /**\n     * An @Input property that enables/disables the draggable element animation when the element is released.\n     * By default it's set to true.\n     * @example\n     * ```html\n     * <igx-chip [id]=\"'igx-chip-1'\" [draggable]=\"true\" [animateOnRelease]=\"false\"></igx-chip>\n     * ```\n     */\n    @Input()\n    public animateOnRelease = true;\n\n    /**\n     * An @Input property that enables/disables the hiding of the base element that has been dragged.\n     * By default it's set to true.\n     * @example\n     * ```html\n     * <igx-chip [id]=\"'igx-chip-1'\" [draggable]=\"true\" [hideBaseOnDrag]=\"false\"></igx-chip>\n     * ```\n     */\n    @Input()\n    public hideBaseOnDrag = true;\n\n    /**\n     * An @Input property that defines if the `IgxChipComponent` should render remove button and throw remove events.\n     * By default it is set to false.\n     * @example\n     * ```html\n     * <igx-chip [id]=\"'igx-chip-1'\" [draggable]=\"true\" [removable]=\"true\"></igx-chip>\n     * ```\n     */\n    @Input()\n    public removable = false;\n\n    /**\n     * An @Input property that overrides the default icon that the chip applies to the remove button.\n     * @example\n     * ```html\n     * <igx-chip [id]=\"chip.id\" [removable]=\"true\" [removeIcon]=\"iconTemplate\"></igx-chip>\n     * <ng-template #iconTemplate><igx-icon>delete</igx-icon></ng-template>\n     * ```\n     */\n    @Input()\n    public removeIcon: TemplateRef<any>;\n\n    /**\n     * An @Input property that defines if the `IgxChipComponent` can be selected on click or through navigation,\n     * By default it is set to false.\n     * @example\n     * ```html\n     * <igx-chip [id]=\"chip.id\" [draggable]=\"true\" [removable]=\"true\" [selectable]=\"true\"></igx-chip>\n     * ```\n     */\n    @Input()\n    public selectable = false;\n\n    /**\n     * An @Input property that overrides the default icon that the chip applies when it is selected.\n     * @example\n     * ```html\n     * <igx-chip [id]=\"chip.id\" [selectable]=\"true\" [selectIcon]=\"iconTemplate\"></igx-chip>\n     * <ng-template #iconTemplate><igx-icon>done_outline</igx-icon></ng-template>\n     * ```\n     */\n    @Input()\n    public selectIcon: TemplateRef<any>;\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @Input()\n    public class = '';\n\n    /**\n     * An @Input property that defines if the `IgxChipComponent` is disabled. When disabled it restricts user interactions\n     * like focusing on click or tab, selection on click or Space, dragging.\n     * By default it is set to false.\n     * @example\n     * ```html\n     * <igx-chip [id]=\"chip.id\" [disabled]=\"true\"></igx-chip>\n     * ```\n     */\n    @Input()\n    public disabled = false;\n\n    /**\n     * Sets the `IgxChipComponent` selected state.\n     * @example\n     * ```html\n     * <igx-chip #myChip [id]=\"'igx-chip-1'\" [selectable]=\"true\" [selected]=\"true\">\n     * ```\n     *\n     * Two-way data binding:\n     * ```html\n     * <igx-chip #myChip [id]=\"'igx-chip-1'\" [selectable]=\"true\" [(selected)]=\"model.isSelected\">\n     * ```\n     */\n    @Input()\n    public set selected(newValue: boolean) {\n        this.changeSelection(newValue);\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @Output()\n    public selectedChange = new EventEmitter<boolean>();\n\n    /**\n     * Returns if the `IgxChipComponent` is selected.\n     * @example\n     * ```typescript\n     * @ViewChild('myChip')\n     * public chip: IgxChipComponent;\n     * selectedChip(){\n     *     let selectedChip = this.chip.selected;\n     * }\n     * ```\n     */\n    public get selected() {\n        return this._selected;\n    }\n\n    /**\n     * An @Input property that sets the `IgxChipComponent` background color.\n     * The `color` property supports string, rgb, hex.\n     * @example\n     * ```html\n     * <igx-chip #myChip [id]=\"'igx-chip-1'\" [color]=\"'#ff0000'\"></igx-chip>\n     * ```\n     */\n    @Input()\n    public set color(newColor) {\n        this.chipArea.nativeElement.style.backgroundColor = newColor;\n    }\n\n    /**\n     * Returns the background color of the `IgxChipComponent`.\n     * @example\n     * ```typescript\n     * @ViewChild('myChip')\n     * public chip: IgxChipComponent;\n     * ngAfterViewInit(){\n     *     let chipColor = this.chip.color;\n     * }\n     * ```\n     */\n    public get color() {\n        return this.chipArea.nativeElement.style.backgroundColor;\n    }\n\n    /**\n     * Emits an event when the `IgxChipComponent` moving starts.\n     * Returns the moving `IgxChipComponent`.\n     * @example\n     * ```html\n     * <igx-chip #myChip [id]=\"'igx-chip-1'\" [draggable]=\"true\" (onMoveStart)=\"moveStarted($event)\">\n     * ```\n     */\n    @Output()\n    public onMoveStart = new EventEmitter<IBaseChipEventArgs>();\n\n    /**\n     * Emits an event when the `IgxChipComponent` moving ends.\n     * Returns the moved `IgxChipComponent`.\n     * @example\n     * ```html\n     * <igx-chip #myChip [id]=\"'igx-chip-1'\" [draggable]=\"true\" (onMoveEnd)=\"moveEnded($event)\">\n     * ```\n     */\n    @Output()\n    public onMoveEnd = new EventEmitter<IBaseChipEventArgs>();\n\n    /**\n     * Emits an event when the `IgxChipComponent` is removed.\n     * Returns the removed `IgxChipComponent`.\n     * @example\n     * ```html\n     * <igx-chip #myChip [id]=\"'igx-chip-1'\" [draggable]=\"true\" (onRemove)=\"remove($event)\">\n     * ```\n     */\n    @Output()\n    public onRemove = new EventEmitter<IBaseChipEventArgs>();\n\n    /**\n     * Emits an event when the `IgxChipComponent` is clicked.\n     * Returns the clicked `IgxChipComponent`, whether the event should be canceled.\n     * @example\n     * ```html\n     * <igx-chip #myChip [id]=\"'igx-chip-1'\" [draggable]=\"true\" (onClick)=\"chipClick($event)\">\n     * ```\n     */\n    @Output()\n    public onClick = new EventEmitter<IChipClickEventArgs>();\n\n    /**\n     * Emits event when the `IgxChipComponent` is selected/deselected.\n     * Returns the selected chip reference, whether the event should be canceled, what is the next selection state and\n     * when the event is triggered by interaction `originalEvent` is provided, otherwise `originalEvent` is `null`.\n     * @example\n     * ```html\n     * <igx-chip #myChip [id]=\"'igx-chip-1'\" [selectable]=\"true\" (onSelection)=\"chipSelect($event)\">\n     * ```\n     */\n    @Output()\n    public onSelection = new EventEmitter<IChipSelectEventArgs>();\n\n    /**\n     * Emits event when the `IgxChipComponent` is selected/deselected and any related animations and transitions also end.\n     * @example\n     * ```html\n     * <igx-chip #myChip [id]=\"'igx-chip-1'\" [selectable]=\"true\" (onSelectionDone)=\"chipSelectEnd($event)\">\n     * ```\n     */\n    @Output()\n    public onSelectionDone = new EventEmitter<IBaseChipEventArgs>();\n\n    /**\n     * Emits an event when the `IgxChipComponent` keyboard navigation is being used.\n     * Returns the focused/selected `IgxChipComponent`, whether the event should be canceled,\n     * if the `alt`, `shift` or `control` key is pressed and the pressed key name.\n     * @example\n     * ```html\n     * <igx-chip #myChip [id]=\"'igx-chip-1'\" [draggable]=\"true\" (onKeyDown)=\"chipKeyDown($event)\">\n     * ```\n     */\n    @Output()\n    public onKeyDown = new EventEmitter<IChipKeyDownEventArgs>();\n\n    /**\n     * Emits an event when the `IgxChipComponent` has entered the `IgxChipsAreaComponent`.\n     * Returns the target `IgxChipComponent`, the drag `IgxChipComponent`, as  well as\n     * the original drop event arguments.\n     * @example\n     * ```html\n     * <igx-chip #myChip [id]=\"'igx-chip-1'\" [draggable]=\"true\" (onDragEnter)=\"chipEnter($event)\">\n     * ```\n     */\n    @Output()\n    public onDragEnter = new EventEmitter<IChipEnterDragAreaEventArgs>();\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @HostBinding('attr.tabIndex')\n    public hostTabIndex = null;\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @HostBinding('attr.class')\n    get hostClass(): string {\n        const classes = [this.getComponentDensityClass('igx-chip')];\n        classes.push(this.disabled ? 'igx-chip--disabled' : '');\n        // The custom classes should be at the end.\n        classes.push(this.class);\n        return classes.join(' ');\n    }\n\n    /**\n     * Property that contains a reference to the `IgxDragDirective` the `IgxChipComponent` uses for dragging behavior.\n     * @example\n     * ```html\n     * <igx-chip [id]=\"chip.id\" [draggable]=\"true\"></igx-chip>\n     * ```\n     * ```typescript\n     * onMoveStart(event: IBaseChipEventArgs){\n     *     let dragDirective = event.owner.dragDirective;\n     * }\n     * ```\n     */\n    @ViewChild('chipArea', { read: IgxDragDirective, static: true })\n    public dragDirective: IgxDragDirective;\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @ViewChild('chipArea', { read: ElementRef, static: true })\n    public chipArea: ElementRef;\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @ViewChild('selectContainer', { read: ElementRef, static: true })\n    public selectContainer: ElementRef;\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @ViewChild('defaultRemoveIcon', { read: TemplateRef, static: true })\n    public defaultRemoveIcon: TemplateRef<any>;\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @ViewChild('defaultSelectIcon', { read: TemplateRef, static: true })\n    public defaultSelectIcon: TemplateRef<any>;\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public get removeButtonTemplate() {\n        return this.removeIcon || this.defaultRemoveIcon;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public get selectIconTemplate() {\n        return this.selectIcon || this.defaultSelectIcon;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public get ghostClass(): string {\n        return this.getComponentDensityClass('igx-chip__ghost');\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public hideBaseElement = false;\n\n    protected _tabIndex = null;\n    protected _selected = false;\n    protected _selectedItemClass = 'igx-chip__item--selected';\n    protected _movedWhileRemoving = false;\n\n    constructor(public cdr: ChangeDetectorRef, public elementRef: ElementRef, private renderer: Renderer2,\n        @Optional() @Inject(DisplayDensityToken) protected _displayDensityOptions: IDisplayDensityOptions) {\n            super(_displayDensityOptions);\n        }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public selectClass(condition: boolean): object {\n        const SELECT_CLASS = 'igx-chip__select';\n\n        return {\n            [SELECT_CLASS]: condition,\n            [`${SELECT_CLASS}--hidden`]: !condition\n        };\n    }\n\n    protected changeSelection(newValue: boolean, srcEvent = null) {\n        const onSelectArgs: IChipSelectEventArgs = {\n            originalEvent: srcEvent,\n            owner: this,\n            selected: false,\n            cancel: false\n        };\n\n        fromEvent(this.selectContainer.nativeElement, 'transitionend')\n            .pipe(filter<TransitionEvent>(event => event.propertyName === 'width'), take(1))\n            .subscribe(event => this.onSelectTransitionDone(event));\n\n        if (newValue && !this._selected) {\n            onSelectArgs.selected = true;\n            this.onSelection.emit(onSelectArgs);\n\n            if (!onSelectArgs.cancel) {\n                this.renderer.addClass(this.chipArea.nativeElement, this._selectedItemClass);\n                this._selected = newValue;\n                this.selectedChange.emit(this._selected);\n            }\n        } else if (!newValue && this._selected) {\n            this.onSelection.emit(onSelectArgs);\n\n            if (!onSelectArgs.cancel) {\n                this.renderer.removeClass(this.chipArea.nativeElement, this._selectedItemClass);\n                this._selected = newValue;\n                this.selectedChange.emit(this._selected);\n            }\n        }\n    }\n\n    public onSelectTransitionDone(event) {\n        if (!!event.target.tagName) {\n            // Trigger onSelectionDone on when `width` property is changed and the target is valid element(not comment).\n            this.onSelectionDone.emit({\n                owner: this,\n                originalEvent: event\n            });\n        }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public onChipKeyDown(event: KeyboardEvent) {\n        const keyDownArgs: IChipKeyDownEventArgs = {\n            originalEvent: event,\n            owner: this,\n            cancel: false\n        };\n\n        this.onKeyDown.emit(keyDownArgs);\n        if (keyDownArgs.cancel) {\n            return;\n        }\n\n        if ((event.key === 'Delete' || event.key === 'Del') && this.removable) {\n            this.onRemove.emit({\n                originalEvent: event,\n                owner: this\n            });\n        }\n\n        if ((event.key === ' ' || event.key === 'Spacebar') && this.selectable && !this.disabled) {\n            this.changeSelection(!this.selected, event);\n        }\n\n        if (event.key !== 'Tab') {\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public onRemoveBtnKeyDown(event: KeyboardEvent) {\n        if (event.key === ' ' || event.key === 'Spacebar' || event.key === 'Enter') {\n            this.onRemove.emit({\n                originalEvent: event,\n                owner: this\n            });\n\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    public onRemoveMouseDown(event: PointerEvent | MouseEvent) {\n        event.stopPropagation();\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public onRemoveClick(event: MouseEvent | TouchEvent) {\n        this.onRemove.emit({\n            originalEvent: event,\n            owner: this\n        });\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public onRemoveTouchMove() {\n        // We don't remove chip if user starting touch interacting on the remove button moves the chip\n        this._movedWhileRemoving = true;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public onRemoveTouchEnd(event: TouchEvent) {\n        if (!this._movedWhileRemoving) {\n            this.onRemoveClick(event);\n        }\n        this._movedWhileRemoving = false;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    // -----------------------------\n    // Start chip igxDrag behavior\n    public onChipDragStart(event: IDragStartEventArgs) {\n        this.onMoveStart.emit({\n            originalEvent: event,\n            owner: this\n        });\n        event.cancel = !this.draggable || this.disabled;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public onChipDragEnd() {\n        if (this.animateOnRelease) {\n            this.dragDirective.transitionToOrigin();\n        }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public onChipMoveEnd(event: IDragBaseEventArgs) {\n        // moveEnd is triggered after return animation has finished. This happen when we drag and release the chip.\n        this.onMoveEnd.emit({\n            originalEvent: event,\n            owner: this\n        });\n\n        if (this.selected) {\n            this.chipArea.nativeElement.focus();\n        }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public onChipGhostCreate() {\n        this.hideBaseElement = this.hideBaseOnDrag;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public onChipGhostDestroy() {\n        this.hideBaseElement = false;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public onChipDragClicked(event: IDragBaseEventArgs) {\n        const clickEventArgs: IChipClickEventArgs = {\n            originalEvent: event,\n            owner: this,\n            cancel: false\n        };\n        this.onClick.emit(clickEventArgs);\n\n        if (!clickEventArgs.cancel && this.selectable && !this.disabled) {\n            this.changeSelection(!this.selected, event);\n        }\n    }\n    // End chip igxDrag behavior\n\n    /**\n     * @hidden\n     * @internal\n     */\n    // -----------------------------\n    // Start chip igxDrop behavior\n    public onChipDragEnterHandler(event: IDropBaseEventArgs) {\n        if (this.dragDirective === event.drag || !event.drag.data || !event.drag.data.chip) {\n            return;\n        }\n\n        const eventArgs: IChipEnterDragAreaEventArgs = {\n            owner: this,\n            dragChip: event.drag.data.chip,\n            originalEvent: event\n        };\n        this.onDragEnter.emit(eventArgs);\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public onChipDrop(event: IDropDroppedEventArgs) {\n        // Cancel the default drop logic\n        event.cancel = true;\n    }\n    // End chip igxDrop behavior\n}\n","import {\n    Component,\n    ContentChildren,\n    ChangeDetectorRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    IterableDiffer,\n    IterableDiffers,\n    Output,\n    QueryList,\n    DoCheck,\n    AfterViewInit,\n    OnDestroy,\n    ElementRef\n} from '@angular/core';\nimport {\n    IgxChipComponent,\n    IChipSelectEventArgs,\n    IChipKeyDownEventArgs,\n    IChipEnterDragAreaEventArgs,\n    IBaseChipEventArgs\n} from './chip.component';\nimport { IDropBaseEventArgs, IDragBaseEventArgs } from '../directives/drag-drop/drag-drop.directive';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\nexport interface IBaseChipsAreaEventArgs {\n    originalEvent: IDragBaseEventArgs | IDropBaseEventArgs | KeyboardEvent | MouseEvent | TouchEvent;\n    owner: IgxChipsAreaComponent;\n}\n\nexport interface IChipsAreaReorderEventArgs extends IBaseChipsAreaEventArgs {\n    chipsArray: IgxChipComponent[];\n}\n\nexport interface IChipsAreaSelectEventArgs extends IBaseChipsAreaEventArgs {\n    newSelection: IgxChipComponent[];\n}\n\n/**\n * The chip area allows you to perform more complex scenarios with chips that require interaction,\n * like dragging, selection, navigation, etc.\n *\n * @igxModule IgxChipsModule\n *\n * @igxTheme igx-chip-theme\n *\n * @igxKeywords chip area, chip\n *\n * @igxGroup display\n *\n * @example\n * ```html\n * <igx-chips-area>\n *    <igx-chip *ngFor=\"let chip of chipList\" [id]=\"chip.id\">\n *        <span>{{chip.text}}</span>\n *    </igx-chip>\n * </igx-chips-area>\n * ```\n */\n@Component({\n    selector: 'igx-chips-area',\n    templateUrl: 'chips-area.component.html',\n})\nexport class IgxChipsAreaComponent implements DoCheck, AfterViewInit, OnDestroy {\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @Input()\n    public class = '';\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @HostBinding('attr.class')\n    get hostClass() {\n        const classes = ['igx-chip-area'];\n        classes.push(this.class);\n\n        return classes.join(' ');\n    }\n\n    /**\n     * An @Input property that sets the width of the `IgxChipsAreaComponent`.\n     * @example\n     * ```html\n     * <igx-chips-area #chipsArea [width]=\"'300'\" [height]=\"'10'\" (onReorder)=\"chipsOrderChanged($event)\"></igx-chips-area>\n     * ```\n     */\n    @HostBinding('style.width.px')\n    @Input()\n    public width: number;\n\n    /**\n     * An @Input property that sets the height of the `IgxChipsAreaComponent`.\n     * @example\n     * ```html\n     * <igx-chips-area #chipsArea [width]=\"'300'\" [height]=\"'10'\" (onReorder)=\"chipsOrderChanged($event)\"></igx-chips-area>\n     * ```\n     */\n    @HostBinding('style.height.px')\n    @Input()\n    public height: number;\n\n    /**\n     * Emits an event when `IgxChipComponent`s in the `IgxChipsAreaComponent` should be reordered.\n     * Returns an array of `IgxChipComponent`s.\n     * @example\n     * ```html\n     * <igx-chips-area #chipsArea [width]=\"'300'\" [height]=\"'10'\" (onReorder)=\"changedOrder($event)\"></igx-chips-area>\n     * ```\n     */\n    @Output()\n    public onReorder = new EventEmitter<IChipsAreaReorderEventArgs>();\n\n    /**\n     * Emits an event when an `IgxChipComponent` in the `IgxChipsAreaComponent` is selected/deselected.\n     * Fired after the chips area is initialized if there are initially selected chips as well.\n     * Returns an array of selected `IgxChipComponent`s and the `IgxChipAreaComponent`.\n     * @example\n     * ```html\n     * <igx-chips-area #chipsArea [width]=\"'300'\" [height]=\"'10'\" (onSelection)=\"selection($event)\"></igx-chips-area>\n     * ```\n     */\n    @Output()\n    public onSelection = new EventEmitter<IChipsAreaSelectEventArgs>();\n\n    /**\n     * Emits an event when an `IgxChipComponent` in the `IgxChipsAreaComponent` is moved.\n     * @example\n     * ```html\n     * <igx-chips-area #chipsArea [width]=\"'300'\" [height]=\"'10'\" (onMoveStart)=\"moveStart($event)\"></igx-chips-area>\n     * ```\n     */\n    @Output()\n    public onMoveStart = new EventEmitter<IBaseChipsAreaEventArgs>();\n\n    /**\n     * Emits an event after an `IgxChipComponent` in the `IgxChipsAreaComponent` is moved.\n     * @example\n     * ```html\n     * <igx-chips-area #chipsArea [width]=\"'300'\" [height]=\"'10'\" (onMoveEnd)=\"moveEnd($event)\"></igx-chips-area>\n     * ```\n     */\n    @Output()\n    public onMoveEnd = new EventEmitter<IBaseChipsAreaEventArgs>();\n\n    /**\n     * Holds the `IgxChipComponent` in the `IgxChipsAreaComponent`.\n     * @example\n     * ```typescript\n     * ngAfterViewInit(){\n     *    let chips = this.chipsArea.chipsList;\n     * }\n     * ```\n     */\n    @ContentChildren(IgxChipComponent, { descendants: true })\n    public chipsList: QueryList<IgxChipComponent>;\n\n    private modifiedChipsArray: IgxChipComponent[];\n    private _differ: IterableDiffer<IgxChipComponent> | null = null;\n    protected destroy$ = new Subject<boolean>();\n\n    constructor(public cdr: ChangeDetectorRef, public element: ElementRef,\n        private _iterableDiffers: IterableDiffers) {\n        this._differ = this._iterableDiffers.find([]).create(null);\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public ngAfterViewInit() {\n        // If we have initially selected chips through their inputs, we need to get them, because we cannot listen to their events yet.\n        if (this.chipsList.length) {\n            const selectedChips = this.chipsList.filter((item: IgxChipComponent) => item.selected);\n            if (selectedChips.length) {\n                this.onSelection.emit({\n                    originalEvent: null,\n                    newSelection: selectedChips,\n                    owner: this\n                });\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public ngDoCheck(): void {\n        if (this.chipsList) {\n            const changes = this._differ.diff(this.chipsList.toArray());\n            if (changes) {\n                changes.forEachAddedItem((addedChip) => {\n                    addedChip.item.onMoveStart.pipe(takeUntil(this.destroy$)).subscribe((args) => {\n                        this.onChipMoveStart(args);\n                    });\n                    addedChip.item.onMoveEnd.pipe(takeUntil(this.destroy$)).subscribe((args) => {\n                        this.onChipMoveEnd(args);\n                    });\n                    addedChip.item.onDragEnter.pipe(takeUntil(this.destroy$)).subscribe((args) => {\n                        this.onChipDragEnter(args);\n                    });\n                    addedChip.item.onKeyDown.pipe(takeUntil(this.destroy$)).subscribe((args) => {\n                        this.onChipKeyDown(args);\n                    });\n                    if (addedChip.item.selectable) {\n                        addedChip.item.onSelection.pipe(takeUntil(this.destroy$)).subscribe((args) => {\n                            this.onChipSelectionChange(args);\n                        });\n                    }\n                });\n                this.modifiedChipsArray = this.chipsList.toArray();\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public ngOnDestroy(): void {\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    protected onChipKeyDown(event: IChipKeyDownEventArgs) {\n        let orderChanged = false;\n        const chipsArray = this.chipsList.toArray();\n        const dragChipIndex = chipsArray.findIndex((el) => el === event.owner);\n        if (event.originalEvent.shiftKey === true) {\n            if (event.originalEvent.key === 'ArrowLeft' || event.originalEvent.key === 'Left') {\n                orderChanged = this.positionChipAtIndex(dragChipIndex, dragChipIndex - 1, false, event.originalEvent);\n                if (orderChanged) {\n                    setTimeout(() => {\n                        this.chipsList.toArray()[dragChipIndex - 1].chipArea.nativeElement.focus();\n                    });\n                }\n            } else if (event.originalEvent.key === 'ArrowRight' || event.originalEvent.key === 'Right') {\n                orderChanged = this.positionChipAtIndex(dragChipIndex, dragChipIndex + 1, true, event.originalEvent);\n            }\n        } else {\n            if ((event.originalEvent.key === 'ArrowLeft' || event.originalEvent.key === 'Left') && dragChipIndex > 0) {\n                chipsArray[dragChipIndex - 1].chipArea.nativeElement.focus();\n            } else if ((event.originalEvent.key === 'ArrowRight' || event.originalEvent.key === 'Right') &&\n                dragChipIndex < chipsArray.length - 1) {\n                chipsArray[dragChipIndex + 1].chipArea.nativeElement.focus();\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    protected onChipMoveStart(event: IBaseChipEventArgs) {\n        this.onMoveStart.emit({\n            originalEvent: event.originalEvent,\n            owner: this\n        });\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    protected onChipMoveEnd(event: IBaseChipEventArgs) {\n        this.onMoveEnd.emit({\n            originalEvent: event.originalEvent,\n            owner: this\n        });\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    protected onChipDragEnter(event: IChipEnterDragAreaEventArgs) {\n        const dropChipIndex = this.chipsList.toArray().findIndex((el) => el === event.owner);\n        const dragChipIndex = this.chipsList.toArray().findIndex((el) => el === event.dragChip);\n        if (dragChipIndex < dropChipIndex) {\n            // from the left to right\n            this.positionChipAtIndex(dragChipIndex, dropChipIndex, true, event.originalEvent);\n        } else {\n            // from the right to left\n            this.positionChipAtIndex(dragChipIndex, dropChipIndex, false, event.originalEvent);\n        }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    protected positionChipAtIndex(chipIndex, targetIndex, shiftRestLeft, originalEvent) {\n        if (chipIndex < 0 || this.chipsList.length <= chipIndex ||\n            targetIndex < 0 || this.chipsList.length <= targetIndex) {\n            return false;\n        }\n\n        const chipsArray = this.chipsList.toArray();\n        const result: IgxChipComponent[] = [];\n        for (let i = 0; i < chipsArray.length; i++) {\n            if (shiftRestLeft) {\n                if (chipIndex <= i && i < targetIndex) {\n                    result.push(chipsArray[i + 1]);\n                } else if (i === targetIndex) {\n                    result.push(chipsArray[chipIndex]);\n                } else {\n                    result.push(chipsArray[i]);\n                }\n            } else {\n                if (targetIndex < i && i <= chipIndex) {\n                    result.push(chipsArray[i - 1]);\n                } else if (i === targetIndex) {\n                    result.push(chipsArray[chipIndex]);\n                } else {\n                    result.push(chipsArray[i]);\n                }\n            }\n        }\n        this.modifiedChipsArray = result;\n\n        const eventData: IChipsAreaReorderEventArgs = {\n            chipsArray: this.modifiedChipsArray,\n            originalEvent: originalEvent,\n            owner: this\n        };\n        this.onReorder.emit(eventData);\n        return true;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    protected onChipSelectionChange(event: IChipSelectEventArgs) {\n        let selectedChips = this.chipsList.filter((chip) => chip.selected);\n        if (event.selected && !selectedChips.includes(event.owner)) {\n            selectedChips.push(event.owner);\n        } else if (!event.selected && selectedChips.includes(event.owner)) {\n            selectedChips = selectedChips.filter((chip) => {\n                return chip.id !== event.owner.id;\n            });\n        }\n        this.onSelection.emit({\n            originalEvent: event.originalEvent,\n            newSelection: selectedChips,\n            owner: this\n        });\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n    Component,\n    ElementRef,\n    HostBinding,\n    Input,\n    NgModule,\n    OnInit,\n    TemplateRef,\n    ViewChild\n} from '@angular/core';\nimport { IgxIconModule } from '../icon/public_api';\n\nlet NEXT_ID = 0;\n\nexport enum IgxAvatarSize {\n    SMALL = 'small',\n    MEDIUM = 'medium',\n    LARGE = 'large'\n}\n\nexport enum IgxAvatarType {\n    INITIALS = 'initials',\n    IMAGE = 'image',\n    ICON = 'icon',\n    CUSTOM = 'custom',\n}\n\n/**\n * Avatar provides a way to display an image, icon or initials to the user.\n *\n * @igxModule IgxAvatarModule\n *\n * @igxTheme igx-avatar-theme, igx-icon-theme\n *\n * @igxKeywords avatar, profile, picture, initials\n *\n * @igxGroup Layouts\n *\n * @remarks\n *\n * The Ignite UI Avatar provides an easy way to add an avatar icon to your application.  This icon can be an\n * image, someone's initials or a material icon from the Google Material icon set.\n *\n * @example\n * ```html\n * <igx-avatar initials=\"MS\" roundShape=\"true\" size=\"large\">\n * </igx-avatar>\n * ```\n */\n@Component({\n    selector: 'igx-avatar',\n    templateUrl: 'avatar.component.html'\n})\nexport class IgxAvatarComponent implements OnInit {\n\n    /**\n     * This is a reference to the avatar image element in the DOM.\n     *\n     * @example\n     * ```typescript\n     *  let image = this.avatar.image;\n     * ```\n     */\n    @ViewChild('image')\n    public image: ElementRef;\n\n    /** @hidden @internal */\n    @ViewChild('defaultTemplate', { read: TemplateRef, static: true })\n    protected defaultTemplate: TemplateRef<any>;\n\n    /** @hidden @internal */\n    @ViewChild('imageTemplate', { read: TemplateRef, static: true })\n    protected imageTemplate: TemplateRef<any>;\n\n    /** @hidden @internal */\n    @ViewChild('initialsTemplate', { read: TemplateRef, static: true })\n    protected initialsTemplate: TemplateRef<any>;\n\n    /** @hidden @internal */\n    @ViewChild('iconTemplate', { read: TemplateRef, static: true })\n    protected iconTemplate: TemplateRef<any>;\n\n    /**\n     * Returns the `aria-label` attribute of the avatar.\n     *\n     * @example\n     * ```typescript\n     * let ariaLabel = this.avatar.ariaLabel;\n     * ```\n     *\n     */\n    @HostBinding('attr.aria-label')\n    public ariaLabel = 'avatar';\n\n    /**\n     * Returns the `role` attribute of the avatar.\n     *\n     * @example\n     * ```typescript\n     * let avatarRole = this.avatar.role;\n     * ```\n     */\n    @HostBinding('attr.role')\n    public role = 'img';\n\n    /**\n     * Host `class.igx-avatar` binding.\n     *\n     * @hidden\n     * @internal\n     */\n    @HostBinding('class.igx-avatar')\n    public cssClass = 'igx-avatar';\n\n    /**\n     * Returns the type of the avatar.\n     * The avatar can be:\n     * - `\"initials type avatar\"`\n     * - `\"icon type avatar\"`\n     * - `\"image type avatar\"`.\n     * - `\"custom type avatar\"`.\n     *\n     * @example\n     * ```typescript\n     * let avatarDescription = this.avatar.roleDescription;\n     * ```\n     */\n    @HostBinding('attr.aria-roledescription')\n    public roleDescription: string;\n\n    /**\n     * Sets the `id` of the avatar. If not set, the first avatar component will have `id` = `\"igx-avatar-0\"`.\n     *\n     * @example\n     * ```html\n     * <igx-avatar id=\"my-first-avatar\"></igx-avatar>\n     * ```\n     */\n    @HostBinding('attr.id')\n    @Input()\n    public id = `igx-avatar-${NEXT_ID++}`;\n\n    /**\n     * Sets a round shape to the avatar, if `roundShape` is set to `true`.\n     * By default the shape of the avatar is a square.\n     *\n     * @example\n     * ```html\n     * <igx-avatar roundShape=\"true\" ></igx-avatar>\n     * ```\n     */\n\n    @HostBinding('class.igx-avatar--rounded')\n    @Input()\n    public roundShape = false;\n\n    /**\n     * Sets the color of the avatar's initials or icon.\n     *\n     * @example\n     * ```html\n     * <igx-avatar color=\"blue\"></igx-avatar>\n     * ```\n     */\n\n    @HostBinding('style.color')\n    @Input()\n    public color: string;\n\n    /**\n     * Sets the background color of the avatar.\n     *\n     * @example\n     * ```html\n     * <igx-avatar bgColor=\"yellow\"></igx-avatar>\n     * ```\n     * @igxFriendlyName Background color\n     */\n\n    @HostBinding('style.background')\n    @Input()\n    public bgColor: string;\n\n    /**\n     * Sets initials to the avatar.\n     *\n     * @example\n     * ```html\n     * <igx-avatar initials=\"MN\"></igx-avatar>\n     * ```\n     */\n    @Input()\n    public initials: string;\n\n    /**\n     * Sets an icon to the avatar. All icons from the material icon set are supported.\n     *\n     * @example\n     * ```html\n     * <igx-avatar icon=\"phone\"></igx-avatar>\n     * ```\n     */\n    @Input()\n    public icon: string;\n\n    /**\n     * Sets the image source of the avatar.\n     *\n     * @example\n     * ```html\n     * <igx-avatar src=\"images/picture.jpg\"></igx-avatar>\n     * ```\n     * @igxFriendlyName Image URL\n     */\n    @Input()\n    public src: string;\n\n    /**\n     * @hidden\n     * @internal\n     */\n    private _size: string | IgxAvatarSize = IgxAvatarSize.SMALL;\n    /**\n     * Returns the size of the avatar.\n     *\n     * @example\n     * ```typescript\n     * let avatarSize = this.avatar.size;\n     * ```\n     */\n    @Input()\n    public get size(): string | IgxAvatarSize {\n        return this._size;\n    }\n\n    /**\n     * Sets the size  of the avatar.\n     * By default, the size is `\"small\"`. It can be set to `\"medium\"` or `\"large\"`.\n     *\n     * @example\n     * ```html\n     * <igx-avatar size=\"large\"></igx-avatar>\n     * ```\n     */\n    public set size(value: string | IgxAvatarSize) {\n        switch (value) {\n            case 'small':\n            case 'medium':\n            case 'large':\n                this._size = value;\n                break;\n            default:\n                this._size = 'small';\n        }\n    }\n\n    /** @hidden @internal */\n    @HostBinding('class.igx-avatar--small')\n    get _isSmallSize(): boolean {\n        return this.size === 'small';\n    }\n    /** @hidden @internal */\n    @HostBinding('class.igx-avatar--medium')\n    get _isMediumSize(): boolean {\n        return this.size === 'medium';\n    }\n    /** @hidden @internal */\n    @HostBinding('class.igx-avatar--large')\n    get _isLargeSize(): boolean {\n        return this.size === 'large';\n    }\n\n    /**\n     * Returns the type of the avatar.\n     *\n     * @example\n     * ```typescript\n     * let avatarType = this.avatar.type;\n     * ```\n     */\n    get type(): IgxAvatarType {\n        if (this.src) {\n            return IgxAvatarType.IMAGE;\n        }\n\n        if (this.icon) {\n            return IgxAvatarType.ICON;\n        }\n\n        if (this.initials) {\n            return IgxAvatarType.INITIALS;\n        }\n\n        return IgxAvatarType.CUSTOM;\n    }\n\n    /** @hidden @internal */\n    @HostBinding('class.igx-avatar--image')\n    get _isImageType(): boolean {\n        return this.type === IgxAvatarType.IMAGE;\n    }\n    /** @hidden @internal */\n    @HostBinding('class.igx-avatar--icon')\n    get _isIconType(): boolean {\n        return this.type === IgxAvatarType.ICON;\n    }\n    /** @hidden @internal */\n    @HostBinding('class.igx-avatar--initials')\n    get _isInitialsType(): boolean {\n        return this.type === IgxAvatarType.INITIALS;\n    }\n\n    /**\n     * Returns the template of the avatar.\n     *\n     * @hidden\n     * @internal\n     */\n    get template(): TemplateRef<any> {\n        switch (this.type) {\n            case IgxAvatarType.IMAGE:\n                return this.imageTemplate;\n            case IgxAvatarType.INITIALS:\n                return this.initialsTemplate;\n            case IgxAvatarType.ICON:\n                return this.iconTemplate;\n            default:\n                return this.defaultTemplate;\n        }\n    }\n\n    constructor(public elementRef: ElementRef) { }\n\n    /** @hidden @internal */\n    public ngOnInit() {\n        this.roleDescription = this.getRole();\n    }\n\n    /** @hidden @internal */\n    private getRole(): string {\n        switch (this.type) {\n            case IgxAvatarType.IMAGE:\n                return 'image avatar';\n            case IgxAvatarType.ICON:\n                return 'icon avatar';\n            case IgxAvatarType.INITIALS:\n                return 'initials avatar';\n            default:\n                return 'custom avatar';\n        }\n    }\n\n    /**\n     * Returns the css url of the image.\n     *\n     * @hidden\n     * @internal\n     */\n    public getSrcUrl() {\n        return `url(${this.src})`;\n    }\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [IgxAvatarComponent],\n    exports: [IgxAvatarComponent],\n    imports: [CommonModule, IgxIconModule]\n})\nexport class IgxAvatarModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { IgxRippleModule } from '../directives/ripple/ripple.directive';\nimport { IgxButtonModule } from '../directives/button/button.directive';\nimport { IgxAvatarModule } from '../avatar/avatar.component';\nimport { IgxIconModule } from '../icon/public_api';\nimport { IgxChipComponent } from './chip.component';\nimport { IgxChipsAreaComponent } from './chips-area.component';\nimport { IgxDragDropModule } from '../directives/drag-drop/drag-drop.directive';\nimport { IgxPrefixModule, IgxPrefixDirective} from '../directives/prefix/prefix.directive';\nimport { IgxSuffixModule, IgxSuffixDirective } from '../directives/suffix/suffix.directive';\n\n/**\n * @hidden\n */\n@NgModule({\n  declarations: [\n    IgxChipsAreaComponent,\n    IgxChipComponent\n  ],\n  exports: [\n    IgxChipsAreaComponent,\n    IgxChipComponent,\n    IgxPrefixDirective,\n    IgxSuffixDirective\n  ],\n  imports: [\n    CommonModule,\n    IgxRippleModule,\n    IgxIconModule,\n    IgxButtonModule,\n    IgxAvatarModule,\n    IgxDragDropModule,\n    IgxPrefixModule,\n    IgxSuffixModule\n  ]\n})\nexport class IgxChipsModule { }\n","import {\n    ChangeDetectorRef,\n    Component,\n    Input,\n    TemplateRef,\n    ViewChild,\n    HostBinding,\n    AfterViewInit,\n    ElementRef,\n    OnInit,\n    ChangeDetectionStrategy,\n    DoCheck\n} from '@angular/core';\nimport { IgxColumnComponent } from '../../columns/column.component';\nimport { IFilteringExpression } from '../../../data-operations/filtering-expression.interface';\nimport { IBaseChipEventArgs, IgxChipsAreaComponent, IgxChipComponent } from '../../../chips/public_api';\nimport { IgxFilteringService, ExpressionUI } from '../grid-filtering.service';\n\n/**\n * @hidden\n */\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false,\n    selector: 'igx-grid-filtering-cell',\n    templateUrl: './grid-filtering-cell.component.html'\n})\nexport class IgxGridFilteringCellComponent implements AfterViewInit, OnInit, DoCheck {\n\n    private baseClass = 'igx-grid__filtering-cell-indicator';\n\n    public expressionsList: ExpressionUI[];\n    public moreFiltersCount = 0;\n\n    @Input()\n    public column: IgxColumnComponent;\n\n    @ViewChild('emptyFilter', { read: TemplateRef, static: true })\n    protected emptyFilter: TemplateRef<any>;\n\n    @ViewChild('defaultFilter', { read: TemplateRef, static: true })\n    protected defaultFilter: TemplateRef<any>;\n\n    @ViewChild('complexFilter', { read: TemplateRef, static: true })\n    protected complexFilter: TemplateRef<any>;\n\n    @ViewChild('chipsArea', { read: IgxChipsAreaComponent })\n    protected chipsArea: IgxChipsAreaComponent;\n\n    @ViewChild('moreIcon', { read: ElementRef })\n    protected moreIcon: ElementRef;\n\n    @ViewChild('ghostChip', { read: IgxChipComponent })\n    protected ghostChip: IgxChipComponent;\n\n    @ViewChild('complexChip', { read: IgxChipComponent })\n    protected complexChip: IgxChipComponent;\n\n\n    @HostBinding('class')\n    get styleClasses(): string {\n        if (this.column && this.column.selected) {\n            return 'igx-grid__filtering-cell--selected';\n        }\n\n        return 'igx-grid__filtering-cell';\n    }\n\n    constructor(public cdr: ChangeDetectorRef, public filteringService: IgxFilteringService) {\n        this.filteringService.subscribeToEvents();\n    }\n\n    ngOnInit(): void {\n        this.filteringService.columnToMoreIconHidden.set(this.column.field, true);\n    }\n\n    ngAfterViewInit(): void {\n        this.updateFilterCellArea();\n    }\n\n    public ngDoCheck() {\n        this.updateFilterCellArea();\n    }\n\n    /**\n     * Returns whether a chip with a given index is visible or not.\n     */\n    public isChipVisible(index: number) {\n        const expression = this.expressionsList[index];\n        return !!(expression && expression.isVisible);\n    }\n\n    /**\n     * Updates the filtering cell area.\n     */\n    public updateFilterCellArea() {\n        this.expressionsList = this.filteringService.getExpressions(this.column.field);\n        this.updateVisibleFilters();\n    }\n\n    get template(): TemplateRef<any> {\n        if (!this.column.filterable) {\n            return null;\n        }\n        if (this.column.filterCellTemplate) {\n            return this.column.filterCellTemplate;\n        }\n        const expressionTree = this.column.filteringExpressionsTree;\n        if (!expressionTree || expressionTree.filteringOperands.length === 0) {\n            return this.emptyFilter;\n        }\n        if (this.filteringService.isFilterComplex(this.column.field)) {\n            return this.complexFilter;\n        }\n        return this.defaultFilter;\n    }\n\n    /**\n     * Gets the context passed to the filter template.\n     * @memberof IgxGridFilteringCellComponent\n     */\n    get context() {\n        return { column: this.column };\n    }\n\n    /**\n     * Chip clicked event handler.\n     */\n    public onChipClicked(expression?: IFilteringExpression) {\n        if (expression) {\n            this.expressionsList.forEach((item) => {\n                item.isSelected = (item.expression === expression);\n            });\n        } else if (this.expressionsList.length > 0) {\n            this.expressionsList.forEach((item) => {\n                item.isSelected = false;\n            });\n            this.expressionsList[0].isSelected = true;\n        }\n        this.filteringService.grid.navigation.performHorizontalScrollToCell(this.column.visibleIndex);\n        this.filteringService.filteredColumn = this.column;\n        this.filteringService.isFilterRowVisible = true;\n        this.filteringService.selectedExpression = expression;\n    }\n\n    /**\n     * Chip removed event handler.\n     */\n    public onChipRemoved(eventArgs: IBaseChipEventArgs, item: ExpressionUI): void {\n        const indexToRemove = this.expressionsList.indexOf(item);\n        this.removeExpression(indexToRemove);\n        this.filteringService.grid.theadRow.nativeElement.focus();\n    }\n\n    /**\n     * Clears the filtering.\n     */\n    public clearFiltering(): void {\n        this.filteringService.clearFilter(this.column.field);\n        this.cdr.detectChanges();\n    }\n\n    /**\n     * Returns the filtering indicator class.\n     */\n    public filteringIndicatorClass() {\n        return {\n            [this.baseClass]: !this.isMoreIconHidden(),\n            [`${this.baseClass}--hidden`]: this.isMoreIconHidden()\n        };\n    }\n\n    private removeExpression(indexToRemove: number) {\n        if (indexToRemove === 0 && this.expressionsList.length === 1) {\n            this.clearFiltering();\n            return;\n        }\n\n        this.filteringService.removeExpression(this.column.field, indexToRemove);\n\n        this.updateVisibleFilters();\n        this.filteringService.filterInternal(this.column.field);\n    }\n\n    private isMoreIconHidden(): boolean {\n        return this.filteringService.columnToMoreIconHidden.get(this.column.field);\n    }\n\n    private updateVisibleFilters() {\n        this.expressionsList.forEach((ex) => ex.isVisible = true);\n\n        if (this.moreIcon) {\n            this.filteringService.columnToMoreIconHidden.set(this.column.field, true);\n        }\n        this.cdr.detectChanges();\n\n        if (this.chipsArea && this.expressionsList.length > 1) {\n            const areaWidth = this.chipsArea.element.nativeElement.offsetWidth;\n            let viewWidth = 0;\n            const chipsAreaElements = this.chipsArea.element.nativeElement.children;\n            let visibleChipsCount = 0;\n            const moreIconWidth = this.moreIcon.nativeElement.offsetWidth -\n                parseInt(document.defaultView.getComputedStyle(this.moreIcon.nativeElement)['margin-left'], 10);\n\n            for (let index = 0; index < chipsAreaElements.length - 1; index++) {\n                if (viewWidth + chipsAreaElements[index].offsetWidth < areaWidth) {\n                    viewWidth += chipsAreaElements[index].offsetWidth;\n                    if (index % 2 === 0) {\n                        visibleChipsCount++;\n                    } else {\n                        viewWidth += parseInt(document.defaultView.getComputedStyle(chipsAreaElements[index])['margin-left'], 10);\n                        viewWidth += parseInt(document.defaultView.getComputedStyle(chipsAreaElements[index])['margin-right'], 10);\n                    }\n                } else {\n                    if (index % 2 !== 0 && viewWidth + moreIconWidth > areaWidth) {\n                        visibleChipsCount--;\n                    } else if (visibleChipsCount > 0 && viewWidth - chipsAreaElements[index - 1].offsetWidth + moreIconWidth > areaWidth) {\n                        visibleChipsCount--;\n                    }\n                    this.moreFiltersCount = this.expressionsList.length - visibleChipsCount;\n                    this.filteringService.columnToMoreIconHidden.set(this.column.field, false);\n                    break;\n                }\n            }\n\n            for (let i = visibleChipsCount; i < this.expressionsList.length; i++) {\n                this.expressionsList[i].isVisible = false;\n            }\n            this.cdr.detectChanges();\n        }\n    }\n}\n","import {\n    Component,\n    HostBinding,\n    Input,\n    ViewChild,\n    QueryList,\n    ViewChildren,\n    forwardRef,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    DoCheck,\n    ElementRef,\n    HostListener\n} from '@angular/core';\nimport { IgxColumnComponent } from '../columns/column.component';\nimport { IgxFilteringService } from '../filtering/grid-filtering.service';\nimport { GridBaseAPIService } from '../api.service';\nimport { IgxGridBaseDirective } from '../grid-base.directive';\nimport { IgxColumnResizingService } from '../resizing/resizing.service';\nimport { IgxGridHeaderComponent } from './grid-header.component';\nimport { IgxGridFilteringCellComponent } from '../filtering/base/grid-filtering-cell.component';\nimport { isIE } from '../../core/utils';\nimport { GridType } from '../common/grid.interface';\nimport { GridSelectionMode } from '../common/enums';\n\nconst Z_INDEX = 9999;\n\n/**\n * @hidden\n */\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false,\n    selector: 'igx-grid-header-group',\n    templateUrl: './grid-header-group.component.html'\n})\nexport class IgxGridHeaderGroupComponent implements DoCheck {\n\n    @HostBinding('style.-ms-grid-row-span')\n    get gridRowSpan(): number {\n        return this.column.gridRowSpan;\n    }\n\n    @HostBinding('style.-ms-grid-column-span')\n    get gridColumnSpan(): number {\n        return this.column.gridColumnSpan;\n    }\n\n\n    @HostBinding('style.grid-row-end')\n    get rowEnd(): number {\n        return this.column.rowEnd;\n    }\n\n    @HostBinding('style.grid-column-end')\n    get colEnd(): number {\n        return this.column.colEnd;\n    }\n\n    @HostBinding('style.-ms-grid-row')\n    @HostBinding('style.grid-row-start')\n    get rowStart(): number {\n        return this.column.rowStart;\n    }\n\n    @HostBinding('style.-ms-grid-column')\n    @HostBinding('style.grid-column-start')\n    get colStart(): number {\n        return this.column.colStart;\n    }\n\n    /**\n     * Gets the column of the header group.\n     * @memberof IgxGridHeaderGroupComponent\n     */\n    @Input()\n    public column: IgxColumnComponent;\n\n    /**\n     * Gets the `id` of the grid in which the header group is stored.\n     * @memberof IgxGridHeaderGroupComponent\n     */\n    @Input()\n    public gridID: string;\n\n    @HostBinding('class.igx-grid__th--active')\n    public get active() {\n        const node = this.grid.navigation.activeNode;\n        return  node && !this.column.columnGroup ?\n            node.row === -1 && node.column === this.column.visibleIndex && node.level === this.column.level : false;\n    }\n\n    public get activeGroup() {\n        const node = this.grid.navigation.activeNode;\n        return  node ? node.row === -1 && node.column === this.column.visibleIndex && node.level === this.column.level : false;\n    }\n\n    /**\n     * @hidden\n     */\n    @ViewChild(IgxGridHeaderComponent)\n    public headerCell: IgxGridHeaderComponent;\n\n    /**\n     * @hidden\n     */\n    @ViewChild(IgxGridFilteringCellComponent)\n    public filterCell: IgxGridFilteringCellComponent;\n\n    /**\n     * @hidden\n     */\n    @ViewChildren(forwardRef(() => IgxGridHeaderGroupComponent), { read: IgxGridHeaderGroupComponent })\n    public children: QueryList<IgxGridHeaderGroupComponent>;\n\n    /**\n     * Gets the width of the header group.\n     * @memberof IgxGridHeaderGroupComponent\n     */\n    get width() {\n        return this.grid.getHeaderGroupWidth(this.column);\n    }\n\n    /**\n     * Gets the style classes of the header group.\n     * @memberof IgxGridHeaderGroupComponent\n     */\n    @HostBinding('class')\n    get styleClasses(): string {\n        const defaultClasses = [\n            'igx-grid__thead-item',\n            this.column.headerGroupClasses\n        ];\n\n        const classList = {\n            'igx-grid__th--pinned': this.isPinned,\n            'igx-grid__th--pinned-last': this.isLastPinned,\n            'igx-grid__th--pinned-first': this.isFirstPinned,\n            'igx-grid__drag-col-header': this.isHeaderDragged,\n            'igx-grid__th--filtering': this.isFiltered\n        };\n\n        for (const className of Object.keys(classList)) {\n            if (classList[className]) {\n                defaultClasses.push(className);\n            }\n        }\n        return defaultClasses.join(' ');\n    }\n\n    /**\n     * @hidden\n     */\n    @HostBinding('style.z-index')\n    get zIndex() {\n        if (!this.column.pinned) {\n            return null;\n        }\n        return Z_INDEX - this.grid.pinnedColumns.indexOf(this.column);\n    }\n\n    /**\n     * Gets the grid of the header group.\n     * @memberof IgxGridHeaderGroupComponent\n     */\n    get grid(): any {\n        return this.gridAPI.grid;\n    }\n\n    /**\n     * Gets whether the header group belongs to a column that is filtered.\n     * @memberof IgxGridHeaderGroupComponent\n     */\n    get isFiltered(): boolean {\n        return this.filteringService.filteredColumn === this.column;\n    }\n\n    /**\n     * Gets whether the header group is stored in the last column in the pinned area.\n     * @memberof IgxGridHeaderGroupComponent\n     */\n    get isLastPinned(): boolean {\n        return !this.grid.hasColumnLayouts ? this.column.isLastPinned : false;\n    }\n\n    /**\n     * Gets whether the header group is stored in the first column of the right pinned area.\n     */\n    get isFirstPinned(): boolean {\n        return !this.grid.hasColumnLayouts ? this.column.isFirstPinned : false;\n    }\n\n    @HostBinding('style.display')\n    get groupDisplayStyle(): string {\n        return this.grid.hasColumnLayouts && this.column.children && !isIE() ? 'flex' : '';\n    }\n\n    /**\n     * Gets whether the header group is stored in a pinned column.\n     * @memberof IgxGridHeaderGroupComponent\n     */\n    get isPinned(): boolean {\n        return this.column.pinned;\n    }\n\n    /**\n     * Gets whether the header group belongs to a column that is moved.\n     * @memberof IgxGridHeaderGroupComponent\n     */\n    get isHeaderDragged(): boolean {\n        return this.grid.draggedColumn === this.column;\n    }\n\n    /**\n     * @hidden\n     */\n    get hasLastPinnedChildColumn(): boolean {\n        return this.column.allChildren.some(child => child.isLastPinned);\n    }\n\n    /**\n     * @hidden\n     */\n    get hasFirstPinnedChildColumn(): boolean {\n        return this.column.allChildren.some(child => child.isFirstPinned);\n    }\n\n    /**\n     * @hidden\n     */\n    get selectable() {\n        const selectableChildren = this.column.allChildren.filter(c => !c.hidden && c.selectable && !c.columnGroup);\n        return this.grid.columnSelection !== GridSelectionMode.none &&\n            this.column.applySelectableClass\n            && !this.selected && selectableChildren.length > 0\n            && !this.grid.filteringService.isFilterRowVisible;\n    }\n\n    /**\n     * @hidden\n     */\n    get selected() {\n        return this.column.selected;\n    }\n\n    /**\n     * @hidden\n     */\n    get height() {\n        return this.element.nativeElement.getBoundingClientRect().height;\n    }\n\n    /**\n     * @hidden\n     */\n    get columnTitle() {\n        return this.column.elementRef.nativeElement.getAttribute('title') || this.column.header;\n    }\n\n    /**\n     * @hidden\n     */\n    public groupClicked(event): void {\n        const columnsToSelect = this.column.allChildren.filter(c => !c.hidden && c.selectable && !c.columnGroup).map(c => c.field);\n        if (this.grid.columnSelection !== GridSelectionMode.none\n            && columnsToSelect.length > 0 && !this.grid.filteringService.isFilterRowVisible) {\n            const clearSelection = this.grid.columnSelection === GridSelectionMode.single || !event.ctrlKey;\n            const rangeSelection = this.grid.columnSelection === GridSelectionMode.multiple && event.shiftKey;\n            if (!this.selected) {\n                this.grid.selectionService.selectColumns(columnsToSelect, clearSelection, rangeSelection, event);\n            } else {\n                const selectedFields = this.grid.selectionService.getSelectedColumns();\n                if ((selectedFields.length === columnsToSelect.length) && selectedFields.every(el => columnsToSelect.includes(el))\n                    || !clearSelection) {\n                    this.grid.selectionService.deselectColumns(columnsToSelect, event);\n                } else {\n                    this.grid.selectionService.selectColumns(columnsToSelect, clearSelection, rangeSelection, event);\n                }\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public toggleExpandState(event): void {\n        event.stopPropagation();\n        this.column.expanded = !this.column.expanded;\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('mousedown', ['$event'])\n    public onMouseDown(event): void {\n        // hack for preventing text selection in IE and Edge while dragging the resizer\n        event.preventDefault();\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('pointerdown', ['$event'])\n    public pointerdown(event): void {\n        event.stopPropagation();\n        this.activate();\n        this.grid.theadRow.nativeElement.focus();\n    }\n\n    /*\n     * This method is necessary due to some specifics related with implementation of column moving\n     * @hidden\n     */\n    public activate() {\n        this.grid.navigation.activeNode = this.activeNode;\n        this.grid.theadRow.nativeElement.focus();\n    }\n\n    public ngDoCheck() {\n        this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n    public onPinterEnter() {\n        this.column.applySelectableClass = true;\n    }\n\n    /**\n     * @hidden\n     */\n    public onPointerLeave() {\n        this.column.applySelectableClass = false;\n    }\n\n    private get activeNode() {\n        return {row: -1, column: this.column.visibleIndex, level: this.column.level,\n            mchCache: {level: this.column.level, visibleIndex: this.column.visibleIndex},\n            layout: this.column.columnLayoutChild ? {\n            rowStart: this.column.rowStart,\n            colStart: this.column.colStart,\n            rowEnd: this.column.rowEnd,\n            colEnd: this.column.colEnd,\n            columnVisibleIndex: this.column.visibleIndex} : null };\n    }\n\n    constructor(private cdr: ChangeDetectorRef,\n        public gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>,\n        public element: ElementRef,\n        public colResizingService: IgxColumnResizingService,\n        public filteringService: IgxFilteringService) { }\n}\n","export interface IDateRangePickerResourceStrings {\n    igx_date_range_picker_date_separator?: string;\n}\n\nexport const DateRangePickerResourceStringsEN: IDateRangePickerResourceStrings = {\n    igx_date_range_picker_date_separator: 'to'\n};\n","export interface IGridResourceStrings {\n    igx_grid_groupByArea_message?: string;\n    igx_grid_emptyFilteredGrid_message?: string;\n    igx_grid_emptyGrid_message?: string;\n    igx_grid_filter?: string;\n    igx_grid_filter_row_close?: string;\n    igx_grid_filter_row_reset?: string;\n    igx_grid_filter_row_placeholder?: string;\n    igx_grid_filter_row_boolean_placeholder?: string;\n    igx_grid_filter_row_date_placeholder?: string;\n    igx_grid_filter_operator_and?: string;\n    igx_grid_complex_filter?: string;\n    igx_grid_filter_operator_or?: string;\n    igx_grid_filter_contains?: string;\n    igx_grid_filter_doesNotContain?: string;\n    igx_grid_filter_startsWith?: string;\n    igx_grid_filter_endsWith?: string;\n    igx_grid_filter_equals?: string;\n    igx_grid_filter_doesNotEqual?: string;\n    igx_grid_filter_empty?: string;\n    igx_grid_filter_notEmpty?: string;\n    igx_grid_filter_null?: string;\n    igx_grid_filter_notNull?: string;\n    igx_grid_filter_before?: string;\n    igx_grid_filter_after?: string;\n    igx_grid_filter_today?: string;\n    igx_grid_filter_yesterday?: string;\n    igx_grid_filter_thisMonth?: string;\n    igx_grid_filter_lastMonth?: string;\n    igx_grid_filter_nextMonth?: string;\n    igx_grid_filter_thisYear?: string;\n    igx_grid_filter_lastYear?: string;\n    igx_grid_filter_nextYear?: string;\n    igx_grid_filter_greaterThan?: string;\n    igx_grid_filter_lessThan?: string;\n    igx_grid_filter_greaterThanOrEqualTo?: string;\n    igx_grid_filter_lessThanOrEqualTo?: string;\n    igx_grid_filter_true?: string;\n    igx_grid_filter_false?: string;\n    igx_grid_filter_all?: string;\n    igx_grid_filter_condition_placeholder?: string;\n    igx_grid_summary_count?: string;\n    igx_grid_summary_min?: string;\n    igx_grid_summary_max?: string;\n    igx_grid_summary_sum?: string;\n    igx_grid_summary_average?: string;\n    igx_grid_summary_earliest?: string;\n    igx_grid_summary_latest?: string;\n    igx_grid_excel_filter_moving_left?: string;\n    igx_grid_excel_filter_moving_left_short?: string;\n    igx_grid_excel_filter_moving_right?: string;\n    igx_grid_excel_filter_moving_right_short?: string;\n    igx_grid_excel_filter_moving_header?: string;\n    igx_grid_excel_filter_sorting_asc?: string;\n    igx_grid_excel_filter_sorting_asc_short?: string;\n    igx_grid_excel_filter_sorting_desc?: string;\n    igx_grid_excel_filter_sorting_desc_short?: string;\n    igx_grid_excel_filter_sorting_header?: string;\n    igx_grid_excel_filter_clear?: string;\n    igx_grid_excel_custom_dialog_add?: string;\n    igx_grid_excel_custom_dialog_clear?: string;\n    igx_grid_excel_custom_dialog_header?: string;\n    igx_grid_excel_cancel?: string;\n    igx_grid_excel_apply?: string;\n    igx_grid_excel_search_placeholder?: string;\n    igx_grid_excel_select_all?: string;\n    igx_grid_excel_blanks?: string;\n    igx_grid_excel_hide?: string;\n    igx_grid_excel_show?: string;\n    igx_grid_excel_pin?: string;\n    igx_grid_excel_unpin?: string;\n    igx_grid_excel_select?: string;\n    igx_grid_excel_text_filter?: string;\n    igx_grid_excel_number_filter?: string;\n    igx_grid_excel_date_filter?: string;\n    igx_grid_excel_boolean_filter?: string;\n    igx_grid_excel_custom_filter?: string;\n    igx_grid_advanced_filter_title?: string;\n    igx_grid_advanced_filter_and_group?: string;\n    igx_grid_advanced_filter_or_group?: string;\n    igx_grid_advanced_filter_end_group?: string;\n    igx_grid_advanced_filter_create_and_group?: string;\n    igx_grid_advanced_filter_create_or_group?: string;\n    igx_grid_advanced_filter_and_label?: string;\n    igx_grid_advanced_filter_or_label?: string;\n    igx_grid_advanced_filter_add_condition?: string;\n    igx_grid_advanced_filter_ungroup?: string;\n    igx_grid_advanced_filter_delete?: string;\n    igx_grid_advanced_filter_delete_filters?: string;\n    igx_grid_advanced_filter_initial_text?: string;\n    igx_grid_advanced_filter_column_placeholder?: string;\n    igx_grid_advanced_filter_value_placeholder?: string;\n    igx_grid_pinned_row_indicator?: string;\n}\n\nexport const GridResourceStringsEN: IGridResourceStrings = {\n    igx_grid_groupByArea_message: 'Drag a column header and drop it here to group by that column.',\n    igx_grid_emptyFilteredGrid_message: 'No records found.',\n    igx_grid_emptyGrid_message: 'Grid has no data.',\n    igx_grid_filter: 'Filter',\n    igx_grid_filter_row_close: 'Close',\n    igx_grid_filter_row_reset: 'Reset',\n    igx_grid_filter_row_placeholder: 'Add filter value',\n    igx_grid_filter_row_boolean_placeholder: 'All',\n    igx_grid_filter_row_date_placeholder: 'Pick up date',\n    igx_grid_filter_operator_and: 'And',\n    igx_grid_filter_operator_or: 'Or',\n    igx_grid_complex_filter: 'Complex Filter',\n    igx_grid_filter_contains: 'Contains',\n    igx_grid_filter_doesNotContain: 'Does Not Contain',\n    igx_grid_filter_startsWith: 'Starts With',\n    igx_grid_filter_endsWith: 'Ends With',\n    igx_grid_filter_equals: 'Equals',\n    igx_grid_filter_doesNotEqual: 'Does Not Equal',\n    igx_grid_filter_empty: 'Empty',\n    igx_grid_filter_notEmpty: 'Not Empty',\n    igx_grid_filter_null: 'Null',\n    igx_grid_filter_notNull: 'Not Null',\n    igx_grid_filter_before: 'Before',\n    igx_grid_filter_after: 'After',\n    igx_grid_filter_today: 'Today',\n    igx_grid_filter_yesterday: 'Yesterday',\n    igx_grid_filter_thisMonth: 'This Month',\n    igx_grid_filter_lastMonth: 'Last Month',\n    igx_grid_filter_nextMonth: 'Next Month',\n    igx_grid_filter_thisYear: 'This Year',\n    igx_grid_filter_lastYear: 'Last Year',\n    igx_grid_filter_nextYear: 'Next Year',\n    igx_grid_filter_greaterThan: 'Greater Than',\n    igx_grid_filter_lessThan: 'Less Than',\n    igx_grid_filter_greaterThanOrEqualTo: 'Greater Than Or Equal To',\n    igx_grid_filter_lessThanOrEqualTo: 'Less Than Or Equal To',\n    igx_grid_filter_true: 'True',\n    igx_grid_filter_false: 'False',\n    igx_grid_filter_all: 'All',\n    igx_grid_filter_condition_placeholder: 'Select filter',\n    igx_grid_summary_count: 'Count',\n    igx_grid_summary_min: 'Min',\n    igx_grid_summary_max: 'Max',\n    igx_grid_summary_sum: 'Sum',\n    igx_grid_summary_average: 'Avg',\n    igx_grid_summary_earliest: 'Earliest',\n    igx_grid_summary_latest: 'Latest',\n    igx_grid_excel_filter_moving_left: 'move left',\n    igx_grid_excel_filter_moving_left_short: 'left',\n    igx_grid_excel_filter_moving_right: 'move right',\n    igx_grid_excel_filter_moving_right_short: 'right',\n    igx_grid_excel_filter_moving_header: 'move',\n    igx_grid_excel_filter_sorting_asc: 'ascending',\n    igx_grid_excel_filter_sorting_asc_short: 'asc',\n    igx_grid_excel_filter_sorting_desc: 'descending',\n    igx_grid_excel_filter_sorting_desc_short: 'desc',\n    igx_grid_excel_filter_sorting_header: 'sort',\n    igx_grid_excel_filter_clear: 'Clear column filters',\n    igx_grid_excel_custom_dialog_add: 'add filter',\n    igx_grid_excel_custom_dialog_clear: 'Clear filter',\n    igx_grid_excel_custom_dialog_header: 'Custom auto-filter on column: ',\n    igx_grid_excel_cancel: 'cancel',\n    igx_grid_excel_apply: 'apply',\n    igx_grid_excel_search_placeholder: 'Search',\n    igx_grid_excel_select_all: 'Select All',\n    igx_grid_excel_blanks: '(Blanks)',\n    igx_grid_excel_hide: 'Hide column',\n    igx_grid_excel_show: 'Show column',\n    igx_grid_excel_pin: 'Pin column',\n    igx_grid_excel_unpin: 'Unpin column',\n    igx_grid_excel_select: 'Select column',\n    igx_grid_excel_text_filter: 'Text filter',\n    igx_grid_excel_number_filter: 'Number filter',\n    igx_grid_excel_date_filter: 'Date filter',\n    igx_grid_excel_boolean_filter: 'Boolean filter',\n    igx_grid_excel_custom_filter: 'Custom filter...',\n    igx_grid_advanced_filter_title: 'Advanced Filtering',\n    igx_grid_advanced_filter_and_group: '\"And\" Group',\n    igx_grid_advanced_filter_or_group: '\"Or\" Group',\n    igx_grid_advanced_filter_end_group: 'End Group',\n    igx_grid_advanced_filter_create_and_group: 'Create \"And\" Group',\n    igx_grid_advanced_filter_create_or_group: 'Create \"Or\" Group',\n    igx_grid_advanced_filter_and_label: 'and',\n    igx_grid_advanced_filter_or_label: 'or',\n    igx_grid_advanced_filter_add_condition: 'Condition',\n    igx_grid_advanced_filter_ungroup: 'Ungroup',\n    igx_grid_advanced_filter_delete: 'Delete',\n    igx_grid_advanced_filter_delete_filters: 'Delete filters',\n    igx_grid_advanced_filter_initial_text: 'Start with creating a group of conditions linked with \"And\" or \"Or\"',\n    igx_grid_advanced_filter_column_placeholder: 'Select column',\n    igx_grid_advanced_filter_value_placeholder: 'Value',\n    igx_grid_pinned_row_indicator: 'Pinned'\n};\n","export interface ITimePickerResourceStrings {\n    igx_time_picker_ok?: string;\n    igx_time_picker_cancel?: string;\n}\n\nexport const TimePickerResourceStringsEN: ITimePickerResourceStrings = {\n    igx_time_picker_ok: 'OK',\n    igx_time_picker_cancel: 'Cancel'\n};\n","export interface IPaginatorResourceStrings {\n    igx_paginator_label?: string;\n    igx_paginator_pager_text?: string;\n    igx_paginator_first_page_button_text?: string;\n    igx_paginator_previous_page_button_text?: string;\n    igx_paginator_last_page_button_text?: string;\n    igx_paginator_next_page_button_text?: string;\n}\n\nexport const PaginatorResourceStringsEN: IPaginatorResourceStrings = {\n    igx_paginator_label: 'Items per page',\n    igx_paginator_pager_text: 'of',\n    igx_paginator_first_page_button_text: 'Go to first page',\n    igx_paginator_previous_page_button_text: 'Previous page',\n    igx_paginator_last_page_button_text: 'Go to last page',\n    igx_paginator_next_page_button_text: 'Next page',\n};\n","export interface ICarouselResourceStrings {\n    igx_carousel_of?: string;\n}\n\nexport const CarouselResourceStringsEN: ICarouselResourceStrings = {\n    igx_carousel_of: 'of'\n};\n","import { DateRangePickerResourceStringsEN } from './date-range-picker-resources';\nimport { IGridResourceStrings, GridResourceStringsEN } from './grid-resources';\nimport { ITimePickerResourceStrings, TimePickerResourceStringsEN } from './time-picker-resources';\nimport { PaginatorResourceStringsEN } from './paginator-resources';\nimport { cloneValue } from '../utils';\nimport { ICarouselResourceStrings, CarouselResourceStringsEN } from './carousel-resources';\n\nexport interface IResourceStrings extends IGridResourceStrings, ITimePickerResourceStrings, ICarouselResourceStrings  {}\n\n/**\n * @hidden\n */\nexport const CurrentResourceStrings = {\n    GridResStrings: cloneValue(GridResourceStringsEN),\n    PaginatorResStrings: cloneValue(PaginatorResourceStringsEN),\n    TimePickerResStrings: cloneValue(TimePickerResourceStringsEN),\n    DateRangePickerResStrings: cloneValue(DateRangePickerResourceStringsEN),\n    CarouselResStrings: cloneValue(CarouselResourceStringsEN),\n};\n\nfunction updateResourceStrings(currentStrings: IResourceStrings, newStrings: IResourceStrings ) {\n    for (const key of Object.keys(newStrings)) {\n        if (key in currentStrings) {\n            currentStrings[key] = newStrings[key];\n        }\n    }\n}\n\n/**\n * Changes the resource strings for all components in the application\n * ```\n * @param resourceStrings to be applied\n */\nexport function changei18n(resourceStrings: IResourceStrings) {\n    for (const key of Object.keys(CurrentResourceStrings)) {\n        updateResourceStrings(CurrentResourceStrings[key], resourceStrings);\n    }\n}\n\n/**\n * Returns current resource strings for all components\n */\nexport function getCurrentResourceStrings(): IResourceStrings {\n    return {\n            ...CurrentResourceStrings.GridResStrings,\n            ...CurrentResourceStrings.TimePickerResStrings\n    };\n}\n","import { Injectable} from '@angular/core';\nimport { IgxSummaryResult } from './grid-summary';\nimport { DataUtil } from '../../data-operations/data-util';\nimport { cloneArray } from '../../core/utils';\n\n/** @hidden */\n@Injectable()\nexport class IgxGridSummaryService {\n    protected summaryCacheMap: Map<string, Map<string, any[]>> = new Map<string, Map<string, IgxSummaryResult[]>>();\n    public grid;\n    public rootSummaryID = 'igxGridRootSummary';\n    public summaryHeight = 0;\n    public maxSummariesLenght = 0;\n    public groupingExpressions = [];\n    public retriggerRootPipe = 0;\n    public deleteOperation = false;\n\n    public recalculateSummaries() {\n        this.resetSummaryHeight();\n        this.grid.notifyChanges(true);\n    }\n\n    public clearSummaryCache(args?) {\n        if (!this.summaryCacheMap.size) { return; }\n        if (!args) {\n            this.summaryCacheMap.clear();\n            if (this.grid && this.grid.rootSummariesEnabled) {\n                this.retriggerRootPipe++;\n            }\n            return;\n        }\n        if (args.data) {\n            const rowID = this.grid.primaryKey ? args.data[this.grid.primaryKey] : args.data;\n            this.removeSummaries(rowID);\n        }\n        if (args.rowID !== undefined && args.rowID !== null) {\n            let columnName = args.cellID ? this.grid.columnList.find(col => col.index === args.cellID.columnID).field : undefined;\n            if (columnName && this.grid.rowEditable) { return; }\n\n            const isGroupedColumn = this.grid.groupingExpressions &&\n                    this.grid.groupingExpressions.map(expr => expr.fieldName).indexOf(columnName) !== -1;\n            if (columnName && isGroupedColumn ) {\n                columnName = undefined;\n            }\n            this.removeSummaries(args.rowID, columnName);\n        }\n    }\n\n    public removeSummaries(rowID, columnName?) {\n        this.deleteSummaryCache(this.rootSummaryID, columnName);\n        if (this.summaryCacheMap.size === 1 && this.summaryCacheMap.has(this.rootSummaryID)) { return; }\n        if (this.isTreeGrid) {\n            if (this.grid.transactions.enabled && this.deleteOperation) {\n                this.deleteOperation = false;\n                // TODO: this.removeChildRowSummaries(rowID, columnName);\n                this.summaryCacheMap.clear();\n                return;\n            }\n            this.removeAllTreeGridSummaries(rowID, columnName);\n        } else if (this.isHierarchicalGrid) {\n            if (this.grid.transactions.enabled && this.deleteOperation) {\n                this.deleteOperation = false;\n                this.summaryCacheMap.clear();\n            }\n        } else {\n           const summaryIds = this.getSummaryID(rowID, this.grid.groupingExpressions);\n           summaryIds.forEach(id => {\n               this.deleteSummaryCache(id, columnName);\n           });\n        }\n    }\n\n    public removeSummariesCachePerColumn(columnName) {\n        this.summaryCacheMap.forEach((cache) => {\n            if (cache.get(columnName)) {\n                cache.delete(columnName);\n            }\n        });\n        if (this.grid.rootSummariesEnabled) {  this.retriggerRootPipe++; }\n    }\n\n    public calcMaxSummaryHeight() {\n        if (this.summaryHeight) {\n            return this.summaryHeight;\n        }\n        if (!this.grid.data) {return this.summaryHeight = 0; }\n        let maxSummaryLength = 0;\n        this.grid.columnList.filter((col) => col.hasSummary && !col.hidden).forEach((column) => {\n            const getCurrentSummaryColumn = column.summaries.operate([], [], column.field).length;\n            if (getCurrentSummaryColumn) {\n                if (maxSummaryLength < getCurrentSummaryColumn) {\n                    maxSummaryLength = getCurrentSummaryColumn;\n                }\n            }\n        });\n        this.maxSummariesLenght = maxSummaryLength;\n        this.summaryHeight =  maxSummaryLength * this.grid.defaultSummaryHeight;\n        return this.summaryHeight;\n    }\n\n    public calculateSummaries(rowID, data) {\n        let rowSummaries = this.summaryCacheMap.get(rowID);\n        if (!rowSummaries) {\n            rowSummaries = new Map<string, IgxSummaryResult[]>();\n            this.summaryCacheMap.set(rowID, rowSummaries);\n        }\n        if (!this.hasSummarizedColumns || !data) {return rowSummaries; }\n        this.grid.columnList.filter(col => col.hasSummary).forEach((column) => {\n            if (!rowSummaries.get(column.field)) {\n                rowSummaries.set(column.field,\n                    column.summaries.operate(data.map(r => r[column.field]), data, column.field));\n            }\n        });\n        return rowSummaries;\n    }\n\n    public resetSummaryHeight() {\n        this.summaryHeight = 0;\n        (this.grid as any)._summaryPipeTrigger++;\n        if (this.grid.rootSummariesEnabled) {\n            this.retriggerRootPipe++;\n        }\n    }\n\n    public updateSummaryCache(groupingArgs) {\n        if (this.summaryCacheMap.size === 0 || !this.hasSummarizedColumns) { return; }\n        if (this.groupingExpressions.length === 0) {\n            this.groupingExpressions = groupingArgs.expressions.map(record => record.fieldName);\n            return;\n        }\n        if (groupingArgs.length === 0) {\n            this.groupingExpressions = [];\n            this.clearSummaryCache();\n            return;\n        }\n        this.compareGroupingExpressions(this.groupingExpressions, groupingArgs);\n        this.groupingExpressions = groupingArgs.expressions.map(record => record.fieldName);\n    }\n\n    public get hasSummarizedColumns(): boolean {\n        const summarizedColumns = this.grid.columnList.filter(col => col.hasSummary && !col.hidden);\n        return summarizedColumns.length > 0;\n    }\n\n    private deleteSummaryCache(id, columnName) {\n        if (this.summaryCacheMap.get(id)) {\n            const filteringApplied = columnName && this.grid.filteringExpressionsTree &&\n                    this.grid.filteringExpressionsTree.filteringOperands.map((expr) => expr.fieldName).indexOf(columnName) !== -1;\n            if (columnName && this.summaryCacheMap.get(id).get(columnName) && !filteringApplied) {\n                this.summaryCacheMap.get(id).delete(columnName);\n            } else {\n                this.summaryCacheMap.delete(id);\n            }\n            if (id === this.rootSummaryID && this.grid.rootSummariesEnabled) {\n                this.retriggerRootPipe++;\n            }\n        }\n    }\n\n    private getSummaryID(rowID, groupingExpressions) {\n        if (groupingExpressions.length === 0) { return []; }\n        const summaryIDs = [];\n        let data = this.grid.data;\n        if (this.grid.transactions.enabled) {\n            data = DataUtil.mergeTransactions(\n                cloneArray(this.grid.data),\n                this.grid.transactions.getAggregatedChanges(true),\n                this.grid.primaryKey\n            );\n        }\n        const rowData = this.grid.primaryKey ? data.find(rec => rec[this.grid.primaryKey] === rowID) : rowID;\n        let id = '{ ';\n        groupingExpressions.forEach(expr => {\n            id += `'${expr.fieldName}': '${rowData[expr.fieldName]}'`;\n                summaryIDs.push(id.concat(' }'));\n                id += ', ';\n        });\n        return summaryIDs;\n    }\n\n    private removeAllTreeGridSummaries(rowID, columnName?) {\n        let row = this.grid.records.get(rowID);\n        if (!row) { return; }\n        row = row.children ? row : row.parent;\n        while (row) {\n            rowID = row.rowID;\n            this.deleteSummaryCache(rowID, columnName);\n            row = row.parent;\n        }\n    }\n\n    // TODO: remove only deleted rows\n    private removeChildRowSummaries(rowID, columnName?) {\n    }\n\n    private compareGroupingExpressions(current, groupingArgs) {\n        const newExpressions = groupingArgs.expressions.map(record => record.fieldName);\n        const removedCols = groupingArgs.ungroupedColumns;\n        if (current.length <= newExpressions.length) {\n            const newExpr = newExpressions.slice(0, current.length).toString();\n            if (current.toString() !== newExpr) {\n                this.clearSummaryCache();\n            }\n        } else {\n            const currExpr = current.slice(0, newExpressions.length).toString();\n            if (currExpr !== newExpressions.toString()) {\n                this.clearSummaryCache();\n                return;\n            }\n            removedCols.map(col => col.field).forEach(colName => {\n                this.summaryCacheMap.forEach((cache, id) => {\n                   if (id.indexOf(colName) !== -1) {\n                       this.summaryCacheMap.delete(id);\n                   }});\n            });\n        }\n    }\n\n    private get isTreeGrid() {\n        return this.grid.nativeElement.tagName.toLowerCase() === 'igx-tree-grid';\n    }\n\n    private get isHierarchicalGrid() {\n        return this.grid.nativeElement.tagName.toLowerCase() === 'igx-hierarchical-grid';\n    }\n\n}\n","import { Component, Input, HostBinding, HostListener, ChangeDetectionStrategy, ElementRef } from '@angular/core';\nimport { IgxSummaryResult } from './grid-summary';\nimport { IgxColumnComponent } from '../columns/column.component';\nimport { DataType } from '../../data-operations/data-util';\nimport { ISelectionNode } from '../selection/selection.service';\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false,\n    selector: 'igx-grid-summary-cell',\n    templateUrl: './summary-cell.component.html'\n})\nexport class IgxSummaryCellComponent {\n\n    @Input()\n    public summaryResults: IgxSummaryResult[];\n\n    @Input()\n    public column: IgxColumnComponent;\n\n    @Input()\n    public firstCellIndentation = 0;\n\n    @Input()\n    public hasSummary = false;\n\n    @Input()\n    public density;\n\n    constructor(private element: ElementRef) {\n    }\n\n    /** @hidden */\n    @Input()\n    @HostBinding('class.igx-grid-summary--active')\n    public active: boolean;\n\n    @Input()\n    @HostBinding('attr.data-rowIndex')\n    public rowIndex: number;\n\n    @HostBinding('attr.data-visibleIndex')\n    get visibleColumnIndex(): number {\n        return this.column.visibleIndex;\n    }\n\n    @HostBinding('attr.aria-describedby')\n    public get describeby() {\n        return `Summary_${this.column.field}`;\n    }\n\n    @HostBinding('attr.id')\n    public get attrCellID() {\n        return `${this.grid.id}_${this.rowIndex}_${ this.visibleColumnIndex}`;\n    }\n\n    @HostListener('pointerdown')\n    public activate() {\n        this.grid.navigation.activeNode = {row: this.rowIndex, column: this.visibleColumnIndex};\n        this.grid.cdr.detectChanges();\n    }\n\n    protected get selectionNode(): ISelectionNode {\n        return {\n            row: this.rowIndex,\n            column: this.column.columnLayoutChild ? this.column.parent.visibleIndex : this.visibleColumnIndex,\n            isSummaryRow: true\n        };\n    }\n\n    get width() {\n        return this.column.getCellWidth();\n    }\n\n    get nativeElement(): any {\n        return this.element.nativeElement;\n    }\n\n    get columnDatatype(): DataType {\n        return this.column.dataType;\n    }\n\n    get itemHeight() {\n        return this.column.grid.defaultSummaryHeight;\n    }\n\n    /**\n     * @hidden\n     */\n    public get grid() {\n        return (this.column.grid as any);\n    }\n\n    public translateSummary(summary: IgxSummaryResult): string {\n        return this.grid.resourceStrings[`igx_grid_summary_${summary.key}`] || summary.label;\n    }\n}\n","import {\n    Component,\n    Input,\n    ViewChildren,\n    QueryList,\n    HostBinding,\n    ViewChild,\n    ElementRef,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    DoCheck\n} from '@angular/core';\nimport { IgxSummaryResult } from './grid-summary';\nimport { IgxSummaryCellComponent } from './summary-cell.component';\nimport { IgxGridForOfDirective } from '../../directives/for-of/for_of.directive';\nimport { GridBaseAPIService } from '../api.service';\nimport { IgxGridBaseDirective } from '../grid-base.directive';\nimport { IgxColumnComponent } from '../columns/column.component';\nimport { IgxForOfSyncService } from '../../directives/for-of/for_of.sync.service';\nimport { GridType } from '../common/grid.interface';\n\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false,\n    selector: 'igx-grid-summary-row',\n    templateUrl: './summary-row.component.html',\n    providers: [IgxForOfSyncService]\n})\nexport class IgxSummaryRowComponent implements DoCheck  {\n\n    @Input()\n    public summaries: Map<string, IgxSummaryResult[]>;\n\n    @Input()\n    public gridID;\n\n    @Input()\n    public index: number;\n\n    @Input()\n    public firstCellIndentation = -1;\n\n    @HostBinding('attr.data-rowIndex')\n    get dataRowIndex() {\n        return this.index;\n    }\n\n    get minHeight() {\n        return this.grid.summaryService.calcMaxSummaryHeight() - 1;\n    }\n\n    @ViewChildren(IgxSummaryCellComponent, { read: IgxSummaryCellComponent })\n    public _summaryCells: QueryList<IgxSummaryCellComponent>;\n\n    public get summaryCells(): QueryList<IgxSummaryCellComponent> {\n        const res = new QueryList<IgxSummaryCellComponent>();\n        if (!this._summaryCells) { return res; }\n        const cList = this._summaryCells.filter(c => c.nativeElement.isConnected);\n        res.reset(cList);\n        return res;\n    }\n    public set summaryCells(cells) { }\n\n    /**\n     * @hidden\n     */\n    @ViewChild('igxDirRef', { read: IgxGridForOfDirective })\n    public virtDirRow: IgxGridForOfDirective<any>;\n\n    constructor(public gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>,\n                public element: ElementRef,\n                public cdr: ChangeDetectorRef) {}\n\n    public ngDoCheck() {\n        this.cdr.markForCheck();\n    }\n\n    public get grid() {\n        return this.gridAPI.grid;\n    }\n\n    public get nativeElement() {\n        return this.element.nativeElement;\n    }\n\n    public getColumnSummaries(columnName) {\n        if (!this.summaries.get(columnName)) {\n            return [];\n        }\n        return this.summaries.get(columnName);\n\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public isCellActive(visibleColumnIndex) {\n        const node = this.grid.navigation.activeNode;\n        return node ? node.row === this.index && node.column === visibleColumnIndex : false;\n    }\n\n    /**\n     * @hidden\n     */\n    public get pinnedColumns(): IgxColumnComponent[] {\n        return this.grid.pinnedColumns;\n    }\n\n    /**\n     * @hidden\n     */\n    public get unpinnedColumns(): IgxColumnComponent[] {\n        return this.grid.unpinnedColumns;\n    }\n\n    getContext(row) {\n        return {\n            $implicit: row\n        };\n    }\n}\n","import { Directive, Input, Output, EventEmitter, ElementRef, OnDestroy, NgZone, OnInit } from '@angular/core';\nimport { interval, Observable, Subscription, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\nexport enum DragScrollDirection {\n    NONE,\n    LEFT,\n    TOP,\n    RIGHT,\n    BOTTOM,\n    TOPLEFT,\n    TOPRIGHT,\n    BOTTOMLEFT,\n    BOTTOMRIGHT\n}\n\n\n@Directive({\n    selector: '[igxGridDragSelect]'\n})\nexport class IgxGridDragSelectDirective implements OnInit, OnDestroy {\n    _activeDrag: boolean;\n\n    @Input('igxGridDragSelect')\n    get activeDrag(): boolean {\n        return this._activeDrag;\n    }\n\n    set activeDrag(val: boolean) {\n        if (val !== this._activeDrag) {\n            this.unsubscribe();\n            this._activeDrag = val;\n        }\n    }\n\n    @Output()\n    onDragStop = new EventEmitter<boolean>();\n\n    @Output()\n    onDragScroll = new EventEmitter<DragScrollDirection>();\n\n    get nativeElement(): HTMLElement {\n        return this.ref.nativeElement;\n    }\n\n    get clientRect(): ClientRect {\n        return this.nativeElement.getBoundingClientRect();\n    }\n\n    protected end$ = new Subject<any>();\n    protected lastDirection = DragScrollDirection.NONE;\n    protected _interval$: Observable<any>;\n    protected _sub: Subscription;\n\n    constructor(private ref: ElementRef, private zone: NgZone) {\n        this._interval$ = interval(100).pipe(\n            takeUntil(this.end$),\n            filter(() => this.activeDrag)\n        );\n    }\n\n    ngOnInit() {\n        this.zone.runOutsideAngular(() => {\n            this.nativeElement.addEventListener('pointerover', this.startDragSelection);\n            this.nativeElement.addEventListener('pointerleave', this.stopDragSelection);\n        });\n    }\n\n    ngOnDestroy() {\n        this.zone.runOutsideAngular(() => {\n            this.nativeElement.removeEventListener('pointerover', this.startDragSelection);\n            this.nativeElement.removeEventListener('pointerleave', this.stopDragSelection);\n        });\n        this.unsubscribe();\n        this.end$.complete();\n    }\n\n\n    startDragSelection = (ev: PointerEvent) => {\n        if (!this.activeDrag) {\n            return;\n        }\n        const x = ev.clientX;\n        const y = ev.clientY;\n        const direction = this._measureDimensions(x, y);\n        if (direction === this.lastDirection) {\n            return;\n        }\n        this.unsubscribe();\n        this._sub = this._interval$.subscribe(() => this.onDragScroll.emit(direction));\n        this.lastDirection = direction;\n    }\n\n    stopDragSelection = () => {\n        if (!this.activeDrag) {\n            return;\n        }\n        this.onDragStop.emit(false);\n        this.unsubscribe();\n        this.lastDirection = DragScrollDirection.NONE;\n    }\n\n    _measureDimensions(x: number, y: number): DragScrollDirection {\n        let direction: DragScrollDirection;\n\n        const rect = this.clientRect;\n        const RATIO = 0.15;\n        const offsetX = Math.trunc(x - rect.left);\n        const offsetY = Math.trunc(y - rect.top);\n\n        const left = offsetX <= rect.width * RATIO;\n        const right = offsetX >= rect.width * (1 - RATIO);\n        const top = offsetY <= rect.height * RATIO;\n        const bottom = offsetY >= rect.height * (1 - RATIO);\n\n        if (top && left) {\n            direction = DragScrollDirection.TOPLEFT;\n        } else if (top && right) {\n            direction = DragScrollDirection.TOPRIGHT;\n        } else if (bottom && left) {\n            direction = DragScrollDirection.BOTTOMLEFT;\n        } else if (bottom && right) {\n            direction = DragScrollDirection.BOTTOMRIGHT;\n        } else if (top) {\n            direction = DragScrollDirection.TOP;\n        } else if (bottom) {\n            direction = DragScrollDirection.BOTTOM;\n        } else if (left) {\n            direction = DragScrollDirection.LEFT;\n        } else if (right) {\n            direction = DragScrollDirection.RIGHT;\n        } else {\n            direction = DragScrollDirection.NONE;\n        }\n\n        return direction;\n\n    }\n\n    protected unsubscribe() {\n        if (this._sub) {\n            this._sub.unsubscribe();\n        }\n    }\n}\n","import {\n    Directive, EmbeddedViewRef, Input, OnChanges, ChangeDetectorRef,\n    SimpleChange, SimpleChanges, TemplateRef, ViewContainerRef, NgModule, NgZone, Output, EventEmitter\n} from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { IBaseEventArgs } from '../../core/utils';\n\n/**\n * @hidden\n */\n@Directive({ selector: '[igxTemplateOutlet]' })\nexport class IgxTemplateOutletDirective implements OnChanges {\n    private _viewRef !: EmbeddedViewRef<any>;\n\n    /**\n     * The embedded views cache. Collection is key-value paired.\n     * Key is the template id, value is the embedded view for the related template.\n     */\n    private _embeddedViewsMap: Map<string, EmbeddedViewRef<any>> = new Map();\n\n    @Input() public igxTemplateOutletContext !: Object;\n\n    @Input() public igxTemplateOutlet !: TemplateRef<any>;\n\n    @Output()\n    public onViewCreated = new EventEmitter<IViewChangeEventArgs>();\n\n    @Output()\n    public onViewMoved = new EventEmitter<IViewChangeEventArgs>();\n\n    @Output()\n    public onCachedViewLoaded = new EventEmitter<ICachedViewLoadedEventArgs>();\n\n    @Output()\n    public onBeforeViewDetach = new EventEmitter<IViewChangeEventArgs>();\n\n    constructor(public _viewContainerRef: ViewContainerRef, private _zone: NgZone, public cdr: ChangeDetectorRef) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const actionType: TemplateOutletAction = this._getActionType(changes);\n        switch (actionType) {\n            case TemplateOutletAction.CreateView: this._recreateView(); break;\n            case TemplateOutletAction.MoveView: this._moveView(); break;\n            case TemplateOutletAction.UseCachedView: this._useCachedView(); break;\n            case TemplateOutletAction.UpdateViewContext: this._updateExistingContext(this.igxTemplateOutletContext); break;\n        }\n    }\n\n    public cleanCache() {\n        this._embeddedViewsMap.forEach((item) => {\n            if (!item.destroyed) {\n                item.destroy();\n            }\n        });\n        this._embeddedViewsMap.clear();\n    }\n\n    public cleanView(tmplID) {\n        const embView = this._embeddedViewsMap.get(tmplID);\n        if (embView) {\n            embView.destroy();\n            this._embeddedViewsMap.delete(tmplID);\n        }\n    }\n\n    private _recreateView() {\n        const prevIndex = this._viewRef ? this._viewContainerRef.indexOf(this._viewRef) : -1;\n        // detach old and create new\n        if (prevIndex !== -1) {\n            this.onBeforeViewDetach.emit({ owner: this, view: this._viewRef, context: this.igxTemplateOutletContext });\n            this._viewContainerRef.detach(prevIndex);\n        }\n        if (this.igxTemplateOutlet) {\n            this._viewRef = this._viewContainerRef.createEmbeddedView(\n                this.igxTemplateOutlet, this.igxTemplateOutletContext);\n            this.onViewCreated.emit({ owner: this, view: this._viewRef, context: this.igxTemplateOutletContext });\n            const tmplId = this.igxTemplateOutletContext['templateID'];\n            if (tmplId) {\n                // if context contains a template id, check if we have a view for that template already stored in the cache\n                // if not create a copy and add it to the cache in detached state.\n                // Note: Views in detached state do not appear in the DOM, however they remain stored in memory.\n                const res = this._embeddedViewsMap.get(this.igxTemplateOutletContext['templateID']);\n                if (!res) {\n                    this._embeddedViewsMap.set(this.igxTemplateOutletContext['templateID'], this._viewRef);\n                }\n            }\n        }\n    }\n\n    private _moveView() {\n        // using external view and inserting it in current view.\n        const view = this.igxTemplateOutletContext['moveView'];\n        const owner = this.igxTemplateOutletContext['owner'];\n        if (view !== this._viewRef) {\n            if (owner._viewContainerRef.indexOf(view) !== -1) {\n                // detach in case view it is attached somewhere else at the moment.\n                this.onBeforeViewDetach.emit({ owner: this, view: this._viewRef, context: this.igxTemplateOutletContext });\n                owner._viewContainerRef.detach(owner._viewContainerRef.indexOf(view));\n            }\n            if (this._viewRef && this._viewContainerRef.indexOf(this._viewRef) !== -1) {\n                this.onBeforeViewDetach.emit({ owner: this, view: this._viewRef, context: this.igxTemplateOutletContext });\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this._viewRef));\n            }\n            this._viewRef = view;\n            this._viewContainerRef.insert(view, 0);\n            this._updateExistingContext(this.igxTemplateOutletContext);\n            this.onViewMoved.emit({ owner: this, view: this._viewRef, context: this.igxTemplateOutletContext });\n        } else {\n            this._updateExistingContext(this.igxTemplateOutletContext);\n        }\n    }\n    private _useCachedView() {\n        // use view for specific template cached in the current template outlet\n        const tmplID = this.igxTemplateOutletContext['templateID'];\n        const cachedView = tmplID ?\n            this._embeddedViewsMap.get(tmplID) :\n            null;\n        // if view exists, but template has been changed and there is a view in the cache with the related template\n        // then detach old view and insert the stored one with the matching template\n        // after that update its context.\n        if (this._viewContainerRef.length > 0) {\n            this.onBeforeViewDetach.emit({ owner: this, view: this._viewRef, context: this.igxTemplateOutletContext });\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this._viewRef));\n        }\n\n        this._viewRef = cachedView;\n        const oldContext = this._cloneContext(cachedView.context);\n        this._viewContainerRef.insert(this._viewRef, 0);\n        this._updateExistingContext(this.igxTemplateOutletContext);\n        this.onCachedViewLoaded.emit({ owner: this, view: this._viewRef, context: this.igxTemplateOutletContext, oldContext });\n    }\n\n    private _shouldRecreateView(changes: SimpleChanges): boolean {\n        const ctxChange = changes['igxTemplateOutletContext'];\n        return !!changes['igxTemplateOutlet'] || (ctxChange && this._hasContextShapeChanged(ctxChange));\n    }\n\n    private _hasContextShapeChanged(ctxChange: SimpleChange): boolean {\n        const prevCtxKeys = Object.keys(ctxChange.previousValue || {});\n        const currCtxKeys = Object.keys(ctxChange.currentValue || {});\n\n        if (prevCtxKeys.length === currCtxKeys.length) {\n            for (const propName of currCtxKeys) {\n                if (prevCtxKeys.indexOf(propName) === -1) {\n                    return true;\n                }\n            }\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    private _updateExistingContext(ctx: Object): void {\n        for (const propName of Object.keys(ctx)) {\n            (<any>this._viewRef.context)[propName] = (<any>this.igxTemplateOutletContext)[propName];\n        }\n    }\n\n    private _cloneContext(ctx: any): any {\n        const clone = {};\n        for (const propName of Object.keys(ctx)) {\n            clone[propName] = ctx[propName];\n        }\n        return clone;\n    }\n\n    private _getActionType(changes: SimpleChanges) {\n        const movedView = this.igxTemplateOutletContext['moveView'];\n        const tmplID = this.igxTemplateOutletContext['templateID'];\n        const cachedView = tmplID ?\n            this._embeddedViewsMap.get(tmplID) :\n            null;\n        const shouldRecreate = this._shouldRecreateView(changes);\n        if (movedView) {\n            // view is moved from external source\n            return TemplateOutletAction.MoveView;\n        } else if (shouldRecreate && cachedView) {\n            // should recreate (template or context change) and there is a matching template in cache\n            return TemplateOutletAction.UseCachedView;\n        } else if (!this._viewRef || shouldRecreate) {\n            // no view or should recreate\n            return TemplateOutletAction.CreateView;\n        } else if (this.igxTemplateOutletContext) {\n            // has context, update context\n            return TemplateOutletAction.UpdateViewContext;\n        }\n    }\n}\nenum TemplateOutletAction {\n    CreateView,\n    MoveView,\n    UseCachedView,\n    UpdateViewContext\n}\n\nexport interface IViewChangeEventArgs extends IBaseEventArgs {\n    owner: IgxTemplateOutletDirective;\n    view: EmbeddedViewRef<any>;\n    context: any;\n}\n\nexport interface ICachedViewLoadedEventArgs extends IViewChangeEventArgs {\n    oldContext: any;\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [IgxTemplateOutletDirective],\n    entryComponents: [],\n    exports: [IgxTemplateOutletDirective],\n    imports: [CommonModule]\n})\n\nexport class IgxTemplateOutletModule {\n}\n","import {\n    Directive,\n    ElementRef,\n    Inject,\n    Input,\n    NgZone,\n    Output,\n    OnInit,\n    OnDestroy,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Subject, fromEvent, animationFrameScheduler, interval } from 'rxjs';\nimport { map, switchMap, takeUntil, throttle } from 'rxjs/operators';\n\n/**\n * @hidden\n * @internal\n */\n@Directive({\n    selector: '[igxResizer]'\n})\nexport class IgxColumnResizerDirective implements OnInit, OnDestroy {\n\n    @Input()\n    public restrictHResizeMin: number = Number.MIN_SAFE_INTEGER;\n\n    @Input()\n    public restrictHResizeMax: number = Number.MAX_SAFE_INTEGER;\n\n    @Output()\n    public resizeEnd = new Subject<any>();\n\n    @Output()\n    public resizeStart = new Subject<any>();\n\n    @Output()\n    public resize = new Subject<any>();\n\n    private _left;\n    private _destroy = new Subject<boolean>();\n\n    constructor(public element: ElementRef, @Inject(DOCUMENT) public document, public zone: NgZone) {\n\n        this.resizeStart.pipe(\n            map((event) => event.clientX),\n            takeUntil(this._destroy),\n            switchMap((offset) => this.resize.pipe(\n                map((event) => event.clientX - offset),\n                takeUntil(this.resizeEnd),\n                takeUntil(this._destroy)\n            ))\n        ).subscribe((pos) => {\n\n            const left = this._left + pos;\n\n            const min = this._left - this.restrictHResizeMin;\n            const max = this._left + this.restrictHResizeMax;\n\n            this.left = left < min ? min : left;\n\n            if (left > max) {\n                this.left = max;\n            }\n        });\n\n    }\n\n    ngOnInit() {\n        this.zone.runOutsideAngular(() => {\n            fromEvent(this.document.defaultView, 'mousemove').pipe(\n                throttle(() => interval(0, animationFrameScheduler)),\n                takeUntil(this._destroy)\n            ).subscribe((res) => this.onMousemove(res));\n\n            fromEvent(this.document.defaultView, 'mouseup').pipe(takeUntil(this._destroy))\n                .subscribe((res) => this.onMouseup(res));\n        });\n    }\n\n    ngOnDestroy() {\n        this._destroy.next(true);\n        this._destroy.complete();\n    }\n\n    public set left(val) {\n        requestAnimationFrame(() => this.element.nativeElement.style.left = val + 'px');\n    }\n\n    public set top(val) {\n        requestAnimationFrame(() => this.element.nativeElement.style.top = val + 'px');\n    }\n\n    onMouseup(event) {\n        this.resizeEnd.next(event);\n        this.resizeEnd.complete();\n    }\n\n    onMousedown(event) {\n        event.preventDefault();\n        const parent = this.element.nativeElement.parentElement.parentElement;\n\n        this.left = this._left = event.clientX - parent.getBoundingClientRect().left;\n        this.top = event.target.getBoundingClientRect().top - parent.getBoundingClientRect().top;\n\n        this.resizeStart.next(event);\n    }\n\n    onMousemove(event) {\n        event.preventDefault();\n        this.resize.next(event);\n    }\n}\n","import { ChangeDetectionStrategy, Component, ViewChild } from '@angular/core';\nimport { IgxColumnResizingService } from './resizing.service';\nimport { IgxColumnResizerDirective } from './resizer.directive';\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false,\n    selector: 'igx-grid-column-resizer',\n    templateUrl: './resizer.component.html'\n})\nexport class IgxGridColumnResizerComponent {\n    constructor(public colResizingService: IgxColumnResizingService) { }\n\n    @ViewChild(IgxColumnResizerDirective, { static: true })\n    public resizer: IgxColumnResizerDirective;\n}\n","import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    TemplateRef,\n    ViewChild,\n    ViewChildren,\n    QueryList,\n    ElementRef,\n    HostBinding,\n    ChangeDetectionStrategy,\n    ViewRef,\n    HostListener\n} from '@angular/core';\nimport { DataType, DataUtil } from '../../../data-operations/data-util';\nimport { IgxColumnComponent } from '../../columns/column.component';\nimport { IgxDropDownComponent, ISelectionEventArgs } from '../../../drop-down/public_api';\nimport { IFilteringOperation } from '../../../data-operations/filtering-condition';\nimport { FilteringLogic, IFilteringExpression } from '../../../data-operations/filtering-expression.interface';\nimport { HorizontalAlignment, VerticalAlignment, OverlaySettings } from '../../../services/overlay/utilities';\nimport { ConnectedPositioningStrategy } from '../../../services/overlay/position/connected-positioning-strategy';\nimport { IBaseChipEventArgs, IgxChipsAreaComponent, IgxChipComponent } from '../../../chips/public_api';\nimport { ExpressionUI } from '../grid-filtering.service';\nimport { IgxDropDownItemComponent } from '../../../drop-down/drop-down-item.component';\nimport { IgxFilteringService } from '../grid-filtering.service';\nimport { KEYS, isEdge, isIE } from '../../../core/utils';\nimport { AbsoluteScrollStrategy } from '../../../services/overlay/scroll';\n\n/**\n * @hidden\n */\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false,\n    selector: 'igx-grid-filtering-row',\n    templateUrl: './grid-filtering-row.component.html'\n})\nexport class IgxGridFilteringRowComponent implements AfterViewInit {\n\n    private _positionSettings = {\n        horizontalStartPoint: HorizontalAlignment.Left,\n        verticalStartPoint: VerticalAlignment.Bottom\n    };\n\n    private _conditionsOverlaySettings: OverlaySettings = {\n        excludePositionTarget: true,\n        closeOnOutsideClick: true,\n        modal: false,\n        scrollStrategy: new AbsoluteScrollStrategy(),\n        positionStrategy: new ConnectedPositioningStrategy(this._positionSettings)\n    };\n\n    private _operatorsOverlaySettings: OverlaySettings = {\n        excludePositionTarget: true,\n        closeOnOutsideClick: true,\n        modal: false,\n        scrollStrategy: new AbsoluteScrollStrategy(),\n        positionStrategy: new ConnectedPositioningStrategy(this._positionSettings)\n    };\n\n    private chipsAreaWidth: number;\n    private chipAreaScrollOffset = 0;\n    private _column = null;\n    private isKeyPressed = false;\n    private isComposing = false;\n    private _cancelChipClick = false;\n\n    public showArrows: boolean;\n    public expression: IFilteringExpression;\n    public expressionsList: Array<ExpressionUI>;\n\n    @Input()\n    get column(): IgxColumnComponent {\n        return this._column;\n    }\n\n    set column(val) {\n        if (this._column) {\n            this.expressionsList.forEach(exp => exp.isSelected = false);\n        }\n        if (val) {\n            this._column = val;\n\n            this.expressionsList = this.filteringService.getExpressions(this._column.field);\n            this.resetExpression();\n\n            this.chipAreaScrollOffset = 0;\n            this.transform(this.chipAreaScrollOffset);\n        }\n    }\n\n    @Input()\n    get value(): any {\n        return this.expression ? this.expression.searchVal : null;\n    }\n\n    set value(val) {\n        if (!val && val !== 0) {\n            this.expression.searchVal = null;\n            this.showHideArrowButtons();\n        } else {\n            this.expression.searchVal = DataUtil.parseValue(this.column.dataType, val);\n            if (this.expressionsList.find(item => item.expression === this.expression) === undefined) {\n                this.addExpression(true);\n            }\n        }\n        this.filter();\n    }\n\n    @ViewChild('defaultFilterUI', { read: TemplateRef, static: true })\n    protected defaultFilterUI: TemplateRef<any>;\n\n    @ViewChild('defaultDateUI', { read: TemplateRef, static: true })\n    protected defaultDateUI: TemplateRef<any>;\n\n    @ViewChild('input', { read: ElementRef })\n    protected input: ElementRef;\n\n    @ViewChild('inputGroupConditions', { read: IgxDropDownComponent, static: true })\n    protected dropDownConditions: IgxDropDownComponent;\n\n    @ViewChild('chipsArea', { read: IgxChipsAreaComponent, static: true })\n    protected chipsArea: IgxChipsAreaComponent;\n\n    @ViewChildren('operators', { read: IgxDropDownComponent })\n    protected dropDownOperators: QueryList<IgxDropDownComponent>;\n\n    @ViewChild('inputGroup', { read: ElementRef })\n    protected inputGroup: ElementRef;\n\n    @ViewChild('inputGroupPrefix', { read: ElementRef })\n    protected inputGroupPrefix: ElementRef;\n\n    @ViewChild('container', { static: true })\n    protected container: ElementRef;\n\n    @ViewChild('operand')\n    protected operand: ElementRef;\n\n    @ViewChild('closeButton', { static: true })\n    public closeButton: ElementRef;\n\n    @HostBinding('class.igx-grid__filtering-row')\n    public cssClass = 'igx-grid__filtering-row';\n\n    constructor(public filteringService: IgxFilteringService, public element: ElementRef, public cdr: ChangeDetectorRef) { }\n\n    ngAfterViewInit() {\n        this._conditionsOverlaySettings.outlet = this.column.grid.outletDirective;\n        this._operatorsOverlaySettings.outlet = this.column.grid.outletDirective;\n\n        const selectedItem = this.expressionsList.find(expr => expr.isSelected === true);\n        if (selectedItem) {\n            this.expression = selectedItem.expression;\n        }\n\n        this.input.nativeElement.focus();\n    }\n\n    @HostListener('keydown.esc', ['$event'])\n    public onEscHandler(evt) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        this.close();\n    }\n\n    get disabled(): boolean {\n        return !(this.column.filteringExpressionsTree && this.column.filteringExpressionsTree.filteringOperands.length > 0);\n    }\n\n    get template(): TemplateRef<any> {\n        if (this.column.dataType === DataType.Date) {\n            return this.defaultDateUI;\n        }\n        return this.defaultFilterUI;\n    }\n\n    get type() {\n        switch (this.column.dataType) {\n            case DataType.String:\n            case DataType.Boolean:\n                return 'text';\n            case DataType.Number:\n                return 'number';\n        }\n    }\n\n    get conditions(): any {\n        return this.column.filters.conditionList();\n    }\n\n    get isUnaryCondition(): boolean {\n        if (this.expression.condition) {\n            return this.expression.condition.isUnary;\n        } else {\n            return true;\n        }\n    }\n\n    get placeholder(): string {\n        if (this.expression.condition && this.expression.condition.isUnary) {\n            return this.filteringService.getChipLabel(this.expression);\n        } else if (this.column.dataType === DataType.Date) {\n            return this.filteringService.grid.resourceStrings.igx_grid_filter_row_date_placeholder;\n        } else if (this.column.dataType === DataType.Boolean) {\n            return this.filteringService.grid.resourceStrings.igx_grid_filter_row_boolean_placeholder;\n        } else {\n            return this.filteringService.grid.resourceStrings.igx_grid_filter_row_placeholder;\n        }\n    }\n\n    /**\n     * Event handler for keydown on the input group's prefix.\n     */\n    public onPrefixKeyDown(event: KeyboardEvent) {\n        if ((event.key === KEYS.ENTER || event.key === KEYS.SPACE || event.key === KEYS.SPACE_IE) && this.dropDownConditions.collapsed) {\n            this.toggleConditionsDropDown(this.inputGroupPrefix.nativeElement);\n            event.stopImmediatePropagation();\n        } else if (event.key === KEYS.TAB && !this.dropDownConditions.collapsed) {\n            this.toggleConditionsDropDown(this.inputGroupPrefix.nativeElement);\n        }\n    }\n\n    /**\n     * Event handler for keydown on the input.\n     */\n    public onInputKeyDown(event: KeyboardEvent) {\n        this.isKeyPressed = true;\n        event.stopPropagation();\n        if (this.column.dataType === DataType.Boolean) {\n            if (event.key === KEYS.ENTER || event.key === KEYS.SPACE || event.key === KEYS.SPACE_IE) {\n                this.inputGroupPrefix.nativeElement.focus();\n                this.toggleConditionsDropDown(this.inputGroupPrefix.nativeElement);\n                return;\n            }\n        }\n        if (event.key === KEYS.ENTER) {\n            if (this.isComposing) {\n                return;\n            }\n            this.commitInput();\n        } else if (event.altKey && (event.key === KEYS.DOWN_ARROW || event.key === KEYS.DOWN_ARROW_IE)) {\n            this.inputGroupPrefix.nativeElement.focus();\n            this.toggleConditionsDropDown(this.inputGroupPrefix.nativeElement);\n        } else if (event.key === KEYS.ESCAPE || event.key === KEYS.ESCAPE_IE) {\n            this.close();\n        }\n    }\n\n    /**\n     * Event handler for keyup on the input.\n     */\n    public onInputKeyUp(eventArgs) {\n        this.isKeyPressed = false;\n    }\n\n    /**\n     * Event handler for input on the input.\n     */\n    public onInput(eventArgs) {\n        // The 'iskeyPressed' flag is needed for a case in IE, because the input event is fired on focus and for some reason,\n        // when you have a japanese character as a placeholder, on init the value here is empty string .\n        const target = eventArgs.target;\n\n        if (isEdge() && target.type !== 'number' || this.isKeyPressed && isIE() || target.value || target.checkValidity()) {\n            this.value = target.value;\n        }\n    }\n\n    /**\n     * Event handler for compositionstart on the input.\n     */\n    public onCompositionStart() {\n        this.isComposing = true;\n    }\n\n    /**\n     * Event handler for compositionend on the input.\n     */\n    public onCompositionEnd() {\n        this.isComposing = false;\n    }\n\n    /**\n     * Event handler for input click event.\n     */\n    public onInputClick() {\n        if (this.column.dataType === DataType.Boolean && this.dropDownConditions.collapsed) {\n            this.inputGroupPrefix.nativeElement.focus();\n            this.toggleConditionsDropDown(this.inputGroupPrefix.nativeElement);\n        }\n    }\n\n    /**\n     * Event handler for datepicker's close.\n     */\n    public datePickerClose() {\n        this.input.nativeElement.focus();\n    }\n\n    /**\n     * Returns the filtering operation condition for a given value.\n     */\n    public getCondition(value: string): IFilteringOperation {\n        return this.column.filters.condition(value);\n    }\n\n    /**\n     * Returns the translated condition name for a given value.\n     */\n    public translateCondition(value: string): string {\n        return this.filteringService.grid.resourceStrings[`igx_grid_filter_${this.getCondition(value).name}`] || value;\n    }\n\n    /**\n     * Returns the icon name of the current condition.\n     */\n    public getIconName(): string {\n        if (this.column.dataType === DataType.Boolean && this.expression.condition === null) {\n            return this.getCondition(this.conditions[0]).iconName;\n        } else {\n            return this.expression.condition.iconName;\n        }\n    }\n\n    /**\n     * Returns whether a given condition is selected in dropdown.\n     */\n    public isConditionSelected(conditionName: string): boolean {\n        if (this.expression.condition) {\n            return this.expression.condition.name === conditionName;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Clears the current filtering.\n     */\n    public clearFiltering() {\n        this.filteringService.clearFilter(this.column.field);\n        this.resetExpression();\n        if (this.input) {\n            this.input.nativeElement.focus();\n        }\n        this.cdr.detectChanges();\n\n        this.chipAreaScrollOffset = 0;\n        this.transform(this.chipAreaScrollOffset);\n    }\n\n    /**\n     * Commits the value of the input.\n     */\n    public commitInput() {\n        const selectedItem = this.expressionsList.filter(ex => ex.isSelected === true);\n        selectedItem.forEach(e => e.isSelected = false);\n\n        let indexToDeselect = -1;\n        for (let index = 0; index < this.expressionsList.length; index++) {\n            const expression = this.expressionsList[index].expression;\n            if (expression.searchVal === null && !expression.condition.isUnary) {\n                indexToDeselect = index;\n            }\n        }\n        if (indexToDeselect !== -1) {\n            this.removeExpression(indexToDeselect, this.expression);\n        }\n        this.resetExpression();\n        this.scrollChipsWhenAddingExpression();\n    }\n\n    /**\n     * Clears the value of the input.\n     */\n    public clearInput() {\n        this.value = null;\n    }\n\n    /**\n     * Event handler for keydown on clear button.\n     */\n    public onClearKeyDown(eventArgs: KeyboardEvent) {\n        if (eventArgs.key === KEYS.ENTER || eventArgs.key === KEYS.SPACE || eventArgs.key === KEYS.SPACE_IE) {\n            eventArgs.preventDefault();\n            this.clearInput();\n            this.input.nativeElement.focus();\n        }\n    }\n\n    /**\n     * Event handler for click on clear button.\n     */\n    public onClearClick() {\n        this.clearInput();\n        this.input.nativeElement.focus();\n    }\n\n    /**\n     * Event handler for keydown on commit button.\n     */\n    public onCommitKeyDown(eventArgs: KeyboardEvent) {\n        if (eventArgs.key === KEYS.ENTER || eventArgs.key === KEYS.SPACE || eventArgs.key === KEYS.SPACE_IE) {\n            eventArgs.preventDefault();\n            this.commitInput();\n            this.input.nativeElement.focus();\n        }\n    }\n\n    /**\n     * Event handler for click on commit button.\n     */\n    public onCommitClick() {\n        this.commitInput();\n        this.input.nativeElement.focus();\n    }\n\n    /**\n     * Event handler for focusout on the input group.\n     */\n    public onInputGroupFocusout() {\n        if (!this.value && this.value !== 0 &&\n            this.expression.condition && !this.expression.condition.isUnary) {\n            return;\n        }\n        requestAnimationFrame(() => {\n            const focusedElement = document.activeElement;\n\n            if (focusedElement.className === 'igx-chip__remove' || focusedElement.tagName === 'IGX-DAY-ITEM') {\n                return;\n            }\n\n            if (!(focusedElement && this.inputGroup.nativeElement.contains(focusedElement))\n                && this.dropDownConditions.collapsed) {\n                this.commitInput();\n            }\n        });\n    }\n\n    /**\n     * Closes the filtering edit row.\n     */\n    public close() {\n        if (this.expressionsList.length === 1 &&\n            this.expressionsList[0].expression.searchVal === null &&\n            this.expressionsList[0].expression.condition.isUnary === false) {\n            this.filteringService.getExpressions(this.column.field).pop();\n\n            this.filter();\n        } else {\n            const condToRemove = this.expressionsList.filter(ex => ex.expression.searchVal === null && !ex.expression.condition.isUnary);\n            if (condToRemove && condToRemove.length > 0) {\n                condToRemove.forEach(c => this.filteringService.removeExpression(this.column.field, this.expressionsList.indexOf(c)));\n                this.filter();\n            }\n        }\n\n        this.filteringService.isFilterRowVisible = false;\n        this.filteringService.updateFilteringCell(this.column);\n        this.filteringService.filteredColumn = null;\n        this.filteringService.selectedExpression = null;\n        this.filteringService.grid.theadRow.nativeElement.focus();\n\n        this.chipAreaScrollOffset = 0;\n        this.transform(this.chipAreaScrollOffset);\n    }\n\n    /*\n    * noop\n    */\n    public noop() { }\n\n    /**\n     *  Event handler for date picker's selection.\n     */\n    public onDateSelected(value: Date) {\n        this.value = value;\n    }\n\n    /** @hidden @internal */\n    public inputGroupPrefixClick(event: MouseEvent) {\n        event.stopPropagation();\n        (event.currentTarget as HTMLElement).focus();\n        this.toggleConditionsDropDown(event.currentTarget);\n    }\n\n    /**\n     * Opens the conditions dropdown.\n     */\n    public toggleConditionsDropDown(target: any) {\n        this._conditionsOverlaySettings.positionStrategy.settings.target = target;\n        this.dropDownConditions.toggle(this._conditionsOverlaySettings);\n    }\n\n    /**\n     * Opens the logic operators dropdown.\n     */\n    public toggleOperatorsDropDown(eventArgs, index) {\n        this._operatorsOverlaySettings.positionStrategy.settings.target = eventArgs.target.parentElement;\n        this.dropDownOperators.toArray()[index].toggle(this._operatorsOverlaySettings);\n    }\n\n    /**\n     * Event handler for change event in conditions dropdown.\n     */\n    public onConditionsChanged(eventArgs) {\n        const value = (eventArgs.newSelection as IgxDropDownItemComponent).value;\n        this.expression.condition = this.getCondition(value);\n        if (this.expression.condition.isUnary) {\n            // update grid's filtering on the next cycle to ensure the drop-down is closed\n            // if the drop-down is not closed this event handler will be invoked multiple times\n            requestAnimationFrame(() => this.unaryConditionChangedCallback());\n        } else {\n            requestAnimationFrame(() => this.conditionChangedCallback());\n        }\n\n        if (this.input) {\n            // Add requestAnimationFrame becasue of an issue in IE, where you are still able to write in the input,\n            // if it has been focused and then set to readonly.\n            requestAnimationFrame(() => this.input.nativeElement.focus());\n        }\n    }\n\n\n    public onChipPointerdown(args, chip: IgxChipComponent) {\n        const activeElement = document.activeElement;\n        this._cancelChipClick = chip.selected && activeElement &&\n            this.inputGroup.nativeElement.contains(activeElement);\n    }\n\n    public onChipClick(args, item: ExpressionUI) {\n        if (this._cancelChipClick) {\n            this._cancelChipClick = false;\n            return;\n        }\n\n        this.expressionsList.forEach(ex => ex.isSelected = false);\n\n        this.toggleChip(item);\n    }\n\n    public toggleChip(item: ExpressionUI) {\n        item.isSelected = !item.isSelected;\n        if (item.isSelected) {\n            this.expression = item.expression;\n\n            if (this.input) {\n                this.input.nativeElement.focus();\n            }\n        }\n    }\n\n    /**\n     * Event handler for chip keydown event.\n     */\n    public onChipKeyDown(eventArgs: KeyboardEvent, item: ExpressionUI) {\n        if (eventArgs.key === KEYS.ENTER) {\n            eventArgs.preventDefault();\n\n            this.toggleChip(item);\n        }\n    }\n\n    /**\n     * Scrolls the first chip into view if the tab key is pressed on the left arrow.\n     */\n    public onLeftArrowKeyDown(event) {\n        if (event.key === KEYS.TAB) {\n            this.chipAreaScrollOffset = 0;\n            this.transform(this.chipAreaScrollOffset);\n        }\n    }\n\n    /**\n     * Event handler for chip removed event.\n     */\n    public onChipRemoved(eventArgs: IBaseChipEventArgs, item: ExpressionUI) {\n        const indexToRemove = this.expressionsList.indexOf(item);\n        this.removeExpression(indexToRemove, item.expression);\n\n        this.scrollChipsOnRemove();\n    }\n\n    /**\n     * Event handler for logic operator changed event.\n     */\n    public onLogicOperatorChanged(eventArgs: ISelectionEventArgs, expression: ExpressionUI) {\n        if (eventArgs.oldSelection) {\n            expression.afterOperator = (eventArgs.newSelection as IgxDropDownItemComponent).value;\n            this.expressionsList[this.expressionsList.indexOf(expression) + 1].beforeOperator = expression.afterOperator;\n\n            // update grid's filtering on the next cycle to ensure the drop-down is closed\n            // if the drop-down is not closed this event handler will be invoked multiple times\n            requestAnimationFrame(() => this.filter());\n        }\n    }\n\n    /**\n     * Scrolls the chips into the chip area when left or right arrows are pressed.\n     */\n    public scrollChipsOnArrowPress(arrowPosition: string) {\n        let count = 0;\n        const chipAraeChildren = this.chipsArea.element.nativeElement.children;\n        const containerRect = this.container.nativeElement.getBoundingClientRect();\n\n        if (arrowPosition === 'right') {\n            for (let index = 0; index < chipAraeChildren.length; index++) {\n                if (Math.ceil(chipAraeChildren[index].getBoundingClientRect().right) < Math.ceil(containerRect.right)) {\n                    count++;\n                }\n            }\n\n            if (count < chipAraeChildren.length) {\n                this.chipAreaScrollOffset -= Math.ceil(chipAraeChildren[count].getBoundingClientRect().right) -\n                    Math.ceil(containerRect.right) + 1;\n                this.transform(this.chipAreaScrollOffset);\n            }\n        }\n\n        if (arrowPosition === 'left') {\n            for (let index = 0; index < chipAraeChildren.length; index++) {\n                if (Math.ceil(chipAraeChildren[index].getBoundingClientRect().left) < Math.ceil(containerRect.left)) {\n                    count++;\n                }\n            }\n\n            if (count > 0) {\n                this.chipAreaScrollOffset += Math.ceil(containerRect.left) -\n                    Math.ceil(chipAraeChildren[count - 1].getBoundingClientRect().left) + 1;\n                this.transform(this.chipAreaScrollOffset);\n            }\n        }\n    }\n\n    private showHideArrowButtons() {\n        requestAnimationFrame(() => {\n            if (this.filteringService.isFilterRowVisible) {\n                const containerWidth = this.container.nativeElement.getBoundingClientRect().width;\n                this.chipsAreaWidth = this.chipsArea.element.nativeElement.getBoundingClientRect().width;\n\n                this.showArrows = this.chipsAreaWidth >= containerWidth && this.isColumnFiltered;\n\n                // TODO: revise the cdr.detectChanges() usage here\n                if (!(this.cdr as ViewRef).destroyed) {\n                this.cdr.detectChanges(); }\n            }\n        });\n    }\n\n    private addExpression(isSelected: boolean) {\n        const exprUI = new ExpressionUI();\n        exprUI.expression = this.expression;\n        exprUI.beforeOperator = this.expressionsList.length > 0 ? FilteringLogic.And : null;\n        exprUI.isSelected = isSelected;\n\n        this.expressionsList.push(exprUI);\n\n        const length = this.expressionsList.length;\n        if (this.expressionsList[length - 2]) {\n            this.expressionsList[length - 2].afterOperator = this.expressionsList[length - 1].beforeOperator;\n        }\n\n        this.showHideArrowButtons();\n    }\n\n    private removeExpression(indexToRemove: number, expression: IFilteringExpression) {\n        if (indexToRemove === 0 && this.expressionsList.length === 1) {\n            this.clearFiltering();\n            return;\n        }\n\n        this.filteringService.removeExpression(this.column.field, indexToRemove);\n\n        this.filter();\n\n        if (this.expression === expression) {\n            this.resetExpression();\n        }\n\n        this.showHideArrowButtons();\n    }\n\n    private resetExpression() {\n        this.expression = {\n            fieldName: this.column.field,\n            condition: null,\n            searchVal: null,\n            ignoreCase: this.column.filteringIgnoreCase\n        };\n\n        if (this.column.dataType !== DataType.Boolean) {\n            this.expression.condition = this.getCondition(this.conditions[0]);\n        }\n\n        if (this.column.dataType === DataType.Date && this.input) {\n            this.input.nativeElement.value = null;\n        }\n\n        this.showHideArrowButtons();\n    }\n\n    private scrollChipsWhenAddingExpression() {\n        const chipAraeChildren = this.chipsArea.element.nativeElement.children;\n        if (!chipAraeChildren || chipAraeChildren.length === 0) {\n            return;\n        }\n\n        const containerRectRight = Math.ceil(this.container.nativeElement.getBoundingClientRect().right);\n\n        const lastChipRectRight = Math.ceil(chipAraeChildren[chipAraeChildren.length - 1].getBoundingClientRect().right);\n        if (lastChipRectRight >= containerRectRight) {\n            this.chipAreaScrollOffset -= lastChipRectRight - containerRectRight;\n            this.transform(this.chipAreaScrollOffset);\n        }\n    }\n\n    /**\n     * @hidden\n     * Resets the chips area\n     * @memberof IgxGridFilteringRowComponent\n     */\n    public resetChipsArea() {\n        this.chipAreaScrollOffset = 0;\n        this.transform(this.chipAreaScrollOffset);\n        this.showHideArrowButtons();\n    }\n\n    private transform(offset: number) {\n        requestAnimationFrame(() => {\n            this.chipsArea.element.nativeElement.style.transform = `translate(${offset}px)`;\n        });\n    }\n\n    private scrollChipsOnRemove() {\n        let count = 0;\n        const chipAraeChildren = this.chipsArea.element.nativeElement.children;\n        const containerRect = this.container.nativeElement.getBoundingClientRect();\n\n        for (let index = 0; index < chipAraeChildren.length; index++) {\n            if (Math.ceil(chipAraeChildren[index].getBoundingClientRect().right) < Math.ceil(containerRect.left)) {\n                count++;\n            }\n        }\n\n        if (count <= 2) {\n            this.chipAreaScrollOffset = 0;\n        } else {\n            const dif = chipAraeChildren[count].id === 'chip' ? count - 2 : count - 1;\n            this.chipAreaScrollOffset += Math.ceil(containerRect.left) - Math.ceil(chipAraeChildren[dif].getBoundingClientRect().left) + 1;\n        }\n\n        this.transform(this.chipAreaScrollOffset);\n    }\n\n    private conditionChangedCallback() {\n        if (!!this.expression.searchVal || this.expression.searchVal === 0) {\n            this.filter();\n        } else if (this.value) {\n            this.value = null;\n        }\n    }\n\n    private unaryConditionChangedCallback() {\n        if (this.value) {\n            this.value = null;\n        }\n        if (this.expressionsList.find(item => item.expression === this.expression) === undefined) {\n            this.addExpression(true);\n        }\n        this.filter();\n    }\n\n    private filter() {\n        this.filteringService.filterInternal(this.column.field);\n    }\n\n    private get isColumnFiltered() {\n        return this.column.filteringExpressionsTree && this.column.filteringExpressionsTree.filteringOperands.length > 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { IgxColumnComponent } from '../columns/column.component';\n\n/**\n * @hidden\n * @internal\n */\nexport enum DropPosition {\n    BeforeDropTarget,\n    AfterDropTarget,\n    None\n}\n\n\n/**\n * @hidden\n * @internal\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class IgxColumnMovingService {\n    private _icon: any;\n    private _column: IgxColumnComponent;\n\n    public cancelDrop: boolean;\n    public isColumnMoving: boolean;\n\n    get column(): IgxColumnComponent {\n        return this._column;\n    }\n    set column(val: IgxColumnComponent) {\n        if (val) {\n            this._column = val;\n        }\n    }\n\n    get icon(): any {\n        return this._icon;\n    }\n    set icon(val: any) {\n        if (val) {\n            this._icon = val;\n        }\n    }\n}\n","import { Directive, OnDestroy, Input, ElementRef, ViewContainerRef, NgZone, Renderer2, ChangeDetectorRef } from '@angular/core';\nimport { IgxDragDirective } from '../../directives/drag-drop/drag-drop.directive';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { IgxColumnComponent } from '../columns/column.component';\nimport { KEYS } from '../../core/utils';\nimport { IgxColumnMovingService } from './moving.service';\n\n/**\n * @hidden\n * @internal\n */\n@Directive({\n    selector: '[igxColumnMovingDrag]',\n\n})\nexport class IgxColumnMovingDragDirective extends IgxDragDirective implements OnDestroy {\n\n    @Input('igxColumnMovingDrag')\n    set data(val) {\n        this._column = val;\n    }\n\n    get column() {\n        return this._column;\n    }\n\n    get draggable(): boolean {\n        return this.column && (this.column.movable || (this.column.groupable && !this.column.columnGroup));\n    }\n\n    public get icon(): HTMLElement {\n        return this.cms.icon;\n    }\n\n    private subscription$: Subscription;\n    private _column: IgxColumnComponent;\n    private _ghostClass = 'igx-grid__drag-ghost-image';\n    private ghostImgIconClass = 'igx-grid__drag-ghost-image-icon';\n    private ghostImgIconGroupClass = 'igx-grid__drag-ghost-image-icon-group';\n    private columnSelectedClass = 'igx-grid__th--selected';\n\n    constructor(\n        public element: ElementRef<HTMLElement>,\n        public viewContainer: ViewContainerRef,\n        public zone: NgZone,\n        public renderer: Renderer2,\n        public cdr: ChangeDetectorRef,\n        private cms: IgxColumnMovingService,\n    ) {\n        super(cdr, element, viewContainer, zone, renderer);\n    }\n\n    public ngOnDestroy() {\n        this._unsubscribe();\n    }\n\n    public onEscape(event) {\n        this.cms.cancelDrop = true;\n        this.onPointerUp(event);\n    }\n\n    public onPointerDown(event) {\n        if (!this.draggable || event.target.getAttribute('draggable') === 'false') {\n            return;\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        this._removeOnDestroy = false;\n        this.cms.column = this.column;\n        this.ghostClass = this._ghostClass;\n\n        super.onPointerDown(event);\n\n        this.cms.isColumnMoving = true;\n        this.column.grid.cdr.detectChanges();\n\n        const args = {\n            source: this.column\n        };\n        this.column.grid.onColumnMovingStart.emit(args);\n\n        this.subscription$ = fromEvent(this.column.grid.document.defaultView, 'keydown').subscribe((ev: KeyboardEvent) => {\n            if (ev.key === KEYS.ESCAPE || ev.key === KEYS.ESCAPE_IE) {\n                this.onEscape(ev);\n            }\n        });\n    }\n\n    public onPointerMove(event) {\n        event.preventDefault();\n        super.onPointerMove(event);\n\n        if (this._dragStarted && this.ghostElement && !this.column.grid.draggedColumn) {\n            this.column.grid.draggedColumn = this.column;\n            this.column.grid.cdr.detectChanges();\n        }\n\n        if (this.cms.isColumnMoving) {\n            const args = {\n                source: this.column,\n                cancel: false\n            };\n            this.column.grid.onColumnMoving.emit(args);\n\n            if (args.cancel) {\n                this.onEscape(event);\n            }\n        }\n    }\n\n    public onPointerUp(event) {\n        // Run it explicitly inside the zone because sometimes onPointerUp executes after the code below.\n        this.zone.run(() => {\n            super.onPointerUp(event);\n\n            this.cms.isColumnMoving = false;\n            this.column.grid.draggedColumn = null;\n            this.column.grid.cdr.detectChanges();\n        });\n\n        this._unsubscribe();\n    }\n\n    protected createGhost(pageX, pageY) {\n        super.createGhost(pageX, pageY);\n\n        this.ghostElement.style.height = null;\n        this.ghostElement.style.minWidth = null;\n        this.ghostElement.style.flexBasis = null;\n        this.ghostElement.style.position = null;\n\n        this.renderer.removeClass( this.ghostElement, this.columnSelectedClass);\n\n        const icon = document.createElement('i');\n        const text = document.createTextNode('block');\n        icon.appendChild(text);\n\n        icon.classList.add('material-icons');\n        this.cms.icon = icon;\n\n        if (!this.column.columnGroup) {\n            this.renderer.addClass(icon, this.ghostImgIconClass);\n\n            this.ghostElement.insertBefore(icon, this.ghostElement.firstElementChild);\n\n            this.ghostLeft = this._ghostStartX = pageX - ((this.ghostElement.getBoundingClientRect().width / 3) * 2);\n            this.ghostTop = this._ghostStartY = pageY - ((this.ghostElement.getBoundingClientRect().height / 3) * 2);\n        } else {\n            this.ghostElement.insertBefore(icon, this.ghostElement.childNodes[0]);\n\n            this.renderer.addClass(icon, this.ghostImgIconGroupClass);\n            this.ghostElement.children[0].style.paddingLeft = '0px';\n\n            this.ghostLeft = this._ghostStartX = pageX - ((this.ghostElement.getBoundingClientRect().width / 3) * 2);\n            this.ghostTop = this._ghostStartY = pageY - ((this.ghostElement.getBoundingClientRect().height / 3) * 2);\n        }\n    }\n\n    private _unsubscribe() {\n        if (this.subscription$) {\n            this.subscription$.unsubscribe();\n            this.subscription$ = null;\n        }\n    }\n}\n","import { Directive, ElementRef, Renderer2, NgZone, HostBinding, TemplateRef } from '@angular/core';\nimport { IgxDropDirective } from '../../directives/drag-drop/drag-drop.directive';\nimport { IgxColumnComponent } from '../columns/column.component';\nimport { IgxGridComponent } from './grid.component';\nimport { SortingDirection } from '../../data-operations/sorting-expression.interface';\nimport { IgxColumnMovingDragDirective } from '../moving/moving.drag.directive';\n\n/**\n * @hidden\n */\n@Directive({\n    selector: '[igxGroupByRow]'\n})\nexport class IgxGroupByRowTemplateDirective {\n\n    constructor(public template: TemplateRef<any>) { }\n\n}\n\n/**\n * @hidden\n */\n@Directive({\n    selector: '[igxGridDetail]'\n})\nexport class IgxGridDetailTemplateDirective {\n}\n\n/**\n * @hidden\n */\n@Directive({\n    selector: '[igxRowExpandedIndicator]'\n})\nexport class IgxRowExpandedIndicatorDirective {\n}\n\n/**\n * @hidden\n */\n@Directive({\n    selector: '[igxRowCollapsedIndicator]'\n})\nexport class IgxRowCollapsedIndicatorDirective {\n}\n\n\n/**\n * @hidden\n */\n@Directive({\n    selector: '[igxHeaderExpandedIndicator]'\n})\nexport class IgxHeaderExpandIndicatorDirective {\n}\n\n/**\n * @hidden\n */\n@Directive({\n    selector: '[igxHeaderCollapsedIndicator]'\n})\nexport class IgxHeaderCollapseIndicatorDirective {\n}\n\n/**\n * @hidden\n */\n@Directive({\n    selector: '[igxGroupAreaDrop]'\n})\nexport class IgxGroupAreaDropDirective extends IgxDropDirective {\n\n    constructor(private elementRef: ElementRef, private renderer: Renderer2, private zone: NgZone) {\n        super(elementRef, renderer, zone);\n    }\n\n    @HostBinding('class.igx-drop-area--hover')\n    public hovered = false;\n\n\n    public onDragEnter(event) {\n        const drag: IgxColumnMovingDragDirective = event.detail.owner;\n        const column: IgxColumnComponent = drag.column;\n        if (!this.columnBelongsToGrid(column)) {\n            return;\n        }\n        const grid = <IgxGridComponent>column.grid;\n        const isGrouped = grid.groupingExpressions.findIndex((item) => item.fieldName === column.field) !== -1;\n        if (column.groupable && !isGrouped && !column.columnGroup && !!column.field) {\n            drag.icon.innerText = 'group_work';\n            this.hovered = true;\n        } else {\n            drag.icon.innerText = 'block';\n            this.hovered = false;\n        }\n    }\n\n    public onDragLeave(event) {\n        const drag: IgxColumnMovingDragDirective = event.detail.owner;\n        const column: IgxColumnComponent = drag.column;\n        if (!this.columnBelongsToGrid(column)) {\n            return;\n        }\n        event.detail.owner.icon.innerText = 'block';\n        this.hovered = false;\n    }\n\n    public onDragDrop(event) {\n        const drag: IgxColumnMovingDragDirective = event.detail.owner;\n        if (drag instanceof IgxColumnMovingDragDirective) {\n            const column: IgxColumnComponent = drag.column;\n            if (!this.columnBelongsToGrid(column)) {\n                return;\n            }\n            const grid = <IgxGridComponent>column.grid;\n            const isGrouped = grid.groupingExpressions.findIndex((item) => item.fieldName === column.field) !== -1;\n            if (column.groupable && !isGrouped && !column.columnGroup && !!column.field) {\n                grid.groupBy({ fieldName: column.field, dir: SortingDirection.Asc, ignoreCase: column.sortingIgnoreCase,\n                    strategy: column.sortStrategy, groupingComparer: column.groupingComparer });\n            }\n        }\n    }\n\n    private closestParentByAttr(elem, attr) {\n        return elem.hasAttribute(attr) ?\n            elem :\n            this.closestParentByAttr(elem.parentElement, attr);\n    }\n\n    private columnBelongsToGrid(column) {\n        const elem = this.elementRef.nativeElement;\n        const closestGridID = this.closestParentByAttr(elem, 'igxGroupAreaDrop').getAttribute('gridId');\n        if (!column) {\n            return false;\n        } else {\n            const grid = <IgxGridComponent>column.grid;\n            if (!grid || grid.id !== closestGridID) {\n                return false;\n            }\n            return true;\n        }\n    }\n}\n","import { IgxDropDownItemComponent } from './../drop-down/drop-down-item.component';\nimport { Component, DoCheck, Input } from '@angular/core';\n\n@Component({\n    selector: 'igx-select-item',\n    template: '<ng-content></ng-content>'\n})\nexport class IgxSelectItemComponent extends IgxDropDownItemComponent implements DoCheck {\n\n    private _text: any;\n\n    /**\n     * An @Input property that gets/sets the item's text to be displayed in the select component's input when the item is selected.\n     *\n     * ```typescript\n     *  //get\n     *  let mySelectedItem = this.dropDown.selectedItem;\n     *  let selectedItemText = mySelectedItem.text;\n     * ```\n     *\n     * ```html\n     * // set\n     * <igx-select-item [text]=\"'London'\"></igx-select-item>\n     * ```\n     */\n    @Input()\n    public get text(): string {\n        return this._text;\n    }\n\n    public set text(text: string) {\n        this._text = text;\n    }\n\n    /** @hidden @internal */\n    public get itemText() {\n        if (this._text !== undefined) {\n            return this._text;\n        }\n        // If text @Input is undefined, try extract a meaningful item text out of the item template\n        return this.elementRef.nativeElement.textContent.trim();\n    }\n\n    /**\n     * Sets/Gets if the item is the currently selected one in the select\n     *\n     * ```typescript\n     *  let mySelectedItem = this.select.selectedItem;\n     *  let isMyItemSelected = mySelectedItem.selected; // true\n     * ```\n     */\n    public get selected() {\n        return !this.isHeader && !this.disabled && this.selection.is_item_selected(this.dropDown.id, this);\n    }\n\n    public set selected(value: any) {\n        if (value && !this.isHeader && !this.disabled) {\n            this.dropDown.selectItem(this);\n        }\n    }\n\n    /** @hidden @internal */\n    public isHeader: boolean;\n\n    ngDoCheck(): void {\n    }\n}\n","import { VerticalAlignment, HorizontalAlignment, PositionSettings, Size, Util, ConnectedFit  } from '../services/overlay/utilities';\nimport { IPositionStrategy } from '../services/overlay/position';\nimport { fadeOut, fadeIn } from '../animations/main';\nimport { IgxSelectBase } from './select.common';\nimport { isIE } from '../core/utils';\nimport { BaseFitPositionStrategy } from '../services/overlay/position/base-fit-position-strategy';\n\n/** @hidden @internal */\nexport class SelectPositioningStrategy extends BaseFitPositionStrategy implements IPositionStrategy {\n\n    private _selectDefaultSettings = {\n        horizontalDirection: HorizontalAlignment.Right,\n        verticalDirection: VerticalAlignment.Bottom,\n        horizontalStartPoint: HorizontalAlignment.Left,\n        verticalStartPoint: VerticalAlignment.Top,\n        openAnimation: fadeIn,\n        closeAnimation: fadeOut\n    };\n\n    /** @inheritdoc */\n    public settings: PositionSettings;\n\n    constructor(public select: IgxSelectBase, settings?: PositionSettings) {\n        super();\n        this.settings = Object.assign({}, this._selectDefaultSettings, settings);\n    }\n\n    // Global variables required for cases of !initialCall (page scroll/overlay repositionAll)\n    private global_yOffset = 0;\n    private global_xOffset = 0;\n    private global_styles: SelectStyles = {};\n\n    /** @inheritdoc */\n    position(contentElement: HTMLElement, size: Size, document?: Document, initialCall?: boolean): void {\n        this.select.scrollContainer.scrollTop = 0;\n        const rects = super.calculateElementRectangles(contentElement);\n        // selectFit obj, to be used for both cases of initialCall and !initialCall(page scroll/overlay repositionAll)\n        const selectFit: SelectFit = {\n            verticalOffset: this.global_yOffset,\n            horizontalOffset: this.global_xOffset,\n            targetRect: rects.targetRect,\n            contentElementRect: rects.elementRect,\n            styles: this.global_styles,\n            scrollContainer: this.select.scrollContainer,\n            scrollContainerRect: this.select.scrollContainer.getBoundingClientRect()\n        };\n\n        if (initialCall) {\n            // Fill in the required selectFit object properties.\n            selectFit.viewPortRect = Util.getViewportRect(document);\n            selectFit.itemElement = this.getInteractionItemElement();\n            selectFit.itemRect = selectFit.itemElement.getBoundingClientRect();\n\n            // Calculate input and selected item elements style related variables\n            selectFit.styles = this.calculateStyles(selectFit);\n\n            selectFit.scrollAmount = this.calculateScrollAmount(selectFit);\n            // Calculate how much to offset the overlay container.\n            this.calculateYoffset(selectFit);\n            this.calculateXoffset(selectFit);\n\n            super.updateViewPortFit(selectFit);\n            // container does not fit in viewPort and is out on Top or Bottom\n            if (selectFit.fitVertical.back < 0 || selectFit.fitVertical.forward < 0 ) {\n                this.fitInViewport(contentElement, selectFit);\n            }\n            this.select.scrollContainer.scrollTop = selectFit.scrollAmount;\n        }\n        this.setStyles(contentElement, selectFit);\n    }\n\n    /**\n     * Calculate selected item scroll position.\n     */\n    private calculateScrollAmount(selectFit: SelectFit): number {\n        const itemElementRect = selectFit.itemRect;\n        const scrollContainer = selectFit.scrollContainer;\n        const scrollContainerRect = selectFit.scrollContainerRect;\n        const scrollDelta = scrollContainerRect.top - itemElementRect.top;\n        let scrollPosition = scrollContainer.scrollTop - scrollDelta;\n\n        const dropDownHeight = scrollContainer.clientHeight;\n        scrollPosition -= dropDownHeight / 2;\n        scrollPosition += itemElementRect.height / 2;\n\n        return Math.round(Math.min(Math.max(0, scrollPosition), scrollContainer.scrollHeight - scrollContainerRect.height));\n    }\n\n    /**\n     * Position the items outer container so selected item text is positioned over input text and if header\n     * And/OR footer - both header/footer are visible\n     * @param selectFit selectFit to use for computation.\n     */\n    protected fitInViewport(contentElement: HTMLElement, selectFit: SelectFit) {\n        const footer = selectFit.scrollContainerRect.bottom - selectFit.contentElementRect.bottom;\n        const header = selectFit.scrollContainerRect.top - selectFit.contentElementRect.top;\n        const lastItemFitSize = selectFit.targetRect.bottom + selectFit.styles.itemTextToInputTextDiff - footer;\n        const firstItemFitSize = selectFit.targetRect.top - selectFit.styles.itemTextToInputTextDiff - header;\n        // out of viewPort on Top\n        if (selectFit.fitVertical.back < 0) {\n            const possibleScrollAmount = selectFit.scrollContainer.scrollHeight -\n                selectFit.scrollContainerRect.height - selectFit.scrollAmount;\n            if (possibleScrollAmount + selectFit.fitVertical.back > 0 && firstItemFitSize > selectFit.viewPortRect.top) {\n                selectFit.scrollAmount -= selectFit.fitVertical.back;\n                selectFit.verticalOffset -= selectFit.fitVertical.back;\n                this.global_yOffset = selectFit.verticalOffset;\n            } else {\n                selectFit.verticalOffset = 0 ;\n                this.global_yOffset = 0;\n            }\n        // out of viewPort on Bottom\n        } else if (selectFit.fitVertical.forward < 0) {\n            if (selectFit.scrollAmount + selectFit.fitVertical.forward > 0 && lastItemFitSize < selectFit.viewPortRect.bottom) {\n                selectFit.scrollAmount += selectFit.fitVertical.forward;\n                selectFit.verticalOffset += selectFit.fitVertical.forward;\n                this.global_yOffset = selectFit.verticalOffset;\n            } else {\n                selectFit.verticalOffset = -selectFit.contentElementRect.height + selectFit.targetRect.height;\n                this.global_yOffset = selectFit.verticalOffset;\n            }\n        }\n    }\n\n    /**\n     * Sets element's style which effectively positions the provided element\n     * @param element Element to position\n     * @param selectFit selectFit to use for computation.\n     * @param initialCall should be true if this is the initial call to the position method calling setStyles\n     */\n    protected setStyles(contentElement: HTMLElement, selectFit: SelectFit) {\n        super.setStyle(contentElement, selectFit.targetRect, selectFit.contentElementRect, selectFit);\n        contentElement.style.width = `${selectFit.styles.contentElementNewWidth}px`; // manage container based on paddings?\n        this.global_styles.contentElementNewWidth = selectFit.styles.contentElementNewWidth;\n    }\n\n    /**\n     * Calculate the necessary input and selected item styles to be used for positioning item text over input text.\n     * Calculate & Set default items container width.\n     * @param selectFit selectFit to use for computation.\n     */\n    private calculateStyles(selectFit: SelectFit): SelectStyles  {\n        const styles: SelectStyles = {};\n        const inputElementStyles = window.getComputedStyle(this.settings.target as Element);\n        const itemElementStyles = window.getComputedStyle(selectFit.itemElement);\n        const numericInputFontSize = parseFloat(inputElementStyles.fontSize);\n        const numericItemFontSize = parseFloat(itemElementStyles.fontSize);\n        const inputTextToInputTop = (selectFit.targetRect.bottom - selectFit.targetRect.top - numericInputFontSize) / 2;\n        const itemTextToItemTop = (selectFit.itemRect.height - numericItemFontSize) / 2;\n         // Adjust for input top padding\n        const negateInputPaddings = (\n                parseFloat(inputElementStyles.paddingTop) -\n                parseFloat(inputElementStyles.paddingBottom)\n            ) / 2;\n        styles.itemTextToInputTextDiff = Math.round(itemTextToItemTop - inputTextToInputTop + negateInputPaddings);\n\n        const numericLeftPadding = parseFloat(itemElementStyles.paddingLeft);\n        const numericTextIndent = parseFloat(itemElementStyles.textIndent);\n\n        styles.itemTextPadding = numericLeftPadding;\n        styles.itemTextIndent = numericTextIndent;\n        // 24 is the input's toggle ddl icon width\n        styles.contentElementNewWidth = selectFit.targetRect.width + 24 + numericLeftPadding * 2;\n\n        return styles;\n    }\n\n    /**\n     * Obtain the selected item if there is such one or otherwise use the first one\n     */\n    public getInteractionItemElement(): HTMLElement {\n        let itemElement;\n        if (this.select.selectedItem) {\n            itemElement = this.select.selectedItem.element.nativeElement;\n            // D.P. Feb 22 2019, #3921 Force item scroll before measuring in IE11, due to base scrollToItem delay\n            if (isIE()) {\n                this.select.scrollContainer.scrollTop = this.select.calculateScrollPosition(this.select.selectedItem);\n            }\n        } else {\n            itemElement = this.select.getFirstItemElement();\n        }\n        return itemElement;\n    }\n\n    /**\n     * Calculate how much to offset the overlay container for Y-axis.\n     */\n    private calculateYoffset(selectFit: SelectFit) {\n        selectFit.verticalOffset = -(selectFit.itemRect.top - selectFit.contentElementRect.top +\n            selectFit.styles.itemTextToInputTextDiff - selectFit.scrollAmount);\n        this.global_yOffset = selectFit.verticalOffset;\n    }\n\n    /**\n     * Calculate how much to offset the overlay container for X-axis.\n     */\n    private calculateXoffset(selectFit: SelectFit) {\n        selectFit.horizontalOffset = selectFit.styles.itemTextIndent - selectFit.styles.itemTextPadding;\n        this.global_xOffset = selectFit.horizontalOffset;\n    }\n}\n\n/** @hidden */\nexport interface SelectFit extends ConnectedFit {\n    itemElement?: HTMLElement;\n    scrollContainer: HTMLElement;\n    scrollContainerRect: ClientRect;\n    itemRect?: ClientRect;\n    styles?: SelectStyles;\n    scrollAmount?: number;\n}\n\n/** @hidden */\nexport interface SelectStyles {\n    itemTextPadding?: number;\n    itemTextIndent?: number;\n    itemTextToInputTextDiff?: number;\n    contentElementNewWidth?: number;\n    numericLeftPadding?: number;\n}\n","import { IgxInputDirective, IgxInputState } from './../directives/input/input.directive';\nimport {\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    ElementRef,\n    forwardRef,\n    HostBinding,\n    Inject,\n    Injector,\n    Input,\n    OnDestroy,\n    OnInit,\n    Optional,\n    QueryList,\n    TemplateRef,\n    ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NgControl, AbstractControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport { IgxDropDownItemBaseDirective } from '../drop-down/public_api';\nimport { IgxInputGroupComponent } from '../input-group/input-group.component';\n\nimport { IgxDropDownComponent } from './../drop-down/drop-down.component';\nimport { IgxSelectItemComponent } from './select-item.component';\nimport { SelectPositioningStrategy } from './select-positioning-strategy';\n\nimport { OverlaySettings, AbsoluteScrollStrategy } from '../services/public_api';\nimport { IGX_DROPDOWN_BASE, ISelectionEventArgs, Navigate } from '../drop-down/drop-down.common';\nimport { CancelableEventArgs } from '../core/utils';\nimport { IgxLabelDirective } from '../directives/label/label.directive';\nimport { IgxSelectBase } from './select.common';\nimport { EditorProvider } from '../core/edit-provider';\nimport { IgxSelectionAPIService } from '../core/selection';\nimport { DisplayDensityToken, IDisplayDensityOptions } from '../core/density';\n\n/** @hidden @internal */\n@Directive({\n    selector: '[igxSelectToggleIcon]'\n})\nexport class IgxSelectToggleIconDirective {\n}\n\n/** @hidden @internal */\n@Directive({\n    selector: '[igxSelectHeader]'\n})\nexport class IgxSelectHeaderDirective {\n}\n\n/** @hidden @internal */\n@Directive({\n    selector: '[igxSelectFooter]'\n})\nexport class IgxSelectFooterDirective {\n}\n\nconst noop = () => { };\n\n/**\n * **Ignite UI for Angular Select** -\n * [Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/select.html)\n *\n * The `igxSelect` provides an input with dropdown list allowing selection of a single item.\n *\n * Example:\n * ```html\n * <igx-select #select1 [placeholder]=\"'Pick One'\">\n *   <label igxLabel>Select Label</label>\n *   <igx-select-item *ngFor=\"let item of items\" [value]=\"item.field\">\n *     {{ item.field }}\n *   </igx-select-item>\n * </igx-select>\n * ```\n */\n@Component({\n    selector: 'igx-select',\n    templateUrl: './select.component.html',\n    providers: [\n        { provide: NG_VALUE_ACCESSOR, useExisting: IgxSelectComponent, multi: true },\n        { provide: IGX_DROPDOWN_BASE, useExisting: IgxSelectComponent }],\n    styles: [`\n        :host {\n            display: block;\n        }\n    `]\n})\nexport class IgxSelectComponent extends IgxDropDownComponent implements IgxSelectBase, ControlValueAccessor,\n    AfterContentInit, OnInit, AfterViewInit, OnDestroy, EditorProvider {\n\n    private ngControl: NgControl = null;\n    private _statusChanges$: Subscription;\n    private _overlayDefaults: OverlaySettings;\n    private _value: any;\n\n    /** @hidden @internal do not use the drop-down container class */\n    public cssClass = false;\n\n    /** @hidden @internal */\n    @ViewChild('inputGroup', { read: IgxInputGroupComponent, static: true }) public inputGroup: IgxInputGroupComponent;\n\n    /** @hidden @internal */\n    @ViewChild('input', { read: IgxInputDirective, static: true }) public input: IgxInputDirective;\n\n    /** @hidden @internal */\n    @ContentChildren(forwardRef(() => IgxSelectItemComponent), { descendants: true })\n    public children: QueryList<IgxSelectItemComponent>;\n\n    /** @hidden @internal */\n    @ContentChild(forwardRef(() => IgxLabelDirective), { static: true }) label: IgxLabelDirective;\n\n    /** @hidden @internal */\n    public allowItemsFocus = false;\n\n    /** @hidden @internal */\n    public height: string;\n\n    /**\n     * An @Input property that gets/sets the component value.\n     *\n     * ```typescript\n     * // get\n     * let selectValue = this.select.value;\n     * ```\n     *\n     * ```typescript\n     * // set\n     * this.select.value = 'London';\n     * ```\n     * ```html\n     * <igx-select [value]=\"value\"></igx-select>\n     * ```\n     */\n    @Input()\n    public get value(): any {\n        return this._value;\n    }\n    public set value(v: any) {\n        if (this._value === v) {\n            return;\n        }\n        this._value = v;\n        this.setSelection(this.items.find(x => x.value === this.value));\n    }\n    /**\n     * An @Input property that sets input placeholder.\n     *\n     */\n    @Input() public placeholder;\n\n\n    /**\n     * An @Input property that disables the `IgxSelectComponent`.\n     * ```html\n     * <igx-select [disabled]=\"'true'\"></igx-select>\n     * ```\n     */\n    @Input() public disabled = false;\n\n    /**\n     * An @Input property that sets custom OverlaySettings `IgxSelectComponent`.\n     * ```html\n     * <igx-select [overlaySettings] = \"customOverlaySettings\"></igx-select>\n     * ```\n     */\n    @Input()\n    overlaySettings: OverlaySettings;\n\n    /** @hidden @internal */\n    @HostBinding('style.maxHeight')\n    public maxHeight = '256px';\n\n    /** @hidden @internal */\n    public width: string;\n\n    /**\n     * An @Input property that sets how the select will be styled.\n     * The allowed values are `line`, `box` and `border`. The default is `line`.\n     * ```html\n     * <igx-select [type]=\"'box'\"></igx-select>\n     * ```\n     */\n    @Input()\n    public type = 'line';\n\n    /**\n     * The custom template, if any, that should be used when rendering the select TOGGLE(open/close) button\n     *\n     * ```typescript\n     * // Set in typescript\n     * const myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\n     * myComponent.select.toggleIconTemplate = myCustomTemplate;\n     * ```\n     * ```html\n     * <!-- Set in markup -->\n     *  <igx-select #select>\n     *      ...\n     *      <ng-template igxSelectToggleIcon let-collapsed>\n     *          <igx-icon>{{ collapsed ? 'remove_circle' : 'remove_circle_outline'}}</igx-icon>\n     *      </ng-template>\n     *  </igx-select>\n     * ```\n     */\n    @ContentChild(IgxSelectToggleIconDirective, { read: TemplateRef })\n    public toggleIconTemplate: TemplateRef<any> = null;\n\n    /**\n     * The custom template, if any, that should be used when rendering the HEADER for the select items list\n     *\n     * ```typescript\n     * // Set in typescript\n     * const myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\n     * myComponent.select.headerTemplate = myCustomTemplate;\n     * ```\n     * ```html\n     * <!-- Set in markup -->\n     *  <igx-select #select>\n     *      ...\n     *      <ng-template igxSelectHeader>\n     *          <div class=\"select__header\">\n     *              This is a custom header\n     *          </div>\n     *      </ng-template>\n     *  </igx-select>\n     * ```\n     */\n    @ContentChild(IgxSelectHeaderDirective, { read: TemplateRef, static: false })\n    public headerTemplate: TemplateRef<any> = null;\n\n    /**\n     * The custom template, if any, that should be used when rendering the FOOTER for the select items list\n     *\n     * ```typescript\n     * // Set in typescript\n     * const myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\n     * myComponent.select.footerTemplate = myCustomTemplate;\n     * ```\n     * ```html\n     * <!-- Set in markup -->\n     *  <igx-select #select>\n     *      ...\n     *      <ng-template igxSelectFooter>\n     *          <div class=\"select__footer\">\n     *              This is a custom footer\n     *          </div>\n     *      </ng-template>\n     *  </igx-select>\n     * ```\n     */\n    @ContentChild(IgxSelectFooterDirective, { read: TemplateRef, static: false })\n    public footerTemplate: TemplateRef<any> = null;\n\n    /** @hidden @internal */\n    public get selectionValue() {\n        const selectedItem = this.selectedItem;\n        return selectedItem ? selectedItem.itemText : '';\n    }\n\n    /** @hidden @internal */\n    public get selectedItem(): IgxSelectItemComponent {\n        return this.selection.first_item(this.id);\n    }\n\n    constructor(\n        protected elementRef: ElementRef,\n        protected cdr: ChangeDetectorRef,\n        protected selection: IgxSelectionAPIService,\n\n        @Optional() @Inject(DisplayDensityToken) protected _displayDensityOptions: IDisplayDensityOptions,\n        private _injector: Injector) {\n        super(elementRef, cdr, selection, _displayDensityOptions);\n    }\n\n    //#region ControlValueAccessor\n\n    /** @hidden @internal */\n    private _onChangeCallback: (_: any) => void = noop;\n    /** @hidden @internal */\n    private _onTouchedCallback: () => void = noop;\n\n    /** @hidden @internal */\n    public writeValue = (value: any) => {\n        this.value = value;\n    }\n\n    /** @hidden @internal */\n    public registerOnChange(fn: any): void {\n        this._onChangeCallback = fn;\n    }\n\n    /** @hidden @internal */\n    public registerOnTouched(fn: any): void {\n        this._onTouchedCallback = fn;\n    }\n\n    /** @hidden @internal */\n    public setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n    //#endregion\n\n    /** @hidden @internal */\n    public getEditElement(): HTMLElement {\n        return this.input.nativeElement;\n    }\n\n    /** @hidden @internal */\n    public selectItem(newSelection: IgxDropDownItemBaseDirective, event?) {\n        const oldSelection = this.selectedItem;\n\n        if (event) {\n            this.toggleDirective.close();\n        }\n        if (newSelection === null || newSelection === oldSelection || newSelection.disabled || newSelection.isHeader) {\n            return;\n        }\n\n        const args: ISelectionEventArgs = { oldSelection, newSelection, cancel: false };\n        this.onSelection.emit(args);\n\n        if (args.cancel) {\n            return;\n        }\n\n        this.setSelection(newSelection);\n        this._value = newSelection.value;\n        this.cdr.detectChanges();\n        this._onChangeCallback(this.value);\n    }\n\n    /** @hidden @internal */\n    public getFirstItemElement(): HTMLElement {\n        return this.children.first.element.nativeElement;\n    }\n\n    /**\n     * Opens the select\n     *\n     * ```typescript\n     * this.select.open();\n     * ```\n     */\n    public open(overlaySettings?: OverlaySettings) {\n        if (this.disabled || this.items.length === 0) {\n            return;\n        }\n        if (!this.selectedItem) {\n            this.navigateFirst();\n        }\n\n        super.open(Object.assign({}, this._overlayDefaults, this.overlaySettings, overlaySettings));\n    }\n\n    /** @hidden @internal */\n    ngAfterContentInit() {\n        this._overlayDefaults = {\n            modal: false,\n            closeOnOutsideClick: false,\n            positionStrategy: new SelectPositioningStrategy(this, { target: this.getEditElement() }),\n            scrollStrategy: new AbsoluteScrollStrategy(),\n            excludePositionTarget: true\n        };\n        this.children.changes.subscribe(() => {\n            this.setSelection(this.items.find(x => x.value === this.value));\n            this.cdr.detectChanges();\n        });\n        Promise.resolve().then(() => this.children.notifyOnChanges());\n    }\n\n    /** @hidden @internal */\n    public onToggleOpening(event: CancelableEventArgs) {\n        this.onOpening.emit(event);\n        if (event.cancel) {\n            return;\n        }\n        this.scrollToItem(this.selectedItem);\n    }\n\n    protected navigate(direction: Navigate, currentIndex?: number) {\n        if (this.collapsed && this.selectedItem) {\n            this.navigateItem(this.selectedItem.itemIndex);\n        }\n        super.navigate(direction, currentIndex);\n    }\n\n    protected manageRequiredAsterisk(): void {\n        if (this.ngControl && this.ngControl.control.validator) {\n            // Run the validation with empty object to check if required is enabled.\n            const error = this.ngControl.control.validator({} as AbstractControl);\n            this.inputGroup.isRequired = error && error.required;\n            this.cdr.markForCheck();\n        }\n    }\n    private setSelection(item: IgxDropDownItemBaseDirective) {\n        if (item && item.value !== undefined && item.value !== null) {\n            this.selection.set(this.id, new Set([item]));\n        } else {\n            this.selection.clear(this.id);\n        }\n    }\n\n    /** @hidden @internal */\n    public onBlur(): void {\n        this._onTouchedCallback();\n        if (this.ngControl && !this.ngControl.valid) {\n             this.input.valid = IgxInputState.INVALID;\n        } else {\n            this.input.valid = IgxInputState.INITIAL;\n        }\n        if (!this.collapsed) {\n            this.toggleDirective.close();\n        }\n    }\n\n    /** @hidden @internal */\n    public onFocus(): void {\n        this._onTouchedCallback();\n    }\n\n    protected onStatusChanged() {\n        if ((this.ngControl.control.touched || this.ngControl.control.dirty) &&\n            (this.ngControl.control.validator || this.ngControl.control.asyncValidator)) {\n            if (this.inputGroup.isFocused) {\n                this.input.valid = this.ngControl.valid ? IgxInputState.VALID : IgxInputState.INVALID;\n            } else {\n                this.input.valid = this.ngControl.valid ? IgxInputState.INITIAL : IgxInputState.INVALID;\n            }\n        }\n        this.manageRequiredAsterisk();\n    }\n    /**\n     * @hidden @internal\n     */\n    public ngOnInit() {\n        this.ngControl = this._injector.get<NgControl>(NgControl, null);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public ngAfterViewInit() {\n        if (this.ngControl) {\n            this._statusChanges$ = this.ngControl.statusChanges.subscribe(this.onStatusChanged.bind(this));\n            this.manageRequiredAsterisk();\n        }\n        this.cdr.detectChanges();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public ngOnDestroy() {\n        this.selection.clear(this.id);\n        if (this._statusChanges$) {\n            this._statusChanges$.unsubscribe();\n        }\n    }\n\n    /**\n     * @hidden @internal\n     * Prevent input blur - closing the items container on Header/Footer Template click.\n     */\n   public mousedownHandler(event) {\n        event.preventDefault();\n    }\n}\n\n","import {\n    Component, Input, ViewChild, ChangeDetectorRef, ViewChildren, QueryList, ElementRef, AfterViewInit, OnDestroy, HostBinding\n} from '@angular/core';\nimport { VerticalAlignment, HorizontalAlignment, Point, OverlaySettings } from '../../../services/overlay/utilities';\nimport { ConnectedPositioningStrategy } from '../../../services/overlay/position/connected-positioning-strategy';\nimport { IgxOverlayService } from '../../../services/overlay/overlay';\nimport { FilteringExpressionsTree, IFilteringExpressionsTree } from '../../../data-operations/filtering-expressions-tree';\nimport { FilteringLogic, IFilteringExpression } from '../../../data-operations/filtering-expression.interface';\nimport { IgxChipComponent } from '../../../chips/chip.component';\nimport { IgxSelectComponent } from '../../../select/select.component';\nimport { IDragStartEventArgs, IDragBaseEventArgs } from '../../../directives/drag-drop/drag-drop.directive';\nimport { CloseScrollStrategy } from '../../../services/overlay/scroll/close-scroll-strategy';\nimport { IgxToggleDirective, IgxOverlayOutletDirective } from '../../../directives/toggle/toggle.directive';\nimport { IButtonGroupEventArgs } from '../../../buttonGroup/buttonGroup.component';\nimport { takeUntil, first } from 'rxjs/operators';\nimport { Subject, Subscription } from 'rxjs';\nimport { KEYS } from '../../../core/utils';\nimport { AbsoluteScrollStrategy, AutoPositionStrategy } from '../../../services/public_api';\nimport { IgxColumnComponent } from '../../columns/column.component';\nimport { GridType } from '../../common/grid.interface';\nimport { DataUtil } from './../../../data-operations/data-util';\n\n/**\n * @hidden\n */\nclass ExpressionItem {\n    constructor(parent?: ExpressionGroupItem) {\n        this.parent = parent;\n    }\n    parent: ExpressionGroupItem;\n    selected: boolean;\n}\n\n/**\n * @hidden\n */\nclass ExpressionGroupItem extends ExpressionItem {\n    constructor(operator: FilteringLogic, parent?: ExpressionGroupItem) {\n        super(parent);\n        this.operator = operator;\n        this.children = [];\n    }\n    operator: FilteringLogic;\n    children: ExpressionItem[];\n}\n\n/**\n * @hidden\n */\nclass ExpressionOperandItem extends ExpressionItem {\n    constructor(expression: IFilteringExpression, parent: ExpressionGroupItem) {\n        super(parent);\n        this.expression = expression;\n    }\n    expression: IFilteringExpression;\n    inEditMode: boolean;\n    inAddMode: boolean;\n    hovered: boolean;\n    columnHeader: string;\n}\n\n/**\n * A component used for presenting advanced filtering UI for a Grid.\n * It is used internally in the Grid, but could also be hosted in a container outside of it.\n *\n * Example:\n * ```html\n * <igx-advanced-filtering-dialog\n *     [grid]=\"grid1\">\n * </igx-advanced-filtering-dialog>\n * ```\n */\n@Component({\n    selector: 'igx-advanced-filtering-dialog',\n    templateUrl: './advanced-filtering-dialog.component.html'\n})\nexport class IgxAdvancedFilteringDialogComponent implements AfterViewInit, OnDestroy {\n    /**\n     * @hidden @internal\n     */\n    public inline = true;\n    /**\n     * @hidden @internal\n     */\n    public rootGroup: ExpressionGroupItem;\n\n    /**\n     * @hidden @internal\n     */\n    public selectedExpressions: ExpressionOperandItem[] = [];\n\n    /**\n     * @hidden @internal\n     */\n    public selectedGroups: ExpressionGroupItem[] = [];\n\n    /**\n     * @hidden @internal\n     */\n    public currentGroup: ExpressionGroupItem;\n\n    /**\n     * @hidden @internal\n     */\n    public editedExpression: ExpressionOperandItem;\n\n    /**\n     * @hidden @internal\n     */\n    public addModeExpression: ExpressionOperandItem;\n\n    /**\n     * @hidden @internal\n     */\n    public contextualGroup: ExpressionGroupItem;\n\n    /**\n     * @hidden @internal\n     */\n    public filteringLogics;\n\n    /**\n     * @hidden @internal\n     */\n    public selectedCondition: string;\n\n    /**\n     * @hidden @internal\n     */\n    public searchValue: any;\n\n    private _positionSettings = {\n        horizontalStartPoint: HorizontalAlignment.Right,\n        verticalStartPoint: VerticalAlignment.Top\n    };\n    private _overlaySettings: OverlaySettings = {\n        closeOnOutsideClick: false,\n        modal: false,\n        positionStrategy: new ConnectedPositioningStrategy(this._positionSettings),\n        scrollStrategy: new CloseScrollStrategy()\n    };\n\n    /**\n     * @hidden @internal\n     */\n    public columnSelectOverlaySettings: OverlaySettings = {\n        scrollStrategy: new AbsoluteScrollStrategy(),\n        modal: false,\n        closeOnOutsideClick: false,\n        excludePositionTarget: true\n    };\n\n    /**\n     * @hidden @internal\n     */\n    public conditionSelectOverlaySettings: OverlaySettings = {\n        scrollStrategy: new AbsoluteScrollStrategy(),\n        modal: false,\n        closeOnOutsideClick: false,\n        excludePositionTarget: true\n    };\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('columnSelect', { read: IgxSelectComponent })\n    public columnSelect: IgxSelectComponent;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('conditionSelect', { read: IgxSelectComponent })\n    public conditionSelect: IgxSelectComponent;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('searchValueInput', { read: ElementRef })\n    public searchValueInput: ElementRef;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('addRootAndGroupButton', { read: ElementRef })\n    public addRootAndGroupButton: ElementRef;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('addConditionButton', { read: ElementRef })\n    public addConditionButton: ElementRef;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('editingInputsContainer', { read: ElementRef })\n    public set editingInputsContainer(value: ElementRef) {\n        if ((value && !this._editingInputsContainer) ||\n            (value && this._editingInputsContainer && this._editingInputsContainer.nativeElement !== value.nativeElement)) {\n            requestAnimationFrame(() => {\n                this.scrollElementIntoView(value.nativeElement);\n            });\n        }\n\n        this._editingInputsContainer = value;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public get editingInputsContainer(): ElementRef {\n        return this._editingInputsContainer;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('addModeContainer', { read: ElementRef })\n    public set addModeContainer(value: ElementRef) {\n        if ((value && !this._addModeContainer) ||\n            (value && this._addModeContainer && this._addModeContainer.nativeElement !== value.nativeElement)) {\n            requestAnimationFrame(() => {\n                this.scrollElementIntoView(value.nativeElement);\n            });\n        }\n\n        this._addModeContainer = value;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public get addModeContainer(): ElementRef {\n        return this._addModeContainer;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('currentGroupButtonsContainer', { read: ElementRef })\n    public set currentGroupButtonsContainer(value: ElementRef) {\n        if ((value && !this._currentGroupButtonsContainer) ||\n            (value && this._currentGroupButtonsContainer && this._currentGroupButtonsContainer.nativeElement !== value.nativeElement)) {\n            requestAnimationFrame(() => {\n                this.scrollElementIntoView(value.nativeElement);\n            });\n        }\n\n        this._currentGroupButtonsContainer = value;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public get currentGroupButtonsContainer(): ElementRef {\n        return this._currentGroupButtonsContainer;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild(IgxToggleDirective)\n    public contextMenuToggle: IgxToggleDirective;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChildren(IgxChipComponent)\n    public chips: QueryList<IgxChipComponent>;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('expressionsContainer')\n    protected expressionsContainer: ElementRef;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('overlayOutlet', { read: IgxOverlayOutletDirective, static: true })\n    public overlayOutlet: IgxOverlayOutletDirective;\n\n    /**\n     * @hidden @internal\n     */\n    @HostBinding('style.display')\n    display = 'block';\n\n    private destroy$ = new Subject<any>();\n    private _overlayComponentId: string;\n    private _overlayService: IgxOverlayService;\n    private _selectedColumn: IgxColumnComponent;\n    private _clickTimer;\n    private _dblClickDelay = 200;\n    private _preventChipClick = false;\n    private _editingInputsContainer: ElementRef;\n    private _addModeContainer: ElementRef;\n    private _currentGroupButtonsContainer: ElementRef;\n    private _grid: GridType;\n    private _filteringChange: Subscription;\n\n    constructor(public cdr: ChangeDetectorRef) { }\n\n    /**\n     * @hidden @internal\n     */\n    public ngAfterViewInit(): void {\n        this._overlaySettings.outlet = this.overlayOutlet;\n        this.columnSelectOverlaySettings.outlet = this.overlayOutlet;\n        this.conditionSelectOverlaySettings.outlet = this.overlayOutlet;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public ngOnDestroy(): void {\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public get displayDensity() {\n        return this.grid.displayDensity;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public get selectedColumn(): IgxColumnComponent {\n        return this._selectedColumn;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public set selectedColumn(value: IgxColumnComponent) {\n        const oldValue = this._selectedColumn;\n\n        if (this._selectedColumn !== value) {\n            this._selectedColumn = value;\n            if (oldValue && this._selectedColumn && this._selectedColumn.dataType !== oldValue.dataType) {\n                this.selectedCondition = null;\n                this.searchValue = null;\n                this.cdr.detectChanges();\n            }\n        }\n    }\n\n    /**\n     * An @Input property that sets the grid.\n     */\n    @Input()\n    set grid(grid: GridType) {\n        this._grid = grid;\n\n        if (this._filteringChange) {\n            this._filteringChange.unsubscribe();\n        }\n\n        if (this._grid) {\n            this._grid.filteringService.registerSVGIcons();\n\n            this._filteringChange = this._grid.advancedFilteringExpressionsTreeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n                this.init();\n            });\n\n            this.init();\n        }\n    }\n\n    /**\n     * Returns the grid.\n     */\n    get grid(): GridType {\n        return this._grid;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    get filterableColumns(): IgxColumnComponent[] {\n        return this.grid.columns.filter((col) => !col.columnGroup && col.filterable);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public dragStart(dragArgs: IDragStartEventArgs) {\n        if (!this._overlayComponentId) {\n            dragArgs.cancel = true;\n            return;\n        }\n\n        if (!this.contextMenuToggle.collapsed) {\n            this.contextMenuToggle.element.style.display = 'none';\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public dragEnd(dragArgs: IDragBaseEventArgs) {\n        if (!this.contextMenuToggle.collapsed) {\n            this.calculateContextMenuTarget();\n            this.contextMenuToggle.reposition();\n            this.contextMenuToggle.element.style.display = '';\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onDragMove(e) {\n        const deltaX = e.nextPageX - e.pageX;\n        const deltaY = e.nextPageY - e.pageY;\n        e.cancel = true;\n        this._overlayService.setOffset(this._overlayComponentId, deltaX, deltaY);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public addCondition(parent: ExpressionGroupItem, afterExpression?: ExpressionItem) {\n        this.cancelOperandAdd();\n\n        const operandItem = new ExpressionOperandItem({\n            fieldName: null,\n            condition: null,\n            ignoreCase: true,\n            searchVal: null\n        }, parent);\n\n        if (afterExpression) {\n            const index = parent.children.indexOf(afterExpression);\n            parent.children.splice(index + 1, 0, operandItem);\n        } else {\n            parent.children.push(operandItem);\n        }\n\n        this.enterExpressionEdit(operandItem);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public addAndGroup(parent?: ExpressionGroupItem, afterExpression?: ExpressionItem) {\n        this.addGroup(FilteringLogic.And, parent, afterExpression);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public addOrGroup(parent?: ExpressionGroupItem, afterExpression?: ExpressionItem) {\n        this.addGroup(FilteringLogic.Or, parent, afterExpression);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public endGroup(groupItem: ExpressionGroupItem) {\n        this.currentGroup = groupItem.parent;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public commitOperandEdit() {\n        if (this.editedExpression) {\n            this.editedExpression.expression.fieldName = this.selectedColumn.field;\n            this.editedExpression.expression.condition = this.selectedColumn.filters.condition(this.selectedCondition);\n            this.editedExpression.expression.searchVal = DataUtil.parseValue(this.selectedColumn.dataType, this.searchValue);\n            this.editedExpression.columnHeader = this.selectedColumn.header;\n\n            this.editedExpression.inEditMode = false;\n            this.editedExpression = null;\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public cancelOperandAdd() {\n        if (this.addModeExpression) {\n            this.addModeExpression.inAddMode = false;\n            this.addModeExpression = null;\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public cancelOperandEdit() {\n        if (this.editedExpression) {\n            this.editedExpression.inEditMode = false;\n\n            if (!this.editedExpression.expression.fieldName) {\n                this.deleteItem(this.editedExpression);\n            }\n\n            this.editedExpression = null;\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public operandCanBeCommitted(): boolean {\n        return this.selectedColumn && this.selectedCondition &&\n            (!!this.searchValue || this.selectedColumn.filters.condition(this.selectedCondition).isUnary);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public exitOperandEdit() {\n        if (!this.editedExpression) {\n            return;\n        }\n\n        if (this.operandCanBeCommitted()) {\n            this.commitOperandEdit();\n        } else {\n            this.cancelOperandEdit();\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public isExpressionGroup(expression: ExpressionItem): boolean {\n        return expression instanceof ExpressionGroupItem;\n    }\n\n    private addGroup(operator: FilteringLogic, parent?: ExpressionGroupItem, afterExpression?: ExpressionItem) {\n        this.cancelOperandAdd();\n\n        const groupItem = new ExpressionGroupItem(operator, parent);\n\n        if (parent) {\n            if (afterExpression) {\n                const index = parent.children.indexOf(afterExpression);\n                parent.children.splice(index + 1, 0, groupItem);\n            } else {\n                parent.children.push(groupItem);\n            }\n        } else {\n            this.rootGroup = groupItem;\n        }\n\n        this.addCondition(groupItem);\n        this.currentGroup = groupItem;\n    }\n\n    private createExpressionGroupItem(expressionTree: IFilteringExpressionsTree, parent?: ExpressionGroupItem): ExpressionGroupItem {\n        let groupItem: ExpressionGroupItem;\n        if (expressionTree) {\n            groupItem = new ExpressionGroupItem(expressionTree.operator, parent);\n\n            for (const expr of expressionTree.filteringOperands) {\n                if (expr instanceof FilteringExpressionsTree) {\n                    groupItem.children.push(this.createExpressionGroupItem(expr, groupItem));\n                } else {\n                    const filteringExpr = expr as IFilteringExpression;\n                    const exprCopy: IFilteringExpression = {\n                        fieldName: filteringExpr.fieldName,\n                        condition: filteringExpr.condition,\n                        searchVal: filteringExpr.searchVal,\n                        ignoreCase: filteringExpr.ignoreCase\n                    };\n                    const operandItem = new ExpressionOperandItem(exprCopy, groupItem);\n                    const column = this.grid.getColumnByName(filteringExpr.fieldName);\n                    operandItem.columnHeader = column.header;\n                    groupItem.children.push(operandItem);\n                }\n            }\n        }\n\n        return groupItem;\n    }\n\n    private createExpressionsTreeFromGroupItem(groupItem: ExpressionGroupItem): FilteringExpressionsTree {\n        if (!groupItem) {\n            return null;\n        }\n\n        const expressionsTree = new FilteringExpressionsTree(groupItem.operator);\n\n        for (const item of groupItem.children) {\n            if (item instanceof ExpressionGroupItem) {\n                const subTree = this.createExpressionsTreeFromGroupItem((item as ExpressionGroupItem));\n                expressionsTree.filteringOperands.push(subTree);\n            } else {\n                expressionsTree.filteringOperands.push((item as ExpressionOperandItem).expression);\n            }\n        }\n\n        return expressionsTree;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onChipRemove(expressionItem: ExpressionItem) {\n        this.deleteItem(expressionItem);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onChipClick(expressionItem: ExpressionOperandItem) {\n        this._clickTimer = setTimeout(() => {\n            if (!this._preventChipClick) {\n                this.onToggleExpression(expressionItem);\n            }\n            this._preventChipClick = false;\n        }, this._dblClickDelay);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onChipDblClick(expressionItem: ExpressionOperandItem) {\n        clearTimeout(this._clickTimer);\n        this._preventChipClick = true;\n        this.enterExpressionEdit(expressionItem);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public enterExpressionEdit(expressionItem: ExpressionOperandItem) {\n        this.clearSelection();\n        this.exitOperandEdit();\n        this.cancelOperandAdd();\n\n        if (this.editedExpression) {\n            this.editedExpression.inEditMode = false;\n        }\n\n        expressionItem.hovered = false;\n\n        this.selectedColumn = expressionItem.expression.fieldName ?\n            this.grid.getColumnByName(expressionItem.expression.fieldName) : null;\n        this.selectedCondition = expressionItem.expression.condition ?\n            expressionItem.expression.condition.name : null;\n        this.searchValue = expressionItem.expression.searchVal;\n\n        expressionItem.inEditMode = true;\n        this.editedExpression = expressionItem;\n\n        this.cdr.detectChanges();\n\n        this.columnSelectOverlaySettings.positionStrategy = new AutoPositionStrategy({ target: this.columnSelect.element });\n        this.conditionSelectOverlaySettings.positionStrategy = new AutoPositionStrategy({ target: this.conditionSelect.element });\n\n        if (!this.selectedColumn) {\n            this.columnSelect.input.nativeElement.focus();\n        } else if (this.selectedColumn.filters.condition(this.selectedCondition).isUnary) {\n            this.conditionSelect.input.nativeElement.focus();\n        } else {\n            this.searchValueInput.nativeElement.focus();\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public clearSelection() {\n        for (const group of this.selectedGroups) {\n            group.selected = false;\n        }\n        this.selectedGroups = [];\n\n        for (const expr of this.selectedExpressions) {\n            expr.selected = false;\n        }\n        this.selectedExpressions = [];\n\n        this.toggleContextMenu();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public enterExpressionAdd(expressionItem: ExpressionOperandItem) {\n        this.clearSelection();\n        this.exitOperandEdit();\n\n        if (this.addModeExpression) {\n            this.addModeExpression.inAddMode = false;\n        }\n\n        expressionItem.inAddMode = true;\n        this.addModeExpression = expressionItem;\n        if (expressionItem.selected) {\n            this.toggleExpression(expressionItem);\n        }\n    }\n\n    private onToggleExpression(expressionItem: ExpressionOperandItem) {\n        this.exitOperandEdit();\n        this.toggleExpression(expressionItem);\n\n        this.toggleContextMenu();\n    }\n\n    private toggleExpression(expressionItem: ExpressionOperandItem) {\n        expressionItem.selected = !expressionItem.selected;\n\n        if (expressionItem.selected) {\n            this.selectedExpressions.push(expressionItem);\n        } else {\n            const index = this.selectedExpressions.indexOf(expressionItem);\n            this.selectedExpressions.splice(index, 1);\n            this.deselectParentRecursive(expressionItem);\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public contextMenuClosed() {\n        this.contextualGroup = null;\n    }\n\n    private toggleContextMenu() {\n        const contextualGroup = this.findSingleSelectedGroup();\n\n        if (contextualGroup || this.selectedExpressions.length > 1) {\n            this.contextualGroup = contextualGroup;\n\n            if (contextualGroup) {\n                this.filteringLogics = [\n                    {\n                        label: this.grid.resourceStrings.igx_grid_filter_operator_and,\n                        selected: contextualGroup.operator === FilteringLogic.And\n                    },\n                    {\n                        label: this.grid.resourceStrings.igx_grid_filter_operator_or,\n                        selected: contextualGroup.operator === FilteringLogic.Or\n                    }\n                ];\n            }\n        } else if (this.contextMenuToggle) {\n            this.contextMenuToggle.close();\n        }\n    }\n\n    private findSingleSelectedGroup(): ExpressionGroupItem {\n        for (const group of this.selectedGroups) {\n            const containsAllSelectedExpressions = this.selectedExpressions.every(op => this.isInsideGroup(op, group));\n\n            if (containsAllSelectedExpressions) {\n                return group;\n            }\n        }\n\n        return null;\n    }\n\n    private isInsideGroup(item: ExpressionItem, group: ExpressionGroupItem): boolean {\n        if (!item) {\n            return false;\n        }\n\n        if (item.parent === group) {\n            return true;\n        }\n\n        return this.isInsideGroup(item.parent, group);\n    }\n\n    private deleteItem(expressionItem: ExpressionItem) {\n        if (!expressionItem.parent) {\n            this.rootGroup = null;\n            this.currentGroup = null;\n            return;\n        }\n\n        if (expressionItem === this.currentGroup) {\n            this.currentGroup = this.currentGroup.parent;\n        }\n\n        const children = expressionItem.parent.children;\n        const index = children.indexOf(expressionItem);\n        children.splice(index, 1);\n\n        if (!children.length) {\n            this.deleteItem(expressionItem.parent);\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onKeyDown(eventArgs: KeyboardEvent) {\n        eventArgs.stopPropagation();\n        const key = eventArgs.key;\n        if (!this.contextMenuToggle.collapsed && (key === KEYS.ESCAPE || key === KEYS.ESCAPE_IE)) {\n            this.clearSelection();\n        } else if (key === KEYS.ESCAPE || key === KEYS.ESCAPE_IE) {\n            this.closeDialog();\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public createAndGroup() {\n        this.createGroup(FilteringLogic.And);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public createOrGroup() {\n        this.createGroup(FilteringLogic.Or);\n    }\n\n    private createGroup(operator: FilteringLogic) {\n        const chips = this.chips.toArray();\n        const minIndex = this.selectedExpressions.reduce((i, e) => Math.min(i, chips.findIndex(c => c.data === e)), Number.MAX_VALUE);\n        const firstExpression = chips[minIndex].data;\n\n        const parent = firstExpression.parent;\n        const groupItem = new ExpressionGroupItem(operator, parent);\n\n        const index = parent.children.indexOf(firstExpression);\n        parent.children.splice(index, 0, groupItem);\n\n        for (const expr of this.selectedExpressions) {\n            this.deleteItem(expr);\n            groupItem.children.push(expr);\n            expr.parent = groupItem;\n        }\n\n        this.clearSelection();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public deleteFilters() {\n        for (const expr of this.selectedExpressions) {\n            this.deleteItem(expr);\n        }\n\n        this.clearSelection();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onGroupClick(groupItem: ExpressionGroupItem) {\n        this.toggleGroup(groupItem);\n    }\n\n    private toggleGroup(groupItem: ExpressionGroupItem) {\n        this.exitOperandEdit();\n        if (groupItem.children && groupItem.children.length) {\n            this.toggleGroupRecursive(groupItem, !groupItem.selected);\n            if (!groupItem.selected) {\n                this.deselectParentRecursive(groupItem);\n            }\n            this.toggleContextMenu();\n        }\n    }\n\n    private toggleGroupRecursive(groupItem: ExpressionGroupItem, selected: boolean) {\n        if (groupItem.selected !== selected) {\n            groupItem.selected = selected;\n\n            if (groupItem.selected) {\n                this.selectedGroups.push(groupItem);\n            } else {\n                const index = this.selectedGroups.indexOf(groupItem);\n                this.selectedGroups.splice(index, 1);\n            }\n        }\n\n        for (const expr of groupItem.children) {\n            if (expr instanceof ExpressionGroupItem) {\n                this.toggleGroupRecursive(expr, selected);\n            } else {\n                const operandExpression = expr as ExpressionOperandItem;\n                if (operandExpression.selected !== selected) {\n                    this.toggleExpression(operandExpression);\n                }\n            }\n        }\n    }\n\n    private deselectParentRecursive(expressionItem: ExpressionItem) {\n        const parent = expressionItem.parent;\n        if (parent) {\n            if (parent.selected) {\n                parent.selected = false;\n                const index = this.selectedGroups.indexOf(parent);\n                this.selectedGroups.splice(index, 1);\n            }\n            this.deselectParentRecursive(parent);\n        }\n    }\n\n    private calculateContextMenuTarget() {\n        const containerRect = this.expressionsContainer.nativeElement.getBoundingClientRect();\n        const chips = this.chips.filter(c => this.selectedExpressions.indexOf(c.data) !== -1);\n        let minTop = chips.reduce((t, c) =>\n            Math.min(t, c.elementRef.nativeElement.getBoundingClientRect().top), Number.MAX_VALUE);\n        minTop = Math.max(containerRect.top, minTop);\n        minTop = Math.min(containerRect.bottom, minTop);\n        let maxRight = chips.reduce((r, c) =>\n            Math.max(r, c.elementRef.nativeElement.getBoundingClientRect().right), 0);\n        maxRight = Math.max(maxRight, containerRect.left);\n        maxRight = Math.min(maxRight, containerRect.right);\n        this._overlaySettings.positionStrategy.settings.target = new Point(maxRight, minTop);\n    }\n\n    private scrollElementIntoView(target: HTMLElement) {\n        const container = this.expressionsContainer.nativeElement;\n        const targetOffset = target.offsetTop - container.offsetTop;\n        const delta = 10;\n\n        if (container.scrollTop + delta > targetOffset) {\n            container.scrollTop = targetOffset - delta;\n        } else if (container.scrollTop + container.clientHeight < targetOffset + target.offsetHeight + delta) {\n            container.scrollTop = targetOffset + target.offsetHeight + delta - container.clientHeight;\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public ungroup() {\n        const selectedGroup = this.contextualGroup;\n        const parent = selectedGroup.parent;\n        if (parent) {\n            const index = parent.children.indexOf(selectedGroup);\n            parent.children.splice(index, 1, ...selectedGroup.children);\n\n            for (const expr of selectedGroup.children) {\n                expr.parent = parent;\n            }\n        }\n\n        this.clearSelection();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public deleteGroup() {\n        const selectedGroup = this.contextualGroup;\n        const parent = selectedGroup.parent;\n        if (parent) {\n            const index = parent.children.indexOf(selectedGroup);\n            parent.children.splice(index, 1);\n        } else {\n            this.rootGroup = null;\n        }\n\n        this.clearSelection();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public selectFilteringLogic(event: IButtonGroupEventArgs) {\n        this.contextualGroup.operator = event.index as FilteringLogic;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public getConditionFriendlyName(name: string): string {\n        return this.grid.resourceStrings[`igx_grid_filter_${name}`] || name;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public isDate(value: any) {\n        return value instanceof Date;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onExpressionsScrolled() {\n        if (!this.contextMenuToggle.collapsed) {\n            this.calculateContextMenuTarget();\n            this.contextMenuToggle.reposition();\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public invokeClick(eventArgs: KeyboardEvent) {\n        if (eventArgs.key === KEYS.ENTER || eventArgs.key === KEYS.SPACE || eventArgs.key === KEYS.SPACE_IE) {\n            eventArgs.preventDefault();\n            (eventArgs.currentTarget as HTMLElement).click();\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onOutletPointerDown(event) {\n        // This prevents closing the select's dropdown when clicking the scroll\n        event.preventDefault();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public getConditionList(): string[] {\n        return this.selectedColumn ? this.selectedColumn.filters.conditionList() : [];\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public initialize(grid: GridType, overlayService: IgxOverlayService,\n        overlayComponentId: string) {\n        this.inline = false;\n        this.grid = grid;\n        this._overlayService = overlayService;\n        this._overlayComponentId = overlayComponentId;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public setAddButtonFocus() {\n        if (this.addRootAndGroupButton) {\n            this.addRootAndGroupButton.nativeElement.focus();\n        } else if (this.addConditionButton) {\n            this.addConditionButton.nativeElement.focus();\n        }\n    }\n\n    private init() {\n        this.clearSelection();\n        this.cancelOperandAdd();\n        this.cancelOperandEdit();\n        this.rootGroup = this.createExpressionGroupItem(this.grid.advancedFilteringExpressionsTree);\n        this.currentGroup = this.rootGroup;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public context(expression: ExpressionItem, afterExpression?: ExpressionItem) {\n        return {\n            $implicit: expression,\n            afterExpression\n        };\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onClearButtonClick() {\n        this.grid.endEdit(false);\n        this.grid.advancedFilteringExpressionsTree = null;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public closeDialog() {\n        if (this._overlayComponentId) {\n            this._overlayService.hide(this._overlayComponentId);\n        }\n        if (this.grid.navigation.activeNode && this.grid.navigation.activeNode.row === -1) {\n            (this.grid as any).theadRow.nativeElement.focus();\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public applyChanges() {\n        this.grid.endEdit(false);\n        this.exitOperandEdit();\n        this.grid.advancedFilteringExpressionsTree = this.createExpressionsTreeFromGroupItem(this.rootGroup);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public cancelChanges() {\n        if (!this._overlayComponentId) {\n            this.init();\n        }\n        this.closeDialog();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onApplyButtonClick() {\n        this.applyChanges();\n        this.closeDialog();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onChipSelectionEnd() {\n        const contextualGroup = this.findSingleSelectedGroup();\n        if (contextualGroup || this.selectedExpressions.length > 1) {\n            this.contextualGroup = contextualGroup;\n            this.calculateContextMenuTarget();\n            if (this.contextMenuToggle.collapsed) {\n                this.contextMenuToggle.open(this._overlaySettings);\n            } else {\n                this.contextMenuToggle.reposition();\n            }\n        }\n    }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * @hidden\n * @internal\n */\n@Directive({\n    selector: '[igxRowSelector]'\n})\nexport class IgxRowSelectorDirective {\n    constructor(public templateRef: TemplateRef<any>) { }\n}\n\n/**\n * @hidden\n * @internal\n */\n@Directive({\n    selector: '[igxHeadSelector]'\n})\nexport class IgxHeadSelectorDirective {\n    constructor(public templateRef: TemplateRef<any>) { }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n\n/**\n * The IgxGridToolbarCustomContentDirective directive is used to mark an 'ng-template' (with\n * the 'igxToolbarCustomContent' selector) defined in the IgxGrid which is used to provide\n * custom content for cener part of the IgxGridToolbar.\n */\n@Directive({\n    selector: '[igxToolbarCustomContent]'\n})\nexport class IgxGridToolbarCustomContentDirective {\n    constructor(public template: TemplateRef<any>) { }\n}\n","import {\n    AfterContentInit,\n    Component,\n    ContentChildren,\n    ChangeDetectionStrategy,\n    Input,\n    forwardRef,\n    QueryList,\n    TemplateRef,\n    Output,\n    EventEmitter\n} from '@angular/core';\n\nimport { IgxColumnComponent } from './column.component';\nimport { IgxGridCellComponent } from '../cell.component';\nimport { flatten } from '../../core/utils';\n\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: IgxColumnComponent, useExisting: forwardRef(() => IgxColumnGroupComponent) }],\n    selector: 'igx-column-group',\n    template: ``\n})\nexport class IgxColumnGroupComponent extends IgxColumnComponent implements AfterContentInit {\n\n    @ContentChildren(IgxColumnComponent, { read: IgxColumnComponent })\n    children = new QueryList<IgxColumnComponent>();\n\n    /**\n     * Set if the column group is collapsible.\n     * Default value is `false`\n     * ```html\n     *  <igx-column-group [collapsible] = \"true\"></igx-column-group>\n     * ```\n     * @memberof IgxColumnGroupComponent\n     */\n    @Input()\n    public set collapsible(value: boolean) {\n        this._collapsible = value;\n        this.collapsibleChange.emit(this._collapsible);\n        if (this.children && !this.hidden) {\n            if (this._collapsible) {\n                this.setExpandCollapseState();\n            } else {\n                this.children.forEach(child => child.hidden = false);\n            }\n        }\n    }\n    public get collapsible() {\n        return this._collapsible && this.checkCollapsibleState();\n    }\n\n    /**\n     * Set whether the group is expanded or collapsed initially.\n     * Applied only if the collapsible property is set to `true`\n     * Default value is `true`\n     * ```html\n     *  const state = false\n     *  <igx-column-group [(expand)] = \"state\"></igx-column-group>\n     * ```\n     * @memberof IgxColumnGroupComponent\n     */\n    @Input()\n    public set expanded(value: boolean) {\n        this._expanded = value;\n        this.expandedChange.emit(this._expanded);\n        if (!this.collapsible) { return; }\n        if (!this.hidden && this.children) {\n            this.setExpandCollapseState();\n        }\n    }\n    public get expanded() {\n        return this._expanded;\n    }\n\n    /**\n     * Gets the column group `summaries`.\n     * ```typescript\n     * let columnGroupSummaries = this.columnGroup.summaries;\n     * ```\n     * @memberof IgxColumnGroupComponent\n     */\n    @Input()\n    public get summaries(): any {\n        return this._summaries;\n    }\n    /**\n     * Sets the column group `summaries`.\n     * ```typescript\n     * this.columnGroup.summaries = IgxNumberSummaryOperand;\n     * ```\n     * @memberof IgxColumnGroupComponent\n     */\n    public set summaries(classRef: any) { }\n    /**\n     * Sets/gets whether the column group is `searchable`.\n     * Default value is `true`.\n     * ```typescript\n     * let isSearchable =  this.columnGroup.searchable;\n     * ```\n     * ```html\n     *  <igx-column-group [searchable] = \"false\"></igx-column-group>\n     * ```\n     * @memberof IgxColumnGroupComponent\n     */\n    @Input()\n    public searchable = true;\n    /**\n     * Gets the column group `filters`.\n     * ```typescript\n     * let columnGroupFilters = this.columnGroup.filters;\n     * ```\n     * @memberof IgxColumnGroupComponent\n     */\n    @Input()\n    public get filters(): any {\n        return this._filters;\n    }\n    /**\n     * Sets the column group `filters`.\n     * ```typescript\n     * this.columnGroup.filters = IgxStringFilteringOperand;\n     * ```\n     * @memberof IgxColumnGroupComponent\n     */\n    public set filters(classRef: any) { }\n\n    /**\n     * Returns if the column group is selectable\n     * ```typescript\n     * let columnGroupSelectable = this.columnGroup.selectable;\n     * ```\n     * @memberof IgxColumnGroupComponent\n     */\n    public get selectable(): boolean {\n        return this.children && this.children.some(child => child.selectable);\n    }\n\n    public set selectable(value: boolean) {}\n\n    /**\n     * Returns a reference to the body template.\n     * ```typescript\n     * let bodyTemplate = this.columnGroup.bodyTemplate;\n     * ```\n     * @memberof IgxColumnGroupComponent\n     */\n    get bodyTemplate(): TemplateRef<any> {\n        return this._bodyTemplate;\n    }\n    /**\n     * @hidden\n     */\n    set bodyTemplate(template: TemplateRef<any>) { }\n\n    /**\n     * Allows you to define a custom template for expand/collapse indicator\n     * @memberof IgxColumnGroupComponent\n     */\n    @Input()\n    get collapsibleIndicatorTemplate(): TemplateRef<any> {\n        return this._collapseIndicatorTemplate;\n    }\n    set collapsibleIndicatorTemplate(template: TemplateRef<any>) {\n        this._collapseIndicatorTemplate = template;\n    }\n\n    /**\n     * Returns a reference to the inline editor template.\n     * ```typescript\n     * let inlineEditorTemplate = this.columnGroup.inlineEditorTemplate;\n     * ```\n     * @memberof IgxColumnGroupComponent\n     */\n    get inlineEditorTemplate(): TemplateRef<any> {\n        return this._inlineEditorTemplate;\n    }\n    /**\n     * @hidden\n     */\n    set inlineEditorTemplate(template: TemplateRef<any>) { }\n    /**\n     * Gets the column group cells.\n     * ```typescript\n     * let columnCells = this.columnGroup.cells;\n     * ```\n     * @memberof IgxColumnGroupComponent\n     */\n    get cells(): IgxGridCellComponent[] {\n        return [];\n    }\n    /**\n     * Gets whether the column group is hidden.\n     * ```typescript\n     * let isHidden = this.columnGroup.hidden;\n     * ```\n     * @memberof IgxColumnGroupComponent\n     */\n    @Input()\n    get hidden() {\n        return this.allChildren.every(c => c.hidden);\n    }\n    /**\n     * Sets the column group hidden property.\n     * ```html\n     * <igx-column [hidden] = \"true\"></igx-column>\n     * ```\n     *\n     * Two-way data binding\n     * ```html\n     * <igx-column [(hidden)] = \"model.columns[0].isHidden\"></igx-column>\n     * ```\n     * @memberof IgxColumnGroupComponent\n     */\n    set hidden(value: boolean) {\n        this._hidden = value;\n        this.hiddenChange.emit(this._hidden);\n        if (this._hidden || !this.collapsible) {\n            this.children.forEach(child => child.hidden = this._hidden);\n        } else {\n            this.children.forEach(c => {\n                if (c.visibleWhenCollapsed === undefined) { c.hidden = false; return; }\n                c.hidden = this.expanded ? c.visibleWhenCollapsed : !c.visibleWhenCollapsed;\n            });\n        }\n    }\n\n    /**\n     * Returns if the column group is selected.\n     * ```typescript\n     * let isSelected = this.columnGroup.selected;\n     * ```\n     * @memberof IgxColumnGroupComponent\n     */\n    get selected(): boolean {\n        const selectableChildren = this.allChildren.filter(c => !c.columnGroup && c.selectable && !c.hidden);\n        return selectableChildren.length > 0 && selectableChildren.every(c => c.selected);\n    }\n\n    /**\n     * Select/deselect the column group.\n     * ```typescript\n     * this.columnGroup.selected = true;\n     * ```\n     * @memberof IgxColumnGroupComponent\n     */\n    set selected(value: boolean) {\n        if (this.selectable) {\n            this.children.forEach(c => {\n                c.selected = value;\n            });\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    @Output()\n    public hiddenChange = new EventEmitter<boolean>();\n\n    /**\n     * @hidden\n     */\n    ngAfterContentInit() {\n        /*\n            @ContentChildren with descendants still returns the `parent`\n            component in the query list.\n        */\n        if (this.headTemplate && this.headTemplate.length) {\n            this._headerTemplate = this.headTemplate.toArray()[0].template;\n        }\n        if (this.collapseIndicatorTemplate) {\n            this._collapseIndicatorTemplate = this.collapseIndicatorTemplate.template;\n        }\n        // currently only ivy fixes the issue, we have to slice only if the first child is group\n        if (this.children.first === this) {\n            this.children.reset(this.children.toArray().slice(1));\n        }\n        this.children.forEach(child => {\n            child.parent = this;\n        });\n        if (this.collapsible) {\n            this.setExpandCollapseState();\n        }\n    }\n\n    /**\n     * Returns the children columns collection.\n     * ```typescript\n     * let columns =  this.columnGroup.allChildren;\n     * ```\n     * @memberof IgxColumnGroupComponent\n     */\n    get allChildren(): IgxColumnComponent[] {\n        return flatten(this.children.toArray());\n    }\n    /**\n     * Returns a boolean indicating if the column is a `ColumnGroup`.\n     * ```typescript\n     * let isColumnGroup =  this.columnGroup.columnGroup\n     * ```\n     * @memberof IgxColumnGroupComponent\n     */\n    get columnGroup() {\n        return true;\n    }\n    /**\n     * Returns a boolean indicating if the column is a `ColumnLayout` for multi-row layout.\n     * ```typescript\n     * let columnGroup =  this.column.columnGroup;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    get columnLayout() {\n        return false;\n    }\n    /**\n     * Gets the width of the column group.\n     * ```typescript\n     * let columnGroupWidth = this.columnGroup.width;\n     * ```\n     * @memberof IgxColumnGroupComponent\n     */\n    get width() {\n        let isChildrenWidthInPercent = false, width;\n        width = `${this.children.reduce((acc, val) => {\n            if (val.hidden) {\n                return acc;\n            }\n            if (typeof val.width === 'string' && val.width.indexOf('%') !== -1) {\n                isChildrenWidthInPercent = true;\n                return acc + parseInt(val.width, 10);\n            }\n            return acc + parseInt(val.calcWidth, 10);\n        }, 0)}`;\n        return isChildrenWidthInPercent ? width + '%' : width + 'px';\n    }\n\n    set width(val) { }\n\n    /**\n     * @hidden\n     */\n    public get applySelectableClass(): boolean {\n        return this._applySelectableClass;\n    }\n\n    /**\n     * @hidden\n     */\n    public set applySelectableClass(value: boolean) {\n        if (this.selectable) {\n            this._applySelectableClass = value;\n            this.children.forEach(c => {\n                c.applySelectableClass = value;\n            });\n        }\n    }\n    // constructor(public gridAPI: GridBaseAPIService<IgxGridBaseDirective & IGridDataBindable>, public cdr: ChangeDetectorRef) {\n    //     // D.P. constructor duplication due to es6 compilation, might be obsolete in the future\n    //     super(gridAPI, cdr);\n    // }\n}\n","import { Directive, Input, OnDestroy, NgModule, TemplateRef } from '@angular/core';\nimport { IgxDragDirective } from '../directives/drag-drop/drag-drop.directive';\nimport { KEYS } from '../core/utils';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { IgxRowDirective, IgxGridBaseDirective } from './grid/public_api';\nimport { IRowDragStartEventArgs, IRowDragEndEventArgs } from './common/events';\nimport { GridType } from './common/grid.interface';\nimport { IgxHierarchicalRowComponent } from './hierarchical-grid/hierarchical-row.component';\n\n\nconst ghostBackgroundClass = 'igx-grid__tr--ghost';\nconst gridCellClass = 'igx-grid__td';\nconst rowSelectedClass = 'igx-grid__tr--selected';\nconst cellSelectedClass = 'igx-grid__td--selected';\nconst cellActiveClass = 'igx-grid__td--active';\n\n/**\n * @hidden\n */\n@Directive({\n    selector: '[igxRowDrag]'\n})\nexport class IgxRowDragDirective extends IgxDragDirective implements OnDestroy {\n    private row: IgxRowDirective<IgxGridBaseDirective & GridType>;\n    private subscription$: Subscription;\n    private _rowDragStarted = false;\n\n    @Input('igxRowDrag')\n    set data(val) {\n        this.row = val;\n    }\n\n    get data() {\n        return this.row;\n    }\n\n    public onPointerDown(event) {\n        event.preventDefault();\n        this._rowDragStarted = false;\n        this._removeOnDestroy = false;\n        super.onPointerDown(event);\n    }\n\n    public onPointerMove(event) {\n        super.onPointerMove(event);\n        if (this._dragStarted && !this._rowDragStarted) {\n            this._rowDragStarted = true;\n            const args: IRowDragStartEventArgs = {\n                dragDirective: this,\n                dragData: this.row,\n                cancel: false,\n                owner: this.row.grid\n            };\n\n            this.row.grid.onRowDragStart.emit(args);\n            if (args.cancel) {\n                this.ghostElement.parentNode.removeChild(this.ghostElement);\n                this.ghostElement = null;\n                this._dragStarted = false;\n                this._clicked = false;\n                return;\n            }\n            this.row.dragging = true;\n            this.row.grid.rowDragging = true;\n            this.row.grid.markForCheck();\n\n            this.subscription$ = fromEvent(this.row.grid.document.defaultView, 'keydown').subscribe((ev: KeyboardEvent) => {\n                if (ev.key === KEYS.ESCAPE || ev.key === KEYS.ESCAPE_IE) {\n                    this._lastDropArea = false;\n                    this.onPointerUp(event);\n                }\n            });\n        }\n    }\n\n    public onPointerUp(event) {\n\n        if (!this._clicked) {\n            return;\n        }\n\n        const args: IRowDragEndEventArgs = {\n            dragDirective: this,\n            dragData: this.row,\n            animation: false,\n            owner: this.row.grid\n        };\n        this.zone.run(() => {\n            this.row.grid.onRowDragEnd.emit(args);\n        });\n\n        const dropArea = this._lastDropArea;\n        super.onPointerUp(event);\n        if (!dropArea && this.ghostElement) {\n            this.ghostElement.addEventListener('transitionend', this.transitionEndEvent, false);\n        }   else {\n            this.endDragging();\n        }\n    }\n\n    protected createGhost(pageX, pageY) {\n        this.row.grid.endEdit(true);\n        this.row.grid.markForCheck();\n        this.ghostContext = {\n            $implicit: this.row.rowData,\n            data: this.row.rowData,\n            grid: this.row.grid\n        };\n        super.createGhost(pageX, pageY, this.row.nativeElement);\n\n        // check if there is an expander icon and create the ghost at the corresponding position\n        if (this.isHierarchicalGrid) {\n            const row = this.row as IgxHierarchicalRowComponent;\n            if (row.expander) {\n                const expanderWidth = row.expander.nativeElement.getBoundingClientRect().width;\n                this._ghostHostX += expanderWidth;\n            }\n        }\n\n        const ghost = this.ghostElement;\n\n        const gridRect = this.row.grid.nativeElement.getBoundingClientRect();\n        const rowRect = this.row.nativeElement.getBoundingClientRect();\n        ghost.style.overflow = 'hidden';\n        ghost.style.width = gridRect.width + 'px';\n        ghost.style.height = rowRect.height + 'px';\n\n        this.renderer.addClass(ghost, ghostBackgroundClass);\n        this.renderer.removeClass(ghost, rowSelectedClass);\n\n        const ghostCells = ghost.getElementsByClassName(gridCellClass);\n        for (let index = 0; index < ghostCells.length; index++) {\n            this.renderer.removeClass(ghostCells[index], cellSelectedClass);\n            this.renderer.removeClass(ghostCells[index], cellActiveClass);\n        }\n    }\n\n    private _unsubscribe() {\n        if (this.subscription$ && !this.subscription$.closed) {\n            this.subscription$.unsubscribe();\n        }\n    }\n\n    private endDragging() {\n        this.onTransitionEnd(null);\n        this.row.dragging = false;\n        this.row.grid.rowDragging = false;\n        this.row.grid.markForCheck();\n        this._unsubscribe();\n    }\n\n    private transitionEndEvent = (evt?) => {\n        if (this.ghostElement) {\n            this.ghostElement.removeEventListener('transitionend', this.transitionEndEvent, false);\n        }\n        this.endDragging();\n    }\n\n    private get isHierarchicalGrid() {\n        return this.row.grid.nativeElement.tagName.toLowerCase() === 'igx-hierarchical-grid';\n    }\n}\n\n/**\n * @hidden\n */\n@Directive({\n    selector: '[igxDragIndicatorIcon]'\n})\n\nexport class IgxDragIndicatorIconDirective {\n}\n\n/**\n * @hidden\n */\n@Directive({\n    selector: '[igxRowDragGhost]'\n})\n\nexport class IgxRowDragGhostDirective  {\n    constructor(public templateRef: TemplateRef<any>) { }\n}\n\n@NgModule({\n    declarations: [IgxRowDragDirective, IgxDragIndicatorIconDirective, IgxRowDragGhostDirective],\n    entryComponents: [],\n    exports: [IgxRowDragDirective, IgxDragIndicatorIconDirective, IgxRowDragGhostDirective],\n    imports: []\n})\n\nexport class IgxRowDragModule {\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectorRef,\n    ComponentFactoryResolver,\n    ContentChildren,\n    ContentChild,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    Input,\n    IterableChangeRecord,\n    IterableDiffers,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TemplateRef,\n    ViewChild,\n    ViewChildren,\n    ViewContainerRef,\n    InjectionToken,\n    Optional,\n    DoCheck,\n    Directive\n} from '@angular/core';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport 'igniteui-trial-watermark';\nimport { Subject, pipe } from 'rxjs';\nimport { takeUntil, first, filter, throttleTime, map } from 'rxjs/operators';\nimport { cloneArray, flatten, mergeObjects, isIE, compareMaps } from '../core/utils';\nimport { DataType } from '../data-operations/data-util';\nimport { FilteringLogic, IFilteringExpression } from '../data-operations/filtering-expression.interface';\nimport { IGroupByRecord } from '../data-operations/groupby-record.interface';\nimport { ISortingExpression } from '../data-operations/sorting-expression.interface';\nimport { IForOfState, IgxGridForOfDirective } from '../directives/for-of/for_of.directive';\nimport { IgxTextHighlightDirective, IActiveHighlightInfo } from '../directives/text-highlight/text-highlight.directive';\nimport {\n    AbsoluteScrollStrategy,\n    HorizontalAlignment,\n    VerticalAlignment,\n    IgxOverlayService,\n    OverlaySettings,\n    PositionSettings,\n    ConnectedPositioningStrategy,\n    ContainerPositionStrategy\n} from '../services/public_api';\nimport { GridBaseAPIService } from './api.service';\nimport { IgxGridCellComponent } from './cell.component';\nimport { IColumnVisibilityChangedEventArgs } from './hiding/column-hiding-item.directive';\nimport { ISummaryExpression } from './summaries/grid-summary';\nimport { RowEditPositionStrategy, IPinningConfig } from './grid.common';\nimport { IgxGridToolbarComponent } from './toolbar/grid-toolbar.component';\nimport { IgxRowDirective } from './row.directive';\nimport { IgxGridHeaderComponent } from './headers/grid-header.component';\nimport { IgxOverlayOutletDirective, IgxToggleDirective } from '../directives/toggle/toggle.directive';\nimport {\n    FilteringExpressionsTree, IFilteringExpressionsTree, FilteringExpressionsTreeType\n} from '../data-operations/filtering-expressions-tree';\nimport { IFilteringOperation } from '../data-operations/filtering-condition';\nimport { Transaction, TransactionType, TransactionService, State } from '../services/public_api';\nimport {\n    IgxRowEditTemplateDirective,\n    IgxRowEditTabStopDirective,\n    IgxRowEditTextDirective,\n    IgxRowEditActionsDirective\n} from './grid.rowEdit.directive';\nimport { IgxGridNavigationService } from './grid-navigation.service';\nimport { IDisplayDensityOptions, DisplayDensityToken, DisplayDensityBase, DisplayDensity } from '../core/displayDensity';\nimport { IgxGridRowComponent } from './grid/public_api';\nimport { IgxFilteringService } from './filtering/grid-filtering.service';\nimport { IgxGridFilteringCellComponent } from './filtering/base/grid-filtering-cell.component';\nimport { WatchChanges } from './watch-changes';\nimport { IgxGridHeaderGroupComponent } from './headers/grid-header-group.component';\nimport { IGridResourceStrings } from '../core/i18n/grid-resources';\nimport { CurrentResourceStrings } from '../core/i18n/resources';\nimport { IgxGridSummaryService } from './summaries/grid-summary.service';\nimport { IgxSummaryRowComponent } from './summaries/summary-row.component';\nimport {\n    IgxGridSelectionService,\n    GridSelectionRange,\n    IgxGridCRUDService,\n    IgxRow,\n    IgxCell,\n    isChromium\n} from './selection/selection.service';\nimport { DragScrollDirection } from './selection/drag-select.directive';\nimport { ICachedViewLoadedEventArgs, IgxTemplateOutletDirective } from '../directives/template-outlet/template_outlet.directive';\nimport { IgxExcelStyleLoadingValuesTemplateDirective } from './filtering/excel-style/excel-style-search.component';\nimport {\n    IgxExcelStyleSortingTemplateDirective,\n    IgxExcelStylePinningTemplateDirective,\n    IgxExcelStyleHidingTemplateDirective,\n    IgxExcelStyleMovingTemplateDirective,\n    IgxExcelStyleSelectingTemplateDirective\n} from './filtering/excel-style/grid.excel-style-filtering.component';\nimport { IgxGridColumnResizerComponent } from './resizing/resizer.component';\nimport { IgxGridFilteringRowComponent } from './filtering/base/grid-filtering-row.component';\nimport { CharSeparatedValueData } from '../services/csv/char-separated-value-data';\nimport { IgxColumnResizingService } from './resizing/resizing.service';\nimport { IFilteringStrategy } from '../data-operations/filtering-strategy';\nimport {\n    IgxRowExpandedIndicatorDirective, IgxRowCollapsedIndicatorDirective,\n    IgxHeaderExpandIndicatorDirective, IgxHeaderCollapseIndicatorDirective\n} from './grid/grid.directives';\nimport {\n    GridKeydownTargetType,\n    GridSelectionMode,\n    GridSummaryPosition,\n    GridSummaryCalculationMode,\n    FilterMode,\n    ColumnPinningPosition,\n    RowPinningPosition\n} from './common/enums';\nimport {\n    IGridCellEventArgs,\n    IRowSelectionEventArgs,\n    IPinColumnEventArgs,\n    IGridEditEventArgs,\n    IPageEventArgs,\n    IRowDataEventArgs,\n    IColumnResizeEventArgs,\n    IColumnMovingStartEventArgs,\n    IColumnMovingEventArgs,\n    IColumnMovingEndEventArgs,\n    IGridKeydownEventArgs,\n    IRowDragStartEventArgs,\n    IRowDragEndEventArgs,\n    IGridClipboardEvent,\n    IGridToolbarExportEventArgs,\n    ISearchInfo,\n    ICellPosition,\n    IRowToggleEventArgs,\n    IColumnSelectionEventArgs,\n    IPinRowEventArgs\n} from './common/events';\nimport { IgxAdvancedFilteringDialogComponent } from './filtering/advanced-filtering/advanced-filtering-dialog.component';\nimport { GridType } from './common/grid.interface';\nimport { IgxDecimalPipeComponent, IgxDatePipeComponent } from './common/pipes';\nimport { DropPosition } from './moving/moving.service';\nimport { IgxHeadSelectorDirective, IgxRowSelectorDirective } from './selection/row-selectors';\nimport { IgxGridToolbarCustomContentDirective } from './toolbar/toolbar.directive';\nimport { IgxColumnComponent } from './columns/column.component';\nimport { IgxColumnGroupComponent } from './columns/column-group.component';\nimport { IGridSortingStrategy } from '../data-operations/sorting-strategy';\nimport { IgxRowDragGhostDirective, IgxDragIndicatorIconDirective } from './row-drag.directive';\nimport { isNumber } from 'util';\n\nconst MINIMUM_COLUMN_WIDTH = 136;\nconst FILTER_ROW_HEIGHT = 50;\n\n// By default row editing overlay outlet is inside grid body so that overlay is hidden below grid header when scrolling.\n// In cases when grid has 1-2 rows there isn't enough space in grid body and row editing overlay should be shown above header.\n// Default row editing overlay height is higher then row height that is why the case is valid also for row with 2 rows.\n// More accurate calculation is not possible, cause row editing overlay is still not shown and we don't know its height,\n// but in the same time we need to set row editing overlay outlet before opening the overlay itself.\nconst MIN_ROW_EDITING_COUNT_THRESHOLD = 2;\n\nexport const IgxGridTransaction = new InjectionToken<string>('IgxGridTransaction');\n\n\n\n@Directive({\n    selector: '[igxGridBaseComponent]'\n})\nexport class IgxGridBaseDirective extends DisplayDensityBase implements\n    OnInit, DoCheck, OnDestroy, AfterContentInit, AfterViewInit {\n    private _customDragIndicatorIconTemplate: TemplateRef<any>;\n    protected _init = true;\n    private _cdrRequests = false;\n    protected _cdrRequestRepaint = false;\n\n    public get scrollWidth() {\n        return this.verticalScrollContainer.getScrollbarWidth();\n    }\n\n    private _resourceStrings = CurrentResourceStrings.GridResStrings;\n    private _emptyGridMessage = null;\n    private _emptyFilteredGridMessage = null;\n    private _isLoading = false;\n    private _locale = null;\n    public _destroyed = false;\n    private overlayIDs = [];\n    private _filteringStrategy: IFilteringStrategy;\n    private _sortingStrategy: IGridSortingStrategy;\n    private _pinning: IPinningConfig = { columns: ColumnPinningPosition.Start };\n\n    private _hostWidth;\n    private _advancedFilteringOverlayId: string;\n    private _advancedFilteringPositionSettings: PositionSettings = {\n        verticalDirection: VerticalAlignment.Middle,\n        horizontalDirection: HorizontalAlignment.Center,\n        horizontalStartPoint: HorizontalAlignment.Center,\n        verticalStartPoint: VerticalAlignment.Middle\n    };\n\n    private _advancedFilteringOverlaySettings: OverlaySettings = {\n        closeOnOutsideClick: false,\n        modal: false,\n        positionStrategy: new ConnectedPositioningStrategy(this._advancedFilteringPositionSettings),\n    };\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('defaultExpandedTemplate', { read: TemplateRef, static: true })\n    protected defaultExpandedTemplate: TemplateRef<any>;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('defaultCollapsedTemplate', { read: TemplateRef, static: true })\n    protected defaultCollapsedTemplate: TemplateRef<any>;\n\n    /**\n     * Gets/Sets the resource strings.\n     * @remarks\n     * By default it uses EN resources.\n     */\n    @Input()\n    set resourceStrings(value: IGridResourceStrings) {\n        this._resourceStrings = Object.assign({}, this._resourceStrings, value);\n    }\n\n    get resourceStrings(): IGridResourceStrings {\n        return this._resourceStrings;\n    }\n\n    /**\n     * Gets/Sets whether to autogenerate the columns.\n     * @remarks\n     * The default value is false. When set to true, it will override all columns declared through code or in markup.\n     * @example\n     * ```html\n     * <igx-grid [data]=\"Data\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @Input()\n    public autoGenerate = false;\n\n    /**\n     * @hidden @internal\n     */\n    public id: string;\n\n    /**\n     * Gets/Sets a custom template when empty.\n     * @example\n     * ```html\n     * <igx-grid [id]=\"'igx-grid-1'\" [data]=\"Data\" [emptyGridTemplate]=\"myTemplate\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @Input()\n    public emptyGridTemplate: TemplateRef<any>;\n\n    /**\n     * Gets/Sets a custom template when loading.\n     * @example\n     * ```html\n     * <igx-grid [id]=\"'igx-grid-1'\" [data]=\"Data\" [loadingGridTemplate]=\"myTemplate\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @Input()\n    public loadingGridTemplate: TemplateRef<any>;\n\n    /**\n     * Gets/Sets the filtering logic of the `IgxGridComponent`.\n     * @remarks\n     * The default is AND.\n     * @example\n     * ```html\n     * <igx-grid [data]=\"Data\" [autoGenerate]=\"true\" [filteringLogic]=\"filtering\"></igx-grid>\n     * ```\n     */\n    @WatchChanges()\n    @Input()\n    public get filteringLogic() {\n        return this._filteringExpressionsTree.operator;\n    }\n\n    public set filteringLogic(value: FilteringLogic) {\n        this._filteringExpressionsTree.operator = value;\n    }\n\n    /**\n     * Gets/Sets the filtering state.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"Data\" [autoGenerate]=\"true\" [(filteringExpressionsTree)]=\"model.filteringExpressions\"></igx-grid>\n     * ```\n     * @remarks\n     * Supports two-way binding.\n     */\n    @WatchChanges()\n    @Input()\n    get filteringExpressionsTree() {\n        return this._filteringExpressionsTree;\n    }\n\n    set filteringExpressionsTree(value) {\n        if (value && value instanceof FilteringExpressionsTree) {\n            const val = (value as FilteringExpressionsTree);\n            for (let index = 0; index < val.filteringOperands.length; index++) {\n                if (!(val.filteringOperands[index] instanceof FilteringExpressionsTree)) {\n                    const newExpressionsTree = new FilteringExpressionsTree(FilteringLogic.And, val.filteringOperands[index].fieldName);\n                    newExpressionsTree.filteringOperands.push(val.filteringOperands[index] as IFilteringExpression);\n                    val.filteringOperands[index] = newExpressionsTree;\n                }\n            }\n\n            value.type = FilteringExpressionsTreeType.Regular;\n            this._filteringExpressionsTree = value;\n            this._filteringPipeTrigger++;\n            this.filteringExpressionsTreeChange.emit(this._filteringExpressionsTree);\n\n            if (this.filteringService.isFilteringExpressionsTreeEmpty(this._filteringExpressionsTree) &&\n                !this.advancedFilteringExpressionsTree) {\n                this.filteredData = null;\n            }\n\n            this.filteringService.refreshExpressions();\n            this.selectionService.clearHeaderCBState();\n            this.summaryService.clearSummaryCache();\n            this.notifyChanges();\n        }\n    }\n\n    /**\n     * Emitted after filtering is performed.\n     * @remarks\n     * Returns the filtering expressions tree of the column for which filtering was performed.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"localData\" [height]=\"'305px'\" [autoGenerate]=\"true\"\n     *              (filteringExpressionsTreeChange)=\"filteringExprTreeChange($event)\"></igx-grid>\n     * ```\n     */\n    @Output()\n    public filteringExpressionsTreeChange = new EventEmitter<IFilteringExpressionsTree>();\n\n    /**\n     * Emitted after advanced filtering is performed.\n     * @remarks\n     * Returns the advanced filtering expressions tree.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"localData\" [height]=\"'305px'\" [autoGenerate]=\"true\"\n     *           (advancedFilteringExpressionsTreeChange)=\"advancedFilteringExprTreeChange($event)\"></igx-grid>\n     * ```\n     */\n    @Output()\n    public advancedFilteringExpressionsTreeChange = new EventEmitter<IFilteringExpressionsTree>();\n\n    /**\n     * Gets/Sets the advanced filtering state.\n     * @example\n     * ```typescript\n     * let advancedFilteringExpressionsTree = this.grid.advancedFilteringExpressionsTree;\n     * this.grid.advancedFilteringExpressionsTree = logic;\n     * ```\n     */\n    @WatchChanges()\n    @Input()\n    get advancedFilteringExpressionsTree() {\n        return this._advancedFilteringExpressionsTree;\n    }\n\n    set advancedFilteringExpressionsTree(value) {\n        if (value && value instanceof FilteringExpressionsTree) {\n            value.type = FilteringExpressionsTreeType.Advanced;\n            this._advancedFilteringExpressionsTree = value;\n            this._filteringPipeTrigger++;\n        } else {\n            this._advancedFilteringExpressionsTree = null;\n        }\n        this.advancedFilteringExpressionsTreeChange.emit(this._advancedFilteringExpressionsTree);\n\n        if (this.filteringService.isFilteringExpressionsTreeEmpty(this._advancedFilteringExpressionsTree) &&\n            !this.advancedFilteringExpressionsTree) {\n            this.filteredData = null;\n        }\n\n        this.selectionService.clearHeaderCBState();\n        this.summaryService.clearSummaryCache();\n        this.notifyChanges();\n\n        // Wait for the change detection to update filtered data through the pipes and then emit the event.\n        requestAnimationFrame(() => this.onFilteringDone.emit(this._advancedFilteringExpressionsTree));\n    }\n\n    /**\n     * Gets/Sets the locale.\n     * @remarks\n     * If not set, returns browser's language.\n     */\n    @Input()\n    get locale(): string {\n        if (this._locale) {\n            return this._locale;\n        } else {\n            return 'en';\n        }\n    }\n\n    set locale(value) {\n        this._locale = value;\n    }\n\n    /**\n     * Gets/Sets whether the paging feature is enabled.\n     * @remarks\n     * The default state is disabled (false).\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"Data\" [autoGenerate]=\"true\" [paging]=\"true\"></igx-grid>\n     * ```\n     */\n    @Input()\n    get paging(): boolean {\n        return this._paging;\n    }\n\n    set paging(value: boolean) {\n        this._paging = value;\n        this._pipeTrigger++;\n        this.notifyChanges(true);\n    }\n\n    /**\n     * Gets/Sets the current page index.\n     * @example\n     * ```html\n     *  <igx-grid #grid [data]=\"Data\" [paging]=\"true\" [(page)]=\"model.page\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     * @remarks\n     * Supports two-way binding.\n     */\n    @Input()\n    get page(): number {\n        return this._page;\n    }\n\n    set page(val: number) {\n        if (val === this._page || val < 0 || val > this.totalPages - 1) {\n            return;\n        }\n        this.selectionService.clear(true);\n        this.onPagingDone.emit({ previous: this._page, current: val });\n        this._page = val;\n        this.pageChange.emit(this._page);\n        this.navigateTo(0);\n        this.notifyChanges();\n    }\n\n    /**\n     * Emitted after the current page is changed.\n     * @example\n     * ```html\n     * <igx-grid (pageChange)=\"onPageChange($event)\"></igx-grid>\n     * ```\n     * ```typescript\n     * public onPageChange(page: number) {\n     *   this.currentPage = page;\n     * }\n     * ```\n     */\n    @Output()\n    public pageChange = new EventEmitter<number>();\n\n    /**\n     * Gets/Sets the number of visible items per page.\n     * @remarks\n     * The default is 15.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"Data\" [paging]=\"true\" [(perPage)]=\"model.perPage\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @Input()\n    get perPage(): number {\n        return this._perPage;\n    }\n\n    set perPage(val: number) {\n        if (val < 0) {\n            return;\n        }\n        this.selectionService.clear(true);\n        this._perPage = val;\n        this.perPageChange.emit(this._perPage);\n        this.page = 0;\n        this.endEdit(true);\n        this.notifyChanges();\n    }\n\n    /**\n     * Emitted when `perPage` property value of the grid is changed.\n     * @example\n     * ```html\n     * <igx-grid #grid (perPageChange)=\"onPerPageChange($event)\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     * ```typescript\n     * public onPerPageChange(perPage: number) {\n     *   this.perPage = perPage;\n     * }\n     * ```\n     */\n    @Output()\n    public perPageChange = new EventEmitter<number>();\n\n    /**\n     * Gets/Sets a custom `ng-template` for the pagination UI of the grid.\n     * @example\n     * ```html\n     * <igx-grid #grid [paging]=\"true\" [myTemplate]=\"myTemplate\" [height]=\"'305px'\"></igx-grid>\n     * ```\n     */\n    @Input()\n    public paginationTemplate: TemplateRef<any>;\n\n    /**\n     * Gets/Sets whether the column hiding UI is enabled.\n     * @remarks\n     * By default it is disabled (false). In order for the UI to work, you need to enable the toolbar as shown in the example below.\n     * @example\n     * ```html\n     * <igx-grid [data]=\"Data\" [autoGenerate]=\"true\" [showToolbar]=\"true\" [columnHiding]=\"true\"></igx-grid>\n     * ```\n     */\n    @Input()\n    get columnHiding() {\n        return this._columnHiding;\n    }\n\n    set columnHiding(value) {\n        if (this._columnHiding !== value) {\n            this._columnHiding = value;\n            if (!this._init) {\n                this.notifyChanges(true);\n            }\n        }\n    }\n\n    /**\n     * Gets/Sets if the row selectors are hidden.\n     * @remarks\n     *  By default row selectors are shown\n     */\n    @WatchChanges()\n    @Input()\n    get hideRowSelectors() {\n        return this._hideRowSelectors;\n    }\n\n    set hideRowSelectors(value: boolean) {\n        this._hideRowSelectors = value;\n        this.notifyChanges(true);\n    }\n\n    /**\n     * Gets/Sets whether rows can be moved.\n     * @example\n     * ```html\n     * <igx-grid #grid [rowDraggable]=\"true\"></igx-grid>\n     * ```\n     */\n    @Input()\n    get rowDraggable(): boolean {\n        return this._rowDrag && this.hasVisibleColumns;\n    }\n\n\n    set rowDraggable(val: boolean) {\n        this._rowDrag = val;\n        this.notifyChanges(true);\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public rowDragging = false;\n\n\n   /**\n    * Gets/Sets whether the rows are editable.\n    * @remarks\n    * By default it is set to false.\n    * @example\n    * ```html\n    * <igx-grid #grid [showToolbar]=\"true\" [rowEditable]=\"true\" [primaryKey]=\"'ProductID'\" [columnHiding]=\"true\"></igx-grid>\n    * ```\n    */\n    @WatchChanges()\n    @Input()\n    get rowEditable(): boolean {\n        return this._rowEditable;\n    }\n\n    set rowEditable(val: boolean) {\n        if (!this._init) {\n            this.refreshGridState();\n        }\n        this._rowEditable = val;\n        this.notifyChanges();\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @Input()\n    public class = '';\n\n    /**\n     * Gets/Sets the height.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"Data\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @WatchChanges()\n    @HostBinding('style.height')\n    @Input()\n    public get height() {\n        return this._height;\n    }\n\n    public set height(value: string) {\n        if (this._height !== value) {\n            this._height = value;\n            this.nativeElement.style.height = value;\n            this.notifyChanges(true);\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    @HostBinding('style.width')\n    get hostWidth() {\n        return this._width || this._hostWidth;\n    }\n\n    /**\n     * Gets/Sets the width of the grid.\n     * @example\n     * ```typescript\n     * let gridWidth = this.grid.width;\n     * ```\n     */\n    @WatchChanges()\n    @Input()\n    get width() {\n        return this._width;\n    }\n\n    set width(value) {\n        if (this._width !== value) {\n            this._width = value;\n            this.nativeElement.style.width = value;\n            this.notifyChanges(true);\n        }\n    }\n\n    /**\n     * Gets the width of the header.\n     * @example\n     * ```html\n     * let gridHeaderWidth = this.grid.headerWidth;\n     * ```\n     */\n    get headerWidth() {\n        return parseInt(this.width, 10) - 17;\n    }\n\n    /**\n     * Gets/Sets the styling classes applied to all even `IgxGridRowComponent`s in the grid.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"Data\" [evenRowCSS]=\"'igx-grid--my-even-class'\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @Input()\n    public evenRowCSS = 'igx-grid__tr--even';\n\n    /**\n     * Gets/Sets the styling classes applied to all odd `IgxGridRowComponent`s in the grid.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"Data\" [evenRowCSS]=\"'igx-grid--my-odd-class'\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @Input()\n    public oddRowCSS = 'igx-grid__tr--odd';\n\n    /**\n     * Gets/Sets the row height.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"localData\" [showToolbar]=\"true\" [rowHeight]=\"100\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @WatchChanges()\n    @Input()\n    public get rowHeight() {\n        return this._rowHeight ? this._rowHeight : this.defaultRowHeight;\n    }\n\n    public set rowHeight(value) {\n        this._rowHeight = parseInt(value, 10);\n    }\n\n    /**\n     * Gets/Sets the default width of the columns.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"localData\" [showToolbar]=\"true\" [columnWidth]=\"100\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @WatchChanges()\n    @Input()\n    public get columnWidth(): string {\n        return this._columnWidth;\n    }\n    public set columnWidth(value: string) {\n        this._columnWidth = value;\n        this.columnWidthSetByUser = true;\n        this.notifyChanges(true);\n    }\n\n    /**\n     * Gets/Sets the primary key.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"localData\" [showToolbar]=\"true\" [primaryKey]=\"'ProductID'\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @WatchChanges()\n    @Input()\n    public primaryKey;\n\n    /**\n     * Get/Sets the message displayed when there are no records.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"Data\" [emptyGridMessage]=\"'The grid is empty'\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @Input()\n    set emptyGridMessage(value: string) {\n        this._emptyGridMessage = value;\n    }\n    get emptyGridMessage(): string {\n        return this._emptyGridMessage || this.resourceStrings.igx_grid_emptyGrid_message;\n    }\n\n    /**\n     * Gets/Sets whether the grid is going to show a loading indicator.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"Data\" [isLoading]=\"true\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @WatchChanges()\n    @Input()\n    set isLoading(value: boolean) {\n        if (this._isLoading !== value) {\n            this._isLoading = value;\n            this.evaluateLoadingState();\n        }\n        Promise.resolve().then(() => {\n            // wait for the current detection cycle to end before triggering a new one.\n            this.notifyChanges();\n        });\n    }\n\n    get isLoading(): boolean {\n        return this._isLoading;\n    }\n\n    /**\n     * Gets/Sets whether the columns should be auto-generated once again after the initialization of the grid\n     * @remarks\n     * This will allow to bind the grid to remote data and having auto-generated columns at the same time.\n     * Note that after generating the columns, this property would be disabled to avoid re-creating\n     * columns each time a new data is assigned.\n     * @example\n     * ```typescript\n     *  this.grid.shouldGenerate = true;\n     * ```\n     */\n    public shouldGenerate: boolean;\n\n    /**\n     * Gets/Sets the message displayed when there are no records and the grid is filtered.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"Data\" [emptyGridMessage]=\"'The grid is empty'\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @Input()\n    set emptyFilteredGridMessage(value: string) {\n        this._emptyFilteredGridMessage = value;\n    }\n\n    get emptyFilteredGridMessage(): string {\n        return this._emptyFilteredGridMessage || this.resourceStrings.igx_grid_emptyFilteredGrid_message;\n    }\n\n    /**\n     * Gets/Sets the title to be displayed in the built-in column hiding UI.\n     * @example\n     * ```html\n     * <igx-grid [showToolbar]=\"true\" [columnHiding]=\"true\" columnHidingTitle=\"Column Hiding\"></igx-grid>\n     * ```\n     */\n    @Input()\n    public columnHidingTitle = '';\n\n    /**\n     * Gets/Sets the initial pinning configuration.\n     * @remarks\n     * Allows to apply pinning the columns to the start or the end.\n     * Note that pinning to both sides at a time is not allowed.\n     * @example\n     * ```html\n     * <igx-grid [pinning]=\"pinningConfig\"></igx-grid>\n     * ```\n     */\n    @Input()\n    get pinning() {\n        return this._pinning;\n    }\n    set pinning(value) {\n        if (value !== this._pinning) {\n            this.resetCaches();\n        }\n        this._pinning = value;\n    }\n\n\n    /**\n     * Gets/Sets if the built-in column pinning UI should be shown in the toolbar.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"localData\" [columnPinning]=\"'true\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @WatchChanges()\n    @Input()\n    get columnPinning() {\n        return this._columnPinning;\n    }\n    set columnPinning(value) {\n        if (this._columnPinning !== value) {\n            this._columnPinning = value;\n            if (!this._init) {\n                this.notifyChanges(true);\n            }\n        }\n    }\n\n    /**\n     * Gets/Sets the title to be displayed in the UI of the column pinning.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"localData\" [columnPinning]=\"'true\" [columnPinningTitle]=\"'Column Hiding'\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @Input()\n    public columnPinningTitle = '';\n\n    /**\n     * Gets/Sets if the filtering is enabled.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"localData\" [allowFiltering]=\"true\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @Input()\n    get allowFiltering() {\n        return this._allowFiltering;\n    }\n\n    set allowFiltering(value) {\n        if (this._allowFiltering !== value) {\n            this._allowFiltering = value;\n            this.filteringService.registerSVGIcons();\n\n            if (!this._init) {\n                this.calcGridHeadRow();\n            }\n\n            this.filteringService.isFilterRowVisible = false;\n            this.filteringService.filteredColumn = null;\n\n            this.notifyChanges(true);\n        }\n    }\n\n    /**\n     * Gets/Sets a value indicating whether the advanced filtering is enabled.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"localData\" [allowAdvancedFiltering]=\"true\" [showToolbar]=\"true\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @Input()\n    get allowAdvancedFiltering() {\n        return this._allowAdvancedFiltering;\n    }\n\n    set allowAdvancedFiltering(value) {\n        if (this._allowAdvancedFiltering !== value) {\n            this._allowAdvancedFiltering = value;\n            this.filteringService.registerSVGIcons();\n\n            if (!this._init) {\n                this.notifyChanges(true);\n            }\n        }\n    }\n\n    /**\n     * Gets/Sets the filter mode.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"localData\" [filterMode]=\"'quickFilter'\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     * @remarks\n     * By default it's set to FilterMode.quickFilter.\n     */\n    @Input()\n    get filterMode() {\n        return this._filterMode;\n    }\n\n    set filterMode(value) {\n        this._filterMode = value;\n\n        if (this.filteringService.isFilterRowVisible) {\n            this.filteringRow.close();\n        }\n        this.notifyChanges(true);\n    }\n\n    /**\n     * Gets/Sets the summary position.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"localData\" summaryPosition=\"top\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     * @remarks\n     * By default it is bottom.\n     */\n    @Input()\n    get summaryPosition() {\n        return this._summaryPosition;\n    }\n\n    set summaryPosition(value) {\n        this._summaryPosition = value;\n        this.notifyChanges();\n    }\n\n    /**\n     * Gets/Sets the summary calculation mode.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"localData\" summaryCalculationMode=\"rootLevelOnly\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     * @remarks\n     * By default it is rootAndChildLevels which means the summaries are calculated for the root level and each child level.\n     */\n    @Input()\n    get summaryCalculationMode() {\n        return this._summaryCalculationMode;\n    }\n\n    set summaryCalculationMode(value) {\n        this._summaryCalculationMode = value;\n        if (!this._init) {\n            this.endEdit(true);\n            this.summaryService.resetSummaryHeight();\n            this.notifyChanges(true);\n        }\n    }\n\n    /**\n     * Gets/Sets the filtering strategy of the grid.\n     * @example\n     * ```html\n     *  <igx-grid #grid [data]=\"localData\" [filterStrategy]=\"filterStrategy\"></igx-grid>\n     * ```\n     */\n    @Input()\n    get filterStrategy(): IFilteringStrategy {\n        return this._filteringStrategy;\n    }\n\n    set filterStrategy(classRef: IFilteringStrategy) {\n        this._filteringStrategy = classRef;\n    }\n\n    /**\n     * Gets/Sets the sorting strategy of the grid.\n     * @example\n     * ```html\n     *  <igx-grid #grid [data]=\"localData\" [sortStrategy]=\"sortStrategy\"></igx-grid>\n     * ```\n     */\n    @Input()\n    get sortStrategy(): IGridSortingStrategy {\n        return this._sortingStrategy;\n    }\n\n    set sortStrategy(value: IGridSortingStrategy) {\n        this._sortingStrategy = value;\n    }\n\n    /**\n     * Gets/Sets a unique values strategy used by the Excel Style Filtering\n     * @remarks\n     * Provides a callback for loading unique column values on demand.\n     * If this property is provided, the unique values it generates will be used by the Excel Style Filtering.\n     * @example\n     * ```html\n     * <igx-grid [data]=\"localData\" [filterMode]=\"'excelStyleFilter'\" [uniqueColumnValuesStrategy]=\"columnValuesStrategy\"></igx-grid>\n     * ```\n     */\n    @Input()\n    public uniqueColumnValuesStrategy: (column: IgxColumnComponent,\n        filteringExpressionsTree: IFilteringExpressionsTree,\n        done: (values: any[]) => void) => void;\n\n    /**\n     * Emitted when `IgxGridCellComponent` is clicked.\n     * @remarks\n     * Returns the `IgxGridCellComponent`.\n     * @example\n     * ```html\n     * <igx-grid #grid (onCellClick)=\"onCellClick($event)\" [data]=\"localData\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @Output()\n    public onCellClick = new EventEmitter<IGridCellEventArgs>();\n\n    /**\n     * Emitted when `IgxGridCellComponent` is selected.\n     * @remarks\n     *  Returns the `IgxGridCellComponent`.\n     * @example\n     * ```html\n     * <igx-grid #grid (onSelection)=\"onCellSelect($event)\" [data]=\"localData\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @Output()\n    public onSelection = new EventEmitter<IGridCellEventArgs>();\n\n    /**\n     *  Emitted when `IgxGridRowComponent` is selected.\n     * @example\n     * ```html\n     * <igx-grid #grid (onRowSelectionChange)=\"onCellClickChange($event)\" [data]=\"localData\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @Output()\n    public onRowSelectionChange = new EventEmitter<IRowSelectionEventArgs>();\n\n   /**\n    *  Emitted when `IgxColumnComponent` is selected.\n    * @example\n    * ```html\n    * <igx-grid #grid (onColumnSelectionChange)=\"onColumnSelectionChange($event)\" [data]=\"localData\" [autoGenerate]=\"true\"></igx-grid>\n    * ```\n    */\n    @Output()\n    public onColumnSelectionChange = new EventEmitter<IColumnSelectionEventArgs>();\n\n    /**\n     * Emitted when `IgxColumnComponent` is pinned.\n     * @remarks\n     * The index that the column is inserted at may be changed through the `insertAtIndex` property.\n     * @example\n     * ```typescript\n     * public columnPinning(event) {\n     *     if (event.column.field === \"Name\") {\n     *       event.insertAtIndex = 0;\n     *     }\n     * }\n     * ```\n     */\n    @Output()\n    public onColumnPinning = new EventEmitter<IPinColumnEventArgs>();\n\n    /**\n     * Emitted when editing and **not** submitting the value.\n     * @remarks\n     * (e.g. `Esc` key was pressed)\n     * This event is cancelable.\n     * @example\n     * ```html\n     * <igx-grid #grid3 (onCellEditCancel)=\"editCancel($event)\" [data]=\"data\" [primaryKey]=\"'ProductID'\">\n     * </igx-grid>\n     * ```\n     */\n    @Output()\n    public onCellEditCancel = new EventEmitter<IGridEditEventArgs>();\n\n    /**\n     * Emitted when cell enters edit mode.\n     * @remarks\n     * This event is cancelable.\n     * @example\n     * ```html\n     * <igx-grid #grid3 (onCellEditEnter)=\"editStart($event)\" [data]=\"data\" [primaryKey]=\"'ProductID'\">\n     * </igx-grid>\n     * ```\n     */\n    @Output()\n    public onCellEditEnter = new EventEmitter<IGridEditEventArgs>();\n\n    /**\n     * Emitted when cell has been edited.\n     * @remarks\n     * Event is fired after editing is completed, when the cell is exiting edit mode.\n     * This event is cancelable.\n     * @example\n     * ```html\n     * <igx-grid #grid3 (onCellEdit)=\"editDone($event)\" [data]=\"data\" [primaryKey]=\"'ProductID'\">\n     * </igx-grid>\n     * ```\n     */\n    @Output()\n    public onCellEdit = new EventEmitter<IGridEditEventArgs>();\n\n    /**\n     * Emitted when a row enters edit mode.\n     * @remarks\n     * Emitted when [rowEditable]=\"true\".\n     * This event is cancelable.\n     * @example\n     * ```html\n     * <igx-grid #grid3 (onRowEditEnter)=\"editStart($event)\" [primaryKey]=\"'ProductID'\" [rowEditable]=\"true\">\n     * </igx-grid>\n     * ```\n     */\n    @Output()\n    public onRowEditEnter = new EventEmitter<IGridEditEventArgs>();\n\n    /**\n     * Emitted when exiting edit mode for a row.\n     * @remarks\n     * Emitted when [rowEditable]=\"true\" & `endEdit(true)` is called.\n     * Emitted when changing rows during edit mode, selecting an un-editable cell in the edited row,\n     * performing paging operation, column resizing, pinning, moving or hitting  `Done`\n     * button inside of the rowEditingOverlay, or hitting the `Enter` key while editing a cell.\n     * This event is cancelable.\n     * @example\n     * ```html\n     * <igx-grid #grid3 (onRowEdit)=\"editDone($event)\" [data]=\"data\" [primaryKey]=\"'ProductID'\" [rowEditable]=\"true\">\n     * </igx-grid>\n     * ```\n     */\n    @Output()\n    public onRowEdit = new EventEmitter<IGridEditEventArgs>();\n\n    /**\n     * Emitted when row editing is canceled.\n     * @remarks\n     * Emits when [rowEditable]=\"true\" & `endEdit(false)` is called.\n     * Emitted when changing hitting `Esc` key during cell editing and when click on the `Cancel` button\n     * in the row editing overlay.\n     * This event is cancelable.\n     * @example\n     * ```html\n     * <igx-grid #grid3 (onRowEditCancel)=\"editCancel($event)\" [data]=\"data\" [primaryKey]=\"'ProductID'\" [rowEditable]=\"true\">\n     * </igx-grid>\n     * ```\n     */\n    @Output()\n    public onRowEditCancel = new EventEmitter<IGridEditEventArgs>();\n\n    /**\n     * Emitted when a column is initialized.\n     * @remarks\n     * Returns the column object.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"localData\" [onColumnInit]=\"initColumns($event)\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @Output()\n    public onColumnInit = new EventEmitter<IgxColumnComponent>();\n\n    /**\n     * Emitted when sorting is performed through the UI.\n     * @remarks\n     * Returns the sorting expression.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"localData\" [autoGenerate]=\"true\" (onSortingDone)=\"sortingDone($event)\"></igx-grid>\n     * ```\n     */\n    @Output()\n    public onSortingDone = new EventEmitter<ISortingExpression | Array<ISortingExpression>>();\n\n    /**\n     * Emitted when filtering is performed through the UI.\n     * @remarks\n     * Returns the filtering expressions tree of the column for which filtering was performed.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"localData\" [height]=\"'305px'\" [autoGenerate]=\"true\" (onFilteringDone)=\"filteringDone($event)\"></igx-grid>\n     * ```\n     */\n    @Output()\n    public onFilteringDone = new EventEmitter<IFilteringExpressionsTree>();\n\n    /**\n     * Emitted when paging is performed.\n     * @remarks\n     * Returns an object consisting of the previous and next pages.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"localData\" [height]=\"'305px'\" [autoGenerate]=\"true\" (onPagingDone)=\"pagingDone($event)\"></igx-grid>\n     * ```\n     */\n    @Output()\n    public onPagingDone = new EventEmitter<IPageEventArgs>();\n\n    /**\n     * Emitted when a row added through the API.\n     * @remarks\n     * Returns the data for the new `IgxGridRowComponent` object.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"localData\" (onRowAdded)=\"rowAdded($event)\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @Output()\n    public onRowAdded = new EventEmitter<IRowDataEventArgs>();\n\n    /**\n     * Emitted when a row is deleted through API.\n     * @remarks\n     * Returns an `IRowDataEventArgs` object.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"localData\" (onRowDeleted)=\"rowDeleted($event)\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @Output()\n    public onRowDeleted = new EventEmitter<IRowDataEventArgs>();\n\n    /**\n     * Emitted when a new chunk of data is loaded from virtualization.\n     * @example\n     * ```typescript\n     *  <igx-grid #grid [data]=\"localData\" [autoGenerate]=\"true\" (onDataPreLoad)='handleDataPreloadEvent()'></igx-grid>\n     * ```\n     */\n    @Output()\n    public onDataPreLoad = new EventEmitter<IForOfState>();\n\n    /**\n     * Emitted when column is resized.\n     * @remarks\n     * Returns the `IgxColumnComponent` object's old and new width.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"localData\" (onColumnResized)=\"resizing($event)\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @Output()\n    public onColumnResized = new EventEmitter<IColumnResizeEventArgs>();\n\n    /**\n     * Emitted when a cell is right clicked.\n     * @remarks\n     * Returns the `IgxGridCellComponent` object.\n     * ```html\n     * <igx-grid #grid [data]=\"localData\" (onContextMenu)=\"contextMenu($event)\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @Output()\n    public onContextMenu = new EventEmitter<IGridCellEventArgs>();\n\n    /**\n     * Emitted when a cell is double clicked.\n     * @remarks\n     * Returns the `IgxGridCellComponent` object.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"localData\" (onDoubleClick)=\"dblClick($event)\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @Output()\n    public onDoubleClick = new EventEmitter<IGridCellEventArgs>();\n\n    /**\n     * Emitted when column visibility is changed.\n     * @remarks\n     * Args: { column: any, newValue: boolean }\n     * @example\n     * ```html\n     * <igx-grid [columnHiding]=\"true\" [showToolbar]=\"true\" (onColumnVisibilityChanged)=\"visibilityChanged($event)\"></igx-grid>\n     * ```\n     */\n    @Output()\n    public onColumnVisibilityChanged = new EventEmitter<IColumnVisibilityChangedEventArgs>();\n\n    /**\n     * Emitted when column moving starts.\n     * @remarks\n     * Returns the moved `IgxColumnComponent` object.\n     * @example\n     * ```html\n     * <igx-grid [columnHiding]=\"true\" [showToolbar]=\"true\" (onColumnMovingStart)=\"movingStart($event)\"></igx-grid>\n     * ```\n     */\n    @Output()\n    public onColumnMovingStart = new EventEmitter<IColumnMovingStartEventArgs>();\n\n    /**\n     * Emitted during the column moving operation.\n     * @remarks\n     * Returns the source and target `IgxColumnComponent` objects. This event is cancelable.\n     * @example\n     * ```html\n     * <igx-grid [columnHiding]=\"true\" [showToolbar]=\"true\" (onColumnMoving)=\"moving($event)\"></igx-grid>\n     * ```\n     */\n    @Output()\n    public onColumnMoving = new EventEmitter<IColumnMovingEventArgs>();\n\n    /**\n     * Emitted when column moving ends.\n     * @remarks\n     * Returns the source and target `IgxColumnComponent` objects.\n     * @example\n     * ```html\n     * <igx-grid [columnHiding]=\"true\" [showToolbar]=\"true\" (onColumnMovingEnd)=\"movingEnds($event)\"></igx-grid>\n     * ```\n     */\n    @Output()\n    public onColumnMovingEnd = new EventEmitter<IColumnMovingEndEventArgs>();\n\n    /**\n     * Emitted when keydown is triggered over element inside grid's body.\n     * @remarks\n     * This event is fired only if the key combination is supported in the grid.\n     * Return the target type, target object and the original event. This event is cancelable.\n     * @example\n     * ```html\n     *  <igx-grid (onGridKeydown)=\"customKeydown($event)\"></igx-grid>\n     * ```\n     */\n    @Output()\n    public onGridKeydown = new EventEmitter<IGridKeydownEventArgs>();\n\n    /**\n     * Emitted when start dragging a row.\n     * @remarks\n     * Return the dragged row.\n     */\n    @Output()\n    public onRowDragStart = new EventEmitter<IRowDragStartEventArgs>();\n\n    /**\n     * Emitted when dropping a row.\n     * @remarks\n     * Return the dropped row.\n     */\n    @Output()\n    public onRowDragEnd = new EventEmitter<IRowDragEndEventArgs>();\n\n    /**\n     * Emitted when a copy operation is executed.\n     * @remarks\n     * Fired only if copy behavior is enabled through the [`clipboardOptions`]{@link IgxGridBaseDirective#clipboardOptions}.\n     */\n    @Output()\n    onGridCopy = new EventEmitter<IGridClipboardEvent>();\n\n    /**\n     * @hidden @internal\n     */\n    @Output()\n    public expansionStatesChange = new EventEmitter<Map<any, boolean>>();\n\n    /**\n     * Emitted when the expanded state of a row gets changed.\n     * @example\n     * ```html\n     * <igx-grid [data]=\"employeeData\" (onRowToggle)=\"rowToggle($event)\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @Output()\n    public onRowToggle = new EventEmitter<IRowToggleEventArgs>();\n\n    /**\n     * Emitted when the pinned state of a row is changed.\n     * @example\n     * ```html\n     * <igx-grid [data]=\"employeeData\" (onRowPinning)=\"rowPin($event)\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @Output()\n    public onRowPinning = new EventEmitter<IPinRowEventArgs>();\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild(IgxGridColumnResizerComponent)\n    public resizeLine: IgxGridColumnResizerComponent;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('loadingOverlay', { static: true })\n    public loadingOverlay: ElementRef;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('igxLoadingOverlayOutlet', { read: IgxOverlayOutletDirective, static: true })\n    public loadingOutlet: IgxOverlayOutletDirective;\n\n    /**\n     * @hidden @internal\n     */\n    @ContentChildren(IgxColumnComponent, { read: IgxColumnComponent, descendants: true })\n    public columnList: QueryList<IgxColumnComponent> = new QueryList<IgxColumnComponent>();\n\n    /**\n     * @hidden @internal\n     */\n    @ContentChild(IgxExcelStyleSortingTemplateDirective, { read: IgxExcelStyleSortingTemplateDirective })\n    public excelStyleSortingTemplateDirective: IgxExcelStyleSortingTemplateDirective;\n\n    /**\n     * @hidden @internal\n     */\n    @ContentChild(IgxExcelStyleMovingTemplateDirective, { read: IgxExcelStyleMovingTemplateDirective })\n    public excelStyleMovingTemplateDirective: IgxExcelStyleMovingTemplateDirective;\n\n    /**\n     * @hidden @internal\n     */\n    @ContentChild(IgxExcelStyleHidingTemplateDirective, { read: IgxExcelStyleHidingTemplateDirective })\n    public excelStyleHidingTemplateDirective: IgxExcelStyleHidingTemplateDirective;\n\n    /**\n     * @hidden @internal\n     */\n    @ContentChild(IgxExcelStyleSelectingTemplateDirective, { read: IgxExcelStyleSelectingTemplateDirective })\n    public excelStyleSelectingTemplateDirective: IgxExcelStyleSelectingTemplateDirective;\n\n    /**\n     * @hidden @internal\n     */\n    @ContentChild(IgxExcelStylePinningTemplateDirective, { read: IgxExcelStylePinningTemplateDirective })\n    public excelStylePinningTemplateDirective: IgxExcelStylePinningTemplateDirective;\n\n    /**\n     * @hidden @internal\n     */\n    @ContentChild(IgxExcelStyleLoadingValuesTemplateDirective, { read: IgxExcelStyleLoadingValuesTemplateDirective, static: true })\n    public excelStyleLoadingValuesTemplateDirective: IgxExcelStyleLoadingValuesTemplateDirective;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChildren(IgxGridHeaderGroupComponent, { read: IgxGridHeaderGroupComponent })\n    public headerGroups: QueryList<IgxGridHeaderGroupComponent>;\n\n    /**\n     * A list of all `IgxGridHeaderGroupComponent`.\n     * @example\n     * ```typescript\n     * const headerGroupsList = this.grid.headerGroupsList;\n     * ```\n     */\n    get headerGroupsList(): IgxGridHeaderGroupComponent[] {\n        return this.headerGroups ? flatten(this.headerGroups.toArray()) : [];\n    }\n\n    /**\n     * A list of all `IgxGridHeaderComponent`.\n     * @example\n     * ```typescript\n     * const headers = this.grid.headerCellList;\n     * ```\n     */\n    get headerCellList(): IgxGridHeaderComponent[] {\n        return this.headerGroupsList.map((headerGroup) => headerGroup.headerCell).filter((headerCell) => headerCell);\n    }\n\n    /**\n     * A list of all `IgxGridFilteringCellComponent`.\n     * @example\n     * ```typescript\n     * const filterCells = this.grid.filterCellList;\n     * ```\n     */\n    get filterCellList(): IgxGridFilteringCellComponent[] {\n        return this.headerGroupsList.map((headerGroup) => headerGroup.filterCell).filter((filterCell) => filterCell);\n    }\n\n    @ViewChildren('row')\n    private _rowList: QueryList<IgxGridRowComponent>;\n\n    @ViewChildren('pinnedRow')\n    private _pinnedRowList: QueryList<IgxGridRowComponent>;\n\n    @ViewChildren('summaryRow', { read: IgxSummaryRowComponent })\n    protected _summaryRowList: QueryList<IgxSummaryRowComponent>;\n\n    /**\n     * @hidden @internal\n     */\n    public get summariesRowList() {\n        const res = new QueryList<any>();\n        if (!this._summaryRowList) {\n            return res;\n        }\n        const sumList = this._summaryRowList.filter((item) => {\n            return item.element.nativeElement.parentElement !== null;\n        });\n        res.reset(sumList);\n        return res;\n    }\n\n    /**\n     * A list of `IgxGridRowComponent`.\n     * @example\n     * ```typescript\n     * const rowList = this.grid.rowList;\n     * ```\n     */\n    public get rowList() {\n        const res = new QueryList<any>();\n        if (!this._rowList) {\n            return res;\n        }\n        const rList = this._rowList\n            .filter((item) => {\n                return item.element.nativeElement.parentElement !== null;\n            })\n            .sort((a, b) => {\n                return a.index - b.index;\n            });\n        res.reset(rList);\n        return res;\n    }\n\n    @ViewChildren(IgxRowDirective, { read: IgxRowDirective })\n    private _dataRowList: QueryList<IgxRowDirective<IgxGridBaseDirective>>;\n\n    /**\n     * A list of currently rendered `IgxGridRowComponent`'s.\n     * @example\n     * ```typescript\n     * const dataList = this.grid.dataRowList;\n     * ```\n     */\n    public get dataRowList(): QueryList<IgxRowDirective<IgxGridBaseDirective>> {\n        const res = new QueryList<IgxRowDirective<IgxGridBaseDirective>>();\n        if (!this._dataRowList) {\n            return res;\n        }\n        const rList = this._dataRowList.filter((item) => {\n            return item.element.nativeElement.parentElement !== null;\n        }).sort((a, b) => {\n            return a.index - b.index;\n        });\n        res.reset(rList);\n        return res;\n    }\n\n    /**\n     * A template reference for the template when the filtered grid is empty.\n     * @example\n     * ```\n     * const emptyTempalte = this.grid.emptyGridTemplate;\n     * ```\n     */\n    @ViewChild('emptyFilteredGrid', { read: TemplateRef, static: true })\n    public emptyFilteredGridTemplate: TemplateRef<any>;\n\n    /**\n     * A template reference for the template when the grid is empty.\n     * @example\n     * ```\n     * const emptyTempalte = this.grid.emptyGridTemplate;\n     * ```\n     */\n    @ViewChild('defaultEmptyGrid', { read: TemplateRef, static: true })\n    public emptyGridDefaultTemplate: TemplateRef<any>;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('defaultLoadingGrid', { read: TemplateRef, static: true })\n    public loadingGridDefaultTemplate: TemplateRef<any>;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('scrollContainer', { read: IgxGridForOfDirective, static: true })\n    public parentVirtDir: IgxGridForOfDirective<any>;\n\n    /**\n     * Returns the template which will be used by the toolbar to show custom content.\n     * @example\n     * ```typescript\n     * let customContentTemplate = this.grid.toolbarCustomContentTemplate;\n     * ```\n     */\n    public get toolbarCustomContentTemplate(): IgxGridToolbarCustomContentDirective {\n        return this.toolbarCustomContentTemplates.first;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @ContentChildren(IgxGridToolbarCustomContentDirective, { read: IgxGridToolbarCustomContentDirective, descendants: false })\n    public toolbarCustomContentTemplates: QueryList<IgxGridToolbarCustomContentDirective>;\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public get headSelectorTemplate(): TemplateRef<IgxHeadSelectorDirective> {\n        if (this.headSelectorsTemplates && this.headSelectorsTemplates.first) {\n            return this.headSelectorsTemplates.first.templateRef;\n        }\n\n        return null;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @ContentChildren(IgxHeadSelectorDirective, { read: IgxHeadSelectorDirective, descendants: false })\n    public headSelectorsTemplates: QueryList<IgxHeadSelectorDirective>;\n\n    /**\n     * @hidden\n     * @internal\n     */\n    get isPinningToStart() {\n        return this.pinning.columns !== ColumnPinningPosition.End;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    get isRowPinningToTop() {\n        return this.pinning.rows !== RowPinningPosition.Bottom;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public get rowSelectorTemplate(): TemplateRef<IgxRowSelectorDirective> {\n        if (this.rowSelectorsTemplates && this.rowSelectorsTemplates.first) {\n            return this.rowSelectorsTemplates.first.templateRef;\n        }\n\n        return null;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @ContentChildren(IgxRowSelectorDirective, { read: IgxRowSelectorDirective, descendants: false })\n    public rowSelectorsTemplates: QueryList<IgxRowSelectorDirective>;\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @ContentChildren(IgxRowDragGhostDirective, { read: TemplateRef, descendants: false })\n    public dragGhostCustomTemplates: QueryList<TemplateRef<any>>;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('verticalScrollContainer', { read: IgxGridForOfDirective, static: true })\n    public verticalScrollContainer: IgxGridForOfDirective<any>;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('verticalScrollHolder', { read: IgxGridForOfDirective, static: true })\n    public verticalScroll: IgxGridForOfDirective<any>;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('scr', { read: ElementRef, static: true })\n    public scr: ElementRef;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('footer', { read: ElementRef })\n    public footer: ElementRef;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('hContainer', { read: IgxGridForOfDirective, static: true })\n    public headerContainer: IgxGridForOfDirective<any>;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('headerSelectorContainer')\n    public headerSelectorContainer: ElementRef;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('headerDragContainer')\n    public headerDragContainer: ElementRef;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('headerGroupContainer')\n    public headerGroupContainer: ElementRef;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('filteringRow', { read: IgxGridFilteringRowComponent })\n    public filteringRow: IgxGridFilteringRowComponent;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('theadRow', { static: true })\n    public theadRow: ElementRef;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('tbody', { static: true })\n    public tbody: ElementRef;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('pinContainer', { read: ElementRef })\n    public pinContainer: ElementRef;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('tfoot', { static: true })\n    public tfoot: ElementRef;\n\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('igxFilteringOverlayOutlet', { read: IgxOverlayOutletDirective, static: true })\n    protected _outletDirective: IgxOverlayOutletDirective;\n\n    /**\n     * @hidden @internal\n     */\n    public get outletDirective() {\n        return this._outletDirective;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('igxRowEditingOverlayOutlet', { read: IgxOverlayOutletDirective, static: true })\n    public rowEditingOutletDirective: IgxOverlayOutletDirective;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChildren(IgxTemplateOutletDirective, { read: IgxTemplateOutletDirective })\n    public tmpOutlets: QueryList<any> = new QueryList<any>();\n\n\n    /**\n     * @hidden @internal\n     */\n    public get rowOutletDirective() {\n        return this.rowEditingOutletDirective;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public get parentRowOutletDirective() {\n        return this.outletDirective;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @ViewChild('dragIndicatorIconBase', { read: TemplateRef, static: true })\n    public dragIndicatorIconBase: TemplateRef<any>;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('defaultRowEditTemplate', { read: TemplateRef, static: true })\n    private defaultRowEditTemplate: TemplateRef<any>;\n\n    /**\n     * @hidden @internal\n     */\n    @ContentChild(IgxRowEditTemplateDirective, { read: TemplateRef })\n    public rowEditCustom: TemplateRef<any>;\n\n    /**\n     * @hidden @internal\n     */\n    public get rowEditContainer(): TemplateRef<any> {\n        return this.rowEditCustom ? this.rowEditCustom : this.defaultRowEditTemplate;\n    }\n    /**\n     * @hidden @internal\n     */\n    @ContentChild(IgxRowEditTextDirective, { read: TemplateRef })\n    public rowEditText: TemplateRef<any>;\n\n    /**\n     * @hidden @internal\n     */\n    @ContentChild(IgxRowEditActionsDirective, { read: TemplateRef })\n    public rowEditActions: TemplateRef<any>;\n\n\n    /**\n     * The custom template, if any, that should be used when rendering a row expand indicator.\n     */\n    @ContentChild(IgxRowExpandedIndicatorDirective, { read: TemplateRef })\n    public rowExpandedIndicatorTemplate: TemplateRef<any> = null;\n\n    /**\n     * The custom template, if any, that should be used when rendering a row collapse indicator.\n     */\n    @ContentChild(IgxRowCollapsedIndicatorDirective, { read: TemplateRef })\n    public rowCollapsedIndicatorTemplate: TemplateRef<any> = null;\n\n    /**\n     * The custom template, if any, that should be used when rendering a header expand indicator.\n     */\n    @ContentChild(IgxHeaderExpandIndicatorDirective, { read: TemplateRef })\n    public headerExpandIndicatorTemplate: TemplateRef<any> = null;\n\n    /**\n     * The custom template, if any, that should be used when rendering a header collapse indicator.\n     */\n    @ContentChild(IgxHeaderCollapseIndicatorDirective, { read: TemplateRef })\n    public headerCollapseIndicatorTemplate: TemplateRef<any> = null;\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @ContentChildren(IgxDragIndicatorIconDirective, { read: TemplateRef, descendants: false })\n    public dragIndicatorIconTemplates: QueryList<TemplateRef<any>>;\n\n    /**\n     * The custom template, if any, that should be used when rendering the row drag indicator icon\n     */\n    public get dragIndicatorIconTemplate(): TemplateRef<any> {\n        return this._customDragIndicatorIconTemplate || this.dragIndicatorIconTemplates.first;\n    }\n\n    public set dragIndicatorIconTemplate(val: TemplateRef<any>) {\n        this._customDragIndicatorIconTemplate = val;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public get rowInEditMode(): IgxRowDirective<IgxGridBaseDirective & GridType> {\n        const editRowState = this.crudService.row;\n        return editRowState !== null ? this.rowList.find(e => e.rowID === editRowState.id) : null;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public get firstEditableColumnIndex(): number {\n        const index = this.visibleColumns.filter(col => col.editable)\n            .map(c => c.visibleIndex).sort((a, b) => a - b);\n        return index.length ? index[0] : null;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public get lastEditableColumnIndex(): number {\n        const index = this.visibleColumns.filter(col => col.editable)\n            .map(c => c.visibleIndex).sort((a, b) => a > b ? -1 : 1);\n        return index.length ? index[0] : null;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChildren(IgxRowEditTabStopDirective)\n    public rowEditTabsDEFAULT: QueryList<IgxRowEditTabStopDirective>;\n\n    /**\n     * @hidden @internal\n     */\n    @ContentChildren(IgxRowEditTabStopDirective)\n    public rowEditTabsCUSTOM: QueryList<IgxRowEditTabStopDirective>;\n\n    /**\n     * @hidden @internal\n     * TODO: Nav service logic doesn't handle 0 results from this querylist\n     */\n    public get rowEditTabs(): QueryList<IgxRowEditTabStopDirective> {\n        return this.rowEditTabsCUSTOM.length ? this.rowEditTabsCUSTOM : this.rowEditTabsDEFAULT;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild(IgxToggleDirective)\n    public rowEditingOverlay: IgxToggleDirective;\n\n    /**\n     * @hidden @internal\n     */\n    @HostBinding('attr.tabindex')\n    public tabindex = 0;\n\n    get activeDescendant() {\n        const activeElem = this.navigation.activeNode;\n        if (activeElem) {\n            return !this.navigation.isDataRow(activeElem.row, true) ? this.id + '_' + activeElem.row :\n                this.id + '_' + activeElem.row + '_' + activeElem.column;\n        }\n        return null;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    @HostBinding('attr.class')\n    get hostClass(): string {\n        const classes = [this.getComponentDensityClass('igx-grid')];\n        // The custom classes should be at the end.\n        classes.push(this.class);\n        return classes.join(' ');\n    }\n\n    get bannerClass(): string {\n        const position = this.rowEditPositioningStrategy.isTop ? 'igx-banner__border-top' : 'igx-banner__border-bottom';\n        return `${this.getComponentDensityClass('igx-banner')} ${position}`;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    @HostBinding('attr.role')\n    public hostRole = 'grid';\n\n    /**\n     * @hidden @internal\n     */\n    get pipeTrigger(): number {\n        return this._pipeTrigger;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    get filteringPipeTrigger(): number {\n        return this._filteringPipeTrigger;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    get summaryPipeTrigger(): number {\n        return this._summaryPipeTrigger;\n    }\n\n    /**\n     * Gets/Sets the sorting state.\n     * @remarks\n     * Supports two-way data binding.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"Data\" [autoGenerate]=\"true\" [(sortingExpressions)]=\"model.sortingExpressions\"></igx-grid>\n     * ```\n     */\n    @WatchChanges()\n    @Input()\n    get sortingExpressions(): ISortingExpression[] {\n        return this._sortingExpressions;\n    }\n\n    set sortingExpressions(value: ISortingExpression[]) {\n        this._sortingExpressions = cloneArray(value);\n        this.sortingExpressionsChange.emit(this._sortingExpressions);\n        this.notifyChanges();\n    }\n\n    /**\n     * Emitted before sorting is performed.\n     * @remarks\n     * Returns the sorting expressions.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"localData\" [autoGenerate]=\"true\" (sortingExpressionsChange)=\"sortingExprChange($event)\"></igx-grid>\n     * ```\n     */\n    @Output()\n    public sortingExpressionsChange = new EventEmitter<ISortingExpression[]>();\n\n    /**\n     * @hidden @internal\n     */\n    get maxLevelHeaderDepth() {\n        if (this._maxLevelHeaderDepth === null) {\n            this._maxLevelHeaderDepth = this.hasColumnLayouts ?\n                this.columnList.reduce((acc, col) => Math.max(acc, col.rowStart), 0) :\n                this.columnList.reduce((acc, col) => Math.max(acc, col.level), 0);\n        }\n        return this._maxLevelHeaderDepth;\n    }\n\n    /**\n     * Gets the number of hidden columns.\n     * @example\n     * ```typescript\n     * const hiddenCol = this.grid.hiddenColumnsCount;\n     * ``\n     */\n    get hiddenColumnsCount() {\n        return this.columnList.filter((col) => col.columnGroup === false && col.hidden === true).length;\n    }\n\n    /**\n     * Gets/Sets the text to be displayed inside the toggle button.\n     * @remarks\n     * Used for the built-in column hiding UI of the`IgxColumnComponent`.\n     * @example\n     * ```html\n     * <igx-grid [columnHiding]=\"true\" [showToolbar]=\"true\" [hiddenColumnsText]=\"'Hidden Columns'\"></igx-grid>\n     * ```\n     */\n    @WatchChanges()\n    @Input()\n    get hiddenColumnsText() {\n        return this._hiddenColumnsText;\n    }\n\n    set hiddenColumnsText(value) {\n        this._hiddenColumnsText = value;\n\n    }\n\n    /**\n     * Gets/Sets the text to be displayed inside the toggle button.\n     * @remarks\n     * Used for the built-in column pinning UI of the`IgxColumnComponent`.\n     * @example\n     * ```html\n     * <igx-grid [pinnedColumnsText]=\"'PinnedCols Text\" [data]=\"data\" [width]=\"'100%'\" [height]=\"'500px'\"></igx-grid>\n     * ```\n     */\n    @WatchChanges()\n    @Input()\n    get pinnedColumnsText() {\n        return this._pinnedColumnsText;\n    }\n    set pinnedColumnsText(value) {\n        this._pinnedColumnsText = value;\n    }\n\n    /**\n     * Get transactions service for the grid.\n     */\n    get transactions(): TransactionService<Transaction, State> {\n        return this._transactions;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public columnsWithNoSetWidths = null;\n\n    /* Toolbar related definitions */\n    private _showToolbar = false;\n    private _exportExcel = false;\n    private _exportCsv = false;\n    private _toolbarTitle: string = null;\n    private _exportText: string = null;\n    private _exportExcelText: string = null;\n    private _exportCsvText: string = null;\n    private _rowEditable = false;\n    private _currentRowState: any;\n    private _filteredSortedData = null;\n    /**\n     * @hidden @internal\n     */\n    public get currentRowState(): any {\n        return this._currentRowState;\n    }\n\n    /**\n     * Provides access to the `IgxToolbarComponent`.\n     * @example\n     * ```typescript\n     * const gridToolbar = this.grid.toolbar;\n     * ```\n     */\n    @ViewChild('toolbar', { read: IgxGridToolbarComponent })\n    public toolbar: IgxGridToolbarComponent = null;\n\n    @ViewChild('toolbar', { read: ElementRef })\n    private toolbarHtml: ElementRef = null;\n\n    /**\n     * Gets/Sets whether the toolbar is shown.\n     * @example\n     * ```html\n     * <igx-grid [data]=\"localData\" [showToolbar]=\"true\" [autoGenerate]=\"true\" ></igx-grid>\n     * ```\n     */\n    @WatchChanges()\n    @Input()\n    public get showToolbar(): boolean {\n        return this._showToolbar;\n    }\n    public set showToolbar(newValue: boolean) {\n        if (this._showToolbar !== newValue) {\n            this._showToolbar = newValue;\n            if (!this._init) {\n                this.notifyChanges(true);\n            }\n        }\n    }\n\n    /**\n     * Gets/Sets the toolbar's title.\n     * @example\n     * ```html\n     * <igx-grid [data]=\"localData\" [showToolbar]=\"true\" [autoGenerate]=\"true\" [toolbarTitle]=\"'My Grid'\"></igx-grid>\n     * ```\n     */\n    @WatchChanges()\n    @Input()\n    public get toolbarTitle(): string {\n        return this._toolbarTitle;\n    }\n\n    public set toolbarTitle(newValue: string) {\n        if (this._toolbarTitle !== newValue) {\n            this._toolbarTitle = newValue;\n            if (!this._init) {\n                this.notifyChanges(true);\n            }\n        }\n    }\n\n    /**\n     * Gets/Sets whether exporting to MS Excel is enabled or disabled.\n     * @example\n     * ```html\n     * <igx-grid [data]=\"localData\" [showToolbar]=\"true\" [autoGenerate]=\"true\" [exportExcel]=\"true\"></igx-grid>\n     * ```\n     */\n    @WatchChanges()\n    @Input()\n    public get exportExcel(): boolean {\n        return this.getExportExcel();\n    }\n\n    public set exportExcel(newValue: boolean) {\n        if (this._exportExcel !== newValue) {\n            this._exportExcel = newValue;\n            if (!this._init) {\n                this.notifyChanges(true);\n            }\n        }\n    }\n\n    /**\n     * Gets/Sets whether the option for exporting to CSV is enabled or disabled.\n     * ```html\n     * <igx-grid [data]=\"localData\" [showToolbar]=\"true\" [autoGenerate]=\"true\" [exportCsv]=\"true\"></igx-grid>\n     * ```\n     */\n    @WatchChanges()\n    @Input()\n    public get exportCsv(): boolean {\n        return this.getExportCsv();\n    }\n    public set exportCsv(newValue: boolean) {\n        if (this._exportCsv !== newValue) {\n            this._exportCsv = newValue;\n            if (!this._init) {\n                this.notifyChanges(true);\n            }\n        }\n    }\n\n    /**\n     * Gets/Sets the textual content for the main export button.\n     * @example\n     * ```html\n     * <igx-grid [data]=\"localData\" [showToolbar]=\"true\" [exportText]=\"'My Exporter'\" [exportCsv]=\"true\"></igx-grid>\n     * ```\n     */\n    @WatchChanges()\n    @Input()\n    public get exportText(): string {\n        return this._exportText;\n    }\n\n    public set exportText(newValue: string) {\n        if (this._exportText !== newValue) {\n            this._exportText = newValue;\n            if (!this._init) {\n                this.notifyChanges(true);\n            }\n        }\n    }\n\n    /**\n     * Gets/Sets the textual content for the MS Excel export button.\n     * ```html\n     * <igx-grid [exportExcelText]=\"'My Excel Exporter\" [showToolbar]=\"true\" [exportText]=\"'My Exporter'\" [exportCsv]=\"true\"></igx-grid>\n     * ```\n     */\n    @WatchChanges()\n    @Input()\n    public get exportExcelText(): string {\n        return this._exportExcelText;\n    }\n    public set exportExcelText(newValue: string) {\n        if (this._exportExcelText !== newValue) {\n            this._exportExcelText = newValue;\n            if (!this._init) {\n                this.notifyChanges(true);\n            }\n        }\n    }\n\n    /**\n     * Gets/Sets the textual content for the CSV export button.\n     * @example\n     * ```html\n     * <igx-grid [exportCsvText]=\"'My Csv Exporter\" [showToolbar]=\"true\" [exportText]=\"'My Exporter'\" [exportExcel]=\"true\"></igx-grid>\n     * ```\n     */\n    @WatchChanges()\n    @Input()\n    public get exportCsvText(): string {\n        return this._exportCsvText;\n    }\n    public set exportCsvText(newValue: string) {\n        if (this._exportCsvText !== newValue) {\n            this._exportCsvText = newValue;\n            if (!this._init) {\n                this.notifyChanges(true);\n            }\n        }\n    }\n\n    /**\n     * Controls the copy behavior of the grid.\n     */\n    @Input()\n    clipboardOptions = {\n        /**\n         * Enables/disables the copy behavior\n         */\n        enabled: true,\n        /**\n         * Include the columns headers in the clipboard output.\n         */\n        copyHeaders: true,\n        /**\n         * Apply the columns formatters (if any) on the data in the clipboard output.\n         */\n        copyFormatters: true,\n        /**\n         * The separator used for formatting the copy output. Defaults to `\\t`.\n         */\n        separator: '\\t'\n    };\n\n    /**\n     * Gets/Sets cell selection mode.\n     * @remarks\n     * By default the cell selection mode is multiple\n     * @param selectionMode: GridSelectionMode\n     */\n    @WatchChanges()\n    @Input()\n    get cellSelection() {\n        return this._cellSelectionMode;\n    }\n\n    set cellSelection(selectionMode: GridSelectionMode) {\n        this._cellSelectionMode = selectionMode;\n        if (this.gridAPI.grid) {\n            this.selectionService.clear(true);\n            this.notifyChanges();\n        }\n    }\n\n    /**\n     * Gets/Sets row selection mode\n     * @remarks\n     * By default the row selection mode is none\n     * @param selectionMode: GridSelectionMode\n     */\n    @WatchChanges()\n    @Input()\n    get rowSelection() {\n        return this._rowSelectionMode;\n    }\n\n    set rowSelection(selectionMode: GridSelectionMode) {\n        this._rowSelectionMode = selectionMode;\n        if (this.gridAPI.grid && this.columnList) {\n            this.selectionService.clearAllSelectedRows();\n            this.notifyChanges(true);\n        }\n    }\n\n    /**\n     * Gets/Sets column selection mode\n     * @remarks\n     * By default the row selection mode is none\n     * @param selectionMode: GridSelectionMode\n     */\n    @WatchChanges()\n    @Input()\n    get columnSelection() {\n        return this._columnSelectionMode;\n    }\n\n    set columnSelection(selectionMode: GridSelectionMode) {\n        this._columnSelectionMode = selectionMode;\n        if (this.gridAPI.grid) {\n            this.selectionService.clearAllSelectedColumns();\n            this.notifyChanges(true);\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public rowEditMessage;\n\n    /**\n     * Emitted when an export process is initiated by the user.\n     * @example\n     * ```typescript\n     * toolbarExporting(event: IGridToolbarExportEventArgs){\n     *     const toolbarExporting = event;\n     * }\n     * ```\n     */\n    @Output()\n    public onToolbarExporting = new EventEmitter<IGridToolbarExportEventArgs>();\n\n    /* End of toolbar related definitions */\n\n    /**\n     * Emitted when making a range selection.\n     * @remarks\n     * Range selection can be made either through drag selection or through keyboard selection.\n     */\n    @Output()\n    onRangeSelection = new EventEmitter<GridSelectionRange>();\n\n    /**\n     * @hidden @internal\n     */\n    public pagingState;\n    /**\n     * @hidden @internal\n     */\n    public calcWidth: number;\n    /**\n     * @hidden @internal\n     */\n    public calcHeight = 0;\n    /**\n     * @hidden @internal\n     */\n    public tfootHeight: number;\n    /**\n     * @hidden @internal\n     */\n    public chipsGoupingExpressions = [];\n    /**\n     * @hidden @internal\n     */\n    public summariesHeight: number;\n\n    /**\n     * @hidden @internal\n     */\n    public draggedColumn: IgxColumnComponent;\n\n\n    /**\n     * @hidden @internal\n     */\n    public disableTransitions = false;\n\n    /**\n     * @hidden @internal\n     */\n    public lastSearchInfo: ISearchInfo = {\n        searchText: '',\n        caseSensitive: false,\n        exactMatch: false,\n        activeMatchIndex: 0,\n        matchInfoCache: []\n    };\n\n    /**\n     * @hidden @internal\n     */\n    public columnWidthSetByUser = false;\n\n    /**\n     * @hidden @internal\n     */\n    public pinnedRecords: any[];\n\n    /**\n     * @hidden @internal\n     */\n    public unpinnedRecords: any[];\n\n    data: any[];\n    filteredData: any[];\n\n    /**\n     * @hidden\n     */\n    protected destroy$ = new Subject<any>();\n\n    protected _filteredSortedPinnedData: any[];\n    protected _filteredSortedUnpinnedData: any[];\n    protected _filteredPinnedData: any[];\n\n    /**\n     * @hidden\n     */\n    public _filteredUnpinnedData;\n\n    /**\n     * @hidden\n     */\n    protected _perPage = 15;\n    /**\n     * @hidden\n     */\n    protected _page = 0;\n    /**\n     * @hidden\n     */\n    protected _paging = false;\n    /**\n     * @hidden\n     */\n    protected _hideRowSelectors = false;\n    /**\n     * @hidden\n     */\n    protected _rowDrag = false;\n    /**\n     * @hidden\n     */\n    protected _pipeTrigger = 0;\n    /**\n     * @hidden\n     */\n    protected _filteringPipeTrigger = 0;\n    /**\n     * @hidden\n     */\n    protected _summaryPipeTrigger = 0;\n    /**\n     * @hidden\n     */\n    protected _columns: IgxColumnComponent[] = [];\n    /**\n     * @hidden\n     */\n    protected _pinnedColumns: IgxColumnComponent[] = [];\n    /**\n     * @hidden\n     */\n    protected _unpinnedColumns: IgxColumnComponent[] = [];\n    /**\n     * @hidden\n     */\n    protected _filteringExpressionsTree: IFilteringExpressionsTree = new FilteringExpressionsTree(FilteringLogic.And);\n    /**\n     * @hidden\n     */\n    protected _advancedFilteringExpressionsTree: IFilteringExpressionsTree;\n    /**\n     * @hidden\n     */\n    protected _sortingExpressions: Array<ISortingExpression> = [];\n    /**\n     * @hidden\n     */\n    protected _maxLevelHeaderDepth = null;\n    /**\n     * @hidden\n     */\n    protected _columnHiding = false;\n    /**\n     * @hidden\n     */\n    protected _columnPinning = false;\n\n    protected _pinnedRecordIDs = [];\n\n    /**\n     * @hidden\n     */\n    protected _hasVisibleColumns;\n    protected _allowFiltering = false;\n    protected _allowAdvancedFiltering = false;\n    protected _filterMode = FilterMode.quickFilter;\n\n    protected observer: ResizeObserver = new ResizeObserver(() => { });\n\n    protected resizeNotify = new Subject();\n\n\n    private columnListDiffer;\n    private rowListDiffer;\n    private _hiddenColumnsText = '';\n    private _pinnedColumnsText = '';\n    private _height = '100%';\n    private _width = '100%';\n    private _rowHeight;\n    protected _baseFontSize: number;\n    private _horizontalForOfs: Array<IgxGridForOfDirective<any>> = [];\n    private _multiRowLayoutRowSize = 1;\n    protected _loadingId;\n    protected _expansionStates: Map<any, boolean> = new Map<any, boolean>();\n    protected _defaultExpandState = false;\n    // Caches\n    private _totalWidth = NaN;\n    private _pinnedVisible = [];\n    private _unpinnedVisible = [];\n    private _pinnedWidth = NaN;\n    private _unpinnedWidth = NaN;\n    private _visibleColumns = [];\n    private _columnGroups = false;\n    private _autoGeneratedCols = [];\n    protected _headerFeaturesWidth = NaN;\n\n    private _columnWidth: string;\n\n    protected _defaultTargetRecordNumber = 10;\n\n    private _summaryPosition = GridSummaryPosition.bottom;\n    private _summaryCalculationMode = GridSummaryCalculationMode.rootAndChildLevels;\n    private _cellSelectionMode = GridSelectionMode.multiple;\n    private _rowSelectionMode = GridSelectionMode.none;\n    private _columnSelectionMode = GridSelectionMode.none;\n\n    private rowEditPositioningStrategy = new RowEditPositionStrategy({\n        horizontalDirection: HorizontalAlignment.Right,\n        verticalDirection: VerticalAlignment.Bottom,\n        horizontalStartPoint: HorizontalAlignment.Left,\n        verticalStartPoint: VerticalAlignment.Bottom,\n        closeAnimation: null\n    });\n\n    private rowEditSettings = {\n        scrollStrategy: new AbsoluteScrollStrategy(),\n        modal: false,\n        closeOnOutsideClick: false,\n        outlet: this.rowOutletDirective,\n        positionStrategy: this.rowEditPositioningStrategy\n    };\n\n    private verticalScrollHandler = (event) => {\n        this.verticalScrollContainer.onScroll(event);\n        this.disableTransitions = true;\n\n        this.zone.run(() => {\n            this.zone.onStable.pipe(first()).subscribe(() => {\n                this.verticalScrollContainer.onChunkLoad.emit(this.verticalScrollContainer.state);\n                if (this.rowEditable) {\n                    this.changeRowEditingOverlayStateOnScroll(this.rowInEditMode);\n                }\n            });\n        });\n        this.disableTransitions = false;\n\n        this.hideOverlays();\n    }\n\n    private horizontalScrollHandler = (event) => {\n        const scrollLeft = event.target.scrollLeft;\n        this.headerContainer.onHScroll(scrollLeft);\n        this._horizontalForOfs.forEach(vfor => vfor.onHScroll(scrollLeft));\n        this.cdr.markForCheck();\n\n        this.zone.run(() => {\n            this.zone.onStable.pipe(first()).subscribe(() => {\n                this.parentVirtDir.onChunkLoad.emit(this.headerContainer.state);\n            });\n        });\n\n        this.hideOverlays();\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public get headerFeaturesWidth() {\n        return this._headerFeaturesWidth;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public isDetailRecord(rec) {\n        return false;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public isGroupByRecord(rec) {\n        return false;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public isGhostRecord(record: any): boolean {\n        return record.ghostRecord !== undefined;\n    }\n\n    /**\n     * @hidden\n     * Returns the row index of a row that takes into account the full view data like pinning.\n     */\n    public getDataViewIndex(rowIndex, pinned) {\n        if (pinned && !this.isRowPinningToTop) {\n            rowIndex = rowIndex + this.unpinnedDataView.length;\n        } else if (!pinned && this.isRowPinningToTop) {\n            rowIndex = rowIndex + this.pinnedDataView.length;\n        }\n        return rowIndex;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public get hasDetails() {\n        return false;\n    }\n\n    /**\n     * Returns the state of the grid virtualization.\n     * @remarks\n     * Includes the start index and how many records are rendered.\n     * @example\n     * ```typescript\n     * const gridVirtState = this.grid1.virtualizationState;\n     * ```\n     */\n    get virtualizationState() {\n        return this.verticalScrollContainer.state;\n    }\n\n    /**\n     * @hidden\n     */\n    set virtualizationState(state) {\n        this.verticalScrollContainer.state = state;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public hideOverlays() {\n        this.overlayIDs.forEach(overlayID => {\n            this.overlayService.hide(overlayID);\n            this.overlayService.onClosed.pipe(\n                filter(o => o.id === overlayID),\n                takeUntil(this.destroy$)).subscribe(() => {\n                    this.nativeElement.focus();\n                });\n        });\n    }\n\n    /**\n     * Returns whether the record is pinned or not.\n     *\n     * @param rowIndex Index of the record in the `dataView` collection.\n     *\n     * @hidden\n     * @internal\n     */\n    public isRecordPinnedByViewIndex(rowIndex: number) {\n        return this.hasPinnedRecords && (this.isRowPinningToTop && rowIndex < this.pinnedDataView.length) ||\n            (!this.isRowPinningToTop && rowIndex >= this.unpinnedDataView.length);\n    }\n\n    /**\n     * Returns whether the record is pinned or not.\n     *\n     * @param rowIndex Index of the record in the `filteredSortedData` collection.\n     */\n    public isRecordPinnedByIndex(rowIndex: number) {\n        return this.hasPinnedRecords && (this.isRowPinningToTop && rowIndex < this._filteredSortedPinnedData.length) ||\n            (!this.isRowPinningToTop && rowIndex >= this._filteredSortedUnpinnedData.length);\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public isRecordPinned(rec) {\n        return this.getInitialPinnedIndex(rec) !== -1;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     * Returns the record index in order of pinning by the user. Does not consider sorting/filtering.\n     */\n    public getInitialPinnedIndex(rec) {\n        const id = this.gridAPI.get_row_id(rec);\n        return this._pinnedRecordIDs.indexOf(id);\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public get hasPinnedRecords() {\n        return this._pinnedRecordIDs.length > 0;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public get pinnedRecordsCount() {\n        return this._pinnedRecordIDs.length;\n    }\n\n    constructor(\n        public selectionService: IgxGridSelectionService,\n        public crudService: IgxGridCRUDService,\n        public colResizingService: IgxColumnResizingService,\n        public gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>,\n        @Inject(IgxGridTransaction) protected _transactions: TransactionService<Transaction, State>,\n        private elementRef: ElementRef,\n        private zone: NgZone,\n        @Inject(DOCUMENT) public document,\n        public cdr: ChangeDetectorRef,\n        protected resolver: ComponentFactoryResolver,\n        protected differs: IterableDiffers,\n        protected viewRef: ViewContainerRef,\n        public navigation: IgxGridNavigationService,\n        public filteringService: IgxFilteringService,\n        @Inject(IgxOverlayService) protected overlayService: IgxOverlayService,\n        public summaryService: IgxGridSummaryService,\n        @Optional() @Inject(DisplayDensityToken) protected _displayDensityOptions: IDisplayDensityOptions) {\n        super(_displayDensityOptions);\n        this.cdr.detach();\n    }\n\n    _setupServices() {\n        this.gridAPI.grid = this;\n        this.crudService.grid = this;\n        this.selectionService.grid = this;\n        this.navigation.grid = this;\n        this.filteringService.grid = this;\n        this.summaryService.grid = this;\n    }\n\n    _setupListeners() {\n        const destructor = takeUntil<any>(this.destroy$);\n        this.onRowAdded.pipe(destructor).subscribe(args => this.refreshGridState(args));\n        this.onRowDeleted.pipe(destructor).subscribe(args => {\n            this.summaryService.deleteOperation = true;\n            this.summaryService.clearSummaryCache(args);\n        });\n\n        this.transactions.onStateUpdate.pipe(destructor).subscribe(() => {\n            this.selectionService.clearHeaderCBState();\n            this.summaryService.clearSummaryCache();\n            this._pipeTrigger++;\n            this.notifyChanges();\n            if (this.transactions.getAggregatedChanges(false).length === 0) {\n                // Needs better check, calling 'transactions.clear()' will also trigger this\n                if (this.gridAPI.atInexistingPage()) {\n                    this.page--;\n                }\n            }\n        });\n\n        this.resizeNotify.pipe(destructor, filter(() => !this._init),  throttleTime(100, undefined, {leading: true, trailing: true}))\n            .subscribe(() => {\n                this.zone.run(() => {\n                    this.notifyChanges(true);\n                });\n            });\n\n        this.onPagingDone.pipe(destructor).subscribe(() => {\n            this.endEdit(true);\n            this.selectionService.clear(true);\n        });\n\n        this.onColumnMoving.pipe(destructor).subscribe(() => this.endEdit(true));\n        this.onColumnResized.pipe(destructor).subscribe(() => this.endEdit(true));\n\n        this.overlayService.onOpening.pipe(destructor).subscribe((event) => {\n            if (this._advancedFilteringOverlayId === event.id) {\n                const instance = event.componentRef.instance as IgxAdvancedFilteringDialogComponent;\n                if (instance) {\n                    instance.initialize(this, this.overlayService, event.id);\n                }\n            }\n        });\n\n        this.overlayService.onOpened.pipe(destructor).subscribe((event) => {\n            // do not hide the advanced filtering overlay on scroll\n            if (this._advancedFilteringOverlayId === event.id) {\n                const instance = event.componentRef.instance as IgxAdvancedFilteringDialogComponent;\n                if (instance) {\n                    instance.setAddButtonFocus();\n                }\n                return;\n            }\n\n            if (this.overlayService.getOverlayById(event.id)?.settings?.outlet === this.outletDirective &&\n                this.overlayIDs.indexOf(event.id) < 0) {\n                this.overlayIDs.push(event.id);\n            }\n        });\n\n        this.overlayService.onClosed.pipe(destructor, filter(() => !this._init)).subscribe((event) => {\n            if (this._advancedFilteringOverlayId === event.id) {\n                this._advancedFilteringOverlayId = null;\n                return;\n            }\n\n            const ind = this.overlayIDs.indexOf(event.id);\n            if (ind !== -1) {\n                this.overlayIDs.splice(ind, 1);\n            }\n        });\n\n        this.verticalScrollContainer.onDataChanging.pipe(destructor, filter(() => !this._init)).subscribe(($event) => {\n            const shouldRecalcSize = this.isPercentHeight &&\n                (!this.calcHeight || this.calcHeight === this.getDataBasedBodyHeight() ||\n                    this.calcHeight === this.renderedRowHeight * this._defaultTargetRecordNumber);\n            if (shouldRecalcSize) {\n                this.calculateGridHeight();\n                $event.containerSize = this.calcHeight;\n            }\n            this.evaluateLoadingState();\n        });\n\n        this.verticalScrollContainer.onScrollbarVisibilityChanged.pipe(destructor, filter(() => !this._init)).subscribe(() => {\n            // called to recalc all widths that may have changes as a result of\n            // the vert. scrollbar showing/hiding\n            this.notifyChanges(true);\n        });\n\n        this.verticalScrollContainer.onContentSizeChange.pipe(destructor, filter(() => !this._init)).subscribe(($event) => {\n            this.calculateGridSizes(false);\n        });\n\n        this.onDensityChanged.pipe(destructor).subscribe(() => {\n            this.endEdit(true);\n            this.summaryService.summaryHeight = 0;\n            this.notifyChanges(true);\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    public ngOnInit() {\n        super.ngOnInit();\n        this._setupServices();\n        this._setupListeners();\n        this.rowListDiffer = this.differs.find([]).create(null);\n        this.columnListDiffer = this.differs.find([]).create(null);\n        this.calcWidth = this.width && this.width.indexOf('%') === -1 ? parseInt(this.width, 10) : 0;\n        this.shouldGenerate = this.autoGenerate;\n    }\n\n    protected setupColumns() {\n        if (this.autoGenerate) {\n            this.autogenerateColumns();\n        }\n\n        this.initColumns(this.columnList, (col: IgxColumnComponent) => this.onColumnInit.emit(col));\n        this.columnListDiffer.diff(this.columnList);\n\n        this.columnList.changes\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((change: QueryList<IgxColumnComponent>) => {\n                this.onColumnsChanged(change);\n            });\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public resetColumnsCaches() {\n        this.columnList.forEach(column => column.resetCaches());\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public resetForOfCache() {\n        const firstVirtRow = this.dataRowList.first;\n        if (firstVirtRow) {\n            if (this._cdrRequests) {\n                firstVirtRow.virtDirRow.cdr.detectChanges();\n            }\n            firstVirtRow.virtDirRow.assumeMaster();\n        }\n    }\n\n    public setFilterData(data, pinned: boolean) {\n        if (this.hasPinnedRecords && pinned) {\n            this._filteredPinnedData = data || [];\n            const filteredUnpinned =  this._filteredUnpinnedData || [];\n            const filteredData =  [... this._filteredPinnedData, ... filteredUnpinned];\n            this.filteredData =  filteredData.length > 0 ? filteredData : this._filteredUnpinnedData;\n        } else if (this.hasPinnedRecords && !pinned) {\n            this._filteredUnpinnedData = data;\n        } else {\n            this.filteredData = data;\n        }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public resetColumnCollections() {\n        this._visibleColumns.length = 0;\n        this._pinnedVisible.length = 0;\n        this._unpinnedVisible.length = 0;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public resetCachedWidths() {\n        this._unpinnedWidth = NaN;\n        this._pinnedWidth = NaN;\n        this._totalWidth = NaN;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public resetCaches(recalcFeatureWidth = true) {\n        if (recalcFeatureWidth) {\n            this._headerFeaturesWidth = NaN;\n        }\n        this.resetForOfCache();\n        this.resetColumnsCaches();\n        this.resetColumnCollections();\n        this.resetCachedWidths();\n        this.hasVisibleColumns = undefined;\n        this._columnGroups = this.columnList.some(col => col.columnGroup);\n    }\n\n    /**\n     * @hidden\n     */\n    public ngAfterContentInit() {\n        this.setupColumns();\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public setFilteredSortedData(data, pinned: boolean) {\n        data = data || [];\n        if (this.pinnedRecordsCount > 0 && pinned) {\n            this._filteredSortedPinnedData = data;\n            this.pinnedRecords = data;\n            this.filteredSortedData = this.isRowPinningToTop ? [... this._filteredSortedPinnedData, ... this._filteredSortedUnpinnedData] :\n            [... this._filteredSortedUnpinnedData, ... this._filteredSortedPinnedData];\n        } else if (this.pinnedRecordsCount > 0 && !pinned) {\n            this._filteredSortedUnpinnedData = data;\n        } else {\n            this.filteredSortedData = data;\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public _setupRowObservers() {\n        const elementFilter = (item: IgxRowDirective<any> | IgxSummaryRowComponent) => this.isDefined(item.nativeElement.parentElement);\n        const extractForOfs = pipe(map((collection: any[]) => collection.filter(elementFilter).map(item => item.virtDirRow)));\n        const rowListObserver = extractForOfs(this._dataRowList.changes);\n        const summaryRowObserver = extractForOfs(this._summaryRowList.changes);\n        const resetHorizontalForOfs = () => {\n            this._horizontalForOfs = [\n                ...this._dataRowList.filter(elementFilter).map(item => item.virtDirRow),\n                ...this._summaryRowList.filter(elementFilter).map(item => item.virtDirRow)\n            ];\n        };\n        rowListObserver.pipe(takeUntil(this.destroy$)).subscribe(resetHorizontalForOfs);\n        summaryRowObserver.pipe(takeUntil(this.destroy$)).subscribe(resetHorizontalForOfs);\n        resetHorizontalForOfs();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public _zoneBegoneListeners() {\n        this.zone.runOutsideAngular(() => {\n            this.verticalScrollContainer.getScroll().addEventListener('scroll', this.verticalScrollHandler);\n            this.headerContainer.getScroll().addEventListener('scroll', this.horizontalScrollHandler);\n            this.observer = new ResizeObserver(() => this.resizeNotify.next());\n            this.observer.observe(this.nativeElement);\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    public ngAfterViewInit() {\n        this.initPinning();\n        this.calculateGridSizes();\n        this._init = false;\n        this.cdr.reattach();\n        this._setupRowObservers();\n        this._zoneBegoneListeners();\n\n        const vertScrDC = this.verticalScrollContainer.displayContainer;\n        vertScrDC.addEventListener('scroll', this.preventContainerScroll);\n\n        this._pinnedRowList.changes\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((change: QueryList<IgxGridRowComponent>) => {\n            this.onPinnedRowsChanged(change);\n        });\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public notifyChanges(repaint = false) {\n        this._cdrRequests = true;\n        this._cdrRequestRepaint = repaint;\n        this.cdr.markForCheck();\n    }\n\n    protected resetNotifyChanges() {\n        this._cdrRequestRepaint = false;\n        this._cdrRequests = false;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public ngDoCheck() {\n        super.ngDoCheck();\n        if (this._init) {\n            return;\n        }\n\n        if (this._cdrRequestRepaint) {\n            this.resetNotifyChanges();\n            this.calculateGridSizes();\n            this.refreshSearch(true);\n            return;\n        }\n\n        if (this._cdrRequests) {\n            this.resetNotifyChanges();\n            this.cdr.detectChanges();\n        }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public getDragGhostCustomTemplate() {\n        if (this.dragGhostCustomTemplates && this.dragGhostCustomTemplates.first) {\n            return this.dragGhostCustomTemplates.first;\n        }\n\n        return null;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public ngOnDestroy() {\n        this.tmpOutlets.forEach((tmplOutlet) => {\n            tmplOutlet.cleanCache();\n        });\n\n        this.destroy$.next(true);\n        this.destroy$.complete();\n        this._destroyed = true;\n\n        if (this._advancedFilteringOverlayId) {\n            this.overlayService.hide(this._advancedFilteringOverlayId);\n        }\n\n        this.zone.runOutsideAngular(() => {\n            this.observer.disconnect();\n            this.verticalScrollContainer.getScroll().removeEventListener('scroll', this.verticalScrollHandler);\n            this.headerContainer.getScroll().removeEventListener('scroll', this.horizontalScrollHandler);\n            const vertScrDC = this.verticalScrollContainer.displayContainer;\n            vertScrDC.removeEventListener('scroll', this.preventContainerScroll);\n        });\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public dataLoading(event) {\n        this.onDataPreLoad.emit(event);\n    }\n\n    /**\n     * Toggles the specified column's visibility.\n     * @example\n     * ```typescript\n     * this.grid1.toggleColumnVisibility({\n     *       column: this.grid1.columns[0],\n     *       newValue: true\n     * });\n     * ```\n     */\n    public toggleColumnVisibility(args: IColumnVisibilityChangedEventArgs) {\n        const col = args.column ? this.columnList.find((c) => c === args.column) : undefined;\n\n        if (!col) {\n            return;\n        }\n\n        col.hidden = args.newValue;\n        this.onColumnVisibilityChanged.emit(args);\n    }\n\n    /**\n     * Gets/Sets a list of key-value pairs [row ID, expansion state].\n     * @remarks\n     * Includes only states that differ from the default one.\n     * Supports two-way binding.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"data\" [(expansionStates)]=\"model.expansionStates\">\n     * </igx-grid>\n     * ```\n     */\n    @Input()\n    public get expansionStates() {\n        return this._expansionStates;\n    }\n\n    public set expansionStates(value) {\n        this._expansionStates = new Map<any, boolean>(value);\n        this.expansionStatesChange.emit(this._expansionStates);\n        this.notifyChanges(true);\n        if (this.gridAPI.grid) {\n            this.cdr.detectChanges();\n        }\n    }\n\n    /**\n     * Expands all rows.\n     * @example\n     * ```typescript\n     * this.grid.expandAll();\n     * ```\n     */\n    public expandAll() {\n        this._defaultExpandState = true;\n        this.expansionStates = new Map<any, boolean>();\n    }\n\n    /**\n     * Collapses all rows.\n     * @example\n     * ```typescript\n     * this.grid.collapseAll();\n     * ```\n     */\n    public collapseAll() {\n        this._defaultExpandState = false;\n        this.expansionStates = new Map<any, boolean>();\n    }\n\n    /**\n     * Expands the row by its id.\n     * @remarks\n     * ID is either the primaryKey value or the data record instance.\n     * @example\n     * ```typescript\n     * this.grid.expandRow(rowID);\n     * ```\n     * @param rowID The row id - primaryKey value or the data record instance.\n     */\n    public expandRow(rowID: any) {\n        this.gridAPI.set_row_expansion_state(rowID, true);\n    }\n\n    /**\n     * Collapses the row by its id.\n     * @remarks\n     * ID is either the primaryKey value or the data record instance.\n     * @example\n     * ```typescript\n     * this.grid.collapseRow(rowID);\n     * ```\n     * @param rowID The row id - primaryKey value or the data record instance.\n     */\n    public collapseRow(rowID: any) {\n        this.gridAPI.set_row_expansion_state(rowID, false);\n    }\n\n\n    /**\n     * Toggles the row by its id.\n     * @remarks\n     * ID is either the primaryKey value or the data record instance.\n     * @example\n     * ```typescript\n     * this.grid.toggleRow(rowID);\n     * ```\n     * @param rowID The row id - primaryKey value or the data record instance.\n     */\n    public toggleRow(rowID: any) {\n        const rec = this.gridAPI.get_rec_by_id(rowID);\n        const state = this.gridAPI.get_row_expansion_state(rec);\n        this.gridAPI.set_row_expansion_state(rowID, !state);\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public getDefaultExpandState(rec: any) {\n        return this._defaultExpandState;\n    }\n\n    /**\n     * Gets the native element.\n     * @example\n     * ```typescript\n     * const nativeEl = this.grid.nativeElement.\n     * ```\n     */\n    get nativeElement() {\n        return this.elementRef.nativeElement;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    protected get outlet() {\n        return this.outletDirective;\n    }\n\n    /**\n     * Gets the default row height.\n     * @example\n     * ```typescript\n     * const rowHeigh = this.grid.defaultRowHeight;\n     * ```\n     */\n    get defaultRowHeight(): number {\n        switch (this.displayDensity) {\n            case DisplayDensity.cosy:\n                return 40;\n            case DisplayDensity.compact:\n                return 32;\n            default:\n                return 50;\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    get defaultSummaryHeight(): number {\n        switch (this.displayDensity) {\n            case DisplayDensity.cosy:\n                return 30;\n            case DisplayDensity.compact:\n                return 24;\n            default:\n                return 36;\n        }\n    }\n\n    /**\n     * Returns the `IgxGridHeaderGroupComponent`'s minimum allowed width.\n     * @remarks\n     * Used internally for restricting header group component width.\n     * The values below depend on the header cell default right/left padding values.\n     */\n    get defaultHeaderGroupMinWidth(): number {\n        switch (this.displayDensity) {\n            case DisplayDensity.cosy:\n                return 32;\n            case DisplayDensity.compact:\n                return 24;\n            default:\n                return 48;\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public paginatorClassName(): string {\n        switch (this.displayDensity) {\n            case DisplayDensity.cosy:\n                return 'igx-paginator--cosy';\n            case DisplayDensity.compact:\n                return 'igx-paginator--compact';\n            default:\n                return 'igx-paginator';\n        }\n    }\n\n    /**\n     * Gets the current width of the container for the pinned `IgxColumnComponent`s.\n     * @example\n     * ```typescript\n     * const pinnedWidth = this.grid.getPinnedWidth;\n     * ```\n     */\n    get pinnedWidth() {\n        if (!isNaN(this._pinnedWidth)) { return this._pinnedWidth; }\n        this._pinnedWidth = this.getPinnedWidth();\n        return this._pinnedWidth;\n    }\n\n    /**\n     * Gets the current width of the container for the unpinned `IgxColumnComponent`s.\n     * @example\n     * ```typescript\n     * const unpinnedWidth = this.grid.getUnpinnedWidth;\n     * ```\n     */\n    get unpinnedWidth() {\n        if (!isNaN(this._unpinnedWidth)) { return this._unpinnedWidth; }\n        this._unpinnedWidth = this.getUnpinnedWidth();\n        return this._unpinnedWidth;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    get isHorizontalScrollHidden() {\n        const diff = this.unpinnedWidth - this.totalWidth;\n        return this.width === null || diff >= 0;\n    }\n\n    /**\n     * @hidden @internal\n     * Gets the combined width of the columns that are specific to the enabled grid features. They are fixed.\n     */\n    public featureColumnsWidth(expander?: ElementRef) {\n        if (Number.isNaN(this._headerFeaturesWidth)) {\n            const rowSelectArea = this.headerSelectorContainer ?\n                this.headerSelectorContainer.nativeElement.getBoundingClientRect().width : 0;\n            const rowDragArea = this.rowDraggable && this.headerDragContainer ?\n                this.headerDragContainer.nativeElement.getBoundingClientRect().width : 0;\n            const groupableArea = this.headerGroupContainer ?\n                this.headerGroupContainer.nativeElement.getBoundingClientRect().width : 0;\n            const expanderWidth = expander ? expander.nativeElement.getBoundingClientRect().width : 0;\n            this._headerFeaturesWidth = rowSelectArea + rowDragArea + groupableArea + expanderWidth;\n        }\n        return this._headerFeaturesWidth;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    get summariesMargin() {\n        return this.featureColumnsWidth();\n    }\n\n    /**\n     * Gets an array of `IgxColumnComponent`s.\n     * @example\n     * ```typescript\n     * const colums = this.grid.columns.\n     * ```\n     */\n    get columns(): IgxColumnComponent[] {\n        return this._columns;\n    }\n\n    /**\n     * Gets an array of the pinned `IgxColumnComponent`s.\n     * @example\n     * ```typescript\n     * const pinnedColumns = this.grid.pinnedColumns.\n     * ```\n     */\n    get pinnedColumns(): IgxColumnComponent[] {\n        if (this._pinnedVisible.length) {\n            return this._pinnedVisible;\n        }\n        this._pinnedVisible = this._pinnedColumns.filter(col => !col.hidden);\n        return this._pinnedVisible;\n    }\n\n    /**\n     * Gets an array of the pinned `IgxRowComponent`s.\n     * @example\n     * ```typescript\n     * const pinnedRow = this.grid.pinnedRows;\n     * ```\n     */\n    get pinnedRows(): IgxGridRowComponent[] {\n        return this._pinnedRowList.toArray().sort((a, b) => {\n            return a.index - b.index;\n        });\n    }\n\n    /**\n     * Gets an array of unpinned `IgxColumnComponent`s.\n     * @example\n     * ```typescript\n     * const unpinnedColumns = this.grid.unpinnedColumns.\n     * ```\n     */\n    get unpinnedColumns(): IgxColumnComponent[] {\n        if (this._unpinnedVisible.length) {\n            return this._unpinnedVisible;\n        }\n        this._unpinnedVisible = this._unpinnedColumns.filter((col) => !col.hidden);\n        return this._unpinnedVisible;\n    }\n\n    /**\n     * Gets the `width` to be set on `IgxGridHeaderGroupComponent`.\n     */\n    public getHeaderGroupWidth(column: IgxColumnComponent): string {\n        if (this.hasColumnLayouts) {\n            return '';\n        }\n        const colWidth = column.width;\n        const minWidth = this.defaultHeaderGroupMinWidth;\n        const isPercentageWidth = colWidth && typeof colWidth === 'string' && colWidth.indexOf('%') !== -1;\n\n        if (!isPercentageWidth && parseInt(colWidth, 10) < minWidth) {\n            return minWidth + 'px';\n        }\n\n        return colWidth;\n    }\n\n    /**\n     * Returns the `IgxColumnComponent` by field name.\n     * @example\n     * ```typescript\n     * const myCol = this.grid1.getColumnByName(\"ID\");\n     * ```\n     * @param name\n     */\n    public getColumnByName(name: string): IgxColumnComponent {\n        return this.columnList.find((col) => col.field === name);\n    }\n\n    public getColumnByVisibleIndex(index: number): IgxColumnComponent {\n        return this.visibleColumns.find((col) => !col.columnGroup && !col.columnLayout && col.visibleIndex === index);\n    }\n\n    /**\n     * Returns the `IgxRowDirective` by index.\n     * @example\n     * ```typescript\n     * const myRow = this.grid1.getRowByIndex(1);\n     * ```\n     * @param index\n     */\n    public getRowByIndex(index: number): IgxRowDirective<IgxGridBaseDirective & GridType> {\n        return this.gridAPI.get_row_by_index(index);\n    }\n\n    /**\n     * Returns `IgxGridRowComponent` object by the specified primary key .\n     * @remarks\n     * Requires that the `primaryKey` property is set.\n     * @example\n     * ```typescript\n     * const myRow = this.grid1.getRowByKey(\"cell5\");\n     * ```\n     * @param keyValue\n     */\n    public getRowByKey(keyValue: any): IgxRowDirective<IgxGridBaseDirective & GridType> {\n        return this.gridAPI.get_row_by_key(keyValue);\n    }\n\n    /**\n     * Returns an array of visible `IgxColumnComponent`s.\n     * @example\n     * ```typescript\n     * const visibleColumns = this.grid.visibleColumns.\n     * ```\n     */\n    get visibleColumns(): IgxColumnComponent[] {\n        if (this._visibleColumns.length) {\n            return this._visibleColumns;\n        }\n        this._visibleColumns = this.columnList.filter(c => !c.hidden);\n        return this._visibleColumns;\n    }\n\n    /**\n     * Returns the `IgxGridCellComponent` that matches the conditions.\n     * @example\n     * ```typescript\n     * const myCell = this.grid1.getCellByColumn(2,\"UnitPrice\");\n     * ```\n     * @param rowIndex\n     * @param columnField\n     */\n    public getCellByColumn(rowIndex: number, columnField: string): IgxGridCellComponent {\n        const columnId = this.columnList.map((column) => column.field).indexOf(columnField);\n        if (columnId !== -1) {\n            return this.gridAPI.get_cell_by_index(rowIndex, columnId);\n        }\n    }\n\n    public getCellByColumnVisibleIndex(rowIndex: number, index: number): IgxGridCellComponent {\n        return this.gridAPI.get_cell_by_visible_index(rowIndex, index);\n\n    }\n\n    /**\n     * Returns an `IgxGridCellComponent` object by the specified primary key and column field.\n     * @remarks\n     * Requires that the primaryKey property is set.\n     * @example\n     * ```typescript\n     * grid.getCellByKey(1, 'index');\n     * ```\n     * @param rowSelector match any rowID\n     * @param columnField\n     */\n    public getCellByKey(rowSelector: any, columnField: string): IgxGridCellComponent {\n        return this.gridAPI.get_cell_by_key(rowSelector, columnField);\n    }\n\n    /**\n     * Gets the total number of pages.\n     * @example\n     * ```typescript\n     * const totalPages = this.grid.totalPages;\n     * ```\n     */\n    get totalPages(): number {\n        if (this.pagingState) {\n            return this.pagingState.metadata.countPages;\n        }\n        return -1;\n    }\n\n    /**\n     * Gets if the current page is the first page.\n     * @example\n     * ```typescript\n     * const firstPage = this.grid.isFirstPage;\n     * ```\n     */\n    get isFirstPage(): boolean {\n        return this.page === 0;\n    }\n\n    /**\n     * Goes to the next page, if the grid is not already at the last page.\n     * @example\n     * ```typescript\n     * this.grid1.nextPage();\n     * ```\n     */\n    public nextPage(): void {\n        if (!this.isLastPage) {\n            this.page += 1;\n        }\n    }\n\n    /**\n     * Goes to the previous page, if the grid is not already at the first page.\n     * @example\n     * ```typescript\n     * this.grid1.previousPage();\n     * ```\n     */\n    public previousPage(): void {\n        if (!this.isFirstPage) {\n            this.page -= 1;\n        }\n    }\n\n    /**\n     * Returns the total number of records.\n     * @remarks\n     * Only functions when paging is enabled.\n     * @example\n     * ```typescript\n     * const totalRecords = this.grid.totalRecords;\n     * ```\n     */\n    get totalRecords(): number {\n        if (this.pagingState) {\n            return this.pagingState.metadata.countRecords;\n        }\n    }\n\n    /**\n     * Returns if the current page is the last page.\n     * @example\n     * ```typescript\n     * const lastPage = this.grid.isLastPage;\n     * ```\n     */\n    get isLastPage(): boolean {\n        return this.page + 1 >= this.totalPages;\n    }\n\n    /**\n     * Returns the total width of the `IgxGridComponent`.\n     * @example\n     * ```typescript\n     * const gridWidth = this.grid.totalWidth;\n     * ```\n     */\n    get totalWidth(): number {\n        if (!isNaN(this._totalWidth)) { return this._totalWidth; }\n        // Take only top level columns\n        const cols = this.visibleColumns.filter(col => col.level === 0 && !col.pinned);\n        let totalWidth = 0;\n        let i = 0;\n        for (i; i < cols.length; i++) {\n            totalWidth += parseInt(cols[i].calcWidth, 10) || 0;\n        }\n        this._totalWidth = totalWidth;\n        return totalWidth;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    get showRowSelectors(): boolean {\n        return this.isRowSelectable && this.hasVisibleColumns && !this.hideRowSelectors;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    get showDragIcons(): boolean {\n        return this.rowDraggable && this.columns.length > this.hiddenColumnsCount;\n    }\n\n    /**\n     * @hidden\n     */\n    protected _moveColumns(from: IgxColumnComponent, to: IgxColumnComponent, pos: DropPosition) {\n        const list = this.columnList.toArray();\n        const fromIndex = list.indexOf(from);\n        let toIndex = list.indexOf(to);\n\n        if (pos === DropPosition.BeforeDropTarget) {\n            toIndex--;\n            if (toIndex < 0) {\n                toIndex = 0;\n            }\n        }\n\n        if (pos === DropPosition.AfterDropTarget) {\n            toIndex++;\n        }\n\n        list.splice(toIndex, 0, ...list.splice(fromIndex, 1));\n        const newList = this._resetColumnList(list);\n        this.columnList.reset(newList);\n        this.columnList.notifyOnChanges();\n        this._columns = this.columnList.toArray();\n    }\n\n    /**\n     * @hidden\n     */\n    protected _resetColumnList(list?) {\n        if (!list) {\n            list = this.columnList.toArray();\n        }\n        let newList = [];\n        list.filter(c => c.level === 0).forEach(p => {\n            newList.push(p);\n            if (p.columnGroup) {\n                newList = newList.concat(p.allChildren);\n            }\n        });\n        return newList;\n    }\n\n    /**\n     * @hidden\n     */\n    protected _reorderColumns(from: IgxColumnComponent, to: IgxColumnComponent, position: DropPosition, columnCollection: any[]) {\n        let dropIndex = columnCollection.indexOf(to);\n\n        if (to.columnGroup) {\n            dropIndex += to.allChildren.length;\n        }\n\n        if (position === DropPosition.BeforeDropTarget) {\n            dropIndex--;\n        }\n\n        if (position === DropPosition.AfterDropTarget) {\n            dropIndex++;\n        }\n\n        columnCollection.splice(dropIndex, 0, ...columnCollection.splice(columnCollection.indexOf(from), 1));\n    }\n    /**\n     * @hidden\n     */\n    protected _moveChildColumns(parent: IgxColumnComponent, from: IgxColumnComponent, to: IgxColumnComponent, pos: DropPosition) {\n        const buffer = parent.children.toArray();\n        const fromIndex = buffer.indexOf(from);\n        let toIndex = buffer.indexOf(to);\n\n        if (pos === DropPosition.BeforeDropTarget) {\n            toIndex--;\n        }\n\n        if (pos === DropPosition.AfterDropTarget) {\n            toIndex++;\n        }\n\n        buffer.splice(toIndex, 0, ...buffer.splice(fromIndex, 1));\n        parent.children.reset(buffer);\n    }\n    /**\n     * Moves a column to the specified drop target.\n     * @example\n     * ```typescript\n     * grid.moveColumn(compName, persDetails);\n     * ```\n     */\n    public moveColumn(column: IgxColumnComponent, dropTarget: IgxColumnComponent, pos: DropPosition = DropPosition.None) {\n\n        let position = pos;\n        const fromIndex = column.visibleIndex;\n        const toIndex = dropTarget.visibleIndex;\n\n        if (pos === DropPosition.BeforeDropTarget && fromIndex < toIndex) {\n            position = DropPosition.BeforeDropTarget;\n        } else if (pos === DropPosition.AfterDropTarget && fromIndex > toIndex) {\n            position = DropPosition.AfterDropTarget;\n        } else {\n            position = DropPosition.None;\n        }\n\n\n        if ((column.level !== dropTarget.level) ||\n            (column.topLevelParent !== dropTarget.topLevelParent)) {\n            return;\n        }\n\n        this.endEdit(true);\n        if (column.level) {\n            this._moveChildColumns(column.parent, column, dropTarget, position);\n        }\n\n        if (dropTarget.pinned && column.pinned) {\n            this._reorderColumns(column, dropTarget, position, this._pinnedColumns);\n        }\n\n        if (dropTarget.pinned && !column.pinned) {\n            column.pin();\n            if (!this.isPinningToStart) {\n                if (pos === DropPosition.AfterDropTarget) {\n                    position = DropPosition.AfterDropTarget;\n                } else {\n                    position = DropPosition.None;\n                }\n            }\n            this._reorderColumns(column, dropTarget, position, this._pinnedColumns);\n        }\n\n        if (!dropTarget.pinned && column.pinned) {\n            column.unpin();\n            let list = [];\n\n            if (this.pinnedColumns.indexOf(column) === -1 && this.pinnedColumns.indexOf(dropTarget) === -1) {\n                list = this._unpinnedColumns;\n            } else {\n                list = this._pinnedColumns;\n            }\n\n            const fi = list.indexOf(column);\n            const ti = list.indexOf(dropTarget);\n\n            if (pos === DropPosition.BeforeDropTarget && fi < ti) {\n                position = DropPosition.BeforeDropTarget;\n            } else if (pos === DropPosition.AfterDropTarget && fi > ti) {\n                position = DropPosition.AfterDropTarget;\n            } else {\n                position = DropPosition.None;\n            }\n        }\n\n        if (!dropTarget.pinned) {\n            this._reorderColumns(column, dropTarget, position, this._unpinnedColumns);\n        }\n\n        this._moveColumns(column, dropTarget, position);\n        this.notifyChanges();\n        if (this.hasColumnLayouts) {\n            this.columns.filter(x => x.columnLayout).forEach(x => x.populateVisibleIndexes());\n        }\n\n        const args = {\n            source: column,\n            target: dropTarget\n        };\n\n        this.onColumnMovingEnd.emit(args);\n    }\n\n    /**\n     * Goes to the desired page index.\n     * @example\n     * ```typescript\n     * this.grid1.paginate(1);\n     * ```\n     * @param val\n     */\n    public paginate(val: number): void {\n        if (val < 0 || val > this.totalPages - 1) {\n            return;\n        }\n\n        this.page = val;\n    }\n\n    /**\n     * Manually marks the `IgxGridComponent` for change detection.\n     * @example\n     * ```typescript\n     * this.grid1.markForCheck();\n     * ```\n     */\n    public markForCheck() {\n        this.cdr.detectChanges();\n    }\n\n    /**\n     * Creates a new `IgxGridRowComponent` and adds the data record to the end of the data source.\n     * @example\n     * ```typescript\n     * this.grid1.addRow(record);\n     * ```\n     * @param data\n     */\n    public addRow(data: any): void {\n        // commit pending states prior to adding a row\n        this.endEdit(true);\n        this.gridAPI.addRowToData(data);\n\n        this.onRowAdded.emit({ data });\n        this._pipeTrigger++;\n        this.notifyChanges();\n    }\n\n    /**\n     * Removes the `IgxGridRowComponent` and the corresponding data record by primary key.\n     * @remarks\n     * Requires that the `primaryKey` property is set.\n     * The method accept rowSelector as a parameter, which is the rowID.\n     * @example\n     * ```typescript\n     * this.grid1.deleteRow(0);\n     * ```\n     * @param rowSelector\n     */\n    public deleteRow(rowSelector: any): void {\n        if (this.primaryKey !== undefined && this.primaryKey !== null) {\n            this.deleteRowById(rowSelector);\n        }\n    }\n\n    /** @hidden */\n    public deleteRowById(rowId: any) {\n        this.gridAPI.deleteRowById(rowId);\n    }\n\n    /**\n     * @hidden\n     */\n    protected deleteRowFromData(rowID: any, index: number) {\n        //  if there is a row (index !== 0) delete it\n        //  if there is a row in ADD or UPDATE state change it's state to DELETE\n        if (index !== -1) {\n            if (this.transactions.enabled) {\n                const transaction: Transaction = { id: rowID, type: TransactionType.DELETE, newValue: null };\n                this.transactions.add(transaction, this.data[index]);\n            } else {\n                this.data.splice(index, 1);\n            }\n        } else {\n            const state: State = this.transactions.getState(rowID);\n            this.transactions.add({ id: rowID, type: TransactionType.DELETE, newValue: null }, state && state.recordRef);\n        }\n    }\n\n    /**\n     * Updates the `IgxGridRowComponent` and the corresponding data record by primary key.\n     * @remarks\n     * Requires that the `primaryKey` property is set.\n     * @example\n     * ```typescript\n     * this.gridWithPK.updateCell('Updated', 1, 'ProductName');\n     * ```\n     * @param value the new value which is to be set.\n     * @param rowSelector corresponds to rowID.\n     * @param column corresponds to column field.\n     */\n    public updateCell(value: any, rowSelector: any, column: string): void {\n        if (this.isDefined(this.primaryKey)) {\n            const col = this.columnList.toArray().find(c => c.field === column);\n            if (col) {\n                // Simplify\n                const rowData = this.gridAPI.getRowData(rowSelector);\n                const index = this.gridAPI.get_row_index_in_data(rowSelector);\n                // If row passed is invalid\n                if (index < 0) {\n                    return;\n                }\n                const id = {\n                    rowID: rowSelector,\n                    columnID: col.index,\n                    rowIndex: index\n                };\n\n                const cell = new IgxCell(id, index, col, rowData[col.field], rowData[col.field], rowData);\n                const args = this.gridAPI.update_cell(cell, value);\n\n                if (this.crudService.cell && this.crudService.sameCell(cell)) {\n                    if (args.cancel) {\n                        return;\n                    }\n                    this.gridAPI.escape_editMode();\n                }\n                this.cdr.detectChanges();\n            }\n        }\n    }\n\n    /**\n     * Updates the `IgxGridRowComponent`\n     * @remarks\n     * The row is specified by\n     * rowSelector parameter and the data source record with the passed value.\n     * This method will apply requested update only if primary key is specified in the grid.\n     * @example\n     * ```typescript\n     * grid.updateRow({\n     *       ProductID: 1, ProductName: 'Spearmint', InStock: true, UnitsInStock: 1, OrderDate: new Date('2005-03-21')\n     *   }, 1);\n     * ```\n     * @param value\n     * @param rowSelector correspond to rowID\n     */\n    public updateRow(value: any, rowSelector: any): void {\n        if (this.isDefined(this.primaryKey)) {\n            const editableCell = this.crudService.cell;\n            if (editableCell && editableCell.id.rowID === rowSelector) {\n                this.gridAPI.escape_editMode();\n            }\n            const row = new IgxRow(rowSelector, -1, this.gridAPI.getRowData(rowSelector));\n            this.gridAPI.update_row(row, value);\n\n            // TODO: fix for #5934 and probably break for #5763\n            // consider adding of third optional boolean parameter in updateRow.\n            // If developer set this parameter to true we should call notifyChanges(true), and\n            // vise-versa if developer set it to false we should call notifyChanges(false).\n            // The parameter should default to false\n            this.notifyChanges();\n        }\n    }\n\n    /**\n     * Sort a single `IgxColumnComponent`.\n     * @remarks\n     * Sort the `IgxGridComponent`'s `IgxColumnComponent` based on the provided array of sorting expressions.\n     * @example\n     * ```typescript\n     * this.grid.sort({ fieldName: name, dir: SortingDirection.Asc, ignoreCase: false });\n     * ```\n     */\n    public sort(expression: ISortingExpression | Array<ISortingExpression>): void {\n        this.endEdit(false);\n        if (expression instanceof Array) {\n            this.gridAPI.sort_multiple(expression);\n        } else {\n            this.gridAPI.sort(expression);\n        }\n        requestAnimationFrame(() => this.onSortingDone.emit(expression));\n    }\n\n    /**\n     * Filters a single `IgxColumnComponent`.\n     * @example\n     * ```typescript\n     * public filter(term) {\n     *      this.grid.filter(\"ProductName\", term, IgxStringFilteringOperand.instance().condition(\"contains\"));\n     * }\n     * ```\n     * @param name\n     * @param value\n     * @param conditionOrExpressionTree\n     * @param ignoreCase\n     */\n    public filter(name: string, value: any, conditionOrExpressionTree?: IFilteringOperation | IFilteringExpressionsTree,\n        ignoreCase?: boolean) {\n        this.filteringService.filter(name, value, conditionOrExpressionTree, ignoreCase);\n    }\n\n    /**\n     * Filters all the `IgxColumnComponent` in the `IgxGridComponent` with the same condition.\n     * @example\n     * ```typescript\n     * grid.filterGlobal('some', IgxStringFilteringOperand.instance().condition('contains'));\n     * ```\n     * @param value\n     * @param condition\n     * @param ignoreCase\n     */\n    public filterGlobal(value: any, condition, ignoreCase?) {\n        this.filteringService.filterGlobal(value, condition, ignoreCase);\n    }\n\n    /**\n     * Enables summaries for the specified column and applies your customSummary.\n     * @remarks\n     * If you do not provide the customSummary, then the default summary for the column data type will be applied.\n     * @example\n     * ```typescript\n     * grid.enableSummaries([{ fieldName: 'ProductName' }, { fieldName: 'ID' }]);\n     * ```\n     * Enable summaries for the listed columns.\n     * @example\n     * ```typescript\n     * grid.enableSummaries('ProductName');\n     * ```\n     * @param rest\n     */\n    public enableSummaries(...rest) {\n        if (rest.length === 1 && Array.isArray(rest[0])) {\n            this._multipleSummaries(rest[0], true);\n        } else {\n            this._summaries(rest[0], true, rest[1]);\n        }\n    }\n\n    /**\n     * Disable summaries for the specified column.\n     * @example\n     * ```typescript\n     * grid.disableSummaries('ProductName');\n     * ```\n     * @remarks\n     * Disable summaries for the listed columns.\n     * @example\n     * ```typescript\n     * grid.disableSummaries([{ fieldName: 'ProductName' }]);\n     * ```\n     */\n    public disableSummaries(...rest) {\n        if (rest.length === 1 && Array.isArray(rest[0])) {\n            this._disableMultipleSummaries(rest[0]);\n        } else {\n            this._summaries(rest[0], false);\n        }\n    }\n\n    /**\n     * If name is provided, clears the filtering state of the corresponding `IgxColumnComponent`.\n     * @remarks\n     * Otherwise clears the filtering state of all `IgxColumnComponent`s.\n     * @example\n     * ```typescript\n     * this.grid.clearFilter();\n     * ```\n     * @param name\n     */\n    public clearFilter(name?: string) {\n        this.filteringService.clearFilter(name);\n    }\n\n    /**\n     * If name is provided, clears the sorting state of the corresponding `IgxColumnComponent`.\n     * @remarks\n     * otherwise clears the sorting state of all `IgxColumnComponent`.\n     * @example\n     * ```typescript\n     * this.grid.clearSort();\n     * ```\n     * @param name\n     */\n    public clearSort(name?: string) {\n        if (!name) {\n            this.sortingExpressions = [];\n            return;\n        }\n        if (!this.gridAPI.get_column_by_name(name)) {\n            return;\n        }\n        this.gridAPI.clear_sort(name);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public refreshGridState(args?) {\n        this.endEdit(true);\n        this.selectionService.clearHeaderCBState();\n        this.summaryService.clearSummaryCache(args);\n    }\n\n    // TODO: We have return values here. Move them to event args ??\n\n    /**\n     * Pins a column by field name.\n     * @remarks\n     * Returns whether the operation is successful.\n     * @example\n     * ```typescript\n     * this.grid.pinColumn(\"ID\");\n     * ```\n     * @param columnName\n     * @param index\n     */\n    public pinColumn(columnName: string | IgxColumnComponent, index?): boolean {\n        const col = columnName instanceof IgxColumnComponent ? columnName : this.getColumnByName(columnName);\n        return col.pin(index);\n    }\n\n    /**\n     * Unpins a column by field name. Returns whether the operation is successful.\n     * @example\n     * ```typescript\n     * this.grid.pinColumn(\"ID\");\n     * ```\n     * @param columnName\n     * @param index\n     */\n    public unpinColumn(columnName: string | IgxColumnComponent, index?): boolean {\n        const col = columnName instanceof IgxColumnComponent ? columnName : this.getColumnByName(columnName);\n        return col.unpin(index);\n    }\n\n    /**\n     * Pin the row by its id.\n     * @remarks\n     * ID is either the primaryKey value or the data record instance.\n     * @example\n     * ```typescript\n     * this.grid.pinRow(rowID);\n     * ```\n     * @param rowID The row id - primaryKey value or the data record instance.\n     * @param index The index at which to insert the row in the pinned collection.\n     */\n    public pinRow(rowID: any, index?: number): boolean {\n        if (this._pinnedRecordIDs.indexOf(rowID) !== -1) {\n            return false;\n        }\n        const row = this.gridAPI.get_row_by_key(rowID);\n\n        const eventArgs: IPinRowEventArgs = {\n            insertAtIndex: index,\n            isPinned: true,\n            rowID: rowID,\n            row: row\n        };\n        this.onRowPinning.emit(eventArgs);\n\n        this.endEdit(true);\n\n        const insertIndex = typeof eventArgs.insertAtIndex === 'number' ? eventArgs.insertAtIndex : this._pinnedRecordIDs.length;\n        this._pinnedRecordIDs.splice(insertIndex, 0, rowID);\n        this._pipeTrigger++;\n        if (this.gridAPI.grid) {\n            this.notifyChanges();\n        }\n    }\n\n    /**\n     * Unpin the row by its id.\n     * @remarks\n     * ID is either the primaryKey value or the data record instance.\n     * @example\n     * ```typescript\n     * this.grid.unpinRow(rowID);\n     * ```\n     * @param rowID The row id - primaryKey value or the data record instance.\n     */\n    public unpinRow(rowID: any) {\n        const index =  this._pinnedRecordIDs.indexOf(rowID);\n        if (index === -1) {\n            return false;\n        }\n        const row = this.gridAPI.get_row_by_key(rowID);\n        const eventArgs: IPinRowEventArgs = {\n            isPinned: false,\n            rowID: rowID,\n            row: row\n        };\n        this.onRowPinning.emit(eventArgs);\n        this.endEdit(true);\n        this._pinnedRecordIDs.splice(index, 1);\n        this._pipeTrigger++;\n        if (this.gridAPI.grid) {\n            this.cdr.detectChanges();\n        }\n        return true;\n    }\n\n    get pinnedRowHeight() {\n        const containerHeight = this.pinContainer ? this.pinContainer.nativeElement.offsetHeight : 0;\n        return this.hasPinnedRecords ? containerHeight : 0;\n    }\n\n    get totalHeight() {\n        return this.calcHeight ? this.calcHeight + this.pinnedRowHeight : this.calcHeight;\n    }\n\n    /**\n     * Recalculates grid width/height dimensions.\n     * @remarks\n     * Should be run when changing DOM elements dimentions manually that affect the grid's size.\n     * @example\n     * ```typescript\n     * this.grid.reflow();\n     * ```\n     */\n    public reflow() {\n        this.calculateGridSizes();\n    }\n\n    /**\n     * Finds the next occurrence of a given string in the grid and scrolls to the cell if it isn't visible.\n     * @remarks\n     * Returns how many times the grid contains the string.\n     * @example\n     * ```typescript\n     * this.grid.findNext(\"financial\");\n     * ```\n     * @param text the string to search.\n     * @param caseSensitive optionally, if the search should be case sensitive (defaults to false).\n     * @param exactMatch optionally, if the text should match the entire value  (defaults to false).\n     */\n    public findNext(text: string, caseSensitive?: boolean, exactMatch?: boolean): number {\n        return this.find(text, 1, caseSensitive, exactMatch);\n    }\n\n    /**\n     * Finds the previous occurrence of a given string in the grid and scrolls to the cell if it isn't visible.\n     * @remarks\n     * Returns how many times the grid contains the string.\n     * @example\n     * ```typescript\n     * this.grid.findPrev(\"financial\");\n     * ```\n     * @param text the string to search.\n     * @param caseSensitive optionally, if the search should be case sensitive (defaults to false).\n     * @param exactMatch optionally, if the text should match the entire value (defaults to false).\n     */\n    public findPrev(text: string, caseSensitive?: boolean, exactMatch?: boolean): number {\n        return this.find(text, -1, caseSensitive, exactMatch);\n    }\n\n    /**\n     * Reapplies the existing search.\n     * @remarks\n     * Returns how many times the grid contains the last search.\n     * @example\n     * ```typescript\n     * this.grid.refreshSearch();\n     * ```\n     * @param updateActiveInfo\n     */\n    public refreshSearch(updateActiveInfo?: boolean): number {\n        if (this.lastSearchInfo.searchText) {\n            this.rebuildMatchCache();\n\n            if (updateActiveInfo) {\n                const activeInfo = IgxTextHighlightDirective.highlightGroupsMap.get(this.id);\n                this.lastSearchInfo.matchInfoCache.forEach((match, i) => {\n                    if (match.column === activeInfo.column &&\n                        match.row === activeInfo.row &&\n                        match.index === activeInfo.index &&\n                        compareMaps(match.metadata, activeInfo.metadata)) {\n                        this.lastSearchInfo.activeMatchIndex = i;\n                    }\n                });\n            }\n\n            return this.find(this.lastSearchInfo.searchText, 0, this.lastSearchInfo.caseSensitive, this.lastSearchInfo.exactMatch, false);\n        } else {\n            return 0;\n        }\n    }\n\n    /**\n     * Removes all the highlights in the cell.\n     * @example\n     * ```typescript\n     * this.grid.clearSearch();\n     * ```\n     */\n    public clearSearch() {\n        this.lastSearchInfo = {\n            searchText: '',\n            caseSensitive: false,\n            exactMatch: false,\n            activeMatchIndex: 0,\n            matchInfoCache: []\n        };\n\n        this.rowList.forEach((row) => {\n            if (row.cells) {\n                row.cells.forEach((c) => {\n                    c.clearHighlight();\n                });\n            }\n        });\n    }\n\n    /**\n     * Returns if the `IgxGridComponent` has sortable columns.\n     * @example\n     * ```typescript\n     * const sortableGrid = this.grid.hasSortableColumns;\n     * ```\n     */\n    get hasSortableColumns(): boolean {\n        return this.columnList.some((col) => col.sortable);\n    }\n\n    /**\n     * Returns if the `IgxGridComponent` has editable columns.\n     * @example\n     * ```typescript\n     * const editableGrid = this.grid.hasEditableColumns;\n     * ```\n     */\n    get hasEditableColumns(): boolean {\n        return this.columnList.some((col) => col.editable);\n    }\n\n    /**\n     * Returns if the `IgxGridComponent` has fiterable columns.\n     * @example\n     * ```typescript\n     * const filterableGrid = this.grid.hasFilterableColumns;\n     * ```\n     */\n    get hasFilterableColumns(): boolean {\n        return this.columnList.some((col) => col.filterable);\n    }\n\n    /**\n     * Returns if the `IgxGridComponent` has summarized columns.\n     * @example\n     * ```typescript\n     * const summarizedGrid = this.grid.hasSummarizedColumns;\n     * ```\n     */\n    get hasSummarizedColumns(): boolean {\n        return this.summaryService.hasSummarizedColumns;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    get rootSummariesEnabled(): boolean {\n        return this.summaryCalculationMode !== GridSummaryCalculationMode.childLevelsOnly;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    get hasVisibleColumns(): boolean {\n        if (this._hasVisibleColumns === undefined) {\n            return this.columnList ? this.columnList.some(c => !c.hidden) : false;\n        }\n        return this._hasVisibleColumns;\n    }\n\n    set hasVisibleColumns(value) {\n        this._hasVisibleColumns = value;\n    }\n    /**\n     * Returns if the `IgxGridComponent` has moveable columns.\n     * @example\n     * ```typescript\n     * const movableGrid = this.grid.hasMovableColumns;\n     * ```\n     */\n    get hasMovableColumns(): boolean {\n        return this.columnList && this.columnList.some((col) => col.movable);\n    }\n\n    /**\n     * Returns if the `IgxGridComponent` has column groups.\n     * @example\n     * ```typescript\n     * const groupGrid = this.grid.hasColumnGroups;\n     * ```\n     */\n    get hasColumnGroups(): boolean {\n        return this._columnGroups;\n    }\n    /**\n     * Returns if the `IgxGridComponent` has column layouts for multi-row layout definition.\n     * @example\n     * ```typescript\n     * const layoutGrid = this.grid.hasColumnLayouts;\n     * ```\n     */\n    public get hasColumnLayouts() {\n        return !!this.columnList.some(col => col.columnLayout);\n    }\n\n    /**\n     * Returns an array of the selected `IgxGridCellComponent`s.\n     * @example\n     * ```typescript\n     * const selectedCells = this.grid.selectedCells;\n     * ```\n     */\n    get selectedCells(): IgxGridCellComponent[] | any[] {\n        if (this.dataRowList) {\n            return this.dataRowList.map((row) => row.cells.filter((cell) => cell.selected))\n                .reduce((a, b) => a.concat(b), []);\n        }\n        return [];\n    }\n\n    /**\n     * @hidden @internal\n     */\n    get multiRowLayoutRowSize() {\n        return this._multiRowLayoutRowSize;\n    }\n\n    /**\n     * @hidden\n     */\n    protected get rowBasedHeight() {\n        return this.dataLength * this.rowHeight;\n    }\n\n    /**\n     * @hidden\n     */\n    protected get isPercentWidth() {\n        return this.width && this.width.indexOf('%') !== -1;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public get isPercentHeight() {\n        return this._height && this._height.indexOf('%') !== -1;\n    }\n\n    /**\n     * @hidden\n     * Sets columns defaultWidth property\n     */\n    protected _derivePossibleWidth() {\n        if (!this.columnWidthSetByUser) {\n            this._columnWidth = this.width !== null ? this.getPossibleColumnWidth() : MINIMUM_COLUMN_WIDTH + 'px';\n        }\n        this.columnList.forEach((column: IgxColumnComponent) => {\n            if (this.hasColumnLayouts && parseInt(this._columnWidth, 10)) {\n                const columnWidthCombined = parseInt(this._columnWidth, 10) * (column.colEnd ? column.colEnd - column.colStart : 1);\n                column.defaultWidth = columnWidthCombined + 'px';\n            } else {\n                column.defaultWidth = this._columnWidth;\n                column.resetCaches();\n            }\n        });\n        this.resetCachedWidths();\n    }\n\n    /**\n     * @hidden\n     */\n    protected get defaultTargetBodyHeight(): number {\n        const allItems = this.dataLength;\n        return this.renderedRowHeight * Math.min(this._defaultTargetRecordNumber,\n            this.paging ? Math.min(allItems, this.perPage) : allItems);\n    }\n\n    /**\n     * @hidden @internal\n     * The rowHeight input is bound to min-height css prop of rows that adds a 1px border in all cases\n     */\n    public get renderedRowHeight(): number {\n        return this.rowHeight + 1;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    protected calcGridHeadRow() {\n        if (this.maxLevelHeaderDepth) {\n            this._baseFontSize = parseFloat(getComputedStyle(this.document.documentElement).getPropertyValue('font-size'));\n            let minSize = (this.maxLevelHeaderDepth + 1) * this.defaultRowHeight / this._baseFontSize;\n            if (this._allowFiltering && this._filterMode === FilterMode.quickFilter) {\n                minSize += (FILTER_ROW_HEIGHT + 1) / this._baseFontSize;\n            }\n            this.theadRow.nativeElement.style.minHeight = `${minSize}rem`;\n        }\n    }\n\n    /**\n     * @hidden\n     * Sets TBODY height i.e. this.calcHeight\n     */\n    protected calculateGridHeight() {\n        this.calcGridHeadRow();\n        this.summariesHeight = 0;\n        if (this.hasSummarizedColumns && this.rootSummariesEnabled) {\n            this.summariesHeight = this.summaryService.calcMaxSummaryHeight();\n        }\n\n        this.calcHeight = this._calculateGridBodyHeight();\n        if (this.pinnedRowHeight && this.calcHeight) {\n            this.calcHeight -= this.pinnedRowHeight;\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    protected getGroupAreaHeight(): number {\n        return 0;\n    }\n\n    /**\n     * @hidden\n     */\n    protected getToolbarHeight(): number {\n        let toolbarHeight = 0;\n        if (this.showToolbar && this.toolbarHtml != null) {\n            toolbarHeight = this.toolbarHtml.nativeElement.firstElementChild ?\n                this.toolbarHtml.nativeElement.offsetHeight : 0;\n        }\n        return toolbarHeight;\n    }\n\n    /**\n     * @hidden\n     */\n    protected getPagingHeight(): number {\n        let pagingHeight = 0;\n        if (this.paging && this.footer) {\n            pagingHeight = this.footer.nativeElement.firstElementChild ?\n                this.footer.nativeElement.offsetHeight : 0;\n        }\n        return pagingHeight;\n    }\n\n    /**\n     * @hidden\n     */\n    protected getFilterCellHeight(): number {\n        const headerGroupNativeEl = (this.headerGroupsList.length !== 0) ?\n            this.headerGroupsList[0].element.nativeElement : null;\n        const filterCellNativeEl = (headerGroupNativeEl) ?\n            headerGroupNativeEl.querySelector('igx-grid-filtering-cell') : null;\n        return (filterCellNativeEl) ? filterCellNativeEl.offsetHeight : 0;\n    }\n\n    /**\n     * @hidden\n     */\n    protected _calculateGridBodyHeight(): number {\n        if (!this._height) {\n            return null;\n        }\n\n        const actualTheadRow = (!this.allowFiltering || (this.allowFiltering && this.filterMode !== FilterMode.quickFilter)) ?\n            this.theadRow.nativeElement.offsetHeight - this.getFilterCellHeight() :\n            this.theadRow.nativeElement.offsetHeight;\n        const footerHeight = this.summariesHeight || this.tfoot.nativeElement.offsetHeight - this.tfoot.nativeElement.clientHeight;\n        const toolbarHeight = this.getToolbarHeight();\n        const pagingHeight = this.getPagingHeight();\n        const groupAreaHeight = this.getGroupAreaHeight();\n        const renderedHeight = toolbarHeight + actualTheadRow +\n            footerHeight + pagingHeight + groupAreaHeight +\n            this.scr.nativeElement.clientHeight;\n\n        let gridHeight = 0;\n\n        if (this.isPercentHeight) {\n            const computed = this.document.defaultView.getComputedStyle(this.nativeElement).getPropertyValue('height');\n            const autoSize = this._shouldAutoSize(renderedHeight);\n            if (autoSize || computed.indexOf('%') !== -1) {\n                const bodyHeight = this.getDataBasedBodyHeight();\n                return bodyHeight > 0 ? bodyHeight : null;\n            }\n            gridHeight = parseInt(computed, 10);\n        } else {\n            gridHeight = parseInt(this._height, 10);\n        }\n        const height = Math.abs(gridHeight - renderedHeight);\n\n        if (height === 0 || isNaN(gridHeight)) {\n            const bodyHeight = this.defaultTargetBodyHeight;\n            return bodyHeight > 0 ? bodyHeight : null;\n        }\n        return height;\n    }\n\n    protected checkContainerSizeChange() {\n        const origHeight = this.nativeElement.parentElement.offsetHeight;\n        this.nativeElement.style.display = 'none';\n        const height = this.nativeElement.parentElement.offsetHeight;\n        this.nativeElement.style.display = '';\n        return origHeight !== height;\n    }\n\n    protected _shouldAutoSize(renderedHeight) {\n        this.tbody.nativeElement.style.display = 'none';\n        let res = !this.nativeElement.parentElement ||\n            this.nativeElement.parentElement.clientHeight === 0 ||\n            this.nativeElement.parentElement.clientHeight === renderedHeight;\n        if (!isChromium()) {\n            // If grid causes the parent container to extend (for example when container is flex)\n            // we should always auto-size since the actual size of the container will continuously change as the grid renders elements.\n            res = this.checkContainerSizeChange();\n        }\n        this.tbody.nativeElement.style.display = '';\n        return res;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public get outerWidth() {\n        return this.hasVerticalScroll() ? this.calcWidth + this.scrollWidth : this.calcWidth;\n    }\n\n    /**\n     * @hidden @internal\n     * Gets the visible content height that includes header + tbody + footer.\n     */\n    public getVisibleContentHeight() {\n        let height = this.theadRow.nativeElement.clientHeight + this.tbody.nativeElement.clientHeight;\n        if (this.hasSummarizedColumns) {\n            height += this.tfoot.nativeElement.clientHeight;\n        }\n        return height;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public getPossibleColumnWidth(baseWidth: number = null) {\n        let computedWidth;\n        if (baseWidth !== null) {\n            computedWidth = baseWidth;\n        } else {\n            computedWidth = this.calcWidth ||\n                parseInt(this.document.defaultView.getComputedStyle(this.nativeElement).getPropertyValue('width'), 10);\n        }\n\n        computedWidth -= this.featureColumnsWidth();\n\n        const visibleChildColumns = this.visibleColumns.filter(c => !c.columnGroup);\n\n\n        // Column layouts related\n        let visibleCols = [];\n        const columnBlocks = this.visibleColumns.filter(c => c.columnGroup);\n        const colsPerBlock = columnBlocks.map(block => block.getInitialChildColumnSizes(block.children));\n        const combinedBlocksSize = colsPerBlock.reduce((acc, item) => acc + item.length, 0);\n        colsPerBlock.forEach(blockCols => visibleCols = visibleCols.concat(blockCols));\n        //\n\n        const columnsWithSetWidths = this.hasColumnLayouts ?\n            visibleCols.filter(c => c.widthSetByUser) :\n            visibleChildColumns.filter(c => c.widthSetByUser);\n\n        const columnsToSize = this.hasColumnLayouts ?\n            combinedBlocksSize - columnsWithSetWidths.length :\n            visibleChildColumns.length - columnsWithSetWidths.length;\n        const sumExistingWidths = columnsWithSetWidths\n            .reduce((prev, curr) => {\n                const colWidth = curr.width;\n                const widthValue = parseInt(colWidth, 10);\n                const currWidth = colWidth && typeof colWidth === 'string' && colWidth.indexOf('%') !== -1 ?\n                    widthValue / 100 * computedWidth :\n                    widthValue;\n                return prev + currWidth;\n            }, 0);\n\n        // When all columns are hidden, return 0px width\n        if (!sumExistingWidths && !columnsToSize) {\n            return '0px';\n        }\n\n        const columnWidth = Math.floor(!Number.isFinite(sumExistingWidths) ?\n            Math.max(computedWidth / columnsToSize, MINIMUM_COLUMN_WIDTH) :\n            Math.max((computedWidth - sumExistingWidths) / columnsToSize, MINIMUM_COLUMN_WIDTH));\n\n        return columnWidth + 'px';\n    }\n\n    /**\n     * @hidden\n     * Sets grid width i.e. this.calcWidth\n     */\n    protected calculateGridWidth() {\n        let width;\n\n        if (this.isPercentWidth) {\n            /* width in %*/\n            const computed = this.document.defaultView.getComputedStyle(this.nativeElement).getPropertyValue('width');\n            width = computed.indexOf('%') === -1 ? parseInt(computed, 10) : null;\n        } else {\n            width = parseInt(this.width, 10);\n        }\n\n        if (!width && this.nativeElement) {\n            width = this.nativeElement.offsetWidth;\n        }\n\n\n        if (this.width === null || !width) {\n            width = this.getColumnWidthSum();\n        }\n\n        if (this.hasVerticalScroll() && this.width !== null) {\n            width -= this.scrollWidth;\n        }\n        if ((Number.isFinite(width) || width === null) && width !== this.calcWidth) {\n            this.calcWidth = width;\n        }\n        this._derivePossibleWidth();\n    }\n\n    private getColumnWidthSum(): number {\n        let colSum = 0;\n        const cols = this.hasColumnLayouts ?\n            this.visibleColumns.filter(x => x.columnLayout) : this.visibleColumns.filter(x => !x.columnGroup);\n        cols.forEach((item) => {\n            const isWidthInPercent = item.width && typeof item.width === 'string' && item.width.indexOf('%') !== -1;\n            if (isWidthInPercent) {\n                item.width = item.calcWidth || MINIMUM_COLUMN_WIDTH + 'px';\n            }\n            colSum += parseInt((item.width || item.defaultWidth), 10) || MINIMUM_COLUMN_WIDTH;\n        });\n        if (!colSum) {\n            return null;\n        }\n        this.cdr.detectChanges();\n        colSum += this.featureColumnsWidth();\n        return colSum;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public hasVerticalScroll() {\n        if (this._init) { return false; }\n        const isScrollable = this.verticalScrollContainer ? this.verticalScrollContainer.isScrollable() : false;\n        return !!(this.calcWidth && this.dataView &&\n            this.dataView.length > 0 &&\n            isScrollable);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    protected getDataBasedBodyHeight(): number {\n        return !this.data || (this.data.length < this._defaultTargetRecordNumber) ?\n            0 : this.defaultTargetBodyHeight;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    protected onPinnedRowsChanged(change: QueryList<IgxGridRowComponent>) {\n        const diff = this.rowListDiffer.diff(change);\n        if (diff) {\n            this.notifyChanges(true);\n         }\n    }\n\n    /**\n     * @hidden\n     */\n    protected onColumnsChanged(change: QueryList<IgxColumnComponent>) {\n        const diff = this.columnListDiffer.diff(change);\n        if (this.autoGenerate && this.columnList.length === 0 && this._autoGeneratedCols.length > 0) {\n            // In Ivy if there are nested conditional templates the content children are re-evaluated\n            // hence autogenerated columns are cleared and need to be reset.\n            this.columnList.reset(this._autoGeneratedCols);\n            return;\n        }\n        if (diff) {\n            let added = false;\n            let removed = false;\n\n            this.initColumns(this.columnList);\n\n\n            diff.forEachAddedItem((record: IterableChangeRecord<IgxColumnComponent>) => {\n                this.onColumnInit.emit(record.item);\n                added = true;\n            });\n\n            diff.forEachRemovedItem((record: IterableChangeRecord<IgxColumnComponent | IgxColumnGroupComponent>) => {\n                const isColumnGroup = record.item instanceof IgxColumnGroupComponent;\n                if (!isColumnGroup) {\n                    // Clear Grouping\n                    this.gridAPI.clear_groupby(record.item.field);\n\n                    // Clear Filtering\n                    this.gridAPI.clear_filter(record.item.field);\n\n                    // Close filter row\n                    if (this.filteringService.isFilterRowVisible\n                        && this.filteringService.filteredColumn\n                        && this.filteringService.filteredColumn.field === record.item.field) {\n                        this.filteringRow.close();\n                    }\n\n                    // Clear Sorting\n                    this.gridAPI.clear_sort(record.item.field);\n\n                    // Remove column selection\n                    this.selectionService.deselectColumnsWithNoEvent([record.item.field]);\n                }\n                removed = true;\n            });\n\n            this.resetCaches();\n\n            if (added || removed) {\n                this.summaryService.clearSummaryCache();\n                Promise.resolve().then(() => {\n                    // `onColumnsChanged` can be executed midway a current detectChange cycle and markForCheck will be ignored then.\n                    // This ensures that we will wait for the current cycle to end so we can trigger a new one and ngDoCheck to fire.\n                    this.notifyChanges(true);\n                });\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    protected calculateGridSizes(recalcFeatureWidth = true) {\n        /*\n            TODO: (R.K.) This layered lasagne should be refactored\n            ASAP. The reason I have to reset the caches so many times is because\n            after teach `detectChanges` call they are filled with invalid\n            state. Of course all of this happens midway through the grid\n            sizing process which of course, uses values from the caches, thus resulting\n            in a broken layout.\n        */\n        this.resetCaches(recalcFeatureWidth);\n        this.cdr.detectChanges();\n        const hasScroll = this.hasVerticalScroll();\n        this.calculateGridWidth();\n        this.resetCaches(recalcFeatureWidth);\n        this.cdr.detectChanges();\n        this.calculateGridHeight();\n\n        if (this.rowEditable) {\n            this.repositionRowEditingOverlay(this.rowInEditMode);\n        }\n\n        if (this.filteringService.isFilterRowVisible) {\n            this.filteringRow.resetChipsArea();\n        }\n\n        this.cdr.detectChanges();\n        // in case scrollbar has appeared recalc to size correctly.\n        if (hasScroll !== this.hasVerticalScroll()) {\n            this.calculateGridWidth();\n            this.cdr.detectChanges();\n        }\n        if (this.zone.isStable) {\n            this.zone.run(() => {\n                this._applyWidthHostBinding();\n                this.cdr.detectChanges();\n            });\n        } else {\n            this.zone.onStable.pipe(first()).subscribe(() => {\n                this.zone.run(() => {\n                    this._applyWidthHostBinding();\n                });\n            });\n        }\n        this.resetCaches(recalcFeatureWidth);\n    }\n\n    private _applyWidthHostBinding() {\n        let width = this._width;\n        if (width === null) {\n            let currentWidth = this.calcWidth;\n            if (this.hasVerticalScroll()) {\n                currentWidth += this.scrollWidth;\n            }\n            width = currentWidth + 'px';\n            this.resetCaches();\n        }\n        this._hostWidth = width;\n        this.cdr.markForCheck();\n    }\n\n    /**\n     * Gets calculated width of the pinned area.\n     * @example\n     * ```typescript\n     * const pinnedWidth = this.grid.getPinnedWidth();\n     * ```\n     * @param takeHidden If we should take into account the hidden columns in the pinned area.\n     */\n    public getPinnedWidth(takeHidden = false) {\n        const fc = takeHidden ? this._pinnedColumns : this.pinnedColumns;\n        let sum = 0;\n        for (const col of fc) {\n            if (col.level === 0) {\n                sum += parseInt(col.calcWidth, 10);\n            }\n        }\n        if (this.pinning.columns === ColumnPinningPosition.Start) {\n            sum += this.featureColumnsWidth();\n        }\n\n        return sum;\n    }\n\n    /**\n     * @hidden\n     * Gets calculated width of the unpinned area\n     * @param takeHidden If we should take into account the hidden columns in the pinned area.\n     */\n    protected getUnpinnedWidth(takeHidden = false) {\n        let width = this.isPercentWidth ?\n            this.calcWidth :\n            parseInt(this.width, 10) || parseInt(this.hostWidth, 10) || this.calcWidth;\n        if (this.hasVerticalScroll() && !this.isPercentWidth) {\n            width -= this.scrollWidth;\n        }\n        if (this.pinning.columns === ColumnPinningPosition.End) {\n            width -= this.featureColumnsWidth();\n        }\n\n        return width - this.getPinnedWidth(takeHidden);\n    }\n\n    /**\n     * @hidden\n     */\n    protected _summaries(fieldName: string, hasSummary: boolean, summaryOperand?: any) {\n        const column = this.gridAPI.get_column_by_name(fieldName);\n        if (column) {\n            column.hasSummary = hasSummary;\n            if (summaryOperand) {\n                if (this.rootSummariesEnabled) { this.summaryService.retriggerRootPipe++; }\n                column.summaries = summaryOperand;\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    protected _multipleSummaries(expressions: ISummaryExpression[], hasSummary: boolean) {\n        expressions.forEach((element) => {\n            this._summaries(element.fieldName, hasSummary, element.customSummary);\n        });\n    }\n    /**\n     * @hidden\n     */\n    protected _disableMultipleSummaries(expressions) {\n        expressions.forEach((column) => {\n            const columnName = column && column.fieldName ? column.fieldName : column;\n            this._summaries(columnName, false);\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    protected resolveDataTypes(rec) {\n        if (typeof rec === 'number') {\n            return DataType.Number;\n        } else if (typeof rec === 'boolean') {\n            return DataType.Boolean;\n        } else if (typeof rec === 'object' && rec instanceof Date) {\n            return DataType.Date;\n        }\n        return DataType.String;\n    }\n\n    /**\n     * @hidden\n     */\n    protected autogenerateColumns() {\n        const data = this.gridAPI.get_data();\n        const factory = this.resolver.resolveComponentFactory(IgxColumnComponent);\n        const fields = this.generateDataFields(data);\n        const columns = [];\n\n        fields.forEach((field) => {\n            const ref = factory.create(this.viewRef.injector);\n            ref.instance.field = field;\n            ref.instance.dataType = this.resolveDataTypes(data[0][field]);\n            ref.changeDetectorRef.detectChanges();\n            columns.push(ref.instance);\n        });\n        this._autoGeneratedCols = columns;\n\n        this.columnList.reset(columns);\n        if (data && data.length > 0) {\n            this.shouldGenerate = false;\n        }\n    }\n\n    protected generateDataFields(data: any[]): string[] {\n        return Object.keys(data && data.length !== 0 ? data[0] : []);\n    }\n\n    /**\n     * @hidden\n     */\n    onlyTopLevel(arr) {\n        return arr.filter(c => c.level === 0);\n    }\n\n    /**\n     * @hidden\n     */\n    protected initColumns(collection: QueryList<IgxColumnComponent>, cb: Function = null) {\n        this._columnGroups = this.columnList.some(col => col.columnGroup);\n        if (this.hasColumnLayouts) {\n            // Set overall row layout size\n            this.columnList.forEach((col) => {\n                if (col.columnLayout) {\n                    const layoutSize = col.children ?\n                        col.children.reduce((acc, val) => Math.max(val.rowStart + val.gridRowSpan - 1, acc), 1) :\n                        1;\n                    this._multiRowLayoutRowSize = Math.max(layoutSize, this._multiRowLayoutRowSize);\n                }\n            });\n        }\n        if (this.hasColumnLayouts && this.hasColumnGroups) {\n            // invalid configuration - multi-row and column groups\n            // remove column groups\n            const columnLayoutColumns = this.columnList.filter((col) => col.columnLayout || col.columnLayoutChild);\n            this.columnList.reset(columnLayoutColumns);\n        }\n        this._maxLevelHeaderDepth = null;\n        this._columns = this.columnList.toArray();\n        collection.forEach((column: IgxColumnComponent) => {\n            column.defaultWidth = this.columnWidthSetByUser ? this._columnWidth : column.defaultWidth ? column.defaultWidth : '';\n\n            if (cb) {\n                cb(column);\n            }\n        });\n\n        this.reinitPinStates();\n\n        if (this.hasColumnLayouts) {\n            collection.forEach((column: IgxColumnComponent) => {\n                column.populateVisibleIndexes();\n            });\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    protected reinitPinStates() {\n        this._pinnedColumns = (this.hasColumnGroups) ? this.columnList.filter((c) => c.pinned) :\n            this.columnList.filter((c) => c.pinned).sort((a, b) => this._pinnedColumns.indexOf(a) - this._pinnedColumns.indexOf(b));\n        this._unpinnedColumns = this.hasColumnGroups ? this.columnList.filter((c) => !c.pinned) :\n            this.columnList.filter((c) => !c.pinned)\n                .sort((a, b) => this._unpinnedColumns.indexOf(a) - this._unpinnedColumns.indexOf(b));\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public isColumnGrouped(fieldName: string): boolean {\n        return false;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onHeaderSelectorClick(event) {\n        if (!this.isMultiRowSelectionEnabled) { return; }\n        this.selectionService.areAllRowSelected() ?\n            this.selectionService.clearRowSelection(event) : this.selectionService.selectAllRows(event);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    get headSelectorBaseAriaLabel() {\n        if (this._filteringExpressionsTree.filteringOperands.length > 0) {\n            return this.selectionService.areAllRowSelected() ? 'Deselect all filtered' : 'Select all filtered';\n        }\n\n        return this.selectionService.areAllRowSelected() ? 'Deselect all' : 'Select all';\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public get totalRowsCountAfterFilter() {\n        if (this.data) {\n            return this.selectionService.allData.length;\n        }\n\n        return 0;\n    }\n\n    /**\n     * Returns the currently transformed paged/filtered/sorted/grouped pinned row data, displayed in the grid.\n     * @example\n     * ```typescript\n     *      const pinnedDataView = this.grid.pinnedDataView;\n     * ```\n     */\n    get pinnedDataView(): any[] {\n        return this.pinnedRecords ? this.pinnedRecords : [];\n    }\n\n    /**\n     * Returns currently transformed paged/filtered/sorted/grouped unpinned row data, displayed in the grid.\n     * @example\n     * ```typescript\n     *      const pinnedDataView = this.grid.pinnedDataView;\n     * ```\n     */\n    get unpinnedDataView(): any[] {\n        return this.unpinnedRecords ? this.unpinnedRecords : this.verticalScrollContainer.igxForOf || [];\n    }\n\n    /**\n     * Returns the currently transformed paged/filtered/sorted/grouped/pinned/unpinned row data, displayed in the grid.\n     * @example\n     * ```typescript\n     *      const dataView = this.grid.dataView;\n     * ```\n     */\n    get dataView(): any[] {\n        return this.isRowPinningToTop ?\n            [...this.pinnedDataView, ...this.unpinnedDataView] :\n            [...this.unpinnedDataView, ...this.pinnedDataView];\n    }\n\n    /**\n     * Get current selection state.\n     * @example\n     * Returns an array with selected rows' IDs (primaryKey or rowData)\n     * ```typescript\n     * const selectedRows = this.grid.selectedRows();\n     * ```\n     */\n    public selectedRows(): any[] {\n        return this.selectionService.getSelectedRows();\n    }\n\n    /**\n     * Select specified rows by ID.\n     * @example\n     * ```typescript\n     * this.grid.selectRows([1,2,5], true);\n     * ```\n     * @param rowIDs\n     * @param clearCurrentSelection if true clears the current selection\n     */\n    public selectRows(rowIDs: any[], clearCurrentSelection?: boolean) {\n        this.selectionService.selectRowsWithNoEvent(rowIDs, clearCurrentSelection);\n        this.notifyChanges();\n    }\n\n    /**\n     * Deselect specified rows by ID.\n     * @example\n     * ```typescript\n     * this.grid.deselectRows([1,2,5]);\n     * ```\n     * @param rowIDs\n     */\n    public deselectRows(rowIDs: any[]) {\n        this.selectionService.deselectRowsWithNoEvent(rowIDs);\n        this.notifyChanges();\n    }\n\n    /**\n     * Selects all rows\n     * @remarks\n     * By default if filtering is in place, selectAllRows() and deselectAllRows() select/deselect all filtered rows.\n     * If you set the parameter onlyFilterData to false that will select all rows in the grid exept deleted rows.\n     * @example\n     * ```typescript\n     * this.grid.selectAllRows();\n     * this.grid.selectAllRows(false);\n     * ```\n     * @param onlyFilterData\n     */\n    public selectAllRows(onlyFilterData = true) {\n        const data = onlyFilterData && this.filteredData ? this.filteredData : this.gridAPI.get_all_data(true);\n        const rowIDs = this.selectionService.getRowIDs(data).filter(rID => !this.gridAPI.row_deleted_transaction(rID));\n        this.selectRows(rowIDs);\n    }\n\n    /**\n     * Deselects all rows\n     * @remarks\n     * By default if filtering is in place, selectAllRows() and deselectAllRows() select/deselect all filtered rows.\n     * If you set the parameter onlyFilterData to false that will deselect all rows in the grid exept deleted rows.\n     * @example\n     * ```typescript\n     * this.grid.deselectAllRows();\n     * ```\n     * @param onlyFilterData\n     */\n    public deselectAllRows(onlyFilterData = true) {\n        if (onlyFilterData && this.filteredData && this.filteredData.length > 0) {\n            this.deselectRows(this.selectionService.getRowIDs(this.filteredData));\n        } else {\n            this.selectionService.clearAllSelectedRows();\n            this.notifyChanges();\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public clearCellSelection(): void {\n        this.selectionService.clear(true);\n        this.notifyChanges();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public dragScroll(dir: DragScrollDirection): void {\n        const scrollDelta = 48;\n        const horizontal = this.headerContainer.getScroll();\n        const vertical = this.verticalScrollContainer.getScroll();\n        switch (dir) {\n            case DragScrollDirection.LEFT:\n                horizontal.scrollLeft -= scrollDelta;\n                break;\n            case DragScrollDirection.RIGHT:\n                horizontal.scrollLeft += scrollDelta;\n                break;\n            case DragScrollDirection.TOP:\n                vertical.scrollTop -= scrollDelta;\n                break;\n            case DragScrollDirection.BOTTOM:\n                vertical.scrollTop += scrollDelta;\n                break;\n            case DragScrollDirection.BOTTOMLEFT:\n                horizontal.scrollLeft -= scrollDelta;\n                vertical.scrollTop += scrollDelta;\n                break;\n            case DragScrollDirection.BOTTOMRIGHT:\n                horizontal.scrollLeft += scrollDelta;\n                vertical.scrollTop += scrollDelta;\n                break;\n            case DragScrollDirection.TOPLEFT:\n                horizontal.scrollLeft -= scrollDelta;\n                vertical.scrollTop -= scrollDelta;\n                break;\n            case DragScrollDirection.TOPRIGHT:\n                horizontal.scrollLeft += scrollDelta;\n                vertical.scrollTop -= scrollDelta;\n                break;\n            default:\n                return;\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public isDefined(arg: any): boolean {\n        return arg !== undefined && arg !== null;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public selectRange(arg: GridSelectionRange | GridSelectionRange[] | null | undefined): void {\n        if (!this.isDefined(arg)) {\n            this.clearCellSelection();\n            return;\n        }\n        if (arg instanceof Array) {\n            arg.forEach(range => this.setSelection(range));\n        } else {\n            this.setSelection(arg);\n        }\n        this.notifyChanges();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public columnToVisibleIndex(field: string | number): number {\n        const visibleColumns = this.visibleColumns;\n        if (typeof field === 'number') {\n            return field;\n        }\n        return visibleColumns.find(column => column.field === field).visibleIndex;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public setSelection(range: GridSelectionRange): void {\n        const startNode = { row: range.rowStart, column: this.columnToVisibleIndex(range.columnStart) };\n        const endNode = { row: range.rowEnd, column: this.columnToVisibleIndex(range.columnEnd) };\n\n        this.selectionService.pointerState.node = startNode;\n        this.selectionService.selectRange(endNode, this.selectionService.pointerState);\n        this.selectionService.addRangeMeta(endNode, this.selectionService.pointerState);\n        this.selectionService.initPointerState();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    getSelectedRanges(): GridSelectionRange[] {\n        return this.selectionService.ranges;\n    }\n\n\n    protected extractDataFromSelection(source: any[], formatters = false, headers = false): any[] {\n        let columnsArray: IgxColumnComponent[];\n        let record = {};\n        const selectedData = [];\n        const activeEl = this.selectionService.activeElement;\n\n        const selectionMap = Array.from(this.selectionService.selection)\n            .filter((tuple) => tuple[0] < source.length);\n\n        if (this.cellSelection === GridSelectionMode.single && activeEl) {\n            selectionMap.push([activeEl.row, new Set<number>().add(activeEl.column)]);\n        }\n\n        for (const [row, set] of selectionMap) {\n            if (!source[row] || source[row].detailsData !== undefined) {\n                continue;\n            }\n            const temp = Array.from(set);\n            for (const each of temp) {\n                columnsArray = this.getSelectableColumnsAt(each);\n                columnsArray.forEach((col) => {\n                    if (col) {\n                        const key = headers ? col.header || col.field : col.field;\n                        const value = source[row].ghostRecord ? source[row].recordRef[col.field] : source[row][col.field];\n                        record[key] = formatters && col.formatter ? col.formatter(value) : value;\n                    }\n                });\n            }\n            if (Object.keys(record).length) {\n                selectedData.push(record);\n            }\n            record = {};\n        }\n        return selectedData;\n    }\n\n    protected getSelectableColumnsAt(index) {\n        if (this.hasColumnLayouts) {\n            const visibleLayoutColumns = this.visibleColumns\n                .filter(col => col.columnLayout)\n                .sort((a, b) => a.visibleIndex - b.visibleIndex);\n            const colLayout = visibleLayoutColumns[index];\n            return colLayout ? colLayout.children.toArray() : [];\n        } else {\n            const visibleColumns = this.visibleColumns\n                .filter(col => !col.columnGroup)\n                .sort((a, b) => a.visibleIndex - b.visibleIndex);\n            return [visibleColumns[index]];\n        }\n    }\n\n    /**\n     *\n     * Returns an array of the current cell selection in the form of `[{ column.field: cell.value }, ...]`.\n     * @remarks\n     * If `formatters` is enabled, the cell value will be formatted by its respective column formatter (if any).\n     * If `headers` is enabled, it will use the column header (if any) instead of the column field.\n     */\n    public getSelectedData(formatters = false, headers = false) {\n        const source = this.filteredSortedData;\n        return this.extractDataFromSelection(source, formatters, headers);\n    }\n\n   /**\n    * Get current selected columns.\n    * @example\n    * Returns an array with selected columns\n    * ```typescript\n    * const selectedColumns = this.grid.selectedColumns();\n    * ```\n    */\n    public selectedColumns(): IgxColumnComponent[] {\n        const fields = this.selectionService.getSelectedColumns();\n        return fields.map(field => this.getColumnByName(field)).filter(field => field);\n    }\n\n    /**\n     * Select specified columns.\n     * @example\n     * ```typescript\n     * this.grid.selectColumns(['ID','Name'], true);\n     * ```\n     * @param columns\n     * @param clearCurrentSelection if true clears the current selection\n     */\n    public selectColumns(columns: string[] | IgxColumnComponent[], clearCurrentSelection?: boolean) {\n        let fieldToSelect: string[] = [];\n        if (columns.length === 0 || typeof columns[0] === 'string') {\n            fieldToSelect = columns as string[];\n        } else {\n            (columns as IgxColumnComponent[]).forEach(col => {\n                if (col.columnGroup) {\n                   const children =  col.allChildren.filter(c => !c.columnGroup).map(c => c.field);\n                   fieldToSelect = [...fieldToSelect, ...children];\n                }  else {\n                    fieldToSelect.push(col.field);\n                }\n            });\n        }\n\n        this.selectionService.selectColumnsWithNoEvent(fieldToSelect, clearCurrentSelection);\n        this.notifyChanges();\n    }\n\n    /**\n     * Deselect specified columns by filed.\n     * @example\n     * ```typescript\n     * this.grid.deselectColumns(['ID','Name']);\n     * ```\n     * @param columns\n     */\n    public deselectColumns(columns: string[] | IgxColumnComponent[]) {\n        let fieldToDeselect: string[] = [];\n        if (columns.length === 0 || typeof columns[0] === 'string') {\n            fieldToDeselect = columns as string[];\n        } else {\n            (columns as IgxColumnComponent[]).forEach(col => {\n                if (col.columnGroup) {\n                   const children =  col.allChildren.filter(c => !c.columnGroup).map(c => c.field);\n                   fieldToDeselect = [...fieldToDeselect, ...children];\n                }  else {\n                    fieldToDeselect.push(col.field);\n                }\n            });\n        }\n        this.selectionService.deselectColumnsWithNoEvent(fieldToDeselect);\n        this.notifyChanges();\n    }\n\n   /**\n    * Deselects all columns\n    * @example\n    * ```typescript\n    * this.grid.deselectAllColumns();\n    * ```\n    */\n    public deselectAllColumns() {\n        this.selectionService.clearAllSelectedColumns();\n        this.notifyChanges();\n    }\n\n   /**\n    * Selects all columns\n    * @example\n    * ```typescript\n    * this.grid.deselectAllColumns();\n    * ```\n    */\n    public selectAllColumns() {\n        this.selectColumns(this.columnList.filter(c => !c.columnGroup));\n    }\n\n    protected extractDataFromColumnsSelection(source: any[], formatters = false, headers = false): any[] {\n        let record = {};\n        const selectedData = [];\n        const selectedColumns = this.selectedColumns();\n        if (selectedColumns.length === 0) {\n            return [];\n        }\n\n        for (let rowIndex = 0; rowIndex < source.length; rowIndex++) {\n            selectedColumns.forEach((col) => {\n                const key = headers ? col.header || col.field : col.field;\n                record[key] = formatters && col.formatter ? col.formatter(source[rowIndex][col.field])\n                    : source[rowIndex][col.field];\n            });\n\n            if (Object.keys(record).length) {\n                selectedData.push(record);\n            }\n            record = {};\n        }\n        return selectedData;\n    }\n\n    /**\n     *\n     * Returns an array of the current columns selection in the form of `[{ column.field: cell.value }, ...]`.\n     * @remarks\n     * If `formatters` is enabled, the cell value will be formatted by its respective column formatter (if any).\n     * If `headers` is enabled, it will use the column header (if any) instead of the column field.\n     */\n    public getSelectedColumnsData(formatters = false, headers = false) {\n        const source = this.filteredSortedData ?  this.filteredSortedData : this.data;\n        return this.extractDataFromColumnsSelection(source, formatters, headers);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public preventContainerScroll = (evt) => {\n        if (evt.target.scrollTop !== 0) {\n            this.verticalScrollContainer.addScrollTop(evt.target.scrollTop);\n            evt.target.scrollTop = 0;\n        }\n        if (evt.target.scrollLeft !== 0) {\n            this.headerContainer.scrollPosition += evt.target.scrollLeft;\n            evt.target.scrollLeft = 0;\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    copyHandlerIE() {\n        if (isIE()) {\n            this.copyHandler(null, true);\n        }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public copyHandler(event, ie11 = false) {\n        if (!this.clipboardOptions.enabled || this.crudService.inEditMode) {\n            return;\n        }\n\n        const data = this.getSelectedData(this.clipboardOptions.copyFormatters, this.clipboardOptions.copyHeaders);\n        const ev = { data, cancel: false } as IGridClipboardEvent;\n        this.onGridCopy.emit(ev);\n\n        if (ev.cancel) {\n            return;\n        }\n\n        const transformer = new CharSeparatedValueData(ev.data, this.clipboardOptions.separator);\n        let result = transformer.prepareData();\n\n        if (!this.clipboardOptions.copyHeaders) {\n            result = result.substring(result.indexOf('\\n') + 1);\n        }\n\n        if (ie11) {\n            (window as any).clipboardData.setData('Text', result);\n            return;\n        }\n\n        event.preventDefault();\n\n        /* Necessary for the hiearachical case but will probably have to\n           change how getSelectedData is propagated in the hiearachical grid\n        */\n        event.stopPropagation();\n        event.clipboardData.setData('text/plain', result);\n    }\n\n    /**\n     * Navigates to a position in the grid based on provided `rowindex` and `visibleColumnIndex`.\n     * @remarks\n     * Also can execute a custom logic over the target element,\n     * through a callback function that accepts { targetType: GridKeydownTargetType, target: Object }\n     * @example\n     * ```typescript\n     *  this.grid.navigateTo(10, 3, (args) => { args.target.nativeElement.focus(); });\n     * ```\n     */\n    public navigateTo(rowIndex: number, visibleColIndex = -1, cb: Function = null) {\n        if (rowIndex < 0 || rowIndex > this.dataView.length - 1\n            || (visibleColIndex !== -1 && this.columnList.map(col => col.visibleIndex).indexOf(visibleColIndex) === -1)) {\n            return;\n        }\n        if (this.dataView.slice(rowIndex, rowIndex + 1).find(rec => rec.expression || rec.childGridsData)) {\n            visibleColIndex = -1;\n        }\n        // If the target row is pinned no need to scroll as well.\n        const shouldScrollVertically = this.navigation.shouldPerformVerticalScroll(rowIndex, visibleColIndex);\n        const shouldScrollHorizontally = this.navigation.shouldPerformHorizontalScroll(visibleColIndex, rowIndex);\n        if (shouldScrollVertically) {\n            this.navigation.performVerticalScrollToCell(rowIndex, visibleColIndex, () => {\n                if (shouldScrollHorizontally) {\n                    this.navigation.performHorizontalScrollToCell(visibleColIndex, () =>\n                     this.executeCallback(rowIndex, visibleColIndex, cb));\n                } else {\n                    this.executeCallback(rowIndex, visibleColIndex, cb);\n                }});\n        } else if (shouldScrollHorizontally) {\n            this.navigation.performHorizontalScrollToCell(visibleColIndex, () => {\n                if (shouldScrollVertically) {\n                    this.navigation.performVerticalScrollToCell(rowIndex, visibleColIndex, () =>\n                        this.executeCallback(rowIndex, visibleColIndex, cb));\n                } else {\n                    this.executeCallback(rowIndex, visibleColIndex, cb);\n                }});\n        } else {\n            this.executeCallback(rowIndex, visibleColIndex, cb);\n        }\n    }\n\n   /**\n    * Returns `ICellPosition` which defines the next cell,\n    * according to the current position, that match specific criteria.\n    * @remarks\n    * You can pass callback function as a third parameter of `getPreviousCell` method.\n    * The callback function accepts IgxColumnComponent as a param\n    * @example\n    * ```typescript\n    *  const nextEditableCellPosition = this.grid.getNextCell(0, 3, (column) => column.editable);\n    * ```\n    */\n    public getNextCell(currRowIndex: number, curVisibleColIndex: number,\n        callback: (IgxColumnComponent) => boolean = null): ICellPosition {\n        const columns = this.columnList.filter(col => !col.columnGroup && col.visibleIndex >= 0);\n\n        if (!this.isValidPosition(currRowIndex, curVisibleColIndex)) {\n            return { rowIndex: currRowIndex, visibleColumnIndex: curVisibleColIndex };\n        }\n        const colIndexes = callback ? columns.filter((col) => callback(col)).map(editCol => editCol.visibleIndex).sort((a, b) => a - b) :\n            columns.map(editCol => editCol.visibleIndex).sort((a, b) => a - b);\n        const nextCellIndex = colIndexes.find(index => index > curVisibleColIndex);\n        if (this.dataView.slice(currRowIndex, currRowIndex + 1)\n            .find(rec => !rec.expression && !rec.summaries && !rec.childGridsData && !rec.detailsData) && nextCellIndex !== undefined) {\n            return { rowIndex: currRowIndex, visibleColumnIndex: nextCellIndex };\n        } else {\n            if (colIndexes.length === 0 || this.getNextDataRowIndex(currRowIndex) === currRowIndex) {\n                return { rowIndex: currRowIndex, visibleColumnIndex: curVisibleColIndex };\n            } else {\n                return { rowIndex: this.getNextDataRowIndex(currRowIndex), visibleColumnIndex: colIndexes[0] };\n            }\n        }\n    }\n\n   /**\n    * Returns `ICellPosition` which defines the previous cell,\n    * according to the current position, that match specific criteria.\n    * @remarks\n    * You can pass callback function as a third parameter of `getPreviousCell` method.\n    * The callback function accepts IgxColumnComponent as a param\n    * @example\n    * ```typescript\n    *  const previousEditableCellPosition = this.grid.getPreviousCell(0, 3, (column) => column.editable);\n    * ```\n    */\n    public getPreviousCell(currRowIndex: number, curVisibleColIndex: number,\n        callback: (IgxColumnComponent) => boolean = null): ICellPosition {\n        const columns = this.columnList.filter(col => !col.columnGroup && col.visibleIndex >= 0);\n\n        if (!this.isValidPosition(currRowIndex, curVisibleColIndex)) {\n            return { rowIndex: currRowIndex, visibleColumnIndex: curVisibleColIndex };\n        }\n        const colIndexes = callback ? columns.filter((col) => callback(col)).map(editCol => editCol.visibleIndex).sort((a, b) => b - a) :\n            columns.map(editCol => editCol.visibleIndex).sort((a, b) => b - a);\n        const prevCellIndex = colIndexes.find(index => index < curVisibleColIndex);\n        if (this.dataView.slice(currRowIndex, currRowIndex + 1)\n            .find(rec => !rec.expression && !rec.summaries && !rec.childGridsData && !rec.detailsData) && prevCellIndex !== undefined) {\n            return { rowIndex: currRowIndex, visibleColumnIndex: prevCellIndex };\n        } else {\n            if (colIndexes.length === 0 || this.getNextDataRowIndex(currRowIndex, true) === currRowIndex) {\n                return { rowIndex: currRowIndex, visibleColumnIndex: curVisibleColIndex };\n            } else {\n                return { rowIndex: this.getNextDataRowIndex(currRowIndex, true), visibleColumnIndex: colIndexes[0] };\n            }\n        }\n    }\n\n    private executeCallback(rowIndex, visibleColIndex = -1, cb: Function = null) {\n        if (!cb) { return; }\n        let targetType, target;\n        const row = this.summariesRowList.filter(s => s.index !== 0).concat(this.rowList.toArray()).find(r => r.index === rowIndex);\n        if (!row) { return; }\n        switch (row.nativeElement.tagName.toLowerCase()) {\n            case 'igx-grid-groupby-row':\n                targetType = GridKeydownTargetType.groupRow;\n                target = row;\n                break;\n            case 'igx-grid-summary-row':\n                targetType = GridKeydownTargetType.summaryCell;\n                target = visibleColIndex !== -1 ?\n                    row.summaryCells.find(c => c.visibleColumnIndex === visibleColIndex) : row.summaryCells.first;\n                break;\n            case 'igx-child-grid-row':\n                targetType = GridKeydownTargetType.hierarchicalRow;\n                target = row;\n                break;\n            default:\n                targetType = GridKeydownTargetType.dataCell;\n                target = visibleColIndex !== -1 ? row.cells.find(c => c.visibleColumnIndex === visibleColIndex) : row.cells.first;\n                break;\n        }\n        const args = { targetType: targetType, target: target };\n        cb(args);\n    }\n\n    private getNextDataRowIndex(currentRowIndex, previous = false): number {\n        if (currentRowIndex < 0 || (currentRowIndex === 0 && previous) || (currentRowIndex >= this.dataView.length - 1 && !previous)) {\n            return currentRowIndex;\n        }\n        // find next/prev record that is editable.\n        const nextRowIndex = previous ? this.findPrevEditableDataRowIndex(currentRowIndex) :\n        this.dataView.findIndex((rec, index) =>\n        index > currentRowIndex && this.isEditableDataRecordAtIndex(index));\n        return nextRowIndex !== -1 ? nextRowIndex : currentRowIndex ;\n    }\n\n    /**\n     * Returns the previous editable row index or -1 if no such row is found.\n     * @param currentIndex The index of the current editable record.\n     */\n    private findPrevEditableDataRowIndex(currentIndex): number {\n        let i = this.dataView.length;\n        while (i--) {\n            if (i < currentIndex && this.isEditableDataRecordAtIndex(i)) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n\n    /**\n     * Returns if the record at the specified data view index is a an editable data record.\n     * If record is group rec, summary rec, child rec, ghost rec. etc. it is not editable.\n     * @param dataViewIndex The index of that record in the data view.\n     */\n    private isEditableDataRecordAtIndex(dataViewIndex) {\n        const rec = this.dataView[dataViewIndex];\n        return !rec.expression && !rec.summaries && !rec.childGridsData && !rec.detailsData &&\n        !this.isGhostRecordAtIndex(dataViewIndex);\n    }\n\n    /**\n     * Returns if the record at the specified data view index is a ghost.\n     * If record is pinned but is not in pinned area then it is a ghost record.\n     * @param dataViewIndex The index of that record in the data view.\n     */\n    private isGhostRecordAtIndex(dataViewIndex) {\n        const isPinned = this.isRecordPinned(this.dataView[dataViewIndex]);\n        const isInPinnedArea = this.isRecordPinnedByViewIndex(dataViewIndex);\n        return isPinned && !isInPinnedArea;\n    }\n\n    private isValidPosition(rowIndex, colIndex): boolean {\n        const rows = this.summariesRowList.filter(s => s.index !== 0).concat(this.rowList.toArray()).length;\n        const cols = this.columnList.filter(col => !col.columnGroup && col.visibleIndex >= 0 && !col.hidden).length;\n        if (rows < 1 || cols < 1) { return false; }\n        if (rowIndex > -1 && rowIndex < this.dataView.length &&\n            colIndex > - 1 && colIndex <= Math.max(...this.visibleColumns.map(c => c.visibleIndex))) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public trackColumnChanges(index, col) {\n        return col.field + col._calcWidth;\n    }\n\n    private find(text: string, increment: number, caseSensitive?: boolean, exactMatch?: boolean, scroll?: boolean) {\n        if (!this.rowList) {\n            return 0;\n        }\n\n        this.endEdit(false);\n\n        if (!text) {\n            this.clearSearch();\n            return 0;\n        }\n\n        const caseSensitiveResolved = caseSensitive ? true : false;\n        const exactMatchResolved = exactMatch ? true : false;\n        let rebuildCache = false;\n\n        if (this.lastSearchInfo.searchText !== text ||\n            this.lastSearchInfo.caseSensitive !== caseSensitiveResolved ||\n            this.lastSearchInfo.exactMatch !== exactMatchResolved) {\n            this.lastSearchInfo = {\n                searchText: text,\n                activeMatchIndex: 0,\n                caseSensitive: caseSensitiveResolved,\n                exactMatch: exactMatchResolved,\n                matchInfoCache: []\n            };\n\n            rebuildCache = true;\n        } else {\n            this.lastSearchInfo.activeMatchIndex += increment;\n        }\n\n        if (rebuildCache) {\n            this.rowList.forEach((row) => {\n                if (row.cells) {\n                    row.cells.forEach((c) => {\n                        c.highlightText(text, caseSensitiveResolved, exactMatchResolved);\n                    });\n                }\n            });\n\n            this.rebuildMatchCache();\n        }\n\n        if (this.lastSearchInfo.activeMatchIndex >= this.lastSearchInfo.matchInfoCache.length) {\n            this.lastSearchInfo.activeMatchIndex = 0;\n        } else if (this.lastSearchInfo.activeMatchIndex < 0) {\n            this.lastSearchInfo.activeMatchIndex = this.lastSearchInfo.matchInfoCache.length - 1;\n        }\n\n        if (this.lastSearchInfo.matchInfoCache.length) {\n            const matchInfo = this.lastSearchInfo.matchInfoCache[this.lastSearchInfo.activeMatchIndex];\n            this.lastSearchInfo = { ...this.lastSearchInfo };\n\n            if (scroll !== false) {\n                this.scrollTo(matchInfo.row, matchInfo.column);\n            }\n\n            IgxTextHighlightDirective.setActiveHighlight(this.id, {\n                column: matchInfo.column,\n                row: matchInfo.row,\n                index: matchInfo.index,\n                metadata: matchInfo.metadata,\n            });\n\n        } else {\n            IgxTextHighlightDirective.clearActiveHighlight(this.id);\n        }\n\n        return this.lastSearchInfo.matchInfoCache.length;\n    }\n\n    /**\n     * Returns an array containing the filtered sorted data.\n     * @example\n     * ```typescript\n     * const filteredSortedData = this.grid1.filteredSortedData;\n     * ```\n     */\n    get filteredSortedData(): any[] {\n        return this._filteredSortedData;\n    }\n    set filteredSortedData(value: any[]) {\n        this._filteredSortedData = value;\n        this.refreshSearch(true);\n    }\n\n    /**\n     * @hidden\n     */\n    protected initPinning() {\n        let currentPinnedWidth = 0;\n        const pinnedColumns = [];\n        const unpinnedColumns = [];\n\n        this.calculateGridWidth();\n        this.resetCaches();\n        // When a column is a group or is inside a group, pin all related.\n        this._pinnedColumns.forEach(col => {\n            if (col.parent) {\n                col.parent.pinned = true;\n            }\n            if (col.columnGroup) {\n                col.children.forEach(child => child.pinned = true);\n            }\n        });\n\n        // Make sure we don't exceed unpinned area min width and get pinned and unpinned col collections.\n        // We take into account top level columns (top level groups and non groups).\n        // If top level is unpinned the pinning handles all children to be unpinned as well.\n        for (let i = 0; i < this._columns.length; i++) {\n            if (this._columns[i].pinned && !this._columns[i].parent) {\n                // Pinned column. Check if with it the unpinned min width is exceeded.\n                const colWidth = parseInt(this._columns[i].width, 10);\n                currentPinnedWidth += colWidth;\n                pinnedColumns.push(this._columns[i]);\n            } else if (this._columns[i].pinned && this._columns[i].parent) {\n                if (this._columns[i].topLevelParent.pinned) {\n                    pinnedColumns.push(this._columns[i]);\n                } else {\n                    this._columns[i].pinned = false;\n                    unpinnedColumns.push(this._columns[i]);\n                }\n            } else {\n                unpinnedColumns.push(this._columns[i]);\n            }\n        }\n\n        // Assign the applicaple collections.\n        this._pinnedColumns = pinnedColumns;\n        this._unpinnedColumns = unpinnedColumns;\n        this.notifyChanges();\n    }\n\n    /**\n     * @hidden\n     */\n    protected scrollTo(row: any | number, column: any | number, inCollection = this._filteredSortedUnpinnedData): void {\n        let delayScrolling = false;\n\n        if (this.paging && typeof (row) !== 'number') {\n            const rowIndex = inCollection.indexOf(row);\n            const page = Math.floor(rowIndex / this.perPage);\n\n            if (this.page !== page) {\n                delayScrolling = true;\n                this.page = page;\n            }\n        }\n\n        if (delayScrolling) {\n            this.verticalScrollContainer.onDataChanged.pipe(first()).subscribe(() => {\n                this.scrollDirective(this.verticalScrollContainer,\n                    typeof (row) === 'number' ? row : this.unpinnedDataView.indexOf(row));\n            });\n        } else {\n            this.scrollDirective(this.verticalScrollContainer,\n                typeof (row) === 'number' ? row : this.unpinnedDataView.indexOf(row));\n        }\n\n        this.scrollToHorizontally(column);\n    }\n\n    /**\n     * @hidden\n     */\n    protected scrollToHorizontally(column: any | number) {\n        let columnIndex = typeof column === 'number' ? column : this.getColumnByName(column).visibleIndex;\n        const scrollRow = this.rowList.find(r => r.virtDirRow);\n        const virtDir = scrollRow ? scrollRow.virtDirRow : null;\n        if (this.isPinningToStart && this.pinnedColumns.length) {\n            if (columnIndex >= this.pinnedColumns.length) {\n                columnIndex -= this.pinnedColumns.length;\n                this.scrollDirective(virtDir, columnIndex);\n            }\n        } else {\n            this.scrollDirective(virtDir, columnIndex);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    protected scrollDirective(directive: IgxGridForOfDirective<any>, goal: number): void {\n        if (!directive) {\n            return;\n        }\n        directive.scrollTo(goal);\n    }\n\n    private rebuildMatchCache() {\n        this.lastSearchInfo.matchInfoCache = [];\n\n        const caseSensitive = this.lastSearchInfo.caseSensitive;\n        const exactMatch = this.lastSearchInfo.exactMatch;\n        const searchText = caseSensitive ? this.lastSearchInfo.searchText : this.lastSearchInfo.searchText.toLowerCase();\n        const data = this.filteredSortedData;\n        const columnItems = this.visibleColumns.filter((c) => !c.columnGroup).sort((c1, c2) => c1.visibleIndex - c2.visibleIndex);\n\n        const numberPipe = new IgxDecimalPipeComponent(this.locale);\n        const datePipe = new IgxDatePipeComponent(this.locale);\n        data.forEach((dataRow, rowIndex) => {\n            columnItems.forEach((c) => {\n                const value = c.formatter ? c.formatter(dataRow[c.field]) :\n                    c.dataType === 'number' ? numberPipe.transform(dataRow[c.field], this.locale) :\n                        c.dataType === 'date' ? datePipe.transform(dataRow[c.field], this.locale)\n                            : dataRow[c.field];\n                if (value !== undefined && value !== null && c.searchable) {\n                    let searchValue = caseSensitive ? String(value) : String(value).toLowerCase();\n\n                    if (exactMatch) {\n                        if (searchValue === searchText) {\n                            const metadata = new Map<string, any>();\n                            metadata.set('pinned', this.isRecordPinnedByIndex(rowIndex));\n                            this.lastSearchInfo.matchInfoCache.push({\n                                row: dataRow,\n                                column: c.field,\n                                index: 0,\n                                metadata: metadata,\n                            });\n                        }\n                    } else {\n                        let occurenceIndex = 0;\n                        let searchIndex = searchValue.indexOf(searchText);\n\n                        while (searchIndex !== -1) {\n                            const metadata = new Map<string, any>();\n                            metadata.set('pinned', this.isRecordPinnedByIndex(rowIndex));\n                            this.lastSearchInfo.matchInfoCache.push({\n                                row: dataRow,\n                                column: c.field,\n                                index: occurenceIndex++,\n                                metadata: metadata,\n                            });\n\n                            searchValue = searchValue.substring(searchIndex + searchText.length);\n                            searchIndex = searchValue.indexOf(searchText);\n                        }\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    public isExpandedGroup(_group: IGroupByRecord): boolean {\n        return undefined;\n    }\n\n    protected changeRowEditingOverlayStateOnScroll(row: IgxRowDirective<IgxGridBaseDirective & GridType>) {\n        if (!this.rowEditable || !this.rowEditingOverlay || this.rowEditingOverlay.collapsed) {\n            return;\n        }\n        if (!row) {\n            this.toggleRowEditingOverlay(false);\n        } else {\n            this.repositionRowEditingOverlay(row);\n        }\n    }\n\n    /**\n     * Should be called when data and/or isLoading input changes so that the overlay can be\n     * hidden/shown based on the current value of shouldOverlayLoading\n     */\n    protected evaluateLoadingState() {\n        if (this.shouldOverlayLoading) {\n            // a new overlay should be shown\n            const overlaySettings: OverlaySettings = {\n                outlet: this.loadingOutlet,\n                closeOnOutsideClick: false,\n                positionStrategy: new ContainerPositionStrategy()\n            };\n            if (!this._loadingId) {\n                this._loadingId = this.overlayService.attach(this.loadingOverlay, overlaySettings);\n                this.overlayService.show(this._loadingId, overlaySettings);\n            }\n        } else {\n            if (this._loadingId) {\n                this.overlayService.hide(this._loadingId);\n                this._loadingId = null;\n            }\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    openRowOverlay(id) {\n        this.configureRowEditingOverlay(id, this.rowList.length <= MIN_ROW_EDITING_COUNT_THRESHOLD);\n\n        this.rowEditingOverlay.open(this.rowEditSettings);\n        this.rowEditPositioningStrategy.isTopInitialPosition = this.rowEditPositioningStrategy.isTop;\n        this.rowEditingOverlay.element.addEventListener('wheel', this.rowEditingWheelHandler);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public closeRowEditingOverlay() {\n        this.rowEditingOverlay.element.removeEventListener('wheel', this.rowEditingWheelHandler);\n        this.rowEditPositioningStrategy.isTopInitialPosition = null;\n        this.rowEditingOverlay.close();\n        this.rowEditingOverlay.element.parentElement.style.display = '';\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public toggleRowEditingOverlay(show) {\n        const rowStyle = this.rowEditingOverlay.element.style;\n        if (show) {\n            rowStyle.display = 'block';\n        } else {\n            rowStyle.display = 'none';\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public repositionRowEditingOverlay(row: IgxRowDirective<IgxGridBaseDirective & GridType>) {\n        if (row && !this.rowEditingOverlay.collapsed) {\n            const rowStyle = this.rowEditingOverlay.element.parentElement.style;\n            if (row) {\n                rowStyle.display = '';\n                this.configureRowEditingOverlay(row.rowID);\n                this.rowEditingOverlay.reposition();\n            } else {\n                rowStyle.display = 'none';\n            }\n        }\n    }\n\n    private configureRowEditingOverlay(rowID: any, useOuter = false) {\n        this.rowEditSettings.outlet = useOuter ? this.parentRowOutletDirective : this.rowOutletDirective;\n        this.rowEditPositioningStrategy.settings.container = this.tbody.nativeElement;\n        const pinned =  this._pinnedRecordIDs.indexOf(rowID) !== -1;\n        const targetRow = !pinned ? this.gridAPI.get_row_by_key(rowID) : this.pinnedRows.find(x => x.rowID === rowID);\n        if (!targetRow) {\n            return;\n        }\n        this.rowEditPositioningStrategy.settings.target = targetRow.element.nativeElement;\n        this.toggleRowEditingOverlay(true);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public get rowChangesCount() {\n        if (!this.crudService.row) {\n            return 0;\n        }\n        const rowChanges = this.transactions.getAggregatedValue(this.crudService.row.id, false);\n        return rowChanges ? Object.keys(rowChanges).length : 0;\n    }\n\n    protected writeToData(rowIndex: number, value: any) {\n        mergeObjects(this.gridAPI.get_all_data()[rowIndex], value);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    endRowTransaction(commit: boolean, row: IgxRow) {\n        row.newData = this.transactions.getAggregatedValue(row.id, true);\n\n        let args = row.createEditEventArgs();\n\n        if (!commit) {\n            this.onRowEditCancel.emit(args);\n            this.transactions.endPending(false);\n        } else {\n            args = this.gridAPI.update_row(row, row.newData);\n        }\n        if (args.cancel) {\n            this.transactions.startPending();\n            return;\n        }\n        this.crudService.endRowEdit();\n        this.closeRowEditingOverlay();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public gridOutletKeyboardHandler(event) {\n        // TODO: This should be removed after grid keyboard refactoring\n        // call stopPropagation for keydown event for the outlet not to propagate event to the grid\n        event.stopPropagation();\n    }\n\n    // TODO: Refactor\n    /**\n     * Finishes the row transactions on the current row.\n     * @remarks\n     * If `commit === true`, passes them from the pending state to the data (or transaction service)\n     * @example\n     * ```html\n     * <button igxButton (click)=\"grid.endEdit(true)\">Commit Row</button>\n     * ```\n     * @param commit\n     */\n    public endEdit(commit = true, event?: Event) {\n        const row = this.crudService.row;\n        const cell = this.crudService.cell;\n\n        // TODO: Merge the crudService with wht BaseAPI service\n        if (!row && !cell) { return; }\n\n        commit ? this.gridAPI.submit_value() : this.gridAPI.escape_editMode();\n\n        if (!this.rowEditable || this.rowEditingOverlay && this.rowEditingOverlay.collapsed || !row) {\n            return;\n        }\n\n        this.endRowTransaction(commit, row);\n\n        const activeCell = this.selectionService.activeElement;\n        if (event && activeCell) {\n            const rowIndex = activeCell.row;\n            const visibleColIndex = activeCell.layout ? activeCell.layout.columnVisibleIndex : activeCell.column;\n            this.navigateTo(rowIndex, visibleColIndex, (c) => {\n                if (c.targetType === GridKeydownTargetType.dataCell && c.target) {\n                    c.target.activate();\n                }\n            });\n        }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public endRowEdit(commit = true, event?: Event) {\n        this.endEdit(commit, event);\n        const activeCell = this.navigation.activeNode;\n        if (activeCell && activeCell.row !== -1) {\n            this.tbody.nativeElement.focus();\n        }\n    }\n    /**\n     * @hidden\n     */\n    private rowEditingWheelHandler = (event: WheelEvent) => {\n        if (event.deltaY > 0) {\n            this.verticalScrollContainer.scrollNext();\n        } else {\n            this.verticalScrollContainer.scrollPrev();\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public get dataWithAddedInTransactionRows() {\n        const result = <any>cloneArray(this.gridAPI.get_all_data());\n        if (this.transactions.enabled) {\n            result.push(...this.transactions.getAggregatedChanges(true)\n                .filter(t => t.type === TransactionType.ADD)\n                .map(t => t.newValue));\n        }\n\n        return result;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public get dataLength() {\n        return this.transactions.enabled ? this.dataWithAddedInTransactionRows.length : this.gridAPI.get_all_data().length;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public hasHorizontalScroll() {\n        return this.totalWidth - this.unpinnedWidth > 0;\n    }\n\n    protected _restoreVirtState(row) {\n        // check virtualization state of data record added from cache\n        // in case state is no longer valid - update it.\n        const rowForOf = row.virtDirRow;\n        const gridScrLeft = rowForOf.getScroll().scrollLeft;\n        const left = -parseInt(rowForOf.dc.instance._viewContainer.element.nativeElement.style.left, 10);\n        const actualScrollLeft = left + rowForOf.getColumnScrollLeft(rowForOf.state.startIndex);\n        if (gridScrLeft !== actualScrollLeft) {\n            rowForOf.onHScroll(gridScrLeft);\n            rowForOf.cdr.detectChanges();\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    protected getExportExcel(): boolean {\n        return this._exportExcel;\n    }\n\n    /**\n     * @hidden\n     */\n    protected getExportCsv(): boolean {\n        return this._exportCsv;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    get shouldOverlayLoading(): boolean {\n        return this.isLoading && this.data && this.data.length > 0;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public isSummaryRow(rowData): boolean {\n        return rowData.summaries && (rowData.summaries instanceof Map);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public get isMultiRowSelectionEnabled(): boolean {\n        return this.rowSelection === GridSelectionMode.multiple;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public get isRowSelectable(): boolean {\n        return this.rowSelection !== GridSelectionMode.none;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public get isCellSelectable() {\n        return this.cellSelection !== GridSelectionMode.none;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public cachedViewLoaded(args: ICachedViewLoadedEventArgs) {\n        if (this.hasHorizontalScroll()) {\n            const tmplId = args.context.templateID;\n            const index = args.context.index;\n            args.view.detectChanges();\n            this.zone.onStable.pipe(first()).subscribe(() => {\n                const row = tmplId === 'dataRow' ? this.getRowByIndex(index) : null;\n                const summaryRow = tmplId === 'summaryRow' ? this.summariesRowList.find((sr) => sr.dataRowIndex === index) : null;\n                if (row && row instanceof IgxRowDirective) {\n                    this._restoreVirtState(row);\n                } else if (summaryRow) {\n                    this._restoreVirtState(summaryRow);\n                }\n            });\n        }\n    }\n\n    /**\n     * Opens the advanced filtering dialog.\n     */\n    public openAdvancedFilteringDialog() {\n        if (!this._advancedFilteringOverlayId) {\n            this._advancedFilteringOverlaySettings.positionStrategy.settings.target =\n                (this as any).rootGrid ? (this as any).rootGrid.nativeElement : this.nativeElement;\n            this._advancedFilteringOverlaySettings.outlet = this.outletDirective;\n\n            this._advancedFilteringOverlayId = this.overlayService.attach(\n                IgxAdvancedFilteringDialogComponent,\n                this._advancedFilteringOverlaySettings,\n                {\n                    injector: this.viewRef.injector,\n                    componentFactoryResolver: this.resolver\n                });\n            this.overlayService.show(this._advancedFilteringOverlayId, this._advancedFilteringOverlaySettings);\n        }\n    }\n\n    /**\n     * Closes the advanced filtering dialog.\n     * @param applyChanges indicates whether the changes should be applied\n     */\n    public closeAdvancedFilteringDialog(applyChanges: boolean) {\n        if (this._advancedFilteringOverlayId) {\n            const advancedFilteringOverlay = this.overlayService.getOverlayById(this._advancedFilteringOverlayId);\n            const advancedFilteringDialog = advancedFilteringOverlay.componentRef.instance as IgxAdvancedFilteringDialogComponent;\n\n            if (applyChanges) {\n                advancedFilteringDialog.applyChanges();\n            }\n            advancedFilteringDialog.closeDialog();\n        }\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'igx-grid-footer',\n    template: '<ng-content></ng-content>'\n})\nexport class IgxGridFooterComponent {\n}\n","import { Component } from '@angular/core';\nimport { IgxDropDownGroupComponent } from '../drop-down/public_api';\n\n/**\n * The `<igx-select-item>` is a container intended for row items in\n * a `<igx-select>` container.\n */\n@Component({\n    selector: 'igx-select-item-group',\n    template: `\n        <label id=\"{{labelId}}\">{{ label }}</label>\n        <ng-content select=\"igx-select-item\"></ng-content>\n    `\n})\nexport class IgxSelectGroupComponent extends IgxDropDownGroupComponent {\n}\n","import { IgxDropDownItemNavigationDirective } from '../drop-down/drop-down-navigation.directive';\nimport { Directive, Input, HostListener, OnDestroy } from '@angular/core';\nimport { Subscription, timer } from 'rxjs';\nimport { IgxSelectItemComponent } from './select-item.component';\nimport { IgxSelectBase } from './select.common';\n\n/** @hidden @internal */\n@Directive({\n    selector: '[igxSelectItemNavigation]'\n})\nexport class IgxSelectItemNavigationDirective extends IgxDropDownItemNavigationDirective implements OnDestroy {\n\n    @Input('igxSelectItemNavigation')\n    public target: IgxSelectBase;\n\n    constructor() { super(null); }\n\n    /** Captures keydown events and calls the appropriate handlers on the target component */\n    handleKeyDown(event: KeyboardEvent) {\n        if (!event || event.shiftKey) {\n            return;\n        }\n\n        const key = event.key.toLowerCase();\n        if (event.altKey && (key === 'arrowdown' || key === 'arrowup' || key === 'down' || key === 'up')) {\n            this.target.toggle();\n            return;\n        }\n\n        if (this.target.collapsed) {\n            switch (key) {\n                case 'space':\n                case 'spacebar':\n                case ' ':\n                case 'enter':\n                    event.preventDefault();\n                    this.target.open();\n                    return;\n                case 'arrowdown':\n                case 'down':\n                    this.target.navigateNext();\n                    this.target.selectItem(this.target.focusedItem);\n                    event.preventDefault();\n                    return;\n                case 'arrowup':\n                case 'up':\n                    this.target.navigatePrev();\n                    this.target.selectItem(this.target.focusedItem);\n                    event.preventDefault();\n                    return;\n                default:\n                    break;\n            }\n        }\n\n        super.handleKeyDown(event);\n    }\n\n    // tslint:disable:member-ordering\n    private inputStream = '';\n    private clearStream$ = Subscription.EMPTY;\n\n    /** Handle continuous letter typing navigation */\n    @HostListener('keyup', ['$event'])\n    public captureKey(event: KeyboardEvent) {\n        // relying only on key, available on all major browsers:\n        // https://caniuse.com/#feat=keyboardevent-key (IE/Edge quirk doesn't affect letter typing)\n        if (!event || !event.key || event.key.length > 1) {\n            // ignore longer keys ('Alt', 'ArrowDown', etc)\n            return;\n        }\n\n        this.clearStream$.unsubscribe();\n        this.clearStream$ = timer(500).subscribe(() => {\n            this.inputStream = '';\n        });\n        this.inputStream += event.key;\n        const focusedItem = this.target.focusedItem as IgxSelectItemComponent;\n\n        // select the item\n        if (focusedItem && this.inputStream.length > 1 && focusedItem.itemText.toLowerCase().startsWith(this.inputStream.toLowerCase())) {\n            return;\n        }\n        this.activateItemByText(this.inputStream);\n    }\n\n    public activateItemByText(text: string) {\n        const items = this.target.items as IgxSelectItemComponent[];\n        const activeItemIndex = items.indexOf(this.target.focusedItem as IgxSelectItemComponent) || 0;\n        // ^ this is focused OR selected if the dd is closed\n        let nextItem = items.slice(activeItemIndex + 1).find(x => !x.disabled && (x.itemText.toLowerCase().startsWith(text.toLowerCase())));\n\n        if (!nextItem) {\n            nextItem = items.slice(0, activeItemIndex).find(x => !x.disabled && (x.itemText.toLowerCase().startsWith(text.toLowerCase())));\n        }\n\n        if (!nextItem) {\n            return;\n        }\n\n        if (this.target.collapsed) {\n            this.target.selectItem(nextItem);\n        }\n        this.target.navigateItem(items.indexOf(nextItem));\n    }\n\n    ngOnDestroy(): void {\n        this.clearStream$.unsubscribe();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IgxIconModule } from '../icon/public_api';\nimport { IgxDropDownModule } from '../drop-down/public_api';\nimport { IgxToggleModule } from './../directives/toggle/toggle.directive';\nimport { IgxRippleModule } from '../directives/ripple/ripple.directive';\nimport { IgxInputGroupModule } from '../input-group/input-group.component';\nimport { IgxButtonModule } from '../directives/button/button.directive';\n\nimport { IgxSelectComponent, IgxSelectToggleIconDirective, IgxSelectHeaderDirective, IgxSelectFooterDirective } from './select.component';\nimport { IgxSelectItemComponent } from './select-item.component';\nimport { IgxSelectItemNavigationDirective } from './select-navigation.directive';\nimport { IgxSelectGroupComponent } from './select-group.component';\n\n/** @hidden */\n@NgModule({\n    declarations: [\n        IgxSelectComponent,\n        IgxSelectFooterDirective,\n        IgxSelectGroupComponent,\n        IgxSelectHeaderDirective,\n        IgxSelectItemComponent,\n        IgxSelectItemNavigationDirective,\n        IgxSelectToggleIconDirective\n    ],\n    exports: [\n        IgxSelectComponent,\n        IgxSelectFooterDirective,\n        IgxSelectGroupComponent,\n        IgxSelectHeaderDirective,\n        IgxSelectItemComponent,\n        IgxSelectItemNavigationDirective,\n        IgxSelectToggleIconDirective\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        IgxButtonModule,\n        IgxDropDownModule,\n        IgxIconModule,\n        IgxInputGroupModule,\n        IgxRippleModule,\n        IgxToggleModule,\n        ReactiveFormsModule\n    ],\n    providers: []\n})\nexport class IgxSelectModule { }\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Component, Input, Output, NgModule, Optional, Inject, EventEmitter, HostBinding } from '@angular/core';\nimport { CurrentResourceStrings } from '../core/i18n/resources';\nimport { IDisplayDensityOptions, DisplayDensityToken, DisplayDensityBase, DisplayDensity } from '../core/displayDensity';\nimport { IgxSelectModule } from '../select/public_api';\nimport { IgxIconModule } from '../icon/public_api';\nimport { IgxButtonModule } from '../directives/button/button.directive';\nimport { IgxRippleModule } from '../directives/ripple/ripple.directive';\nimport { IgxInputGroupModule } from '../input-group/public_api';\nimport { IPaginatorResourceStrings } from '../core/i18n/paginator-resources';\nimport { DeprecateProperty } from '../core/deprecateDecorators';\n\n@Component({\n    selector: 'igx-paginator',\n    templateUrl: 'paginator.component.html',\n})\nexport class IgxPaginatorComponent extends DisplayDensityBase {\n\n    /**\n     * Total pages calculated from totalRecords and perPage\n     */\n    public totalPages: number;\n    private _resourceStrings = CurrentResourceStrings.PaginatorResStrings;\n    protected _page = 0;\n    protected _totalRecords: number;\n    protected _selectOptions;\n    private defaultSelectValues = [5, 10, 15, 25, 50, 100, 500];\n    protected _perPage = 15;\n\n    /**\n     * Sets the class of the IgxPaginatorComponent based\n     * on the provided displayDensity.\n     */\n    @HostBinding('class.igx-paginator--cosy')\n    public get classCosy(): boolean {\n        return this.displayDensity === DisplayDensity.cosy;\n    }\n\n    @HostBinding('class.igx-paginator--compact')\n    public get classCompact(): boolean {\n        return this.displayDensity === DisplayDensity.compact;\n    }\n\n    @HostBinding('class.igx-paginator')\n    public get classComfortable(): boolean {\n        return this.displayDensity === DisplayDensity.comfortable;\n    }\n\n    /**\n     * An @Input property, sets current page of the `IgxPaginatorComponent`.\n     * The default is 0.\n     * ```typescript\n     * let page = this.paginator.page;\n     * ```\n     * @memberof IgxPaginatorComponent\n     */\n    @Input()\n    public get page() {\n        return this._page;\n    }\n\n    public set page(value: number) {\n        this._page = value;\n        this.pageChange.emit(this._page);\n    }\n\n    /**\n     * An @Input property, sets number of visible items per page in the `IgxPaginatorComponent`.\n     * The default is 15.\n     * ```typescript\n     * let itemsPerPage = this.paginator.perPage;\n     * ```\n     * @memberof IgxPaginatorComponent\n     */\n    @Input()\n    public get perPage() {\n        return this._perPage;\n    }\n\n    public set perPage(value: number) {\n        this._perPage = Number(value);\n        this.perPageChange.emit(this._perPage);\n        this._selectOptions = this.sortUniqueOptions(this.defaultSelectValues, this._perPage);\n        this.totalPages = Math.ceil(this.totalRecords / this._perPage);\n        if (this.totalPages !== 0 && this.page >= this.totalPages) {\n            this.page = this.totalPages - 1;\n        }\n    }\n\n    /**\n     * An @Input property that sets the total records.\n     * ```typescript\n     * let totalRecords = this.paginator.totalRecords;\n     * ```\n     * @memberof IgxPaginatorComponent\n     */\n    @Input()\n    public get totalRecords() {\n        return this._totalRecords;\n    }\n\n    public set totalRecords(value: number) {\n        this._totalRecords = value;\n        this.totalPages = Math.ceil(this.totalRecords / this.perPage);\n    }\n\n    /**\n     * An @Input property that sets custom options in the select of the paginator\n     * ```typescript\n     * let options = this.paginator.selectOptions;\n     * ```\n     * @memberof IgxPaginatorComponent\n     */\n    @Input()\n    public get selectOptions() {\n        return this._selectOptions;\n    }\n\n    public set selectOptions(value: Array<number>) {\n        this._selectOptions = this.sortUniqueOptions(value, this._perPage);\n        this.defaultSelectValues = [...value];\n    }\n\n    /**\n     * An @Input property that sets if the pager in the paginator should be enabled.\n     * ```html\n     * <igx-paginator [pagerEnabled]=\"true\"></igx-paginator>\n     * ```\n     * @memberof IgxPaginatorComponent\n     */\n    @Input()\n    public pagerEnabled = true;\n\n    /**\n     * An @Input property that sets if the pager in the paginator should be hidden.\n     * ```html\n     * <igx-paginator [pagerHidden]=\"true\"></igx-paginator>\n     * ```\n     * @memberof IgxPaginatorComponent\n     */\n    @Input()\n    public pagerHidden = false;\n\n    /**\n     * An @Input property that sets if the dropdown in the paginator should be enabled.\n     * ```html\n     * <igx-paginator [dropdownEnabled]=\"true\"></igx-paginator>\n     * ```\n     * @memberof IgxPaginatorComponent\n     */\n    @Input()\n    public dropdownEnabled = true;\n\n    /**\n     * An @Input property that sets if the dropdown in the paginator should be hidden.\n     * ```html\n     * <igx-paginator [dropdownHidden]=\"true\"></igx-paginator>\n     * ```\n     * @memberof IgxPaginatorComponent\n     */\n    @Input()\n    public dropdownHidden = false;\n\n    /**\n     * An accessor that sets the resource strings.\n     * By default it uses EN resources.\n     */\n    @Input()\n    set resourceStrings(value: IPaginatorResourceStrings) {\n        this._resourceStrings = Object.assign({}, this._resourceStrings, value);\n    }\n\n    /**\n     * An accessor that returns the resource strings.\n     */\n    get resourceStrings(): IPaginatorResourceStrings {\n        return this._resourceStrings;\n    }\n\n    /**\n     * @deprecated Use 'resourceStrings' instead.\n     * An @Input property, sets number of label of the select.\n     * The default is 'Items per page' localized string.\n     * ```html\n     * <igx-paginator label=\"My custom label\"></igx-paginator>\n     * ```\n     * @memberof IgxPaginatorComponent\n     */\n    @DeprecateProperty(`'selectLabel' property is deprecated. Use 'resourceStrings' instead.`)\n    @Input()\n    public selectLabel = CurrentResourceStrings.PaginatorResStrings.igx_paginator_label;\n\n    /**\n     * @deprecated Use 'resourceStrings' instead.\n     * An @Input property, sets a preposition between the current page and total pages.\n     * The default is 'of' localized string.\n     * @memberof IgxPaginatorComponent\n     */\n    @DeprecateProperty(`'prepositionPage' property is deprecated. Use 'resourceStrings' instead.`)\n    @Input()\n    public prepositionPage = CurrentResourceStrings.PaginatorResStrings.igx_paginator_pager_text;\n\n    /**\n     * Emitted when `perPage` property value of the paginator is changed.\n     * @example\n     * ```html\n     * <igx-paginator (perPageChange)=\"onPerPageChange($event)\"></igx-paginator>\n     * ```\n     * ```typescript\n     * public onPerPageChange(perPage: number) {\n     *   this.perPage = perPage;\n     * }\n     * ```\n     */\n    @Output()\n    public perPageChange = new EventEmitter<number>();\n\n    /**\n     * Emitted after the current page is changed.\n     * @example\n     * ```html\n     * <igx-paginator (pageChange)=\"onPageChange($event)\"></igx-paginator>\n     * ```\n     * ```typescript\n     * public onPageChange(page: number) {\n     *   this.currentPage = page;\n     * }\n     * ```\n     */\n    @Output()\n    public pageChange = new EventEmitter<number>();\n\n    constructor(@Optional() @Inject(DisplayDensityToken) protected _displayDensityOptions: IDisplayDensityOptions\n    ) {\n        super(_displayDensityOptions);\n    }\n\n    /**\n     * Returns if the current page is the last page.\n     * ```typescript\n     * const lastPage = this.paginator.isLastPage;\n     * ```\n     */\n    get isLastPage(): boolean {\n        return this.page + 1 >= this.totalPages;\n    }\n\n    /**\n     * Returns if the current page is the first page.\n     * ```typescript\n     * const lastPage = this.paginator.isFirstPage;\n     * ```\n     */\n    get isFirstPage(): boolean {\n        return this.page === 0;\n    }\n\n\n    /**\n     * Returns if the first pager buttons should be disabled\n     */\n    get isFirstPageDisabled(): boolean {\n        return this.isFirstPage || !this.pagerEnabled;\n    }\n\n    /**\n     * Returns if the last pager buttons should be disabled\n     */\n    get isLastPageDisabled(): boolean {\n        return this.isLastPage || !this.pagerEnabled;\n    }\n\n    private sortUniqueOptions(values: Array<number>, newOption: number): number[] {\n        return Array.from(new Set([...values, newOption])).sort((a, b) => a - b);\n    }\n\n    /**\n     * Sets DisplayDensity for the <select> inside the paginator\n     * @hidden\n     */\n    public paginatorSelectDisplayDensity(): string {\n        if (this.displayDensity === DisplayDensity.comfortable) {\n            return DisplayDensity.cosy;\n        }\n        return DisplayDensity.compact;\n    }\n    /**\n     * Goes to the next page of the `IgxPaginatorComponent`, if the paginator is not already at the last page.\n     * ```typescript\n     * this.paginator.nextPage();\n     * ```\n     * @memberof IgxPaginatorComponent\n     */\n    public nextPage(): void {\n        if (!this.isLastPage) {\n            this.page += 1;\n        }\n    }\n    /**\n     * Goes to the previous page of the `IgxPaginatorComponent`, if the paginator is not already at the first page.\n     * ```typescript\n     * this.paginator.previousPage();\n     * ```\n     * @memberof IgxPaginatorComponent\n     */\n    public previousPage(): void {\n        if (!this.isFirstPage) {\n            this.page -= 1;\n        }\n    }\n    /**\n     * Goes to the desired page index.\n     * ```typescript\n     * this.paginator.paginate(1);\n     * ```\n     * @param val\n     * @memberof IgxPaginatorComponent\n     */\n    public paginate(val: number): void {\n        if (val < 0 || val > this.totalPages - 1) {\n            return;\n        }\n        this.page = val;\n    }\n}\n\n@NgModule({\n    declarations: [IgxPaginatorComponent],\n    exports: [IgxPaginatorComponent],\n    imports: [CommonModule, IgxSelectModule, FormsModule, IgxIconModule, IgxButtonModule, IgxRippleModule, IgxInputGroupModule]\n})\nexport class IgxPaginatorModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n    IgxGridFilterConditionPipe,\n    IgxGridTransactionPipe,\n    IgxGridNotGroupedPipe,\n    IgxGridTopLevelColumns,\n    IgxGridCellStylesPipe,\n    IgxGridCellStyleClassesPipe,\n    IgxGridPaginatorOptionsPipe,\n    IgxHasVisibleColumnsPipe,\n    IgxDatePipeComponent,\n    IgxDecimalPipeComponent,\n    IgxGridRowPinningPipe\n} from './pipes';\n\n@NgModule({\n    declarations: [\n        IgxDatePipeComponent,\n        IgxDecimalPipeComponent,\n        IgxGridFilterConditionPipe,\n        IgxGridTransactionPipe,\n        IgxGridNotGroupedPipe,\n        IgxGridTopLevelColumns,\n        IgxGridCellStylesPipe,\n        IgxGridCellStyleClassesPipe,\n        IgxGridPaginatorOptionsPipe,\n        IgxHasVisibleColumnsPipe,\n        IgxGridRowPinningPipe\n    ],\n    exports: [\n        IgxDatePipeComponent,\n        IgxDecimalPipeComponent,\n        IgxGridFilterConditionPipe,\n        IgxGridTransactionPipe,\n        IgxGridNotGroupedPipe,\n        IgxGridTopLevelColumns,\n        IgxGridCellStylesPipe,\n        IgxGridCellStyleClassesPipe,\n        IgxGridPaginatorOptionsPipe,\n        IgxHasVisibleColumnsPipe,\n        IgxGridRowPinningPipe\n    ],\n    imports: [\n        CommonModule\n    ]\n  })\nexport class IgxGridPipesModule { }\n","import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { IgxColumnComponent } from '../../columns/column.component';\nimport { IgxGridBaseDirective } from '../../grid-base.directive';\nimport { DisplayDensity } from '../../../core/density';\nimport { IgxColumnGroupComponent } from '../../columns/column-group.component';\n\n/**\n * @hidden\n */\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false,\n    selector: 'igx-excel-style-column-moving',\n    templateUrl: './excel-style-column-moving.component.html'\n})\nexport class IgxExcelStyleColumnMovingComponent {\n\n    @Input()\n    public column: IgxColumnComponent;\n\n    @Input()\n    public grid: IgxGridBaseDirective;\n\n    @Input()\n    public displayDensity: DisplayDensity;\n\n    @Input()\n    public isColumnPinnable: boolean;\n\n    constructor() {}\n\n    private get visibleColumns() {\n        return this.grid.visibleColumns.filter(col => !(col instanceof IgxColumnGroupComponent));\n    }\n\n    get canNotMoveLeft() {\n        return this.column.visibleIndex === 0 ||\n            (this.grid.unpinnedColumns.indexOf(this.column) === 0 && this.column.disablePinning) ||\n            (this.grid.unpinnedColumns.indexOf(this.column) === 0 && !this.isColumnPinnable) ||\n            (this.column.level !== 0 && !this.findColumn(0, this.visibleColumns));\n    }\n\n    get canNotMoveRight() {\n        return this.column.visibleIndex === this.visibleColumns.length - 1 ||\n            (this.column.level !== 0 && !this.findColumn(1, this.visibleColumns));\n    }\n\n    public onMoveButtonClicked(moveDirection) {\n        let targetColumn;\n        if (this.column.pinned) {\n            if (this.column.isLastPinned && moveDirection === 1 && this.grid.isPinningToStart) {\n                targetColumn = this.grid.unpinnedColumns[0];\n                moveDirection = 0;\n            } else if (this.column.isFirstPinned && moveDirection === 0 && !this.grid.isPinningToStart) {\n                targetColumn = this.grid.unpinnedColumns[this.grid.unpinnedColumns.length - 1];\n                moveDirection = 1;\n            } else {\n                targetColumn = this.findColumn(moveDirection, this.grid.pinnedColumns);\n            }\n        } else if (this.grid.unpinnedColumns.indexOf(this.column) === 0 && moveDirection === 0 &&\n                    this.grid.isPinningToStart) {\n            targetColumn = this.grid.pinnedColumns[this.grid.pinnedColumns.length - 1];\n            if (targetColumn.parent) {\n                targetColumn = targetColumn.topLevelParent;\n            }\n            moveDirection = 1;\n        } else if (this.grid.unpinnedColumns.indexOf(this.column) === this.grid.unpinnedColumns.length - 1 &&\n            moveDirection === 1 && !this.grid.isPinningToStart) {\n            targetColumn = this.grid.pinnedColumns[0];\n            moveDirection = 0;\n        } else {\n            targetColumn = this.findColumn(moveDirection, this.grid.unpinnedColumns);\n        }\n        this.grid.moveColumn(this.column, targetColumn, moveDirection);\n    }\n\n    private findColumn(moveDirection: number, columns: IgxColumnComponent[]) {\n        let index = columns.indexOf(this.column);\n        if (moveDirection === 0) {\n            while (index > 0) {\n                index--;\n                if (columns[index].level === this.column.level && columns[index].parent === this.column.parent) {\n                    return columns[index];\n                }\n            }\n        } else {\n            while (index < columns.length - 1) {\n                index++;\n                if (columns[index].level === this.column.level && columns[index].parent === this.column.parent) {\n                    return columns[index];\n                }\n            }\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { FilterListItem, IgxGridExcelStyleFilteringComponent } from './grid.excel-style-filtering.component';\nimport { cloneArray } from '../../../core/utils';\n\n/**\n * @hidden\n */\n@Pipe({\n    name: 'excelStyleSearchFilter'\n})\nexport class IgxExcelStyleSearchFilterPipe implements PipeTransform {\n    transform(items: FilterListItem[], searchText: string): any[] {\n        if (!items || !items.length) {\n            return [];\n        }\n\n        if (!searchText) {\n            return items;\n        }\n\n        searchText = searchText.toLowerCase();\n        const result = items.filter((it, i) => (i === 0 && it.isSpecial) ||\n            (it.label !== null && it.label !== undefined) &&\n            !it.isBlanks &&\n            it.label.toString().toLowerCase().indexOf(searchText) > -1);\n\n        // If 'result' contains the 'Select All' item and at least one more - we use it, otherwise we use an empty array.\n        return result.length > 1 ? result : [];\n    }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n    selector: '[igxProcessBarText]'\n})\nexport class IgxProcessBarTextTemplateDirective {\n    constructor(public template: TemplateRef<any>) { }\n}\n\n@Directive({\n    selector: '[igxProgressBarGradient]'\n})\nexport class IgxProgressBarGradientDirective {\n    constructor(public template: TemplateRef<any>) { }\n}\n\n","import { Injectable, Inject, InjectionToken, inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @hidden\n */\nexport type Direction = 'ltr' | 'rtl';\n\n/**\n * Injection token is used to inject the document into Directionality\n * which factory could be faked for testing purposes.\n *\n * We can't provide and mock the DOCUMENT token from platform-browser because configureTestingModule\n * allows override of the default providers, directive, pipes, modules of the test injector\n * which causes errors.\n *\n * @hidden\n */\nexport const DIR_DOCUMENT = new InjectionToken<Document>('dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY\n});\n\n/**\n * @hidden\n */\nexport function DIR_DOCUMENT_FACTORY(): Document {\n    return inject(DOCUMENT);\n}\n\n/**\n * @hidden\n *\n * Bidirectional service that extracts the value of the direction attribute on the body or html elements.\n *\n * The dir attribute over the body element takes precedence.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class IgxDirectionality {\n    private _dir: Direction;\n    private _document: Document;\n\n    public get value(): Direction {\n        return this._dir;\n    }\n\n    public get document() {\n        return this._document;\n    }\n\n    public get rtl() {\n        return this._dir === 'rtl';\n    }\n\n    constructor(@Inject(DIR_DOCUMENT) document) {\n        this._document = <Document>document;\n        const bodyDir = this._document.body ? this._document.body.dir : null;\n        const htmlDir = this._document.documentElement ? this._document.documentElement.dir : null;\n        const extractedDir = bodyDir || htmlDir;\n        this._dir = (extractedDir === 'ltr' || extractedDir === 'rtl') ? extractedDir : 'ltr';\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    NgModule,\n    Output,\n    Renderer2,\n    ViewChild,\n    ContentChild,\n    AfterViewInit,\n    AfterContentInit\n} from '@angular/core';\nimport {\n    IgxProcessBarTextTemplateDirective,\n    IgxProgressBarGradientDirective,\n} from './progressbar.common';\nimport { IBaseEventArgs } from '../core/utils';\nimport { IgxDirectionality } from '../services/direction/directionality';\n\nconst ONE_PERCENT = 0.01;\nconst MIN_VALUE = 0;\n\nexport enum IgxTextAlign {\n    START = 'start',\n    CENTER = 'center',\n    END = 'end'\n}\n\nexport enum IgxProgressType {\n    ERROR = 'error',\n    INFO = 'info',\n    WARNING = 'warning',\n    SUCCESS = 'success'\n}\n\nexport interface IChangeProgressEventArgs extends IBaseEventArgs {\n    previousValue: number;\n    currentValue: number;\n}\n\n/**\n * @hidden\n */\nexport abstract class BaseProgress {\n    private requestAnimationId: number = undefined;\n\n    protected _initValue = 0;\n    protected _contentInit = false;\n    protected _valueInPercent = MIN_VALUE;\n    protected _max = 100;\n    protected _value = MIN_VALUE;\n    protected _newVal = MIN_VALUE;\n    protected _animate = true;\n    protected _step;\n\n    /**\n     * An event, which is triggered after a progress is changed.\n     * ```typescript\n     * public progressChange(event) {\n     *     alert(\"Progress made!\");\n     * }\n     *  //...\n     * ```\n     * ```html\n     * <igx-circular-bar [value]=\"currentValue\" (onProgressChanged)=\"progressChange($event)\"></igx-circular-bar>\n     * <igx-linear-bar [value]=\"currentValue\" (onProgressChanged)=\"progressChange($event)\"></igx-linear-bar>\n     * ```\n     */\n    @Output()\n    public onProgressChanged = new EventEmitter<IChangeProgressEventArgs>();\n\n    /**\n     * Returns the value which update the progress indicator of the `progress bar`.\n     * ```typescript\n     *  @ViewChild(\"MyProgressBar\")\n     * public progressBar: IgxLinearProgressBarComponent | IgxCircularBarComponent;\n     * public stepValue(event) {\n     *     let step = this.progressBar.step;\n     *     alert(step);\n     * }\n     * ```\n     */\n    @Input()\n    get step(): number {\n        if (this._step) {\n            return this._step;\n        }\n\n        return this._max * ONE_PERCENT;\n    }\n\n    /**\n     * Sets the value by which progress indicator is updated. By default it is 1% of the maximum value.\n     * ```html\n     * <igx-linear-bar [max]=\"200\" [value]=\"0\" [step]=\"1\"></igx-linear-bar>\n     * <igx-circular-bar [max]=\"200\" [value]=\"0\" [step]=\"1\"></igx-circular-bar>\n     * ```\n     */\n    set step(val: number) {\n        this._step = Number(val);\n    }\n\n    /**\n     * Animating the progress. By default it is set to true.\n     * ```html\n     * <igx-linear-bar [animate]=\"false\" [max]=\"200\" [value]=\"50\"></igx-linear-bar>\n     * <igx-circular-bar [animate]=\"false\" [max]=\"200\" [value]=\"50\"></igx-circular-bar>\n     * ```\n     */\n    @Input()\n    public set animate(animate: boolean) {\n        this._animate = animate;\n    }\n\n    /**\n     * Returns whether the `progress bar` has animation true/false.\n     * ```typescript\n     *  @ViewChild(\"MyProgressBar\")\n     * public progressBar: IgxLinearProgressBarComponent | IgxCircularBarComponent;\n     * public animationStatus(event) {\n     *     let animationStatus = this.progressBar.animate;\n     *     alert(animationStatus);\n     * }\n     * ```\n     */\n    public get animate(): boolean {\n        return this._animate;\n    }\n\n    /**\n     * Set maximum value that can be passed. By default it is set to 100.\n     * ```html\n     * <igx-linear-bar [max]=\"200\" [value]=\"0\"></igx-linear-bar>\n     * <igx-circular-bar [max]=\"200\" [value]=\"0\"></igx-circular-bar>\n     * ```\n     */\n    @HostBinding('attr.aria-valuemax')\n    @Input()\n    set max(maxNum: number) {\n        this._max = maxNum;\n    }\n\n    /**\n     * Returns the the maximum progress value of the `progress bar`.\n     * ```typescript\n     *  @ViewChild(\"MyProgressBar\")\n     * public progressBar: IgxLinearProgressBarComponent | IgxCircularBarComponent;\n     * public maxValue(event) {\n     *     let max = this.progressBar.max;\n     *     alert(max);\n     * }\n     * ```\n     */\n    get max() {\n        return this._max;\n    }\n\n    /**\n     * Sets the `IgxLinearProgressBarComponent`/`IgxCircularProgressBarComponent` value in percentage.\n     * ```typescript\n     *  @ViewChild(\"MyProgressBar\")\n     * public progressBar: IgxLinearProgressBarComponent; // IgxCircularProgressBarComponent\n     *     public setValue(event){\n     *     this.progressBar.valueInPercent = 56;\n     * }\n     * ```\n     */\n    public set valueInPercent(value: number) {\n        this._valueInPercent = value;\n    }\n\n    /**\n     * Returns the `IgxLinearProgressBarComponent`/`IgxCircularProgressBarComponent` value in percentage.\n     * ```typescript\n     *  @ViewChild(\"MyProgressBar\")\n     * public progressBar: IgxLinearProgressBarComponent; // IgxCircularProgressBarComponent\n     * public valuePercent(event){\n     *     let percentValue = this.progressBar.valueInPercent;\n     *     alert(percentValue);\n     * }\n     * ```\n     */\n    public get valueInPercent(): number {\n        return this._valueInPercent;\n    }\n\n    protected triggerProgressTransition(oldVal, newVal) {\n        if (oldVal === newVal) {\n            return;\n        }\n\n        const changedValues = {\n            currentValue: newVal,\n            previousValue: oldVal\n        };\n\n        const stepDirection = this.directionFlow(oldVal, newVal);\n        if (this._animate) {\n            this.runAnimation(newVal, stepDirection);\n        } else {\n            this.updateProgressDirectly(newVal);\n        }\n\n        this.onProgressChanged.emit(changedValues);\n    }\n\n    /**\n     * @hidden\n     */\n    protected runAnimation(val: number, step: number) {\n        this.requestAnimationId = requestAnimationFrame(\n            () => this.updateProgressSmoothly.call(this, val, step));\n    }\n\n    /**\n     * @hidden\n     */\n    protected updateProgressSmoothly(val: number, step: number) {\n        this._value = valueInRange(this._value, this._max) + step;\n        const passedValue = toPercent(val, this._max);\n        const progressValue = toPercent(this._value, this._max);\n        if (this.valueInPercent === passedValue) {\n            this.updateProgress(val);\n            cancelAnimationFrame(this.requestAnimationId);\n        } else if (this.isInLimitRange(progressValue, passedValue, step)) {\n            this.updateProgress(val);\n            cancelAnimationFrame(this.requestAnimationId);\n        } else {\n            this.valueInPercent = progressValue;\n            this.requestAnimationId = requestAnimationFrame(() => this.updateProgressSmoothly.call(this, val, step));\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    protected updateProgressDirectly(val: number) {\n        this._value = valueInRange(val, this._max);\n        this.valueInPercent = toPercent(this._value, this._max);\n    }\n\n    /**\n     * @hidden\n     */\n    protected directionFlow(currentValue: number, prevValue: number): number {\n        return currentValue < prevValue ? this.step : -this.step;\n    }\n\n    /**\n     * @hidden\n     */\n    private isInLimitRange(val: number, comparator: number, step: number) {\n        return this.isExceedingUpperLimit(val, comparator, step) || this.isExceedingLowerLimit(val, comparator, step);\n    }\n\n    /**\n     * @hidden\n     *\n     *\n     * @param val\n     * @param comparator\n     * @param step\n     */\n    private isExceedingUpperLimit(val: number, comparator: number, step: number) {\n        return val > comparator && step > 0;\n    }\n\n    /**\n     * @hidden\n     *\n     * @param val\n     * @param comparator\n     * @param step\n     */\n    private isExceedingLowerLimit(val: number, comparator: number, step: number) {\n        return val < comparator && step < 0;\n    }\n\n    /**\n     * @hidden\n     * @param step\n     */\n    private updateProgress(val: number) {\n        this._value = valueInRange(val, this._max);\n        this.valueInPercent = toPercent(this._value, this._max);\n    }\n}\nlet NEXT_LINEAR_ID = 0;\nlet NEXT_CIRCULAR_ID = 0;\nlet NEXT_GRADIENT_ID = 0;\n@Component({\n    selector: 'igx-linear-bar',\n    templateUrl: 'templates/linear-bar.component.html'\n})\nexport class IgxLinearProgressBarComponent extends BaseProgress implements AfterContentInit {\n\n    constructor() {\n        super();\n    }\n\n    @HostBinding('attr.aria-valuemin')\n    public valueMin = 0;\n\n    @HostBinding('class.igx-linear-bar')\n    public cssClass = 'igx-linear-bar';\n\n    /**\n     * Set `IgxLinearProgressBarComponent` to have striped style. By default it is set to false.\n     * ```html\n     * <igx-linear-bar [striped]=\"true\" [max]=\"200\" [value]=\"50\"></igx-linear-bar>\n     * ```\n     */\n    @HostBinding('class.igx-linear-bar--striped')\n    @Input()\n    public striped = false;\n\n    /**\n     * Set `IgxLinearProgressBarComponent` to have indeterminate. By default it is set to false.\n     * ```html\n     * <igx-linear-bar [indeterminate]=\"true\"></igx-linear-bar>\n     * ```\n     */\n    @HostBinding('class.igx-linear-bar--indeterminate')\n    @Input()\n    public indeterminate = false;\n\n    /**\n     * An @Input property that sets the value of the `role` attribute. If not provided it will be automatically set to `progressbar`.\n     * ```html\n     * <igx-linear-bar role=\"progressbar\"></igx-linear-bar>\n     * ```\n     */\n    @HostBinding('attr.role')\n    @Input()\n    public role = 'progressbar';\n\n    /**\n     * An @Input property that sets the value of `id` attribute. If not provided it will be automatically generated.\n     * ```html\n     * <igx-linear-bar [id]=\"'igx-linear-bar-55'\" [striped]=\"true\" [max]=\"200\" [value]=\"50\"></igx-linear-bar>\n     * ```\n     */\n    @HostBinding('attr.id')\n    @Input()\n    public id = `igx-linear-bar-${NEXT_LINEAR_ID++}`;\n\n    /**\n     * Set the position that defines where the text is aligned.\n     * Possible options - `IgxTextAlign.START` (default), `IgxTextAlign.CENTER`, `IgxTextAlign.END`.\n     * ```typescript\n     * public positionCenter: IgxTextAlign;\n     * public ngOnInit() {\n     *     this.positionCenter = IgxTextAlign.CENTER;\n     * }\n     *  //...\n     * ```\n     *  ```html\n     * <igx-linear-bar type=\"warning\" [text]=\"'Custom text'\" [textAlign]=\"positionCenter\" [striped]=\"true\"></igx-linear-bar>\n     * ```\n     */\n    @Input()\n    public textAlign: IgxTextAlign = IgxTextAlign.START;\n\n    /**\n     * Set the text to be visible. By default it is set to true.\n     * ```html\n     *  <igx-linear-bar type=\"default\" [textVisibility]=\"false\"></igx-linear-bar>\n     * ```\n     */\n    @Input()\n    public textVisibility = true;\n\n    /**\n     * Set the position that defines if the text should be aligned above the progress line. By default is set to false.\n     * ```html\n     *  <igx-linear-bar type=\"error\" [textTop]=\"true\"></igx-linear-bar>\n     * ```\n     */\n    @Input()\n    public textTop = false;\n\n    /**\n     * Set a custom text that is displayed according to the defined position.\n     *  ```html\n     * <igx-linear-bar type=\"warning\" [text]=\"'Custom text'\" [textAlign]=\"positionCenter\" [striped]=\"true\"></igx-linear-bar>\n     * ```\n     */\n    @Input()\n    public text: string;\n\n    /**\n     * Set type of the `IgxLinearProgressBarComponent`. Possible options - `default`, `success`, `info`, `warning`, and `error`.\n     * ```html\n     * <igx-linear-bar [striped]=\"false\" [max]=\"100\" [value]=\"0\" type=\"error\"></igx-linear-bar>\n     * ```\n     */\n    @Input()\n    public type = 'default';\n\n   /**\n    * Returns value that indicates the current `IgxLinearProgressBarComponent` position.\n    * ```typescript\n    *  @ViewChild(\"MyProgressBar\")\n    * public progressBar: IgxLinearProgressBarComponent;\n    * public getValue(event) {\n    *     let value = this.progressBar.value;\n    *     alert(value);\n    * }\n    * ```\n    */\n    @HostBinding('attr.aria-valuenow')\n    @Input()\n    get value(): number {\n        return this._value;\n    }\n\n    /**\n     * Set value that indicates the current `IgxLinearProgressBarComponent` position.\n     * ```html\n     * <igx-linear-bar [striped]=\"false\" [max]=\"200\" [value]=\"50\"></igx-linear-bar>\n     * ```\n     */\n    set value(val) {\n        const valInRange = valueInRange(val, this.max);\n        if (isNaN(valInRange) || this._value === val || this.indeterminate) {\n            return;\n        }\n\n        if (this._contentInit) {\n            this.triggerProgressTransition(this._value, valInRange);\n        } else {\n            this._initValue = valInRange;\n        }\n\n    }\n\n    /**\n     * @hidden\n     */\n    @HostBinding('class.igx-linear-bar--danger')\n    public get error() {\n        return this.type === IgxProgressType.ERROR;\n    }\n\n    /**\n     * @hidden\n     */\n    @HostBinding('class.igx-linear-bar--info')\n    public get info() {\n        return this.type === IgxProgressType.INFO;\n    }\n\n    /**\n     * @hidden\n     */\n    @HostBinding('class.igx-linear-bar--warning')\n    public get warning() {\n        return this.type === IgxProgressType.WARNING;\n    }\n\n    /**\n     * @hidden\n     */\n    @HostBinding('class.igx-linear-bar--success')\n    public get success() {\n        return this.type === IgxProgressType.SUCCESS;\n    }\n\n    public ngAfterContentInit() {\n        this.triggerProgressTransition(MIN_VALUE, this._initValue);\n        this._contentInit = true;\n    }\n}\n\n@Component({\n    selector: 'igx-circular-bar',\n    templateUrl: 'templates/circular-bar.component.html'\n})\nexport class IgxCircularProgressBarComponent extends BaseProgress implements AfterViewInit, AfterContentInit {\n\n    private readonly STROKE_OPACITY_DVIDER = 100;\n    private readonly STROKE_OPACITY_ADDITION = .2;\n\n    /** @hidden */\n    @HostBinding('class.igx-circular-bar')\n    public cssClass = 'igx-circular-bar';\n\n    /**\n     * An @Input property that sets the value of `id` attribute. If not provided it will be automatically generated.\n     * ```html\n     * <igx-circular-bar [id]=\"'igx-circular-bar-55'\" [value]=\"50\"></igx-circular-bar>\n     * ```\n     */\n    @HostBinding('attr.id')\n    @Input()\n    public id = `igx-circular-bar-${NEXT_CIRCULAR_ID++}`;\n\n    /**\n     * @hidden\n     */\n    public gradientId = `igx-circular-gradient-${NEXT_GRADIENT_ID++}`;\n\n    /**\n     * An @Input property that sets the value of the `indeterminate` attribute. If not provided it will be automatically set to false.\n     * ```html\n     * <igx-circular-bar [indeterminate]=\"true\"></igx-circular-bar>\n     * ```\n     */\n    @HostBinding('class.igx-circular-bar--indeterminate')\n    @Input()\n    public indeterminate = false;\n\n    /**\n     * Sets the text visibility. By default it is set to true.\n     * ```html\n     * <igx-circular-bar [textVisibility]=\"false\"></igx-circular-bar>\n     * ```\n     */\n    @Input()\n    public textVisibility = true;\n\n    /**\n     * Sets/gets the text to be displayed inside the `igxCircularBar`.\n     * ```html\n     * <igx-circular-bar text=\"Progress\"></igx-circular-bar>\n     * ```\n     * ```typescript\n     * let text = this.circularBar.text;\n     * ```\n     */\n    @Input()\n    public text: string;\n\n    @ContentChild(IgxProcessBarTextTemplateDirective, { read: IgxProcessBarTextTemplateDirective })\n    public textTemplate: IgxProcessBarTextTemplateDirective;\n\n    @ContentChild(IgxProgressBarGradientDirective, { read: IgxProgressBarGradientDirective })\n    public gradientTemplate: IgxProgressBarGradientDirective;\n\n    /**\n     * @hidden\n     */\n    public get context(): any {\n        return {\n            $implicit: { value: this.value, valueInPercent: this.valueInPercent, max: this.max }\n        };\n    }\n\n    /**\n     * Returns value that indicates the current `IgxCircularProgressBarComponent` position.\n     * ```typescript\n     *  @ViewChild(\"MyProgressBar\")\n     * public progressBar: IgxCircularProgressBarComponent;\n     * public getValue(event) {\n     *     let value = this.progressBar.value;\n     *     alert(value);\n     * }\n     * ```\n     * ```html\n     * <button igxButton=\"fab\" igxRipple=\"\" (click)=\"getValue()\">Click</button>\n     * ```\n     */\n    @Input()\n    get value(): number {\n        return this._value;\n    }\n\n    /**\n     * Set value that indicates the current `IgxCircularProgressBarComponent` position.\n     * ```html\n     * <igx-circular-bar [value]=\"50\"></igx-circular-bar>\n     * ```\n     */\n    set value(val: number) {\n        const valInRange = valueInRange(val, this.max);\n        if (isNaN(valInRange) || this._value === val || this.indeterminate) {\n            return;\n        }\n\n        if (this._contentInit) {\n            this.triggerProgressTransition(this._value, valInRange);\n        } else {\n            this._initValue = valInRange;\n        }\n\n    }\n\n    private _circleRadius = 46;\n    private _circumference = 2 * Math.PI * this._circleRadius;\n\n    @ViewChild('circle', { static: true })\n    private _svgCircle: ElementRef;\n\n    constructor(private renderer: Renderer2, private _directionality: IgxDirectionality) {\n        super();\n    }\n\n    public ngAfterContentInit() {\n        this.triggerProgressTransition(MIN_VALUE, this._initValue);\n        this._contentInit = true;\n    }\n\n    public ngAfterViewInit() {\n        this.renderer.setStyle(\n            this._svgCircle.nativeElement,\n            'stroke',\n            `url(#${this.gradientId})`\n        );\n    }\n\n    /**\n     * @hidden\n     */\n    public updateProgressSmoothly(val: number, step: number) {\n        // Set frames for the animation\n        const FRAMES = [{\n            strokeDashoffset: this.getProgress(this._value),\n            strokeOpacity: (this._value / this.STROKE_OPACITY_DVIDER) + this.STROKE_OPACITY_ADDITION\n        }, {\n            strokeDashoffset: this.getProgress(this.valueInPercent),\n            strokeOpacity: (this.valueInPercent / this.STROKE_OPACITY_DVIDER) + this.STROKE_OPACITY_ADDITION\n        }];\n        this._svgCircle.nativeElement.animate(FRAMES, {\n            easing: 'ease-out',\n            fill: 'forwards'\n        });\n\n        super.updateProgressSmoothly(val, step);\n    }\n\n    /**\n     * @hidden\n     */\n    public get textContent(): string {\n        return this.text;\n    }\n\n    /**\n     * @hidden\n     */\n    public updateProgressDirectly(val: number) {\n        super.updateProgressDirectly(val);\n\n        this.renderer.setStyle(\n            this._svgCircle.nativeElement,\n            'stroke-dashoffset',\n            this.getProgress(this.valueInPercent));\n\n        this.renderer.setStyle(\n            this._svgCircle.nativeElement,\n            'stroke-opacity',\n            (this.valueInPercent / this.STROKE_OPACITY_DVIDER) + this.STROKE_OPACITY_ADDITION);\n    }\n\n    private getProgress(percentage: number) {\n        return this._directionality.rtl ?\n            this._circumference + (percentage * this._circumference / 100) :\n            this._circumference - (percentage * this._circumference / 100);\n    }\n}\n\nexport function valueInRange(value: number, max: number, min = 0): number {\n    return Math.max(Math.min(value, max), min);\n}\n\nexport function toPercent(value: number, max: number) {\n    return Math.floor(100 * value / max);\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [\n        IgxLinearProgressBarComponent,\n        IgxCircularProgressBarComponent,\n        IgxProcessBarTextTemplateDirective,\n        IgxProgressBarGradientDirective,\n    ],\n    exports: [\n        IgxLinearProgressBarComponent,\n        IgxCircularProgressBarComponent,\n        IgxProcessBarTextTemplateDirective,\n        IgxProgressBarGradientDirective,\n    ],\n    imports: [CommonModule]\n})\nexport class IgxProgressBarModule { }\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IgxExcelStyleLoadingValuesTemplateDirective } from './excel-style-search.component';\nimport {\n    IgxGridExcelStyleFilteringComponent,\n    IgxExcelStyleSortingTemplateDirective,\n    IgxExcelStyleHidingTemplateDirective,\n    IgxExcelStyleMovingTemplateDirective,\n    IgxExcelStylePinningTemplateDirective,\n    IgxExcelStyleSelectingTemplateDirective\n} from './grid.excel-style-filtering.component';\nimport { IgxExcelStyleSortingComponent } from './excel-style-sorting.component';\nimport { IgxExcelStyleColumnMovingComponent } from './excel-style-column-moving.component';\nimport { IgxExcelStyleSearchComponent } from './excel-style-search.component';\nimport { IgxExcelStyleCustomDialogComponent } from './excel-style-custom-dialog.component';\nimport { IgxExcelStyleDefaultExpressionComponent } from './excel-style-default-expression.component';\nimport { IgxExcelStyleDateExpressionComponent } from './excel-style-date-expression.component';\nimport { IgxSelectionAPIService } from '../../../core/selection';\nimport { FormsModule } from '@angular/forms';\nimport { IgxGridPipesModule } from '../../common/grid-pipes.module';\nimport { IgxButtonModule } from '../../../directives/button/button.directive';\nimport { IgxButtonGroupModule } from '../../../buttonGroup/buttonGroup.component';\nimport { IgxDatePickerModule } from '../../../date-picker/date-picker.component';\nimport { IgxIconModule } from '../../../icon/public_api';\nimport { IgxRippleModule } from '../../../directives/ripple/ripple.directive';\nimport { IgxInputGroupModule } from '../../../input-group/input-group.component';\nimport { IgxDropDownModule } from '../../../drop-down/public_api';\nimport { IgxForOfModule } from '../../../directives/for-of/for_of.directive';\nimport { IgxCheckboxModule } from '../../../checkbox/checkbox.component';\nimport { IgxFilterModule } from '../../../directives/filter/filter.directive';\nimport { IgxToggleModule } from '../../../directives/toggle/toggle.directive';\nimport { IgxListModule } from '../../../list/list.component';\nimport { IgxExcelStyleSearchFilterPipe } from './excel-style-search.pipe';\nimport { IgxProgressBarModule } from '../../../progressbar/progressbar.component';\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [\n        IgxGridExcelStyleFilteringComponent,\n        IgxExcelStyleSortingComponent,\n        IgxExcelStyleColumnMovingComponent,\n        IgxExcelStyleSearchComponent,\n        IgxExcelStyleCustomDialogComponent,\n        IgxExcelStyleDefaultExpressionComponent,\n        IgxExcelStyleDateExpressionComponent,\n        IgxExcelStyleSortingTemplateDirective,\n        IgxExcelStyleHidingTemplateDirective,\n        IgxExcelStyleMovingTemplateDirective,\n        IgxExcelStylePinningTemplateDirective,\n        IgxExcelStyleSelectingTemplateDirective,\n        IgxExcelStyleLoadingValuesTemplateDirective,\n        IgxExcelStyleSearchFilterPipe\n    ],\n    exports: [\n        IgxGridExcelStyleFilteringComponent,\n        IgxExcelStyleSortingTemplateDirective,\n        IgxExcelStyleHidingTemplateDirective,\n        IgxExcelStyleMovingTemplateDirective,\n        IgxExcelStylePinningTemplateDirective,\n        IgxExcelStyleSelectingTemplateDirective,\n        IgxExcelStyleLoadingValuesTemplateDirective,\n        IgxExcelStyleDateExpressionComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        IgxGridPipesModule,\n        IgxButtonModule,\n        IgxButtonGroupModule,\n        IgxDatePickerModule,\n        IgxIconModule,\n        IgxRippleModule,\n        IgxInputGroupModule,\n        IgxDropDownModule,\n        IgxForOfModule,\n        IgxCheckboxModule,\n        IgxFilterModule,\n        IgxToggleModule,\n        IgxListModule,\n        IgxProgressBarModule\n    ],\n    entryComponents: [\n        IgxGridExcelStyleFilteringComponent\n    ],\n    providers: [\n        IgxSelectionAPIService\n    ]\n})\nexport class IgxGridExcelStyleFilteringModule {\n\n}\n","import { NgModule } from '@angular/core';\nimport { IgxRowSelectorDirective, IgxHeadSelectorDirective } from './row-selectors';\nimport { IgxGridDragSelectDirective } from './drag-select.directive';\n\n\n@NgModule({\n    declarations: [\n        IgxRowSelectorDirective,\n        IgxHeadSelectorDirective,\n        IgxGridDragSelectDirective\n    ],\n    exports: [\n        IgxRowSelectorDirective,\n        IgxHeadSelectorDirective,\n        IgxGridDragSelectDirective\n    ]\n})\nexport class IgxGridSelectionModule {}\n","import {\n    AfterViewInit,\n    Directive,\n    ElementRef,\n    Input,\n    NgZone,\n    HostListener,\n    OnDestroy\n} from '@angular/core';\nimport { Subject, fromEvent } from 'rxjs';\nimport { debounceTime, takeUntil} from 'rxjs/operators';\nimport { IgxColumnComponent } from '../columns/column.component';\nimport { IgxColumnResizingService } from './resizing.service';\n\n\n/**\n * @hidden\n * @internal\n */\n@Directive({\n    selector: '[igxResizeHandle]'\n})\nexport class IgxResizeHandleDirective implements AfterViewInit, OnDestroy {\n\n    /**\n     * @hidden\n     */\n    @Input('igxResizeHandle')\n    public column: IgxColumnComponent;\n\n    /**\n     * @hidden\n     */\n    private _dblClick = false;\n\n    /**\n     * @hidden\n     */\n    private destroy$ = new Subject<boolean>();\n\n    private readonly DEBOUNCE_TIME = 200;\n\n    constructor(private zone: NgZone,\n               private element: ElementRef,\n               public colResizingService: IgxColumnResizingService) { }\n\n    /**\n     * @hidden\n     */\n    public ngOnDestroy() {\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n\n    /**\n     * @hidden\n     */\n    public ngAfterViewInit() {\n        if (!this.column.columnGroup && this.column.resizable) {\n            this.zone.runOutsideAngular(() => {\n                fromEvent(this.element.nativeElement, 'mousedown').pipe(\n                    debounceTime(this.DEBOUNCE_TIME),\n                    takeUntil(this.destroy$)\n                ).subscribe((event: MouseEvent) => {\n\n                    if (this._dblClick) {\n                        this._dblClick = false;\n                        return;\n                    }\n\n                    if (event.button === 0) {\n                        this._onResizeAreaMouseDown(event);\n                        this.column.grid.resizeLine.resizer.onMousedown(event);\n                    }\n                });\n            });\n\n            fromEvent(this.element.nativeElement, 'mouseup').pipe(\n                debounceTime(this.DEBOUNCE_TIME),\n                takeUntil(this.destroy$)\n            ).subscribe(() => {\n                this.colResizingService.isColumnResizing = false;\n                this.colResizingService.showResizer = false;\n                this.column.grid.cdr.detectChanges();\n            });\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('mouseover')\n    public onMouseOver() {\n        this.colResizingService.resizeCursor = 'col-resize';\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('dblclick')\n    public onDoubleClick() {\n        this._dblClick = true;\n        this.colResizingService.column = this.column;\n        this.colResizingService.autosizeColumnOnDblClick();\n    }\n\n    /**\n     * @hidden\n     */\n    private _onResizeAreaMouseDown(event) {\n        this.colResizingService.column = this.column;\n        this.colResizingService.isColumnResizing = true;\n        this.colResizingService.startResizePos = event.clientX;\n\n        this.colResizingService.showResizer = true;\n        this.column.grid.cdr.detectChanges();\n    }\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IgxColumnResizingService } from './resizing.service';\nimport { IgxGridColumnResizerComponent } from './resizer.component';\nimport { IgxResizeHandleDirective } from './resize-handle.directive';\nimport { IgxColumnResizerDirective } from './resizer.directive';\n\n\n@NgModule({\n    declarations: [\n        IgxGridColumnResizerComponent,\n        IgxResizeHandleDirective,\n        IgxColumnResizerDirective\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        IgxGridColumnResizerComponent,\n        IgxResizeHandleDirective,\n        IgxColumnResizerDirective\n    ],\n    providers: [\n        IgxColumnResizingService\n    ]\n})\nexport class IgxGridResizingModule {}\n","import { Directive, Input, OnDestroy, ElementRef, Renderer2, NgZone } from '@angular/core';\nimport { IgxColumnComponent } from '../columns/column.component';\nimport { DropPosition, IgxColumnMovingService } from './moving.service';\nimport { Subject, interval } from 'rxjs';\nimport { IgxColumnMovingDragDirective } from './moving.drag.directive';\nimport { takeUntil } from 'rxjs/operators';\nimport { IgxDropDirective } from '../../directives/drag-drop/drag-drop.directive';\nimport { IgxGridForOfDirective } from '../../directives/for-of/for_of.directive';\n\n\n@Directive({\n    selector: '[igxColumnMovingDrop]'\n})\nexport class IgxColumnMovingDropDirective extends IgxDropDirective implements OnDestroy {\n\n    @Input('igxColumnMovingDrop')\n    set data(val: any) {\n        if (val instanceof IgxColumnComponent) {\n            this._column = val;\n        }\n\n        if (val instanceof IgxGridForOfDirective) {\n            this._hVirtDir = val;\n        }\n    }\n\n    get column(): IgxColumnComponent {\n        return this._column;\n    }\n\n    get isDropTarget(): boolean {\n        return this._column && this._column.grid.hasMovableColumns && this.cms.column.movable &&\n            ((!this._column.pinned && this.cms.column.disablePinning) || !this.cms.column.disablePinning);\n    }\n\n    get horizontalScroll(): any {\n        if (this._hVirtDir) {\n            return this._hVirtDir;\n        }\n    }\n\n    private _dropPos: DropPosition;\n    private _dropIndicator: any = null;\n    private _lastDropIndicator: any = null;\n    private _column: IgxColumnComponent;\n    private _hVirtDir: IgxGridForOfDirective<any>;\n    private _dragLeave = new Subject<boolean>();\n    private _dropIndicatorClass = 'igx-grid__th-drop-indicator--active';\n\n    constructor(private elementRef: ElementRef, private renderer: Renderer2, private zone: NgZone, private cms: IgxColumnMovingService) {\n        super(elementRef, renderer, zone);\n    }\n\n    public ngOnDestroy() {\n        this._dragLeave.next(true);\n        this._dragLeave.complete();\n    }\n\n    public onDragOver(event) {\n        const drag = event.detail.owner;\n        if (!(drag instanceof IgxColumnMovingDragDirective)) {\n            return;\n        }\n\n        if (this.isDropTarget &&\n            this.cms.column !== this.column &&\n            this.cms.column.level === this.column.level &&\n            this.cms.column.parent === this.column.parent) {\n\n            if (this._lastDropIndicator) {\n                this.renderer.removeClass(this._dropIndicator, this._dropIndicatorClass);\n            }\n\n            const clientRect = this.elementRef.nativeElement.getBoundingClientRect();\n            const pos = clientRect.left + clientRect.width / 2;\n\n            const parent = this.elementRef.nativeElement.parentElement;\n            if (event.detail.pageX < pos) {\n                this._dropPos = DropPosition.BeforeDropTarget;\n                this._lastDropIndicator = this._dropIndicator = parent.firstElementChild;\n            } else {\n                this._dropPos = DropPosition.AfterDropTarget;\n                this._lastDropIndicator = this._dropIndicator = parent.lastElementChild;\n            }\n\n            if (this.cms.icon.innerText !== 'block') {\n                this.renderer.addClass(this._dropIndicator, this._dropIndicatorClass);\n            }\n        }\n    }\n\n    public onDragEnter(event) {\n        const drag = event.detail.owner;\n        if (!(drag instanceof IgxColumnMovingDragDirective)) {\n            return;\n        }\n\n        if (this.column && this.cms.column.grid.id !== this.column.grid.id) {\n            this.cms.icon.innerText = 'block';\n            return;\n        }\n\n        if (this.isDropTarget &&\n            this.cms.column !== this.column &&\n            this.cms.column.level === this.column.level &&\n            this.cms.column.parent === this.column.parent) {\n\n                if (!this.column.pinned || (this.column.pinned && this.cms.column.pinned)) {\n                    this.cms.icon.innerText = 'swap_horiz';\n                }\n\n                this.cms.icon.innerText = 'lock';\n            } else {\n                this.cms.icon.innerText = 'block';\n            }\n\n            if (this.horizontalScroll) {\n                this.cms.icon.innerText = event.target.id === 'right' ? 'arrow_forward' : 'arrow_back';\n\n                interval(100).pipe(takeUntil(this._dragLeave)).subscribe(() => {\n                    event.target.id === 'right' ? this.horizontalScroll.scrollPosition += 15 :\n                        this.horizontalScroll.scrollPosition -= 15;\n                });\n            }\n    }\n\n    public onDragLeave(event) {\n        const drag = event.detail.owner;\n        if (!(drag instanceof IgxColumnMovingDragDirective)) {\n            return;\n        }\n\n        this.cms.icon.innerText = 'block';\n\n        if (this._dropIndicator) {\n            this.renderer.removeClass(this._dropIndicator, this._dropIndicatorClass);\n        }\n\n        if (this.horizontalScroll) {\n            this._dragLeave.next(true);\n        }\n    }\n\n    public onDragDrop(event) {\n        event.preventDefault();\n        const drag = event.detail.owner;\n        if (!(drag instanceof IgxColumnMovingDragDirective)) {\n            return;\n        }\n\n        if (this.column && (this.cms.column.grid.id !== this.column.grid.id)) {\n            return;\n        }\n\n        if (this.horizontalScroll) {\n            this._dragLeave.next(true);\n        }\n\n        if (this.isDropTarget) {\n            const args = {\n                source: this.cms.column,\n                target: this.column\n            };\n\n            this.column.grid.moveColumn(this.cms.column, this.column, this._dropPos);\n\n            this.column.grid.draggedColumn = null;\n            this.column.grid.cdr.detectChanges();\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { IgxColumnMovingDragDirective } from './moving.drag.directive';\nimport { IgxColumnMovingDropDirective } from './moving.drop.directive';\n\n\n@NgModule({\n    declarations: [\n        IgxColumnMovingDropDirective,\n        IgxColumnMovingDragDirective\n    ],\n    exports: [\n        IgxColumnMovingDropDirective,\n        IgxColumnMovingDragDirective\n    ]\n})\nexport class IgxColumnMovingModule {}\n","import { CommonModule } from '@angular/common';\nimport { Component, HostBinding, Input, NgModule } from '@angular/core';\nimport { IgxIconModule } from '../icon/public_api';\n\nlet NEXT_ID = 0;\n\n/**\n * Determines the igxBadge type\n */\nexport enum IgxBadgeType {\n    PRIMARY = 'primary',\n    INFO = 'info',\n    SUCCESS = 'success',\n    WARNING = 'warning',\n    ERROR = 'error'\n}\n/**\n * Badge provides visual notifications used to decorate avatars, menus, etc.\n *\n * @igxModule IgxBadgeModule\n *\n * @igxTheme igx-badge-theme\n *\n * @igxKeywords badge, icon, notification\n *\n * @igxGroup Data Entry & Display\n *\n * @remarks\n * The Ignite UI Badge is used to decorate avatars, navigation menus, or other components in the\n * application when visual notification is needed. They are usually designed as icons with a predefined\n * style to communicate information, success, warnings, or errors.\n *\n * @example\n * ```html\n * <igx-avatar>\n *   <igx-badge icon=\"check\" type=\"success\"></igx-badge>\n * </igx-avatar>\n */\n@Component({\n    selector: 'igx-badge',\n    templateUrl: 'badge.component.html'\n})\nexport class IgxBadgeComponent {\n\n   /**\n    * Sets/gets the `id` of the badge.\n    *\n    * @remarks\n    * If not set, the `id` will have value `\"igx-badge-0\"`.\n    *\n    * @example\n    * ```html\n    * <igx-badge id=\"igx-badge-2\"></igx-badge>\n    * ```\n    */\n    @HostBinding('attr.id')\n    @Input()\n    public id = `igx-badge-${NEXT_ID++}`;\n\n   /**\n    * Sets/gets the type of the badge.\n    *\n    * @remarks\n    * Allowed values are `primary`, `info`, `success`, `warning`, `error`.\n    * Providing an invalid value won't display a badge.\n    *\n    * @example\n    * ```html\n    * <igx-badge type=\"success\"></igx-badge>\n    * ```\n    */\n    @Input()\n    public type: string | IgxBadgeType = IgxBadgeType.PRIMARY;\n\n   /**\n    * Sets/gets the value to be displayed inside the badge.\n    *\n    * @remarks\n    * If an `icon` property is already set the `icon` will be displayed.\n    * If neither a `value` nor an `icon` is set the content of the badge will be empty.\n    *\n    * @example\n    * ```html\n    * <igx-badge value=\"11\"></igx-badge>\n    * ```\n    */\n    @Input()\n    public value = '';\n\n    /**\n     * Sets/gets an icon for the badge from the material icons set.\n     *\n     * @remarks\n     * Has priority over the `value` property.\n     * If neither a `value` nor an `icon` is set the content of the badge will be empty.\n     * Providing an invalid value won't display anything.\n     *\n     * @example\n     * ```html\n     * <igx-badge icon=\"check\"></igx-badge>\n     * ```\n     */\n    @Input()\n    public icon: string;\n\n    /**\n     * Sets/gets the role attribute value.\n     *\n     * @example\n     * ```typescript\n     * @ViewChild(\"MyBadge\", { read: IgxBadgeComponent })\n     * public badge: IgxBadgeComponent;\n     *\n     * badge.role = 'status';\n     * ```\n     */\n    @HostBinding('attr.role')\n    public role = 'status';\n\n    /**\n     * Sets/gets the the css class to use on the badge.\n     *\n     * @example\n     * ```typescript\n     * @ViewChild(\"MyBadge\", { read: IgxBadgeComponent })\n     * public badge: IgxBadgeComponent;\n     *\n     * badge.cssClass = 'my-badge-class';\n     * ```\n     */\n    @HostBinding('class.igx-badge')\n    public cssClass = 'igx-badge';\n\n    /**\n     * Sets/gets the aria-label attribute value.\n     *\n     * @example\n     * ```typescript\n     * @ViewChild(\"MyBadge\", { read: IgxBadgeComponent })\n     * public badge: IgxBadgeComponent;\n     *\n     * badge.label = 'badge';\n     * ```\n     */\n    @HostBinding('attr.aria-label')\n    public label = 'badge';\n\n    /**\n     * Defines a human-readable, accessor, author-localized description for\n     * the `type` and the `icon` or `value` of the element.\n     * @hidden\n     * @internal\n     */\n    get roleDescription() {\n        let message: string;\n\n        // tslint:disable-next-line:prefer-conditional-expression\n        if (this.icon) {\n            message = this.type + ' type badge with icon type ' + this.icon;\n        } else if (this.value) {\n            message = this.type + ' badge type with value ' + this.value;\n        } else {\n            message = this.type + ' badge type without value';\n        }\n\n        return message;\n    }\n\n    /**\n     * Method which makes the name of the class more descriptive.\n     * This helps the styling of the badges.\n     * @hidden\n     * @internal\n     */\n    public setClasses() {\n        let classes = {};\n\n        switch (IgxBadgeType[this.type.toUpperCase()]) {\n            case IgxBadgeType.INFO:\n                classes = {\n                    [`${this.cssClass}__circle--info`]: true\n                };\n                break;\n            case IgxBadgeType.SUCCESS:\n                classes = {\n                    [`${this.cssClass}__circle--success`]: true\n                };\n                break;\n            case IgxBadgeType.WARNING:\n                classes = {\n                    [`${this.cssClass}__circle--warning`]: true\n                };\n                break;\n            case IgxBadgeType.ERROR:\n                classes = {\n                    [`${this.cssClass}__circle--error`]: true\n                };\n                break;\n            default:\n                classes = {\n                    [`${this.cssClass}__circle--default`]: true\n                };\n        }\n\n        return classes;\n    }\n\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [IgxBadgeComponent],\n    exports: [IgxBadgeComponent],\n    imports: [CommonModule, IgxIconModule]\n})\nexport class IgxBadgeModule { }\n","import { GridBaseAPIService } from '../api.service';\nimport { IgxGridComponent } from './grid.component';\nimport { IGroupByRecord } from '../../data-operations/groupby-record.interface';\nimport { IGroupByExpandState } from '../../data-operations/groupby-expand-state.interface';\nimport { DataUtil } from '../../data-operations/data-util';\nimport { cloneArray } from '../../core/utils';\nimport { IGroupingExpression } from '../../data-operations/grouping-expression.interface';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class IgxGridAPIService extends GridBaseAPIService<IgxGridComponent> {\n\n    public groupBy(expression: IGroupingExpression): void {\n        const groupingState = cloneArray(this.grid.groupingExpressions);\n        const sortingState = cloneArray(this.grid.sortingExpressions);\n        this.prepare_sorting_expression([sortingState, groupingState], expression);\n        this.grid.groupingExpressions = groupingState;\n        this.arrange_sorting_expressions();\n    }\n\n    public groupBy_multiple(expressions: IGroupingExpression[]): void {\n        const groupingState = cloneArray(this.grid.groupingExpressions);\n        const sortingState = cloneArray(this.grid.sortingExpressions);\n\n        for (const each of expressions) {\n            this.prepare_sorting_expression([sortingState, groupingState], each);\n        }\n\n        this.grid.groupingExpressions = groupingState;\n        this.arrange_sorting_expressions();\n    }\n\n    public clear_groupby(name?: string | Array<string>) {\n        const groupingState = cloneArray(this.grid.groupingExpressions);\n        const sortingState = cloneArray(this.grid.sortingExpressions);\n\n        if (name) {\n            const names = typeof name === 'string' ? [ name ] : name;\n            const groupedCols = groupingState.filter((state) => names.indexOf(state.fieldName) < 0);\n            const newSortingExpr = sortingState.filter((state) => names.indexOf(state.fieldName) < 0);\n            this.grid.groupingExpressions = groupedCols;\n            this.grid.sortingExpressions = newSortingExpr;\n            names.forEach((colName) => {\n                const grExprIndex = groupingState.findIndex((exp) => exp.fieldName === colName);\n                const grpExpandState = this.grid.groupingExpansionState;\n                 /* remove expansion states related to the cleared group\n                    and all with deeper hierarchy than the cleared group */\n                const newExpandState = grpExpandState.filter((val) => {\n                    return val.hierarchy && val.hierarchy.length <= grExprIndex;\n                });\n                /* Do not set the new instance produced by filter\n                    when there are no differences between expansion states */\n                if (newExpandState.length !== grpExpandState.length) {\n                   this.grid.groupingExpansionState = newExpandState;\n                }\n            });\n        } else {\n            // clear all\n            this.grid.groupingExpressions = [];\n            this.grid.groupingExpansionState = [];\n            for (const grExpr of groupingState) {\n                const sortExprIndex = sortingState.findIndex((exp) => exp.fieldName === grExpr.fieldName);\n                if (sortExprIndex > -1) {\n                    sortingState.splice(sortExprIndex, 1);\n                }\n            }\n            this.grid.sortingExpressions = sortingState;\n        }\n    }\n\n    public groupBy_get_expanded_for_group(groupRow: IGroupByRecord): IGroupByExpandState {\n        const grState = this.grid.groupingExpansionState;\n        const hierarchy = DataUtil.getHierarchy(groupRow);\n        return grState.find((state) =>\n            DataUtil.isHierarchyMatch(state.hierarchy || [{ fieldName: groupRow.expression.fieldName, value: groupRow.value }], hierarchy));\n    }\n\n    public groupBy_is_row_in_group(groupRow: IGroupByRecord, rowID): boolean {\n        const grid = this.grid;\n        let rowInGroup = false;\n        groupRow.records.forEach(row => {\n            if (grid.primaryKey ? row[grid.primaryKey] === rowID : row === rowID) {\n                rowInGroup = true;\n            }\n        });\n        return rowInGroup;\n    }\n\n    public groupBy_toggle_group(groupRow: IGroupByRecord) {\n        const grid = this.grid;\n        if (grid.crudService.isInEditMode) {\n            grid.endEdit(true);\n        }\n\n        const expansionState = grid.groupingExpansionState;\n        const state: IGroupByExpandState = this.groupBy_get_expanded_for_group(groupRow);\n        if (state) {\n            state.expanded = !state.expanded;\n        } else {\n            expansionState.push({\n                expanded: !grid.groupsExpanded,\n                hierarchy: DataUtil.getHierarchy(groupRow)\n            });\n        }\n        this.grid.groupingExpansionState = [...expansionState];\n        if (grid.rowEditable) {\n            grid.repositionRowEditingOverlay(grid.rowInEditMode);\n        }\n    }\n\n    public groupBy_fully_expand_group(groupRow: IGroupByRecord) {\n        const state: IGroupByExpandState = this.groupBy_get_expanded_for_group(groupRow);\n        const expanded = state ? state.expanded : this.grid.groupsExpanded;\n        if (!expanded) {\n            this.groupBy_toggle_group(groupRow);\n        }\n        if (groupRow.groupParent) {\n            this.groupBy_fully_expand_group(groupRow.groupParent);\n        }\n    }\n\n    protected remove_grouping_expression(fieldName) {\n        const groupingExpressions = this.grid.groupingExpressions;\n        const index = groupingExpressions.findIndex((expr) => expr.fieldName === fieldName);\n        if (index !== -1) {\n            groupingExpressions.splice(index, 1);\n        }\n    }\n\n    public arrange_sorting_expressions() {\n        const groupingState = this.grid.groupingExpressions;\n        this.grid.sortingExpressions.sort((a, b) => {\n            const groupExprA = groupingState.find((expr) => expr.fieldName === a.fieldName);\n            const groupExprB = groupingState.find((expr) => expr.fieldName === b.fieldName);\n            if (groupExprA && groupExprB) {\n                return groupingState.indexOf(groupExprA) > groupingState.indexOf(groupExprB) ? 1 : -1;\n            } else if (groupExprA) {\n                return -1;\n            } else if (groupExprB) {\n                return 1;\n            } else {\n                return 0;\n            }\n        });\n    }\n\n    public get_groupBy_record_id(gRow: IGroupByRecord): string {\n        let recordId = '{ ';\n        const hierrarchy = DataUtil.getHierarchy(gRow);\n\n        for (let i = 0; i < hierrarchy.length; i++) {\n            const groupByKey = hierrarchy[i];\n            recordId += `'${groupByKey.fieldName}': '${groupByKey.value}'`;\n\n            if (i < hierrarchy.length - 1) {\n                recordId += ', ';\n            }\n        }\n        recordId += ' }';\n\n        return recordId;\n    }\n\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    HostBinding,\n    HostListener,\n    Input,\n    ViewChild,\n    TemplateRef,\n} from '@angular/core';\nimport { IGroupByRecord } from '../../data-operations/groupby-record.interface';\nimport { DataType } from '../../data-operations/data-util';\nimport { GridBaseAPIService } from '../api.service';\nimport { IgxGridBaseDirective } from '../grid-base.directive';\nimport { IgxGridSelectionService, ISelectionNode } from '../selection/selection.service';\nimport { GridType } from '../common/grid.interface';\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false,\n    selector: 'igx-grid-groupby-row',\n    templateUrl: './groupby-row.component.html'\n})\nexport class IgxGridGroupByRowComponent {\n\n    constructor(public gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>,\n        private gridSelection: IgxGridSelectionService,\n        public element: ElementRef,\n        public cdr: ChangeDetectorRef) { }\n\n    /**\n     * @hidden\n     */\n    protected defaultCssClass = 'igx-grid__group-row';\n\n    /**\n     * @hidden\n     */\n    protected paddingIndentationCssClass = 'igx-grid__group-row--padding-level';\n\n    /**\n     * @hidden\n     */\n    @ViewChild('defaultGroupByExpandedTemplate', { read: TemplateRef, static: true })\n    protected defaultGroupByExpandedTemplate: TemplateRef<any>;\n\n    /**\n     * @hidden\n     */\n    @ViewChild('defaultGroupByCollapsedTemplate', { read: TemplateRef, static: true })\n    protected defaultGroupByCollapsedTemplate: TemplateRef<any>;\n\n    /**\n     * @hidden\n     */\n    @Input()\n    protected isFocused = false;\n\n    /**\n     * Returns whether the row is focused.\n     * ```\n     * let gridRowFocused = this.grid1.rowList.first.focused;\n     * ```\n     */\n    get focused(): boolean {\n        return this.isActive();\n    }\n\n    /**\n     * An @Input property that sets the index of the row.\n     * ```html\n     * <igx-grid-groupby-row [gridID]=\"id\" [index]=\"rowIndex\" [groupRow]=\"rowData\" #row></igx-grid-groupby-row>\n     * ```\n     */\n    @Input()\n    public index: number;\n\n    /**\n     * An @Input property that sets the id of the grid the row belongs to.\n     * ```html\n     * <igx-grid-groupby-row [gridID]=\"id\" [index]=\"rowIndex\" [groupRow]=\"rowData\" #row></igx-grid-groupby-row>\n     * ```\n     */\n    @Input()\n    public gridID: string;\n\n    /**\n     * An @Input property that specifies the group record the component renders for.\n     * ```typescript\n     * <igx-grid-groupby-row [gridID]=\"id\" [index]=\"rowIndex\" [groupRow]=\"rowData\" #row></igx-grid-groupby-row>\n     * ```\n     */\n    @Input()\n    public groupRow: IGroupByRecord;\n\n    /**\n     * Returns a reference of the content of the group.\n     * ```typescript\n     * const groupRowContent = this.grid1.rowList.first.groupContent;\n     * ```\n     */\n    @ViewChild('groupContent', { static: true })\n    public groupContent: ElementRef;\n\n    /**\n     * Returns whether the group row is expanded.\n     * ```typescript\n     * const groupRowExpanded = this.grid1.rowList.first.expanded;\n     * ```\n     */\n    @HostBinding('attr.aria-expanded')\n    get expanded(): boolean {\n        return this.grid.isExpandedGroup(this.groupRow);\n    }\n\n    /**\n     * @hidden\n     */\n    @HostBinding('attr.aria-describedby')\n    get describedBy(): string {\n        const grRowExpr = this.groupRow.expression !== undefined ? this.groupRow.expression.fieldName : '';\n        return this.gridID + '_' + grRowExpr;\n    }\n\n    @HostBinding('attr.data-rowIndex')\n    get dataRowIndex() {\n        return this.index;\n    }\n\n    /**\n     * Returns a reference to the underlying HTML element.\n     * ```typescript\n     * const groupRowElement = this.nativeElement;\n     * ```\n     */\n    get nativeElement(): any {\n        return this.element.nativeElement;\n    }\n\n    @HostBinding('attr.id')\n    public get attrCellID() {\n        return `${this.gridID}_${this.index}`;\n    }\n\n    /**\n     * Returns the style classes applied to the group rows.\n     * ```typescript\n     * const groupCssStyles = this.grid1.rowList.first.styleClasses;\n     * ```\n     */\n    @HostBinding('class')\n    get styleClasses(): string {\n        return `${this.defaultCssClass} ` + `${this.paddingIndentationCssClass}-` + this.groupRow.level +\n            (this.isActive() ? ` ${this.defaultCssClass}--active` : '');\n    }\n\n    public isActive() {\n        return this.grid.navigation.activeNode ? this.grid.navigation.activeNode.row === this.index : false;\n    }\n\n\n    @HostListener('pointerdown')\n    public activate() {\n        this.grid.navigation.activeNode ? this.grid.navigation.activeNode.row = this.index :\n            this.grid.navigation.activeNode = {row: this.index};\n    }\n\n    /**\n     * Toggles the group row.\n     * ```typescript\n     * this.grid1.rowList.first.toggle()\n     * ```\n     */\n    public toggle() {\n        this.grid.toggleGroup(this.groupRow);\n    }\n\n    public get iconTemplate() {\n        if (this.expanded) {\n            return this.grid.rowExpandedIndicatorTemplate || this.defaultGroupByExpandedTemplate;\n        } else {\n            return this.grid.rowCollapsedIndicatorTemplate || this.defaultGroupByCollapsedTemplate;\n        }\n    }\n\n    protected get selectionNode(): ISelectionNode {\n        return {\n            row: this.index,\n            column: this.gridSelection.activeElement ? this.gridSelection.activeElement.column : 0\n        };\n    }\n\n    /**\n     * Returns a reference to the `IgxGridComponent` the `IgxGridGroupByRowComponent` belongs to.\n     * ```typescript\n     * this.grid1.rowList.first.grid;\n     * ```\n     */\n    get grid(): any {\n        return this.gridAPI.grid;\n    }\n\n    /**\n     * @hidden\n     */\n    get dataType(): any {\n        const column = this.grid.getColumnByName(this.groupRow.expression.fieldName);\n        return (column && column.dataType) || DataType.String;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { IgxGridBaseDirective } from './grid-base.directive';\nimport { first } from 'rxjs/operators';\nimport { IgxColumnComponent } from './columns/column.component';\nimport { IgxGridNavigationService } from './grid-navigation.service';\nimport { HORIZONTAL_NAV_KEYS, HEADER_KEYS } from '../core/utils';\n\n/** @hidden */\n@Injectable()\nexport class IgxGridMRLNavigationService extends IgxGridNavigationService {\n    public grid: IgxGridBaseDirective;\n\n    protected getNextPosition(rowIndex: number, colIndex: number, key: string, shift: boolean, ctrl: boolean, event: KeyboardEvent) {\n        if (!this.activeNode.layout) {\n            this.activeNode.layout = this.layout(this.activeNode.column || 0);\n        }\n        switch (key) {\n            case 'tab':\n            case ' ':\n            case 'spacebar':\n            case 'space':\n            case 'escape':\n            case 'esc':\n            case 'enter':\n            case 'f2':\n                super.getNextPosition(rowIndex, colIndex, key, shift, ctrl, event);\n                break;\n            case 'end':\n                rowIndex = ctrl ? this.findLastDataRowIndex() : this.activeNode.row;\n                colIndex = ctrl ? this.lastColIndexPerMRLBlock(this.lastIndexPerRow) : this.lastIndexPerRow;\n                break;\n            case 'home':\n                rowIndex = ctrl ? this.findFirstDataRowIndex() : this.activeNode.row;\n                colIndex = ctrl ? 0 : this.firstIndexPerRow;\n                break;\n            case 'arrowleft':\n            case 'left':\n                colIndex = ctrl ? this.firstIndexPerRow : this.getNextHorizontalCellPosition(true).column;\n                break;\n            case 'arrowright':\n            case 'right':\n                colIndex = ctrl ? this.lastIndexPerRow : this.getNextHorizontalCellPosition().column;\n                break;\n            case 'arrowup':\n            case 'up':\n                const prevPos = this.getNextVerticalPosition(true);\n                colIndex = ctrl ? this.activeNode.column : prevPos.column;\n                rowIndex = ctrl ? this.findFirstDataRowIndex() : prevPos.row;\n                break;\n            case 'arrowdown':\n            case 'down':\n                const nextPos = this.getNextVerticalPosition();\n                colIndex = ctrl ? this.activeNode.column : nextPos.column;\n                rowIndex = ctrl ? this.findLastDataRowIndex() : nextPos.row;\n                break;\n            default:\n                return;\n        }\n        const nextLayout = this.layout(colIndex);\n        const newLayout = key.includes('up') || key.includes('down') ? {rowStart: nextLayout.rowStart} : {colStart: nextLayout.colStart};\n        Object.assign(this.activeNode.layout, newLayout, {rowEnd: nextLayout.rowEnd});\n\n        if (ctrl && (key === 'home' || key === 'end')) { this.activeNode.layout = nextLayout; }\n        return { rowIndex, colIndex };\n    }\n\n    public isValidPosition(rowIndex: number, colIndex: number): boolean {\n        if (rowIndex < 0 || colIndex < 0 || this.grid.dataView.length - 1 < rowIndex ||\n            Math.max(...this.grid.visibleColumns.map(col => col.visibleIndex)) < colIndex ||\n            (this.activeNode.column !== colIndex && !this.isDataRow(rowIndex, true))) {\n            return false;\n        }\n        return true;\n    }\n\n    public shouldPerformVerticalScroll(targetRowIndex: number, visibleColIndex: number): boolean {\n        if (!super.shouldPerformVerticalScroll(targetRowIndex, visibleColIndex)) { return false; }\n        if (!this.isDataRow(targetRowIndex)) { return super.shouldPerformVerticalScroll(targetRowIndex, visibleColIndex); }\n\n        const targetRow = super.getRowElementByIndex(targetRowIndex);\n        const containerHeight = this.grid.calcHeight ? Math.ceil(this.grid.calcHeight) : 0;\n        const scrollPos = this.getVerticalScrollPositions(targetRowIndex, visibleColIndex);\n        return (!targetRow || targetRow.offsetTop + scrollPos.topOffset < Math.abs(this.containerTopOffset)\n            || containerHeight && containerHeight < scrollPos.rowBottom -  Math.ceil(this.scrollTop));\n    }\n\n    public isColumnFullyVisible(visibleColIndex: number): boolean {\n        const targetCol = this.grid.getColumnByVisibleIndex(visibleColIndex);\n        if (this.isParentColumnFullyVisible(targetCol?.parent) || super.isColumnPinned(visibleColIndex, this.forOfDir())) { return true; }\n\n        const scrollPos = this.getChildColumnScrollPositions(visibleColIndex);\n        const colWidth = scrollPos.rightScroll - scrollPos.leftScroll;\n        if (this.displayContainerWidth < colWidth && this.displayContainerScrollLeft === scrollPos.leftScroll) { return true; }\n        return this.displayContainerWidth >= scrollPos.rightScroll - this.displayContainerScrollLeft &&\n            this.displayContainerScrollLeft <= scrollPos.leftScroll;\n    }\n\n    private isParentColumnFullyVisible(parent: IgxColumnComponent): boolean {\n        if (!this.forOfDir().getScroll().clientWidth || parent?.pinned) { return true; }\n\n        const index = this.forOfDir().igxForOf.indexOf(parent);\n        return this.displayContainerWidth >= this.forOfDir().getColumnScrollLeft(index + 1) - this.displayContainerScrollLeft &&\n            this.displayContainerScrollLeft <= this.forOfDir().getColumnScrollLeft(index);\n    }\n\n    private getChildColumnScrollPositions(visibleColIndex: number) {\n        const targetCol: IgxColumnComponent = this.grid.getColumnByVisibleIndex(visibleColIndex);\n        const parentVIndex = this.forOfDir().igxForOf.indexOf(targetCol.parent);\n        let leftScroll = this.forOfDir().getColumnScrollLeft(parentVIndex);\n        let rightScroll = this.forOfDir().getColumnScrollLeft(parentVIndex + 1);\n        targetCol.parent.children.forEach((c) => {\n            if (c.rowStart >= targetCol.rowStart && c.visibleIndex < targetCol.visibleIndex) {\n                leftScroll += parseInt(c.width, 10);\n            }\n            if (c.rowStart <= targetCol.rowStart && c.visibleIndex > targetCol.visibleIndex) {\n                rightScroll -= parseInt(c.width, 10);\n            }\n        });\n        return { leftScroll, rightScroll: rightScroll };\n    }\n\n    public getVerticalScrollPositions(rowIndex: number, visibleIndex: number) {\n        const targetCol = this.grid.getColumnByVisibleIndex(visibleIndex);\n        const rowSpan = targetCol.rowEnd && targetCol.rowEnd - targetCol.rowStart ? targetCol.rowEnd - targetCol.rowStart : 1;\n        const topOffset = this.grid.defaultRowHeight * (targetCol.rowStart - 1);\n        const rowTop = this.grid.verticalScrollContainer.sizesCache[rowIndex] + topOffset;\n        return { topOffset, rowTop, rowBottom: rowTop + (this.grid.defaultRowHeight * rowSpan) };\n    }\n\n    public performHorizontalScrollToCell(visibleColumnIndex: number, cb?: () => void) {\n        if (!this.shouldPerformHorizontalScroll(visibleColumnIndex)) { return; }\n        const scrollPos = this.getChildColumnScrollPositions(visibleColumnIndex);\n        const startScroll = scrollPos.rightScroll - this.displayContainerScrollLeft;\n        const nextScroll = !(this.displayContainerScrollLeft <= scrollPos.leftScroll) && this.displayContainerWidth >= startScroll ?\n            scrollPos.leftScroll : scrollPos.rightScroll - this.displayContainerWidth;\n        this.forOfDir().getScroll().scrollLeft = nextScroll;\n        this.grid.parentVirtDir.onChunkLoad\n            .pipe(first())\n            .subscribe(() => {\n                if (cb) { cb(); }\n            });\n    }\n\n    public performVerticalScrollToCell(rowIndex: number, visibleColIndex: number, cb?: () => void) {\n        const children = this.parentByChildIndex(visibleColIndex || 0)?.children;\n        if (!super.isDataRow(rowIndex) || (children && children.length < 2)) {\n            return super.performVerticalScrollToCell(rowIndex, visibleColIndex, cb);\n        }\n\n        const containerHeight = this.grid.calcHeight ? Math.ceil(this.grid.calcHeight) : 0;\n        const pos = this.getVerticalScrollPositions(rowIndex, visibleColIndex);\n        const row = super.getRowElementByIndex(rowIndex);\n        if ((this.scrollTop > pos.rowTop) && (!row || row.offsetTop + pos.topOffset < Math.abs(this.containerTopOffset))) {\n            pos.topOffset === 0 ? this.grid.verticalScrollContainer.scrollTo(rowIndex) :\n                this.grid.verticalScrollContainer.scrollPosition = pos.rowTop;\n        } else {\n            this.grid.verticalScrollContainer.addScrollTop(Math.abs(pos.rowBottom - this.scrollTop - containerHeight));\n        }\n        this.grid.verticalScrollContainer.onChunkLoad\n            .pipe(first()).subscribe(() => {\n                if (cb) { cb(); }\n            });\n    }\n\n    getNextHorizontalCellPosition(previous = false) {\n        const parent = this.parentByChildIndex(this.activeNode.column);\n        if (!this.hasNextHorizontalPosition(previous, parent)) {\n            return { row: this.activeNode.row, column: this.activeNode.column };\n        }\n        const columns = previous ? parent.children.filter(c => c.rowStart <= this.activeNode.layout.rowStart)\n            .sort((a, b) => b.visibleIndex - a.visibleIndex) : parent.children.filter(c => c.rowStart <= this.activeNode.layout.rowStart);\n        let column = columns.find((col) => previous ?\n                col.visibleIndex < this.activeNode.column && this.rowEnd(col) > this.activeNode.layout.rowStart :\n                col.visibleIndex > this.activeNode.column && col.colStart > this.activeNode.layout.colStart);\n        if (!column || (previous && this.activeNode.layout.colStart === 1)) {\n            const index = previous ? parent.visibleIndex - 1 : parent.visibleIndex + 1;\n            const children = this.grid.columnList.find(cols => cols.columnLayout && cols.visibleIndex === index).children;\n            column = previous ? children.toArray().reverse().find(child => child.rowStart <= this.activeNode.layout.rowStart) :\n                children.find(child => this.rowEnd(child) > this.activeNode.layout.rowStart && child.colStart === 1);\n        }\n        return { row: this.activeNode.row, column: column.visibleIndex };\n    }\n\n    getNextVerticalPosition(previous = false) {\n        this.activeNode.column = this.activeNode.column || 0;\n        if (!this.hasNextVerticalPosition(previous)) {\n            return { row: this.activeNode.row, column: this.activeNode.column };\n        }\n        const currentRowStart = this.grid.getColumnByVisibleIndex(this.activeNode.column).rowStart;\n        const nextBlock = !this.isDataRow(this.activeNode.row) ||\n        (previous ? currentRowStart === 1 : currentRowStart === this.lastRowStartPerBlock());\n        const nextRI = previous ? this.activeNode.row - 1 : this.activeNode.row + 1;\n        if (nextBlock && !this.isDataRow(nextRI)) {\n            return {row: nextRI,  column: this.activeNode.column};\n        }\n        const children = this.parentByChildIndex(this.activeNode.column).children;\n        const col = previous ? this.getPreviousRowIndex(children, nextBlock) : this.getNextRowIndex(children, nextBlock);\n        return { row: nextBlock ? nextRI : this.activeNode.row, column: col.visibleIndex };\n    }\n\n    private getNextRowIndex(children, next) {\n        const rowStart = next ? 1 : this.rowEnd(this.grid.getColumnByVisibleIndex(this.activeNode.column));\n        const  col = children.filter(c => c.rowStart === rowStart);\n        return col.find(co => co.colStart === this.activeNode.layout.colStart) ||\n            col.sort((a, b) => b.visibleIndex - a.visibleIndex).find(co => co.colStart <= this.activeNode.layout.colStart);    }\n\n    private getPreviousRowIndex(children, prev) {\n        const end = prev ? Math.max(...children.map(c => this.rowEnd(c))) :\n            this.grid.getColumnByVisibleIndex(this.activeNode.column).rowStart;\n        const col = children.filter(c => this.rowEnd(c) ===  end);\n        return col.find(co => co.colStart === this.activeNode.layout.colStart) ||\n            col.sort((a, b) => b.visibleIndex - a.visibleIndex).find(co => co.colStart <= this.activeNode.layout.colStart);\n    }\n\n    headerNavigation(event: KeyboardEvent) {\n        const key = event.key.toLowerCase();\n        if (!HEADER_KEYS.has(key)) { return; }\n        event.preventDefault();\n        if (!this.activeNode.layout) {\n            this.activeNode.layout = this.layout(this.activeNode.column || 0);\n        }\n        const alt = event.altKey;\n        const ctrl = event.ctrlKey;\n        this.performHeaderKeyCombination(this.grid.getColumnByVisibleIndex(this.activeNode.column), key, event.shiftKey, ctrl, alt, event);\n        if (!ctrl && !alt && (key.includes('down') || key.includes('up'))) {\n            const children = this.parentByChildIndex(this.activeNode.column).children;\n            const col = key.includes('down') ? this.getNextRowIndex(children, false) : this.getPreviousRowIndex(children, false);\n            if (!col) { return; }\n            this.activeNode.column = col.visibleIndex;\n            const newLayout = this.layout(this.activeNode.column);\n            Object.assign(this.activeNode.layout, {rowStart: newLayout.rowStart, rowEnd: newLayout.rowEnd});\n            return;\n        }\n        this.horizontalNav(event, key, -1);\n    }\n\n    protected horizontalNav(event: KeyboardEvent, key: string, rowIndex: number) {\n        const ctrl = event.ctrlKey;\n        if (!HORIZONTAL_NAV_KEYS.has(key) || event.altKey) { return; }\n        this.activeNode.row = rowIndex;\n        if ((key.includes('left') || key === 'home') && this.activeNode.column > 0) {\n            this.activeNode.column = ctrl || key === 'home' ? this.firstIndexPerRow : this.getNextHorizontalCellPosition(true).column;\n        }\n        if ((key.includes('right') || key === 'end') && this.activeNode.column !== this.lastIndexPerRow) {\n            this.activeNode.column = ctrl || key === 'end' ? this.lastIndexPerRow : this.getNextHorizontalCellPosition().column;\n        }\n        const newLayout = this.layout(this.activeNode.column);\n        Object.assign(this.activeNode.layout, {colStart: newLayout.colStart, rowEnd: newLayout.rowEnd});\n        this.performHorizontalScrollToCell(this.activeNode.column);\n    }\n\n    private get lastIndexPerRow(): number {\n        const children = this.grid.visibleColumns.find(c => c.visibleIndex === this.lastLayoutIndex && c.columnLayout)\n            .children.toArray().reverse();\n        const column = children.find(co => co.rowStart === this.activeNode.layout.rowStart) ||\n        children.find(co => co.rowStart <= this.activeNode.layout.rowStart);\n        return column.visibleIndex;\n    }\n\n    private get firstIndexPerRow(): number {\n        const children = this.grid.visibleColumns.find(c => c.visibleIndex === 0 && c.columnLayout).children;\n        const column = children.find(co => co.rowStart === this.activeNode.layout.rowStart) ||\n        children.find(co => co.rowStart <= this.activeNode.layout.rowStart);\n        return column.visibleIndex;\n    }\n\n    private get lastLayoutIndex(): number {\n        return Math.max(...this.grid.visibleColumns.filter(c => c.columnLayout).map(col => col.visibleIndex));\n    }\n\n    private get scrollTop(): number {\n       return Math.abs(this.grid.verticalScrollContainer.getScroll().scrollTop);\n    }\n\n    private lastColIndexPerMRLBlock(visibleIndex = this.activeNode.column): number {\n        return this.parentByChildIndex(visibleIndex).children.last.visibleIndex;\n    }\n\n    private lastRowStartPerBlock(visibleIndex = this.activeNode.column) {\n        return Math.max(...this.parentByChildIndex(visibleIndex).children.map(c => c.rowStart));\n    }\n\n    private rowEnd(column): number {\n        return column.rowEnd && column.rowEnd - column.rowStart ? column.rowStart + column.rowEnd - column.rowStart : column.rowStart + 1;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public layout(visibleIndex) {\n        const column = this.grid.getColumnByVisibleIndex(visibleIndex);\n        return {colStart: column.colStart, rowStart: column.rowStart,\n                colEnd: column.colEnd, rowEnd: column.rowEnd, columnVisibleIndex: column.visibleIndex };\n    }\n\n    private parentByChildIndex(visibleIndex) {\n        return this.grid.getColumnByVisibleIndex(visibleIndex)?.parent;\n\n    }\n\n    private hasNextHorizontalPosition(previous = false, parent) {\n        if (previous && parent.visibleIndex === 0 && this.activeNode.layout.colStart === 1 ||\n            !previous && parent.visibleIndex === this.lastLayoutIndex && this.activeNode.column === this.lastIndexPerRow) {\n            return false;\n        }\n        return true;\n    }\n\n    private hasNextVerticalPosition(prev = false) {\n        if ((prev && this.activeNode.row === 0 && (!this.isDataRow(this.activeNode.row) || this.activeNode.layout.rowStart === 1)) ||\n            (!prev && this.activeNode.row >= this.grid.dataView.length - 1 && this.activeNode.column === this.lastColIndexPerMRLBlock())) {\n            return false;\n        }\n        return true;\n    }\n}\n","import {\n    Component, ChangeDetectionStrategy, Input, Output, EventEmitter, ContentChild, ViewChildren,\n    QueryList, ViewChild, ElementRef, TemplateRef, DoCheck, AfterContentInit, HostBinding, forwardRef, OnInit, AfterViewInit, HostListener\n} from '@angular/core';\nimport { GridBaseAPIService } from '../api.service';\nimport { IgxGridBaseDirective } from '../grid-base.directive';\nimport { IgxGridNavigationService } from '../grid-navigation.service';\nimport { IgxGridAPIService } from './grid-api.service';\nimport { ISortingExpression } from '../../data-operations/sorting-expression.interface';\nimport { cloneArray, IBaseEventArgs } from '../../core/utils';\nimport { IGroupByRecord } from '../../data-operations/groupby-record.interface';\nimport { IgxGroupByRowTemplateDirective, IgxGridDetailTemplateDirective } from './grid.directives';\nimport { IgxGridGroupByRowComponent } from './groupby-row.component';\nimport { IGroupByExpandState } from '../../data-operations/groupby-expand-state.interface';\nimport { IBaseChipEventArgs, IChipClickEventArgs, IChipKeyDownEventArgs } from '../../chips/chip.component';\nimport { IChipsAreaReorderEventArgs } from '../../chips/chips-area.component';\nimport { IgxColumnComponent } from '../columns/column.component';\nimport { takeUntil } from 'rxjs/operators';\nimport { IgxFilteringService } from '../filtering/grid-filtering.service';\nimport { IGroupingExpression } from '../../data-operations/grouping-expression.interface';\nimport { IgxColumnResizingService } from '../resizing/resizing.service';\nimport { IgxGridSummaryService } from '../summaries/grid-summary.service';\nimport { IgxGridSelectionService, IgxGridCRUDService } from '../selection/selection.service';\nimport { IgxForOfSyncService, IgxForOfScrollSyncService } from '../../directives/for-of/for_of.sync.service';\nimport { IgxGridMRLNavigationService } from '../grid-mrl-navigation.service';\nimport { IgxRowIslandAPIService } from '../hierarchical-grid/row-island-api.service';\nimport { FilterMode } from '../common/enums';\nimport { GridType } from '../common/grid.interface';\n\nlet NEXT_ID = 0;\n\nexport interface IGroupingDoneEventArgs extends IBaseEventArgs {\n    expressions: Array<ISortingExpression> | ISortingExpression;\n    groupedColumns: Array<IgxColumnComponent> | IgxColumnComponent;\n    ungroupedColumns: Array<IgxColumnComponent> | IgxColumnComponent;\n}\n\n/**\n * Grid provides a way to present and manipulate tabular data.\n * @igxModule IgxGridModule\n * @igxGroup Grids & Lists\n * @igxKeywords grid, table\n * @igxTheme igx-grid-theme\n * @remarks\n * The Ignite UI Grid is used for presenting and manipulating tabular data in the simplest way possible.  Once data\n * has been bound, it can be manipulated through filtering, sorting & editing operations.\n * @example\n * ```html\n * <igx-grid [data]=\"employeeData\" autoGenerate=\"false\">\n *   <igx-column field=\"first\" header=\"First Name\"></igx-column>\n *   <igx-column field=\"last\" header=\"Last Name\"></igx-column>\n *   <igx-column field=\"role\" header=\"Role\"></igx-column>\n * </igx-grid>\n * ```\n */\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false,\n    providers: [\n        IgxGridNavigationService,\n        IgxGridSummaryService,\n        IgxGridSelectionService,\n        IgxGridCRUDService,\n        { provide: GridBaseAPIService, useClass: IgxGridAPIService },\n        { provide: IgxGridBaseDirective, useExisting: forwardRef(() => IgxGridComponent) },\n        IgxFilteringService,\n        IgxColumnResizingService,\n        IgxForOfSyncService,\n        IgxForOfScrollSyncService,\n        IgxRowIslandAPIService\n    ],\n    selector: 'igx-grid',\n    templateUrl: './grid.component.html'\n})\nexport class IgxGridComponent extends IgxGridBaseDirective implements GridType, OnInit, DoCheck, AfterContentInit, AfterViewInit {\n    private _id = `igx-grid-${NEXT_ID++}`;\n    /**\n     * @hidden @internal\n     */\n    public groupingResult: any[];\n\n    /**\n     * @hidden @internal\n     */\n    public groupingMetadata: any[];\n\n    /**\n     * @hidden @internal\n     */\n    public groupingFlatResult: any[];\n    /**\n     * @hidden\n     */\n    protected _groupingExpressions: IGroupingExpression[] = [];\n    /**\n     * @hidden\n     */\n    protected _groupingExpandState: IGroupByExpandState[] = [];\n    /**\n     * @hidden\n     */\n    protected _groupRowTemplate: TemplateRef<any>;\n    /**\n     * @hidden\n     */\n    protected _groupAreaTemplate: TemplateRef<any>;\n    /**\n     * @hidden\n     */\n    protected groupingDiffer;\n    private _data;\n    private _hideGroupedColumns = false;\n    private _dropAreaMessage = null;\n\n    /**\n     * Gets/Sets the value of the `id` attribute.\n     * @remarks\n     * If not provided it will be automatically generated.\n     * @example\n     * ```html\n     * <igx-grid [id]=\"'igx-grid-1'\" [data]=\"Data\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @HostBinding('attr.id')\n    @Input()\n    public get id(): string {\n        return this._id;\n    }\n    public set id(value: string) {\n        this._id = value;\n    }\n\n    /**\n     * Gets/Sets the array of data that populates the `IgxGridComponent`.\n     * @example\n     * ```html\n     * <igx-grid [data]=\"Data\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @Input()\n    public get data(): any[] {\n        return this._data;\n    }\n\n    public set data(value: any[]) {\n        this._data = value || [];\n        this.summaryService.clearSummaryCache();\n        if (this.shouldGenerate) {\n            this.setupColumns();\n        }\n        this.cdr.markForCheck();\n    }\n\n    /**\n     * Gets/Sets an array of objects containing the filtered data.\n     * @example\n     * ```typescript\n     * let filteredData = this.grid.filteredData;\n     * this.grid.filteredData = [...];\n     * ```\n     */\n    get filteredData() {\n        return this._filteredData;\n    }\n\n    set filteredData(value) {\n        this._filteredData = value;\n    }\n\n    /**\n     * Gets/Sets the total number of records in the data source.\n     * @remarks\n     * This property is required for remote grid virtualization to function when it is bound to remote data.\n     * @example\n     * ```typescript\n     * const itemCount = this.grid1.totalItemCount;\n     * this.grid1.totalItemCount = 55;\n     * ```\n     */\n    set totalItemCount(count) {\n        this.verticalScrollContainer.totalItemCount = count;\n        this.cdr.detectChanges();\n    }\n\n    get totalItemCount() {\n        return this.verticalScrollContainer.totalItemCount;\n    }\n\n    private get _gridAPI(): IgxGridAPIService {\n        return this.gridAPI as IgxGridAPIService;\n    }\n    private _filteredData = null;\n\n    private childDetailTemplates: Map<any, any> = new Map();\n\n    /**\n     * Gets/Sets the group by state.\n     * @example\n     * ```typescript\n     * let groupByState = this.grid.groupingExpressions;\n     * this.grid.groupingExpressions = [...];\n     * ```\n     * @remarks\n     * Supports two-way data binding.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"Data\" [autoGenerate]=\"true\" [(groupingExpressions)]=\"model.groupingExpressions\"></igx-grid>\n     * ```\n     */\n    @Input()\n    get groupingExpressions(): IGroupingExpression[] {\n        return this._groupingExpressions;\n    }\n\n    set groupingExpressions(value: IGroupingExpression[]) {\n        if (value && value.length > 10) {\n            throw Error('Maximum amount of grouped columns is 10.');\n        }\n        const oldExpressions: IGroupingExpression[] = this.groupingExpressions;\n        const newExpressions: IGroupingExpression[] = value;\n        this._groupingExpressions = cloneArray(value);\n        this.groupingExpressionsChange.emit(this._groupingExpressions);\n        this.chipsGoupingExpressions = cloneArray(value);\n        if (this._gridAPI.grid) {\n            /* grouping should work in conjunction with sorting\n            and without overriding separate sorting expressions */\n            this._applyGrouping();\n            this._gridAPI.arrange_sorting_expressions();\n            this.notifyChanges();\n        } else {\n            // setter called before grid is registered in grid API service\n            this.sortingExpressions.unshift.apply(this.sortingExpressions, this._groupingExpressions);\n        }\n        if (!this._init && JSON.stringify(oldExpressions) !== JSON.stringify(newExpressions) && this.columnList) {\n            const groupedCols: IgxColumnComponent[] = [];\n            const ungroupedCols: IgxColumnComponent[] = [];\n            const groupedColsArr = newExpressions.filter((obj) => {\n                return !oldExpressions.some((obj2) => {\n                    return obj.fieldName === obj2.fieldName;\n                });\n            });\n            groupedColsArr.forEach((elem) => {\n                groupedCols.push(this.getColumnByName(elem.fieldName));\n            }, this);\n            const ungroupedColsArr = oldExpressions.filter((obj) => {\n                return !newExpressions.some((obj2) => {\n                    return obj.fieldName === obj2.fieldName;\n                });\n            });\n            ungroupedColsArr.forEach((elem) => {\n                ungroupedCols.push(this.getColumnByName(elem.fieldName));\n            }, this);\n            this.notifyChanges();\n            const groupingDoneArgs: IGroupingDoneEventArgs = {\n                expressions: newExpressions,\n                groupedColumns: groupedCols,\n                ungroupedColumns: ungroupedCols\n            };\n            this.onGroupingDone.emit(groupingDoneArgs);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    @Output()\n    public groupingExpressionsChange = new EventEmitter<IGroupingExpression[]>();\n\n    /**\n     * Gets/Sets a list of expansion states for group rows.\n     * @remarks\n     * Includes only states that differ from the default one (controlled through groupsExpanded and states that the user has changed.\n     * Contains the expansion state (expanded: boolean) and the unique identifier for the group row (Array).\n     * Supports two-way data binding.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"Data\" [autoGenerate]=\"true\" [(groupingExpansionState)]=\"model.groupingExpansionState\"></igx-grid>\n     * ```\n     */\n    @Input()\n    get groupingExpansionState() {\n        return this._groupingExpandState;\n    }\n\n    set groupingExpansionState(value) {\n        if (value !== this._groupingExpandState) {\n            this.groupingExpansionStateChange.emit(value);\n        }\n        this._groupingExpandState = value;\n        if (this.gridAPI.grid) {\n            this.cdr.detectChanges();\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    @Output()\n    public groupingExpansionStateChange = new EventEmitter<IGroupByExpandState[]>();\n\n    /**\n     * Gets/Sets whether created groups are rendered expanded or collapsed.\n     * @remarks\n     * The default rendered state is expanded.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"Data\" [groupsExpanded]=\"false\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @Input()\n    public groupsExpanded = true;\n\n    /**\n     * Gets the hierarchical representation of the group by records.\n     * @example\n     * ```typescript\n     * let groupRecords = this.grid.groupsRecords;\n     * ```\n     */\n    public groupsRecords: IGroupByRecord[] = [];\n\n    /**\n     * Gets/Sets whether the grouped columns should be hidden.\n     * @remarks\n     * The default value is \"false\"\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"localData\" [hideGroupedColumns]=\"true\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @Input()\n    public get hideGroupedColumns() {\n        return this._hideGroupedColumns;\n    }\n\n    public set hideGroupedColumns(value: boolean) {\n        if (value) {\n            this.groupingDiffer = this.differs.find(this.groupingExpressions).create();\n        } else {\n            this.groupingDiffer = null;\n        }\n        if (this.columnList && this.groupingExpressions) {\n            this._setGroupColsVisibility(value);\n        }\n\n        this._hideGroupedColumns = value;\n    }\n\n    /**\n     * Gets/Sets the message displayed inside the GroupBy drop area where columns can be dragged on.\n     * @remarks\n     * The grid needs to have at least one groupable column in order the GroupBy area to be displayed.\n     * @example\n     * ```html\n     * <igx-grid dropAreaMessage=\"Drop here to group!\">\n     *      <igx-column [groupable]=\"true\" field=\"ID\"></igx-column>\n     * </igx-grid>\n     * ```\n     */\n    @Input()\n    set dropAreaMessage(value: string) {\n        this._dropAreaMessage = value;\n        this.notifyChanges();\n    }\n\n    get dropAreaMessage(): string {\n        return this._dropAreaMessage || this.resourceStrings.igx_grid_groupByArea_message;\n    }\n\n    /**\n     * Gets/Sets the template that will be rendered as a GroupBy drop area.\n     * @remarks\n     * The grid needs to have at least one groupable column in order the GroupBy area to be displayed.\n     * @example\n     * ```html\n     * <igx-grid [dropAreaTemplate]=\"dropAreaRef\">\n     * </igx-grid>\n     * <ng-template #myDropArea>\n     *      <span> Custom drop area! </span>\n     * </ng-template>\n     * ```\n     */\n    @Input()\n    public dropAreaTemplate: TemplateRef<any>;\n\n    /**\n     * Emitted when columns are grouped/ungrouped.\n     * @remarks\n     * The `onGroupingDone` event would be raised only once if several columns get grouped at once by calling\n     * the `groupBy()` or `clearGrouping()` API methods and passing an array as an argument.\n     * The event arguments provide the `expressions`, `groupedColumns` and `ungroupedColumns` properties, which contain\n     * the `ISortingExpression` and the `IgxColumnComponent` related to the grouping/ungrouping operation.\n     * Please note that `groupedColumns` and `ungroupedColumns` show only the **newly** changed columns (affected by the **last**\n     * grouping/ungrouping operation), not all columns which are currently grouped/ungrouped.\n     * columns.\n     * @example\n     * ```html\n     * <igx-grid #grid [data]=\"localData\" (onGroupingDone)=\"groupingDone($event)\" [autoGenerate]=\"true\"></igx-grid>\n     * ```\n     */\n    @Output()\n    public onGroupingDone = new EventEmitter<IGroupingDoneEventArgs>();\n\n    /**\n     * @hidden @internal\n     */\n    @ContentChild(IgxGroupByRowTemplateDirective, { read: IgxGroupByRowTemplateDirective })\n    protected groupTemplate: IgxGroupByRowTemplateDirective;\n\n    /**\n     * @hidden @internal\n     */\n    @ContentChild(IgxGridDetailTemplateDirective, { read: IgxGridDetailTemplateDirective, static: false })\n    protected gridDetailsTemplate: IgxGridDetailTemplateDirective;\n\n    @ViewChildren(IgxGridGroupByRowComponent, { read: IgxGridGroupByRowComponent })\n    private _groupsRowList: QueryList<IgxGridGroupByRowComponent>;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('defaultDropArea', { read: TemplateRef, static: true })\n    public defaultDropAreaTemplate: TemplateRef<any>;\n\n    /**\n     * Gets the list of group rows.\n     * @example\n     * ```typescript\n     * const groupList = this.grid.groupsRowList;\n     * ```\n     */\n    public get groupsRowList() {\n        const res = new QueryList<any>();\n        if (!this._groupsRowList) {\n            return res;\n        }\n        const rList = this._groupsRowList.filter((item) => {\n            return item.element.nativeElement.parentElement !== null;\n        }).sort((item1, item2) => item1.index - item2.index);\n        res.reset(rList);\n        return res;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('groupArea')\n    public groupArea: ElementRef;\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('record_template', { read: TemplateRef, static: true })\n    protected recordTemplate: TemplateRef<any>;\n\n    @ViewChild('detail_template_container', { read: TemplateRef, static: true })\n    protected detailTemplateContainer: TemplateRef<any>;\n\n    /**\n     * @hidden @internal\n     */\n    @ContentChild(IgxGridDetailTemplateDirective, { read: TemplateRef, static: false })\n    public detailTemplate: TemplateRef<any> = null;\n\n    @ViewChild('group_template', { read: TemplateRef, static: true })\n    protected defaultGroupTemplate: TemplateRef<any>;\n\n    @ViewChild('summary_template', { read: TemplateRef, static: true })\n    protected summaryTemplate: TemplateRef<any>;\n\n    /**\n     * @hidden @internal\n     */\n    public getDetailsContext(rowData, index) {\n        return {\n            $implicit: rowData,\n            index: index\n        };\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public trackChanges(index, rec) {\n        if (rec.detailsData !== undefined) {\n            return rec.detailsData;\n        }\n        return rec;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public detailsViewFocused(container, rowIndex) {\n        this.navigation.activeNode ? this.navigation.activeNode.row = rowIndex :\n            this.navigation.activeNode = {row: rowIndex};\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public get hasDetails() {\n        return !!this.gridDetailsTemplate;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public getRowTemplate(rowData) {\n        if (this.isGroupByRecord(rowData)) {\n            return this.defaultGroupTemplate;\n        } else if (this.isSummaryRow(rowData)) {\n            return this.summaryTemplate;\n        }  else if (this.hasDetails && this.isDetailRecord(rowData)) {\n                return this.detailTemplateContainer;\n        } else {\n            return this.recordTemplate;\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public isDetailRecord(record) {\n        return record.detailsData !== undefined;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public isDetailActive(rowIndex) {\n        return this.navigation.activeNode ? this.navigation.activeNode.row === rowIndex : false;\n    }\n    /**\n     * @hidden @internal\n     */\n    get groupAreaHostClass(): string {\n        return this.getComponentDensityClass('igx-drop-area');\n    }\n\n    /**\n     * Gets/Sets the template reference for the group row.\n     * @example\n     * ```\n     * const groupRowTemplate = this.grid.groupRowTemplate;\n     * this.grid.groupRowTemplate = myRowTemplate;\n     * ```\n     */\n    get groupRowTemplate(): TemplateRef<any> {\n        return this._groupRowTemplate;\n    }\n\n    set groupRowTemplate(template: TemplateRef<any>) {\n        this._groupRowTemplate = template;\n        this.notifyChanges();\n    }\n\n\n    /**\n     * Gets/Sets the template reference of the `IgxGridComponent`'s group area.\n     * @example\n     * ```typescript\n     * const groupAreaTemplate = this.grid.groupAreaTemplate;\n     * this.grid.groupAreaTemplate = myAreaTemplate.\n     * ```\n     */\n    get groupAreaTemplate(): TemplateRef<any> {\n        return this._groupAreaTemplate;\n    }\n\n    set groupAreaTemplate(template: TemplateRef<any>) {\n        this._groupAreaTemplate = template;\n        this.notifyChanges();\n    }\n\n    /**\n     * Groups by a new `IgxColumnComponent` based on the provided expression, or modifies an existing one.\n     * @remarks\n     * Also allows for multiple columns to be grouped at once if an array of `ISortingExpression` is passed.\n     * The onGroupingDone event would get raised only **once** if this method gets called multiple times with the same arguments.\n     * @example\n     * ```typescript\n     * this.grid.groupBy({ fieldName: name, dir: SortingDirection.Asc, ignoreCase: false });\n     * this.grid.groupBy([\n     *     { fieldName: name1, dir: SortingDirection.Asc, ignoreCase: false },\n     *     { fieldName: name2, dir: SortingDirection.Desc, ignoreCase: true },\n     *     { fieldName: name3, dir: SortingDirection.Desc, ignoreCase: false }\n     * ]);\n     * ```\n     */\n    public groupBy(expression: IGroupingExpression | Array<IGroupingExpression>): void {\n        if (this.checkIfNoColumnField(expression)) {\n            return;\n        }\n        this.endEdit(true);\n        if (expression instanceof Array) {\n            this._gridAPI.groupBy_multiple(expression);\n        } else {\n            this._gridAPI.groupBy(expression);\n        }\n        this.notifyChanges(true);\n    }\n\n    /**\n     * Clears grouping for particular column, array of columns or all columns.\n     * @remarks\n     * Clears all grouping in the grid, if no parameter is passed.\n     * If a parameter is provided, clears grouping for a particular column or an array of columns.\n     * @example\n     * ```typescript\n     * this.grid.clearGrouping(); //clears all grouping\n     * this.grid.clearGrouping(\"ID\"); //ungroups a single column\n     * this.grid.clearGrouping([\"ID\", \"Column1\", \"Column2\"]); //ungroups multiple columns\n     * ```\n     * @param name Name of column or array of column names to be ungrouped.\n     */\n    public clearGrouping(name?: string | Array<string>): void {\n        this._gridAPI.clear_groupby(name);\n        this.notifyChanges(true);\n    }\n\n    public preventHeaderScroll(args) {\n        if (args.target.scrollLeft !== 0) {\n            (this.navigation as any).forOfDir().getScroll().scrollLeft =  args.target.scrollLeft;\n            args.target.scrollLeft = 0;\n        }\n    }\n\n    /**\n     * Returns if a group is expanded or not.\n     * @param group The group record.\n     * @example\n     * ```typescript\n     * public groupRow: IGroupByRecord;\n     * const expandedGroup = this.grid.isExpandedGroup(this.groupRow);\n     * ```\n     */\n    public isExpandedGroup(group: IGroupByRecord): boolean {\n        const state: IGroupByExpandState = this._getStateForGroupRow(group);\n        return state ? state.expanded : this.groupsExpanded;\n    }\n\n    /**\n     * Toggles the expansion state of a group.\n     * @param groupRow The group record to toggle.\n     * @example\n     * ```typescript\n     * public groupRow: IGroupByRecord;\n     * const toggleExpGroup = this.grid.toggleGroup(this.groupRow);\n     * ```\n     */\n    public toggleGroup(groupRow: IGroupByRecord) {\n        this._toggleGroup(groupRow);\n        this.notifyChanges();\n    }\n\n    /**\n     * Expands the specified group and all of its parent groups.\n     * @param groupRow The group record to fully expand.\n     * @example\n     * ```typescript\n     * public groupRow: IGroupByRecord;\n     * this.grid.fullyExpandGroup(this.groupRow);\n     * ```\n     */\n    public fullyExpandGroup(groupRow: IGroupByRecord) {\n        this._fullyExpandGroup(groupRow);\n        this.notifyChanges();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public isGroupByRecord(record: any): boolean {\n        // return record.records instance of GroupedRecords fails under Webpack\n        return record.records && record.records.length;\n    }\n\n    /**\n     * Toggles the expansion state of all group rows recursively.\n     * @example\n     * ```typescript\n     * this.grid.toggleAllGroupRows;\n     * ```\n     */\n    public toggleAllGroupRows() {\n        this.groupingExpansionState = [];\n        this.groupsExpanded = !this.groupsExpanded;\n        this.notifyChanges();\n    }\n\n    /**\n     * Returns if the `IgxGridComponent` has groupable columns.\n     * @example\n     * ```typescript\n     * const groupableGrid = this.grid.hasGroupableColumns;\n     * ```\n     */\n    get hasGroupableColumns(): boolean {\n        return this.columnList.some((col) => col.groupable && !col.columnGroup);\n    }\n\n    private _setGroupColsVisibility(value) {\n        if (this.columnList.length > 0 && !this.hasColumnLayouts) {\n            this.groupingExpressions.forEach((expr) => {\n                const col = this.getColumnByName(expr.fieldName);\n                col.hidden = value;\n            });\n        }\n    }\n\n    /**\n     * Gets if the grid's group by drop area is visible.\n     * @example\n     * ```typescript\n     * const dropVisible = this.grid.dropAreaVisible;\n     * ```\n     */\n    public get dropAreaVisible(): boolean {\n        return (this.draggedColumn && this.draggedColumn.groupable) ||\n            !this.chipsGoupingExpressions.length;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    protected _getStateForGroupRow(groupRow: IGroupByRecord): IGroupByExpandState {\n        return this._gridAPI.groupBy_get_expanded_for_group(groupRow);\n    }\n\n    /**\n     * @hidden\n     */\n    protected _toggleGroup(groupRow: IGroupByRecord) {\n        this._gridAPI.groupBy_toggle_group(groupRow);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    protected _fullyExpandGroup(groupRow: IGroupByRecord) {\n        this._gridAPI.groupBy_fully_expand_group(groupRow);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    protected _applyGrouping() {\n        this._gridAPI.sort_multiple(this._groupingExpressions);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public isColumnGrouped(fieldName: string): boolean {\n        return this.groupingExpressions.find(exp => exp.fieldName === fieldName) ? true : false;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public getContext(rowData: any, rowIndex: number, pinned?: boolean): any {\n        if (this.isDetailRecord(rowData)) {\n            const cachedData = this.childDetailTemplates.get(rowData.detailsData);\n            const rowID = this.primaryKey ? rowData.detailsData[this.primaryKey] : this.data.indexOf(rowData.detailsData);\n            if (cachedData) {\n                const view = cachedData.view;\n                const tmlpOutlet = cachedData.owner;\n                return {\n                    $implicit: rowData.detailsData,\n                    moveView: view,\n                    owner: tmlpOutlet,\n                    index: this.dataView.indexOf(rowData),\n                    templateID: 'detailRow-' + rowID\n                };\n            } else {\n                // child rows contain unique grids, hence should have unique templates\n                return {\n                    $implicit: rowData.detailsData,\n                    templateID: 'detailRow-' + rowID,\n                    index: this.dataView.indexOf(rowData)\n                };\n            }\n        }\n        return {\n            $implicit: this.isGhostRecord(rowData) ? rowData.recordRef : rowData,\n            index: this.getDataViewIndex(rowIndex, pinned),\n            templateID: this.isGroupByRecord(rowData) ? 'groupRow' : this.isSummaryRow(rowData) ? 'summaryRow' : 'dataRow',\n            disabled: this.isGhostRecord(rowData)\n        };\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public viewCreatedHandler(args) {\n        if (args.context.templateID.indexOf('detailRow') !== -1) {\n            this.childDetailTemplates.set(args.context.$implicit, args);\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public viewMovedHandler(args) {\n        if (args.context.templateID.indexOf('detailRow') !== -1) {\n            // view was moved, update owner in cache\n            const key = args.context.$implicit;\n            const cachedData = this.childDetailTemplates.get(key);\n            cachedData.owner = args.owner;\n        }\n    }\n\n\n    /**\n     * @hidden @internal\n     */\n    public get template(): TemplateRef<any> {\n        if (this.filteredData && this.filteredData.length === 0) {\n            return this.emptyGridTemplate ? this.emptyGridTemplate : this.emptyFilteredGridTemplate;\n        }\n\n        if (this.isLoading && (!this.data || this.dataLength === 0)) {\n            return this.loadingGridTemplate ? this.loadingGridTemplate : this.loadingGridDefaultTemplate;\n        }\n\n        if (this.dataLength === 0) {\n            return this.emptyGridTemplate ? this.emptyGridTemplate : this.emptyGridDefaultTemplate;\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onChipRemoved(event: IBaseChipEventArgs) {\n        this.clearGrouping(event.owner.id);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public chipsOrderChanged(event: IChipsAreaReorderEventArgs) {\n        const newGrouping = [];\n        for (let i = 0; i < event.chipsArray.length; i++) {\n            const expr = this.groupingExpressions.filter((item) => {\n                return item.fieldName === event.chipsArray[i].id;\n            })[0];\n\n            if (!this.getColumnByName(expr.fieldName).groupable) {\n                // disallow changing order if there are columns with groupable: false\n                return;\n            }\n            newGrouping.push(expr);\n        }\n        this.groupingExpansionState = [];\n        this.chipsGoupingExpressions = newGrouping;\n\n        if (event.originalEvent instanceof KeyboardEvent) {\n            // When reordered using keyboard navigation, we don't have `onMoveEnd` event.\n            this.groupingExpressions = this.chipsGoupingExpressions;\n        }\n        this.notifyChanges();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public chipsMovingEnded() {\n        this.groupingExpressions = this.chipsGoupingExpressions;\n        this.notifyChanges();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onChipClicked(event: IChipClickEventArgs) {\n        const sortingExpr = this.sortingExpressions;\n        const columnExpr = sortingExpr.find((expr) => expr.fieldName === event.owner.id);\n        columnExpr.dir = 3 - columnExpr.dir;\n        this.sort(columnExpr);\n        this.notifyChanges();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onChipKeyDown(event: IChipKeyDownEventArgs) {\n        if (event.originalEvent.key === ' ' || event.originalEvent.key === 'Spacebar' || event.originalEvent.key === 'Enter') {\n            const sortingExpr = this.sortingExpressions;\n            const columnExpr = sortingExpr.find((expr) => expr.fieldName === event.owner.id);\n            columnExpr.dir = 3 - columnExpr.dir;\n            this.sort(columnExpr);\n            this.notifyChanges();\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    protected get defaultTargetBodyHeight(): number {\n        const allItems = this.totalItemCount || this.dataLength;\n        return this.renderedRowHeight * Math.min(this._defaultTargetRecordNumber,\n            this.paging ? Math.min(allItems, this.perPage) : allItems);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    protected getGroupAreaHeight(): number {\n        return this.groupArea ? this.groupArea.nativeElement.offsetHeight : 0;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    protected scrollTo(row: any | number, column: any | number): void {\n        if (this.groupingExpressions && this.groupingExpressions.length\n            && typeof(row) !== 'number') {\n            const rowIndex = this.groupingResult.indexOf(row);\n            const groupByRecord = this.groupingMetadata[rowIndex];\n            if (groupByRecord) {\n                this._fullyExpandGroup(groupByRecord);\n            }\n        }\n\n        super.scrollTo(row, column, this.groupingFlatResult);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public get dropAreaTemplateResolved(): TemplateRef<any> {\n        if (this.dropAreaTemplate) {\n            return this.dropAreaTemplate;\n        } else {\n            return this.defaultDropAreaTemplate;\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public getGroupByChipTitle(expression: IGroupingExpression): string {\n        const column = this.getColumnByName(expression.fieldName);\n        return (column && column.header) || expression.fieldName;\n    }\n    /**\n     * @hidden @internal\n     */\n    public get iconTemplate() {\n        if (this.groupsExpanded) {\n            return this.headerExpandIndicatorTemplate || this.defaultExpandedTemplate;\n        } else {\n            return this.headerCollapseIndicatorTemplate || this.defaultCollapsedTemplate;\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public getColumnGroupable(fieldName: string): boolean {\n        const column = this.getColumnByName(fieldName);\n        return column && column.groupable;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public ngAfterContentInit() {\n        super.ngAfterContentInit();\n        if (this.allowFiltering && this.hasColumnLayouts) {\n            this.filterMode = FilterMode.excelStyleFilter;\n        }\n        if (this.groupTemplate) {\n            this._groupRowTemplate = this.groupTemplate.template;\n        }\n\n        if (this.hideGroupedColumns && this.columnList && this.groupingExpressions) {\n            this._setGroupColsVisibility(this.hideGroupedColumns);\n        }\n        this._setupNavigationService();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public ngAfterViewInit() {\n        super.ngAfterViewInit();\n        this.verticalScrollContainer.onBeforeViewDestroyed.pipe(takeUntil(this.destroy$)).subscribe((view) => {\n            const rowData = view.context.$implicit;\n            if (this.isDetailRecord(rowData)) {\n                const cachedData = this.childDetailTemplates.get(rowData.detailsData);\n                if (cachedData) {\n                    const tmlpOutlet = cachedData.owner;\n                    tmlpOutlet._viewContainerRef.detach(0);\n                }\n            }\n        });\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public ngOnInit() {\n        super.ngOnInit();\n        this.onGroupingDone.pipe(takeUntil(this.destroy$)).subscribe((args) => {\n            this.endEdit(true);\n            this.summaryService.updateSummaryCache(args);\n            this._headerFeaturesWidth = NaN;\n        });\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public ngDoCheck(): void {\n        if (this.groupingDiffer && this.columnList && !this.hasColumnLayouts) {\n            const changes = this.groupingDiffer.diff(this.groupingExpressions);\n            if (changes && this.columnList.length > 0) {\n                changes.forEachAddedItem((rec) => {\n                    const col = this.getColumnByName(rec.item.fieldName);\n                    col.hidden = true;\n                });\n                changes.forEachRemovedItem((rec) => {\n                    const col = this.getColumnByName(rec.item.fieldName);\n                    col.hidden = false;\n                });\n            }\n        }\n        super.ngDoCheck();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getSelectedData(formatters = false, headers = false): any[] {\n        if (this.groupingExpressions.length) {\n            const source = [];\n\n            const process = (record) => {\n                if (record.expression || record.summaries) {\n                    source.push(null);\n                    return;\n                }\n                source.push(record);\n\n            };\n\n            this.dataView.forEach(process);\n            return this.extractDataFromSelection(source, formatters, headers);\n        } else {\n            return super.getSelectedData(formatters, headers);\n        }\n    }\n\n    private _setupNavigationService() {\n        if (this.hasColumnLayouts) {\n            this.navigation = new IgxGridMRLNavigationService();\n            this.navigation.grid = this;\n        }\n    }\n\n    private checkIfNoColumnField(expression: IGroupingExpression | Array<IGroupingExpression> | any): boolean {\n        if (expression instanceof Array) {\n            for (const singleExpression of expression) {\n                if (!singleExpression.fieldName) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        return !expression.fieldName;\n    }\n\n}\n","import { Directive, Optional, Input, NgModule, Host, ComponentFactoryResolver, ViewContainerRef } from '@angular/core';\nimport { ISortingExpression } from '../data-operations/sorting-expression.interface';\nimport { FilteringExpressionsTree, IFilteringExpressionsTree } from '../data-operations/filtering-expressions-tree';\nimport { IFilteringExpression } from '../data-operations/filtering-expression.interface';\nimport { IgxColumnComponent } from './columns/column.component';\nimport { IGroupingExpression } from '../data-operations/grouping-expression.interface';\nimport { IPagingState } from '../data-operations/paging-state.interface';\nimport { DataType } from '../data-operations/data-util';\nimport { IgxBooleanFilteringOperand, IgxNumberFilteringOperand, IgxDateFilteringOperand,\n    IgxStringFilteringOperand, IFilteringOperation} from '../data-operations/filtering-condition';\nimport { GridSelectionRange } from './selection/selection.service';\nimport { IGroupByExpandState } from '../data-operations/groupby-expand-state.interface';\nimport { IGroupingState } from '../data-operations/groupby-state.interface';\nimport { IgxGridComponent } from './grid/grid.component';\nimport { IPinningConfig } from './grid.common';\n\nexport interface IGridState {\n    columns?: IColumnState[];\n    filtering?: IFilteringExpressionsTree;\n    advancedFiltering?: IFilteringExpressionsTree;\n    paging?: IPagingState;\n    sorting?: ISortingExpression[];\n    groupBy?: IGroupingState;\n    cellSelection?: GridSelectionRange[];\n    rowSelection?: any[];\n    columnSelection?: string[];\n    rowPinning?: any[];\n    pinningConfig?: IPinningConfig;\n}\n\nexport interface IGridStateOptions {\n    columns?: boolean;\n    filtering?: boolean;\n    advancedFiltering?: boolean;\n    sorting?: boolean;\n    groupBy?: boolean;\n    paging?: boolean;\n    cellSelection?: boolean;\n    rowSelection?: boolean;\n    columnSelection?: boolean;\n    rowPinning?: boolean;\n    pinningConfig?: boolean;\n}\n\nexport interface IColumnState {\n    pinned: boolean;\n    sortable: boolean;\n    filterable: boolean;\n    editable: boolean;\n    sortingIgnoreCase: boolean;\n    filteringIgnoreCase: boolean;\n    headerClasses: string;\n    headerGroupClasses: string;\n    maxWidth: string;\n    groupable: boolean;\n    movable: boolean;\n    hidden: boolean;\n    dataType: DataType;\n    hasSummary: boolean;\n    field: string;\n    width: any;\n    header: string;\n    resizable: boolean;\n    searchable: boolean;\n}\n\nconst COLUMNS = 'columns';\nconst FILTERING = 'filtering';\nconst ADVANCED_FILTERING = 'advancedFiltering';\nconst SORTING = 'sorting';\nconst GROUPBY = 'groupBy';\nconst PAGING = 'paging';\nconst ROW_SELECTION = 'rowSelection';\nconst ROW_PINNING = 'rowPinning';\nconst PINNING_CONFIG = 'pinningConfig';\nconst CELL_SELECTION = 'cellSelection';\nconst COLUMN_SELECTION = 'columnSelection';\n\n@Directive({\n    selector: '[igxGridState]'\n})\nexport class IgxGridStateDirective {\n\n    private _options: IGridStateOptions = {\n        columns: true,\n        filtering: true,\n        advancedFiltering: true,\n        sorting: true,\n        groupBy: true,\n        paging: true,\n        cellSelection: true,\n        rowSelection: true,\n        columnSelection: true,\n        rowPinning: true\n    };\n\n    private state: IGridState;\n\n    /**\n     *  An object with options determining if a certain feature state should be saved.\n     *\n     * ```html\n     * <igx-grid [igxGridState]=\"options\"></igx-grid>\n     * ```\n     * ```typescript\n     * public options = {selection: false, advancedFiltering: false};\n     * ```\n     */\n    @Input('igxGridState')\n    public get options(): IGridStateOptions {\n       return this._options;\n    }\n\n    public set options(value: IGridStateOptions) {\n        Object.assign(this._options, value);\n    }\n\n    /**\n     * @hidden\n     */\n    constructor(\n        @Host() @Optional() private grid: IgxGridComponent,\n        private resolver: ComponentFactoryResolver,\n        protected viewRef: ViewContainerRef) { }\n\n    /**\n     * Gets the state of a feature or states of all grid features, unless a certain feature is disabled through the `options` property.\n     * @param `serialize` determines whether the returned object will be serialized to JSON string. Default value is false.\n     * @param `feature` string or array of strings determining the features which state to retrieve. If skipped, returns all.\n     * @returns Returns the serialized to JSON string IGridState object, or the non-serialized IGridState object.\n     * ```html\n     * <igx-grid [igxGridState]=\"options\"></igx-grid>\n     * ```\n     * ```typescript\n     * @ViewChild(IgxGridStateDirective, { static: true }) public state;\n     * let state =  this.state.getState();\n     * ```\n     */\n    public getState(serialize = true, feature?: string | string[]): IGridState | string  {\n        let state: IGridState | string;\n        if (feature) {\n            state = {};\n            if (Array.isArray(feature)) {\n                feature.forEach(f => {\n                    state = Object.assign(state, this.getGridFeature(f));\n                });\n            } else {\n                state = this.getGridFeature(feature);\n            }\n        } else {\n            state = this.getAllGridFeatures();\n        }\n        if (serialize) {\n            state = JSON.stringify(state, this.stringifyCallback);\n            return state as string;\n        } else {\n            return state as IGridState;\n        }\n    }\n\n    /**\n     * Restores grid features' state based on the IGridState object passed as an argument.\n     * @param IGridState object to restore state from.\n     * @returns\n     * ```html\n     * <igx-grid [igxGridState]=\"options\"></igx-grid>\n     * ```\n     * ```typescript\n     * @ViewChild(IgxGridStateDirective, { static: true }) public state;\n     * this.state.setState(gridState);\n     * ```\n     */\n    public setState(state: IGridState | string) {\n        if (typeof state === 'string') {\n            state = JSON.parse(state);\n        }\n        this.state = state as IGridState;\n        this.restoreGridState();\n        this.grid.cdr.detectChanges();\n    }\n\n    /**\n     * The method that calls corresponding methods to restore feature from this.state object.\n     */\n    private restoreGridState() {\n        for (const key of Object.keys(this.state)) {\n            if (this.state[key]) {\n                this.restoreFeature(key, this.state[key]);\n            }\n        }\n    }\n\n    /**\n     * Restores the state of a feature.\n     */\n    private restoreFeature(feature: string, state: IColumnState[] | IPagingState | ISortingExpression[] |\n        IGroupingState | FilteringExpressionsTree | GridSelectionRange[] | any[]) {\n        switch (feature) {\n            case COLUMNS: {\n               this.restoreColumns(state as IColumnState[]);\n               break;\n            }\n            case FILTERING: {\n                this.restoreFiltering(state as FilteringExpressionsTree);\n                break;\n            }\n            case ADVANCED_FILTERING: {\n                this.restoreAdvancedFiltering(state as FilteringExpressionsTree);\n                break;\n            }\n            case SORTING: {\n                this.restoreSorting(state as ISortingExpression[]);\n                break;\n             }\n             case GROUPBY: {\n                this.restoreGroupBy(state as IGroupingState);\n                break;\n             }\n             case PAGING: {\n                this.restorePaging(state as IPagingState);\n                break;\n              }\n              case ROW_SELECTION: {\n                this.restoreRowSelection(state as any[]);\n                break;\n              }\n              case ROW_PINNING: {\n                this.restoreRowPinning(state as any[]);\n                break;\n              }\n              case PINNING_CONFIG: {\n                this.restorePinningConfig(state as IPinningConfig);\n                break;\n              }\n              case CELL_SELECTION: {\n                this.restoreCellSelection(state as GridSelectionRange[]);\n                break;\n              }\n              case COLUMN_SELECTION: {\n                this.restoreColumnSelection(state as string[]);\n                break;\n              }\n         }\n    }\n\n    /**\n     * Returns an object containing all grid features state.\n     */\n    private getAllGridFeatures(): IGridState {\n        let gridState: IGridState = {};\n\n        for (const key of Object.keys(this.options)) {\n            if (this.options[key]) {\n                const feature = this.getGridFeature(key);\n                gridState =  Object.assign(gridState, feature);\n            }\n        }\n\n        gridState = Object.assign({}, gridState);\n        return gridState;\n    }\n\n    /**\n     * Restores an object containing the state for a grid feature.\n     * `serialize` param determines whether the returned object will be serialized to a JSON string. Default value is false.,\n     */\n    private getGridFeature(feature: string): IGridState {\n        const state: IGridState = {};\n        switch (feature) {\n            case COLUMNS: {\n               Object.assign(state, this.getColumns());\n               break;\n            }\n            case FILTERING: {\n                Object.assign(state, this.getFiltering());\n                break;\n            }\n            case ADVANCED_FILTERING: {\n                Object.assign(state, this.getAdvancedFiltering());\n                break;\n            }\n            case SORTING: {\n                Object.assign(state, this.getSorting());\n                break;\n             }\n             case GROUPBY: {\n                Object.assign(state, this.getGroupBy());\n                break;\n             }\n             case PAGING: {\n                Object.assign(state, this.getPaging());\n                break;\n              }\n              case ROW_SELECTION: {\n                Object.assign(state, this.getRowSelection());\n                break;\n              }\n              case ROW_PINNING: {\n                Object.assign(state, this.getRowPinning());\n                break;\n              }\n              case PINNING_CONFIG: {\n                Object.assign(state, this.getPinningConfig());\n                break;\n              }\n              case CELL_SELECTION: {\n                Object.assign(state, this.getCellSelection());\n                break;\n              }\n              case COLUMN_SELECTION: {\n                Object.assign(state, this.getColumnSelection());\n                break;\n              }\n         }\n         return state;\n    }\n\n    /**\n     * Helper method that creates a new array with the current grid columns.\n     */\n    private getColumns(): IGridState {\n        const gridColumns: IColumnState[] = this.grid.columns.sort(this.sortByVisibleIndex).map((c) => {\n            return {\n                pinned: c.pinned,\n                sortable: c.sortable,\n                filterable: c.filterable,\n                editable: c.editable,\n                sortingIgnoreCase: c.sortingIgnoreCase,\n                filteringIgnoreCase: c.filteringIgnoreCase,\n                headerClasses: c.headerClasses,\n                headerGroupClasses: c.headerGroupClasses,\n                maxWidth: c.maxWidth,\n                groupable: c.groupable,\n                movable: c.movable,\n                hidden: c.hidden,\n                dataType: c.dataType,\n                hasSummary: c.hasSummary,\n                field: c.field,\n                width: c.width,\n                header: c.header,\n                resizable: c.resizable,\n                searchable: c.searchable\n            };\n        });\n        return { columns: gridColumns };\n    }\n\n    private getFiltering(): IGridState {\n        const filteringState = this.grid.filteringExpressionsTree;\n        return { filtering: filteringState };\n    }\n\n    private getAdvancedFiltering(): IGridState {\n        const advancedFiltering = this.grid.advancedFilteringExpressionsTree;\n        return { advancedFiltering: advancedFiltering };\n    }\n\n    private getPaging(): IGridState {\n        const pagingState = this.grid.pagingState;\n        return { paging: pagingState };\n    }\n\n    private getSorting(): IGridState {\n        const sortingState = this.grid.sortingExpressions;\n        sortingState.forEach(s => {\n            delete s.strategy;\n        });\n        return { sorting: sortingState };\n    }\n\n    private getGroupBy(): IGridState {\n        const groupingExpressions = this.grid.groupingExpressions;\n        groupingExpressions.forEach(expr => {\n            delete expr.strategy;\n        });\n        const expansionState = this.grid.groupingExpansionState;\n        const groupsExpanded = this.grid.groupsExpanded;\n\n        return { groupBy: { expressions: groupingExpressions, expansion: expansionState, defaultExpanded: groupsExpanded}  };\n    }\n\n    private getRowSelection(): IGridState {\n        const selection = this.grid.selectedRows();\n        return { rowSelection: selection };\n    }\n\n    private getRowPinning(): IGridState {\n        const pinned = this.grid.pinnedRows.map(x => x.rowID);\n        return { rowPinning: pinned };\n    }\n\n    private getPinningConfig(): IGridState {\n        return { pinningConfig: this.grid.pinning };\n    }\n\n    private getColumnSelection(): IGridState {\n        const selection = this.grid.selectedColumns().map(c => c.field);\n        return { columnSelection: selection };\n    }\n\n    private getCellSelection(): IGridState {\n        const selection = this.grid.getSelectedRanges().map(range => {\n            return { rowStart: range.rowStart, rowEnd: range.rowEnd, columnStart: range.columnStart, columnEnd: range.columnEnd };\n        });\n        return { cellSelection: selection };\n    }\n\n    /**\n     * Restores the grid columns by modifying the `columnList` collection of the grid.\n     */\n    private restoreColumns(columnsState: IColumnState[]): void {\n        const newColumns = [];\n        const factory = this.resolver.resolveComponentFactory(IgxColumnComponent);\n        columnsState.forEach((colState) => {\n            const ref = factory.create(this.viewRef.injector);\n            Object.assign(ref.instance, colState);\n            ref.changeDetectorRef.detectChanges();\n            newColumns.push(ref.instance);\n        });\n\n        this.grid.columnList.reset(newColumns);\n        this.grid.columnList.notifyOnChanges();\n    }\n\n    private sortByVisibleIndex(colA: IgxColumnComponent, colB: IgxColumnComponent) {\n          const a = colA.visibleIndex, b = colB.visibleIndex;\n          return a > b ? 1 : a < b ? -1 : 0;\n    }\n\n    /**\n     * Restores the grid filtering state, i.e. sets the `filteringExpressionsTree` property value.\n     */\n    private restoreFiltering(state: FilteringExpressionsTree) {\n        const filterTree = this.createExpressionsTreeFromObject(state);\n        this.grid.filteringExpressionsTree = filterTree as FilteringExpressionsTree;\n    }\n\n    /**\n     * Restores the grid advanced filtering state, i.e. sets the `advancedFilteringExpressionsTree` property value.\n     */\n    private restoreAdvancedFiltering(state: FilteringExpressionsTree) {\n        const advFilterTree = this.createExpressionsTreeFromObject(state);\n        this.grid.advancedFilteringExpressionsTree = advFilterTree as FilteringExpressionsTree;\n    }\n\n    /**\n     * Restores the grid sorting state, i.e. sets the `sortingExpressions` property value.\n     */\n    private restoreSorting(state: ISortingExpression[]) {\n        this.grid.sortingExpressions = state;\n    }\n\n    /**\n     * Restores the grid grouping state, i.e. sets the `groupbyExpressions` property value.\n     */\n    private restoreGroupBy(state: IGroupingState) {\n        (this.grid as IgxGridComponent).groupingExpressions = state.expressions as IGroupingExpression[];\n        if ((this.grid as IgxGridComponent).groupsExpanded !== state.defaultExpanded) {\n            this.grid.toggleAllGroupRows();\n        } else {\n            (this.grid as IgxGridComponent).groupingExpansionState = state.expansion as IGroupByExpandState[];\n        }\n    }\n\n    /**\n     * Restores the grid paging state, i.e. sets the `perPage` property value and paginate to index.\n     */\n    private restorePaging(state: IPagingState) {\n        if (this.grid.perPage !== state.recordsPerPage) {\n            this.grid.perPage = state.recordsPerPage;\n            this.grid.cdr.detectChanges();\n        }\n        this.grid.page = state.index;\n    }\n\n    private restoreRowSelection(state: any[]) {\n        this.grid.selectRows(state);\n    }\n\n    private restoreRowPinning(state: any[]) {\n        // clear current state.\n        this.grid.pinnedRows.forEach(row => row.unpin());\n        state.forEach(rowID => this.grid.pinRow(rowID));\n    }\n\n    private restorePinningConfig(state: IPinningConfig) {\n       this.grid.pinning = state;\n    }\n\n    private restoreColumnSelection(state: string[]) {\n        this.grid.selectColumns(state);\n    }\n\n    private restoreCellSelection(state: GridSelectionRange[]) {\n        state.forEach(r => {\n            const range = { rowStart: r.rowStart, rowEnd: r.rowEnd, columnStart: r.columnStart, columnEnd: r.columnEnd};\n            this.grid.selectRange(range);\n        });\n    }\n\n    /**\n     * This method builds a FilteringExpressionsTree from a provided object.\n     */\n    private createExpressionsTreeFromObject(exprTreeObject: FilteringExpressionsTree): FilteringExpressionsTree {\n        if (!exprTreeObject || !exprTreeObject.filteringOperands) {\n            return null;\n        }\n\n        const expressionsTree = new FilteringExpressionsTree(exprTreeObject.operator, exprTreeObject.fieldName);\n\n        for (const item of exprTreeObject.filteringOperands) {\n            // Check if item is an expressions tree or a single expression.\n            if ((item as FilteringExpressionsTree).filteringOperands) {\n                const subTree = this.createExpressionsTreeFromObject((item as FilteringExpressionsTree));\n                expressionsTree.filteringOperands.push(subTree);\n            } else {\n                const expr = item as IFilteringExpression;\n                let dataType: string;\n                if (this.grid.columnList.length > 0) {\n                    dataType = this.grid.columnList.find(c => c.field === expr.fieldName).dataType;\n                } else {\n                    dataType = this.state[COLUMNS].find(c => c.field === expr.fieldName).dataType;\n                }\n                // when ESF, values are stored in Set.\n                // First those values are converted to an array before returning string in the stringifyCallback\n                // now we need to convert those back to Set\n                if (Array.isArray(expr.searchVal)) {\n                    expr.searchVal = new Set(expr.searchVal);\n                } else {\n                    expr.searchVal = (dataType === 'date') ? new Date(Date.parse(expr.searchVal)) : expr.searchVal;\n                }\n                expr.condition = this.generateFilteringCondition(dataType, expr.condition.name);\n                expressionsTree.filteringOperands.push(expr);\n            }\n        }\n\n        return expressionsTree;\n    }\n\n    /**\n     * Returns the filtering logic function for a given dataType and condition (contains, greaterThan, etc.)\n     */\n    private generateFilteringCondition(dataType: string, name: string): IFilteringOperation {\n        let filters;\n        switch (dataType) {\n            case DataType.Boolean:\n                filters = IgxBooleanFilteringOperand.instance();\n                break;\n            case DataType.Number:\n                filters = IgxNumberFilteringOperand.instance();\n                break;\n            case DataType.Date:\n                filters = IgxDateFilteringOperand.instance();\n                break;\n            case DataType.String:\n            default:\n                filters = IgxStringFilteringOperand.instance();\n                break;\n        }\n        return filters.condition(name);\n    }\n\n    private stringifyCallback(key: string, val: any) {\n        if (key === 'searchVal' && val instanceof Set) {\n            return Array.from(val);\n        }\n        return val;\n    }\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [IgxGridStateDirective],\n    exports: [IgxGridStateDirective]\n})\nexport class IgxGridStateModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IgxButtonModule } from '../../directives/button/button.directive';\nimport { IgxDatePickerModule } from '../../date-picker/date-picker.component';\nimport { IgxIconModule } from '../../icon/public_api';\nimport { IgxRippleModule } from '../../directives/ripple/ripple.directive';\nimport { IgxInputGroupModule } from '../../input-group/public_api';\nimport { IgxFocusModule } from '../../directives/focus/focus.directive';\nimport { IgxToggleModule } from '../../directives/toggle/toggle.directive';\nimport { IgxForOfModule } from '../../directives/for-of/for_of.directive';\nimport { IgxTemplateOutletModule } from '../../directives/template-outlet/template_outlet.directive';\nimport { IgxTextHighlightModule } from '../../directives/text-highlight/text-highlight.directive';\nimport { IgxTextSelectionModule } from '../../directives/text-selection/text-selection.directive';\nimport { IgxCheckboxModule } from '../../checkbox/checkbox.component';\nimport { IgxBadgeModule } from '../../badge/badge.component';\nimport { IgxChipsModule } from '../../chips/chips.module';\nimport { IgxDragDropModule } from '../../directives/drag-drop/drag-drop.directive';\nimport { IgxButtonGroupModule } from '../../buttonGroup/buttonGroup.component';\nimport { IgxProgressBarModule } from '../../progressbar/progressbar.component';\nimport { IgxSelectModule } from '../../select/select.module';\nimport { IgxDropDownModule } from '../../drop-down/public_api';\nimport { IgxGridStateModule } from '../state.directive';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IgxButtonModule,\n        IgxDatePickerModule,\n        IgxIconModule,\n        IgxRippleModule,\n        IgxInputGroupModule,\n        IgxFocusModule,\n        IgxToggleModule,\n        IgxForOfModule,\n        IgxTemplateOutletModule,\n        IgxTextHighlightModule,\n        IgxTextSelectionModule,\n        IgxCheckboxModule,\n        IgxBadgeModule,\n        IgxChipsModule,\n        IgxDragDropModule,\n        IgxDropDownModule,\n        IgxButtonGroupModule,\n        IgxProgressBarModule,\n        IgxSelectModule,\n        IgxGridStateModule\n    ],\n    exports: [\n        CommonModule,\n        FormsModule,\n        IgxButtonModule,\n        IgxDatePickerModule,\n        IgxIconModule,\n        IgxRippleModule,\n        IgxInputGroupModule,\n        IgxFocusModule,\n        IgxToggleModule,\n        IgxForOfModule,\n        IgxTemplateOutletModule,\n        IgxTextHighlightModule,\n        IgxGridStateModule,\n        IgxTextSelectionModule,\n        IgxCheckboxModule,\n        IgxBadgeModule,\n        IgxChipsModule,\n        IgxDragDropModule,\n        IgxDropDownModule,\n        IgxButtonGroupModule,\n        IgxProgressBarModule,\n        IgxSelectModule\n    ]\n})\nexport class IgxGridSharedModules {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { GridBaseAPIService } from '../api.service';\nimport { IgxGridBaseDirective } from '../grid-base.directive';\nimport { GridType } from '../common/grid.interface';\n\n@Pipe({\n    name: 'igxGridSummaryDataPipe',\n    pure: true\n})\nexport class IgxSummaryDataPipe implements PipeTransform {\n\n    constructor(private gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>) { }\n\n    transform(id: string, trigger: number = 0) {\n        const summaryService = this.gridAPI.grid.summaryService;\n        return summaryService.calculateSummaries(\n            summaryService.rootSummaryID,\n            this.gridAPI.get_summary_data()\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { IgxSummaryCellComponent } from './summary-cell.component';\nimport { IgxSummaryRowComponent } from './summary-row.component';\nimport { IgxSummaryDataPipe } from './grid-root-summary.pipe';\nimport { IgxGridSharedModules } from '../common/shared.module';\nimport { IgxGridPipesModule } from '../common/grid-pipes.module';\n\n\n@NgModule({\n    declarations: [\n        IgxSummaryCellComponent,\n        IgxSummaryRowComponent,\n        IgxSummaryDataPipe\n    ],\n    imports: [\n        IgxGridPipesModule,\n        IgxGridSharedModules\n    ],\n    exports: [\n        IgxSummaryCellComponent,\n        IgxSummaryRowComponent,\n        IgxSummaryDataPipe\n    ]\n})\nexport class IgxGridSummaryModule {}\n","import { NgModule } from '@angular/core';\nimport { IgxGridSharedModules } from '../common/shared.module';\nimport { IgxColumnHidingItemDirective } from './column-hiding-item.directive';\nimport { IgxColumnHidingComponent } from './column-hiding.component';\n\n\n@NgModule({\n    declarations: [\n        IgxColumnHidingComponent,\n        IgxColumnHidingItemDirective\n    ],\n    imports: [\n        IgxGridSharedModules\n    ],\n    exports: [\n        IgxColumnHidingComponent\n    ],\n})\nexport class IgxColumnHidingModule {}\n","import { NgModule } from '@angular/core';\nimport { IgxColumnPinningItemDirective } from './pinning.directive';\nimport { IgxColumnPinningComponent } from './column-pinning.component';\nimport { IgxGridSharedModules } from '../common/shared.module';\n\n\n@NgModule({\n    declarations: [\n        IgxColumnPinningItemDirective,\n        IgxColumnPinningComponent\n    ],\n    imports: [\n        IgxGridSharedModules\n    ],\n    exports: [\n        IgxColumnPinningComponent\n    ]\n})\nexport class IgxColumnPinningModule {}\n","import { NgModule } from '@angular/core';\nimport { IgxGridToolbarComponent } from './grid-toolbar.component';\nimport { IgxGridToolbarCustomContentDirective } from './toolbar.directive';\nimport { IgxGridSharedModules } from '../common/shared.module';\nimport { IgxColumnHidingModule } from '../hiding/hiding.module';\nimport { IgxColumnPinningModule } from '../pinning/pinning.module';\n\n\n@NgModule({\n    declarations: [\n        IgxGridToolbarComponent,\n        IgxGridToolbarCustomContentDirective\n    ],\n    imports: [\n        IgxGridSharedModules,\n        IgxColumnHidingModule,\n        IgxColumnPinningModule\n    ],\n    exports: [\n        IgxGridToolbarComponent,\n        IgxGridToolbarCustomContentDirective\n    ]\n})\nexport class IgxGridToolbarModule {}\n","import {\n    AfterContentInit,\n    Component,\n    ChangeDetectionStrategy,\n    forwardRef,\n    Input\n} from '@angular/core';\nimport { IgxColumnComponent } from './column.component';\nimport { IgxColumnGroupComponent } from './column-group.component';\n\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: IgxColumnComponent, useExisting: forwardRef(() => IgxColumnLayoutComponent) }],\n    selector: 'igx-column-layout',\n    template: ``\n})\nexport class IgxColumnLayoutComponent extends IgxColumnGroupComponent implements AfterContentInit {\n    public childrenVisibleIndexes = [];\n    /**\n     * Gets the width of the column layout.\n     * ```typescript\n     * let columnGroupWidth = this.columnGroup.width;\n     * ```\n     * @memberof IgxColumnGroupComponent\n     */\n    get width(): any {\n        const width = this.getFilledChildColumnSizes(this.children).reduce((acc, val) => acc + parseInt(val, 10), 0);\n        return width;\n    }\n\n    set width(val: any) { }\n\n    get columnLayout() {\n        return true;\n    }\n\n    /**\n     * @hidden\n     */\n    public getCalcWidth(): any {\n        let borderWidth = 0;\n\n        if (this.headerGroup && this.headerGroup.hasLastPinnedChildColumn) {\n            const headerStyles = this.grid.document.defaultView.getComputedStyle(this.headerGroup.element.nativeElement.children[0]);\n            borderWidth = parseInt(headerStyles.borderRightWidth, 10);\n        }\n\n        return super.getCalcWidth() + borderWidth;\n    }\n\n    /**\n     * Gets the column visible index.\n     * If the column is not visible, returns `-1`.\n     * ```typescript\n     * let visibleColumnIndex =  this.column.visibleIndex;\n     * ```\n     * @memberof IgxColumnComponent\n     */\n    get visibleIndex(): number {\n        if (!isNaN(this._vIndex)) {\n            return this._vIndex;\n        }\n\n        const unpinnedColumns = this.grid.unpinnedColumns.filter(c => c.columnLayout && !c.hidden);\n        const pinnedColumns = this.grid.pinnedColumns.filter(c => c.columnLayout && !c.hidden);\n        let vIndex = -1;\n\n        if (!this.pinned) {\n            const indexInCollection = unpinnedColumns.indexOf(this);\n            vIndex = indexInCollection === -1 ? -1 : pinnedColumns.length + indexInCollection;\n        } else {\n            vIndex = pinnedColumns.indexOf(this);\n        }\n        this._vIndex = vIndex;\n        return vIndex;\n    }\n\n    /*\n     * Gets whether the column layout is hidden.\n     * ```typescript\n     * let isHidden = this.columnGroup.hidden;\n     * ```\n     * @memberof IgxColumnGroupComponent\n     */\n    @Input()\n    get hidden() {\n        return this._hidden;\n    }\n\n    /**\n     * Sets the column layout hidden property.\n     * ```typescript\n     * <igx-column-layout [hidden] = \"true\"></igx-column->\n     * ```\n     * @memberof IgxColumnGroupComponent\n     */\n    set hidden(value: boolean) {\n        this._hidden = value;\n        this.children.forEach(child => child.hidden = value);\n        if (this.grid && this.grid.columns && this.grid.columns.length > 0) {\n            // reset indexes in case columns are hidden/shown runtime\n            this.grid.columns.filter(x => x.columnGroup).forEach(x => x.populateVisibleIndexes());\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    ngAfterContentInit() {\n        super.ngAfterContentInit();\n        if (!this.hidden) {\n            this.hidden = this.allChildren.some(x => x.hidden);\n        } else {\n            this.children.forEach(child => child.hidden = this.hidden);\n        }\n\n        this.children.forEach(child => {\n            child.movable = false;\n        });\n    }\n\n    /*\n     * Gets whether the group contains the last pinned child column of the column layout.\n     * ```typescript\n     * let columsHasLastPinned = this.columnLayout.hasLastPinnedChildColumn;\n     * ```\n     * @memberof IgxColumnLayoutComponent\n     */\n    get hasLastPinnedChildColumn() {\n        return this.children.some(child => child.isLastPinned);\n    }\n\n    /*\n     * Gets whether the group contains the first pinned child column of the column layout.\n     * ```typescript\n     * let hasFirstPinnedChildColumn = this.columnLayout.hasFirstPinnedChildColumn;\n     * ```\n     * @memberof IgxColumnLayoutComponent\n     */\n    get hasFirstPinnedChildColumn() {\n        return this.children.some(child => child.isFirstPinned);\n    }\n\n    /**\n     * @hidden\n     */\n    public populateVisibleIndexes() {\n        this.childrenVisibleIndexes = [];\n        const grid = this.gridAPI.grid;\n        const columns = grid && grid.pinnedColumns && grid.unpinnedColumns ? grid.pinnedColumns.concat(grid.unpinnedColumns) : [];\n        const orderedCols = columns\n            .filter(x => !x.columnGroup && !x.hidden)\n            .sort((a, b) => a.rowStart - b.rowStart || columns.indexOf(a.parent) - columns.indexOf(b.parent) || a.colStart - b.colStart);\n        this.children.forEach(child => {\n            const rs = child.rowStart || 1;\n            let vIndex = 0;\n            // filter out all cols with larger rowStart\n            const cols = orderedCols.filter(c =>\n                !c.columnGroup && (c.rowStart || 1) <= rs);\n            vIndex = cols.indexOf(child);\n            this.childrenVisibleIndexes.push({ column: child, index: vIndex });\n        });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { IgxColumnComponent } from './column.component';\nimport { IgxColumnGroupComponent } from './column-group.component';\nimport { IgxColumnLayoutComponent } from './column-layout.component';\nimport {\n    IgxCellEditorTemplateDirective,\n    IgxCellFooterTemplateDirective,\n    IgxCellHeaderTemplateDirective,\n    IgxCellTemplateDirective,\n    IgxCollapsibleIndicatorTemplateDirective,\n    IgxFilterCellTemplateDirective\n} from './templates.directive';\n\n\n@NgModule({\n    declarations: [\n        IgxFilterCellTemplateDirective,\n        IgxCellTemplateDirective,\n        IgxCellHeaderTemplateDirective,\n        IgxCellFooterTemplateDirective,\n        IgxCellEditorTemplateDirective,\n        IgxCollapsibleIndicatorTemplateDirective,\n        IgxColumnComponent,\n        IgxColumnGroupComponent,\n        IgxColumnLayoutComponent\n    ],\n    entryComponents: [\n        IgxColumnComponent,\n        IgxColumnGroupComponent,\n        IgxColumnLayoutComponent\n    ],\n    exports: [\n        IgxFilterCellTemplateDirective,\n        IgxCellTemplateDirective,\n        IgxCellHeaderTemplateDirective,\n        IgxCellFooterTemplateDirective,\n        IgxCellEditorTemplateDirective,\n        IgxCollapsibleIndicatorTemplateDirective,\n        IgxColumnComponent,\n        IgxColumnGroupComponent,\n        IgxColumnLayoutComponent\n    ]\n})\nexport class IgxGridColumnModule {}\n","import { NgModule } from '@angular/core';\nimport { IgxGridFilteringCellComponent } from './grid-filtering-cell.component';\nimport { IgxGridFilteringRowComponent } from './grid-filtering-row.component';\nimport { IgxGridSharedModules } from '../../common/shared.module';\nimport { IgxGridPipesModule } from '../../common/grid-pipes.module';\n\n\n@NgModule({\n    declarations: [\n        IgxGridFilteringCellComponent,\n        IgxGridFilteringRowComponent\n    ],\n    imports: [\n        IgxGridSharedModules,\n        IgxGridPipesModule\n    ],\n    exports: [\n        IgxGridFilteringCellComponent,\n        IgxGridFilteringRowComponent\n    ]\n})\nexport class IgxGridFilteringModule {}\n","import { NgModule } from '@angular/core';\nimport { IgxGridHeaderComponent } from './grid-header.component';\nimport { IgxGridHeaderGroupComponent } from './grid-header-group.component';\nimport { IgxGridSharedModules } from '../common/shared.module';\nimport { IgxColumnMovingModule } from '../moving/moving.module';\nimport { IgxGridFilteringModule } from '../filtering/base/filtering.module';\nimport { IgxGridResizingModule } from '../resizing/resize.module';\n\n\n@NgModule({\n    declarations: [\n        IgxGridHeaderComponent,\n        IgxGridHeaderGroupComponent\n    ],\n    imports: [\n        IgxGridSharedModules,\n        IgxGridFilteringModule,\n        IgxColumnMovingModule,\n        IgxGridResizingModule\n    ],\n    exports: [\n        IgxGridHeaderComponent,\n        IgxGridHeaderGroupComponent\n    ]\n})\nexport class IgxGridHeadersModule {}\n","import { NgModule } from '@angular/core';\nimport { IgxGridCellComponent } from './cell.component';\nimport { IgxGridFooterComponent } from './grid-footer/grid-footer.component';\nimport {\n    IgxGridBodyDirective\n} from './grid.common';\nimport { IgxGridTransaction, IgxGridBaseDirective } from './grid-base.directive';\nimport { IgxBaseTransactionService } from '../services/transaction/base-transaction';\nimport {\n    IgxRowEditTemplateDirective,\n    IgxRowEditActionsDirective,\n    IgxRowEditTextDirective,\n    IgxRowEditTabStopDirective\n} from './grid.rowEdit.directive';\nimport { IgxPaginatorModule } from '../paginator/paginator.component';\nimport { IgxGridPipesModule } from './common/grid-pipes.module';\nimport { IgxGridExcelStyleFilteringModule } from './filtering/excel-style/grid.excel-style-filtering.module';\nimport { IgxRowDragModule } from './row-drag.directive';\nimport { IgxAdvancedFilteringDialogComponent } from './filtering/advanced-filtering/advanced-filtering-dialog.component';\nimport { IgxGridSelectionModule } from './selection/selection.module';\nimport { IgxGridResizingModule } from './resizing/resize.module';\nimport { IgxColumnMovingModule } from './moving/moving.module';\nimport { IgxGridSharedModules } from './common/shared.module';\nimport { IgxGridSummaryModule } from './summaries/summary.module';\nimport { IgxGridToolbarModule } from './toolbar/toolbar.module';\nimport { IgxColumnHidingModule } from './hiding/hiding.module';\nimport { IgxColumnPinningModule } from './pinning/pinning.module';\nimport { IgxGridColumnModule } from './columns/column.module';\nimport { IgxGridHeadersModule } from './headers/headers.module';\nimport { IgxGridFilteringModule } from './filtering/base/filtering.module';\nimport { IgxRowDirective } from './row.directive';\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [\n        IgxGridBaseDirective,\n        IgxRowDirective,\n        IgxGridCellComponent,\n        IgxRowEditTemplateDirective,\n        IgxRowEditActionsDirective,\n        IgxRowEditTextDirective,\n        IgxRowEditTabStopDirective,\n        IgxGridBodyDirective,\n        IgxGridFooterComponent,\n        IgxAdvancedFilteringDialogComponent\n    ],\n    entryComponents: [\n        IgxAdvancedFilteringDialogComponent\n    ],\n    exports: [\n        IgxGridCellComponent,\n        IgxRowEditTemplateDirective,\n        IgxRowEditActionsDirective,\n        IgxRowEditTextDirective,\n        IgxRowEditTabStopDirective,\n        IgxGridBodyDirective,\n        IgxColumnHidingModule,\n        IgxColumnPinningModule,\n        IgxGridColumnModule,\n        IgxGridHeadersModule,\n        IgxGridPipesModule,\n        IgxGridFilteringModule,\n        IgxGridExcelStyleFilteringModule,\n        IgxRowDragModule,\n        IgxPaginatorModule,\n        IgxGridFooterComponent,\n        IgxGridResizingModule,\n        IgxColumnMovingModule,\n        IgxGridSelectionModule,\n        IgxGridSummaryModule,\n        IgxGridToolbarModule,\n        IgxAdvancedFilteringDialogComponent,\n        IgxGridSharedModules\n    ],\n    imports: [\n        IgxGridColumnModule,\n        IgxGridHeadersModule,\n        IgxColumnMovingModule,\n        IgxGridResizingModule,\n        IgxColumnPinningModule,\n        IgxGridSelectionModule,\n        IgxGridSummaryModule,\n        IgxGridToolbarModule,\n        IgxColumnHidingModule,\n        IgxGridPipesModule,\n        IgxGridFilteringModule,\n        IgxGridExcelStyleFilteringModule,\n        IgxRowDragModule,\n        IgxPaginatorModule,\n        IgxGridSharedModules\n    ],\n    providers: [\n        { provide: IgxGridTransaction, useClass: IgxBaseTransactionService }\n    ]\n})\nexport class IgxGridCommonModule { }\n","import { Directive, Inject } from '@angular/core';\nimport { IgxActionStripComponent } from '../action-strip.component';\nimport { IgxRowDirective } from '../../grids/public_api';\n\n@Directive({\n    selector: '[igxGridActionsBase]'\n})\nexport class IgxGridActionsBaseDirective {\n    constructor(@Inject(IgxActionStripComponent) protected strip: IgxActionStripComponent) { }\n\n    /**\n     * Getter to be used in template\n     * @hidden\n     * @internal\n     */\n    get isRowContext(): boolean {\n        return this.isRow(this.strip.context);\n    }\n\n    /**\n     * Check if the param is a row from a grid\n     * @hidden\n     * @internal\n     * @param context\n     */\n    protected isRow(context): context is IgxRowDirective<any> {\n        return context && context instanceof IgxRowDirective;\n    }\n}\n","import { Component, HostBinding } from '@angular/core';\nimport { IgxGridActionsBaseDirective } from './grid-actions-base.directive';\nimport { showMessage } from '../../core/deprecateDecorators';\n\n@Component({\n    selector: 'igx-grid-editing-actions',\n    templateUrl: 'grid-editing-actions.component.html',\n    providers: [{ provide: IgxGridActionsBaseDirective, useExisting: IgxGridEditingActionsComponent }]\n})\n\nexport class IgxGridEditingActionsComponent extends IgxGridActionsBaseDirective {\n    /**\n     * Host `class.igx-action-strip` binding.\n     * @hidden\n     * @internal\n     */\n    @HostBinding('class.igx-action-strip__editing-actions')\n    public cssClass = 'igx-action-strip__editing-actions';\n\n    private isMessageShown = false;\n\n    /**\n     * Enter row or cell edit mode depending the grid rowEditable option\n     * @example\n     * ```typescript\n     * this.gridEditingActions.startEdit();\n     * ```\n     */\n    public startEdit(event?): void {\n        if (event) {\n            event.stopPropagation();\n        }\n        if (!this.isRow(this.strip.context)) {\n            return;\n        }\n        const row = this.strip.context;\n        const firstEditable = row.cells.filter(cell => cell.editable)[0];\n        const grid = row.grid;\n        if (!grid.hasEditableColumns) {\n            this.isMessageShown = showMessage(\n                'The grid should be editable in order to use IgxGridEditingActionsComponent',\n                this.isMessageShown);\n                return;\n        }\n        // be sure row is in view\n        if (grid.rowList.filter(r => r === row).length !== 0) {\n            grid.crudService.begin(firstEditable);\n        }\n        this.strip.hide();\n    }\n\n    /**\n     * Delete a row according to the context\n     * @example\n     * ```typescript\n     * this.gridEditingActions.deleteRow();\n     * ```\n     */\n    public deleteRow(event?): void {\n        if (event) {\n            event.stopPropagation();\n        }\n        if (!this.isRow(this.strip.context)) {\n            return;\n        }\n        const context = this.strip.context;\n        const grid = context.grid;\n        grid.deleteRow(context.rowID);\n        this.strip.hide();\n    }\n\n    /**\n     * Getter if the row is disabled\n     * @hidden\n     * @internal\n     */\n    get disabled(): boolean {\n        if (!this.isRow(this.strip.context)) {\n            return;\n        }\n        return this.strip.context.disabled;\n    }\n}\n","import { Component, HostBinding } from '@angular/core';\nimport { IgxGridActionsBaseDirective } from './grid-actions-base.directive';\n\n@Component({\n    selector: 'igx-grid-pinning-actions',\n    templateUrl: 'grid-pinning-actions.component.html',\n    providers: [{ provide: IgxGridActionsBaseDirective, useExisting: IgxGridPinningActionsComponent }]\n})\n\nexport class IgxGridPinningActionsComponent extends IgxGridActionsBaseDirective {\n    /**\n     * Host `class.igx-action-strip` binding.\n     * @hidden\n     * @internal\n     */\n    @HostBinding('class.igx-action-strip__pining-actions')\n    public cssClass = 'igx-action-strip__pining-actions';\n\n    private iconsRendered = false;\n\n    /**\n     * Getter to know if the row is pinned\n     * @hidden\n     * @internal\n     */\n    get pinned(): boolean {\n        if (!this.isRow(this.strip.context)) {\n            return;\n        }\n        const context = this.strip.context;\n        if (context && !this.iconsRendered) {\n            this.renderIcons();\n            this.iconsRendered = true;\n        }\n        return context && context.pinned;\n    }\n\n    /**\n     * Getter to know if the row is in pinned and ghost\n     * @hidden\n     * @internal\n     */\n    get inPinnedArea(): boolean {\n        if (!this.isRow(this.strip.context)) {\n            return;\n        }\n        const context = this.strip.context;\n        return this.pinned && !context.disabled;\n    }\n\n    /**\n     * Getter to know if the row pinning is set to top or bottom\n     * @hidden\n     * @internal\n     */\n    get pinnedTop(): boolean {\n        if (!this.isRow(this.strip.context)) {\n            return;\n        }\n        return this.strip.context.grid.isRowPinningToTop;\n    }\n\n    /**\n     * Pin the row according to the context.\n     * @example\n     * ```typescript\n     * this.gridPinningActions.pin();\n     * ```\n     */\n    public pin(event?): void {\n        if (event) {\n            event.stopPropagation();\n        }\n        if (!this.isRow(this.strip.context)) {\n            return;\n        }\n        const row = this.strip.context;\n        const grid = row.grid;\n        grid.pinRow(row.rowID);\n        this.strip.hide();\n    }\n\n    /**\n     * Unpin the row according to the context.\n     * @example\n     * ```typescript\n     * this.gridPinningActions.unpin();\n     * ```\n     */\n    public unpin(event?): void {\n        if (event) {\n            event.stopPropagation();\n        }\n        if (!this.isRow(this.strip.context)) {\n            return;\n        }\n        const row = this.strip.context;\n        const grid = row.grid;\n        grid.unpinRow(row.rowID);\n        this.strip.hide();\n    }\n\n    public scrollToRow(event) {\n        if (event) {\n            event.stopPropagation();\n        }\n        const context = this.strip.context;\n        const grid = context.grid;\n        grid.scrollTo(context.rowData, 0);\n        this.strip.hide();\n    }\n\n    private renderIcons(): void {\n        if (!this.isRow(this.strip.context)) {\n            return;\n        }\n        const context = this.strip.context;\n        const grid = context.grid;\n        if (grid) {\n            grid.filteringService.registerSVGIcons();\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { IgxActionStripComponent, IgxActionStripMenuItemDirective } from './action-strip.component';\nimport { IgxGridPinningActionsComponent } from './grid-actions/grid-pinning-actions.component';\nimport { IgxGridEditingActionsComponent } from './grid-actions/grid-editing-actions.component';\nimport { IgxGridActionsBaseDirective } from './grid-actions/grid-actions-base.directive';\nimport { CommonModule } from '@angular/common';\nimport { IgxDropDownModule } from '../drop-down/public_api';\nimport { IgxToggleModule } from '../directives/toggle/toggle.directive';\nimport { IgxButtonModule } from '../directives/button/button.directive';\nimport { IgxIconModule } from '../icon/public_api';\nimport { IgxRippleModule } from '../directives/ripple/ripple.directive';\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [\n        IgxActionStripComponent,\n        IgxActionStripMenuItemDirective,\n        IgxGridPinningActionsComponent,\n        IgxGridEditingActionsComponent,\n        IgxGridActionsBaseDirective\n    ],\n    entryComponents: [\n    ],\n    exports: [\n        IgxActionStripComponent,\n        IgxActionStripMenuItemDirective,\n        IgxGridPinningActionsComponent,\n        IgxGridEditingActionsComponent,\n        IgxGridActionsBaseDirective\n    ],\n    imports: [CommonModule, IgxDropDownModule, IgxToggleModule, IgxButtonModule, IgxIconModule, IgxRippleModule]\n})\nexport class IgxActionStripModule { }\n","import { EventEmitter, InjectionToken } from '@angular/core';\nimport { AnimationReferenceMetadata } from '@angular/animations';\nimport { IBaseEventArgs } from '../core/utils';\n\nexport interface IgxExpansionPanelBase {\n    id: string;\n    cssClass: string;\n    /** @hidden @internal */\n    headerId: string;\n    collapsed: boolean;\n    animationSettings: { openAnimation: AnimationReferenceMetadata, closeAnimation: AnimationReferenceMetadata };\n    onCollapsed: EventEmitter<any>;\n    onExpanded: EventEmitter<any>;\n    collapse(evt?: Event);\n    expand(evt?: Event);\n    toggle(evt?: Event);\n}\n\n/** @hidden */\nexport const IGX_EXPANSION_PANEL_COMPONENT = new InjectionToken<IgxExpansionPanelBase>('IgxExpansionPanelToken');\n\nexport interface IExpansionPanelEventArgs extends IBaseEventArgs {\n    event: Event;\n    panel: IgxExpansionPanelBase;\n}\n","import { Component, HostBinding, ElementRef, Input, ChangeDetectorRef, Inject } from '@angular/core';\nimport { IgxExpansionPanelBase, IGX_EXPANSION_PANEL_COMPONENT } from './expansion-panel.common';\n\n@Component({\n    // tslint:disable-next-line:directive-selector\n    selector: 'igx-expansion-panel-body',\n    template: `<ng-content></ng-content>`\n})\nexport class IgxExpansionPanelBodyComponent {\n    private _labelledBy = '';\n    private _label = '';\n    constructor(\n        @Inject(IGX_EXPANSION_PANEL_COMPONENT) public panel: IgxExpansionPanelBase,\n        public element: ElementRef, public cdr: ChangeDetectorRef) {\n    }\n    /**\n     * @hidden\n     */\n    @HostBinding('class.igx-expansion-panel__body')\n    public cssClass = `igx-expansion-panel__body`;\n\n    /**\n     * Gets the `aria-label` attribute of the panel body\n     * Defaults to the panel id with '-region' in the end;\n     * Get\n     * ```typescript\n     *  const currentLabel = this.panel.body.label;\n     * ```\n     */\n    @Input()\n    @HostBinding('attr.aria-label')\n    public get label(): string {\n        return this._label || this.panel.id + '-region';\n    }\n    /**\n     * Sets the `aria-label` attribute of the panel body\n     * ```typescript\n     *  this.panel.body.label = 'my-custom-label';\n     * ```\n     * ```html\n     *  <igx-expansion-panel-body [label]=\"'my-custom-label'\"></igx-expansion-panel-body>\n     * ```\n     */\n    public set label(val: string) {\n        this._label = val;\n    }\n\n    /**\n     * Gets the `aria-labelledby` attribute of the panel body\n     * Defaults to the panel header id;\n     * Get\n     * ```typescript\n     *  const currentLabel = this.panel.body.labelledBy;\n     * ```\n     */\n    @Input()\n    @HostBinding('attr.aria-labelledby')\n    public get labelledBy(): string {\n        return this._labelledBy;\n    }\n    /**\n     * Sets the `aria-labelledby` attribute of the panel body\n     * ```typescript\n     *  this.panel.body.labelledBy = 'my-custom-id';\n     * ```\n     * ```html\n     *  <igx-expansion-panel-body [labelledBy]=\"'my-custom-id'\"></igx-expansion-panel-body>\n     * ```\n     */\n    public set labelledBy(val: string) {\n        this._labelledBy = val;\n    }\n\n    /**\n     * Gets/sets the `role` attribute of the panel body\n     * Default is 'region';\n     * Get\n     * ```typescript\n     *  const currentRole = this.panel.body.role;\n     * ```\n     * Set\n     * ```typescript\n     *  this.panel.body.role = 'content';\n     * ```\n     * ```html\n     *  <igx-expansion-panel-body [role]=\"'custom'\"></igx-expansion-panel-body>\n     * ```\n     */\n    @Input()\n    @HostBinding('attr.role')\n    public role = 'region';\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n/**\n * @hidden\n */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: 'igx-expansion-panel-title'\n})\nexport class IgxExpansionPanelTitleDirective {\n    @HostBinding('class.igx-expansion-panel__header-title')\n    public cssClass = `igx-expansion-panel__header-title`;\n}\n\n/**\n * @hidden\n */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: 'igx-expansion-panel-description'\n})\nexport class IgxExpansionPanelDescriptionDirective {\n    @HostBinding('class.igx-expansion-panel__header-description')\n    public cssClass = `igx-expansion-panel__header-description`;\n}\n\n/**\n * @hidden\n */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: 'igx-expansion-panel-icon'\n})\nexport class IgxExpansionPanelIconDirective {\n}\n","import {\n    Component,\n    ChangeDetectorRef,\n    ElementRef,\n    HostBinding,\n    HostListener,\n    Input,\n    Host,\n    EventEmitter,\n    Output,\n    ContentChild,\n    Inject\n} from '@angular/core';\nimport { IgxExpansionPanelIconDirective } from './expansion-panel.directives';\nimport { IExpansionPanelEventArgs, IGX_EXPANSION_PANEL_COMPONENT, IgxExpansionPanelBase } from './expansion-panel.common';\n\n/**\n * @hidden\n */\nexport enum ICON_POSITION {\n    LEFT = 'left',\n    NONE = 'none',\n    RIGHT = 'right'\n}\n\n\n@Component({\n    selector: 'igx-expansion-panel-header',\n    templateUrl: 'expansion-panel-header.component.html'\n})\nexport class IgxExpansionPanelHeaderComponent {\n     // properties section\n    private _iconTemplate = false;\n    /**\n     * Sets/gets the `id` of the expansion panel header.\n     * ```typescript\n     * let panelHeaderId =  this.panel.header.id;\n     * ```\n     * @memberof IgxExpansionPanelComponent\n     */\n    public id = '';\n\n    /**\n     * @hidden\n     */\n    @ContentChild(IgxExpansionPanelIconDirective)\n    public set iconTemplate(val: any) {\n        this._iconTemplate = <boolean>val;\n    }\n\n    /**\n     * @hidden\n     */\n    public get iconTemplate(): any {\n        return this._iconTemplate;\n    }\n\n    /**\n     * Gets/sets the `aria-level` attribute of the header\n     * Get\n     * ```typescript\n     *  const currentAriaLevel = this.panel.header.lv;\n     * ```\n     * Set\n     * ```typescript\n     *  this.panel.header.lv = '5';\n     * ```\n     * ```html\n     *  <igx-expansion-panel-header [lv]=\"myCustomLevel\"></igx-expansion-panel-header>\n     * ```\n     */\n    @HostBinding('attr.aria-level')\n    @Input()\n    public lv = '3';\n\n    /**\n     * Gets/sets the `role` attribute of the header\n     * Get\n     * ```typescript\n     *  const currentRole = this.panel.header.role;\n     * ```\n     * Set\n     * ```typescript\n     *  this.panel.header.role = '5';\n     * ```\n     * ```html\n     *  <igx-expansion-panel-header [role]=\"'custom'\"></igx-expansion-panel-header>\n     * ```\n     */\n    @HostBinding('attr.role')\n    @Input()\n    public role = 'heading';\n\n    /**\n     * @hidden\n     */\n    public get controls (): string {\n        return this.panel.id;\n    }\n\n    /**\n     * Gets/sets the position of the expansion-panel-header expand/collapse icon\n     * Accepts `left`, `right` or `none`\n     * ```typescript\n     *  const currentIconPosition = this.panel.header.iconPosition;\n     * ```\n     * Set\n     * ```typescript\n     *  this.panel.header.iconPosition = 'left';\n     * ```\n     * ```html\n     *  <igx-expansion-panel-header [iconPosition]=\"'right'\"></igx-expansion-panel-header>\n     * ```\n     */\n    @Input()\n    public iconPosition: ICON_POSITION = ICON_POSITION.LEFT;\n\n    /**\n     * Emitted whenever a user interacts with the header host\n     * ```typescript\n     *  handleInteraction(event: IExpansionPanelEventArgs) {\n     *  ...\n     * }\n     * ```\n     * ```html\n     *  <igx-expansion-panel-header (onInteraction)=\"handleInteraction($event)\">\n     *      ...\n     *  </igx-expansion-panel-header>\n     * ```\n     */\n    @Output()\n    public onInteraction = new EventEmitter<IExpansionPanelEventArgs>();\n\n    /**\n     * @hidden\n     */\n     @HostBinding('class.igx-expansion-panel__header')\n     public cssClass = 'igx-expansion-panel__header';\n\n     /**\n      * @hidden\n      */\n     @HostBinding('class.igx-expansion-panel__header--expanded')\n     public get isExpanded () {\n            return !this.panel.collapsed;\n         }\n\n    /**\n     * Gets/sets the whether the header is disabled\n     * When disabled, the header will not handle user events and will stop their propagation\n     *\n     * ```typescript\n     *  const isDisabled = this.panel.header.disabled;\n     * ```\n     * Set\n     * ```typescript\n     *  this.panel.header.disabled = true;\n     * ```\n     * ```html\n     *  <igx-expansion-panel-header [disabled]=\"true\">\n     *     ...\n     *  </igx-expansion-panel-header>\n     * ```\n     */\n    @Input()\n    @HostBinding('class.igx-expansion-panel--disabled')\n    public disabled = false;\n\n    constructor(@Host() @Inject(IGX_EXPANSION_PANEL_COMPONENT) public panel: IgxExpansionPanelBase, public cdr: ChangeDetectorRef,\n     public elementRef: ElementRef) {\n         this.id = `${this.panel.id}-header`;\n     }\n\n     /**\n      * @hidden\n      */\n     @HostListener('keydown.Enter', ['$event'])\n     @HostListener('keydown.Space', ['$event'])\n     @HostListener('keydown.Spacebar', ['$event'])\n     @HostListener('click', ['$event'])\n     public onAction(evt?: Event) {\n         if (this.disabled) {\n            evt.stopPropagation();\n            return;\n         }\n         this.onInteraction.emit({ event: evt, panel: this.panel });\n         this.panel.toggle(evt);\n         evt.preventDefault();\n     }\n\n    /** @hidden @internal */\n    @HostListener('keydown.Alt.ArrowDown', ['$event'])\n    public openPanel(event: KeyboardEvent) {\n        if (event.altKey) {\n            this.panel.expand(event);\n            this.onInteraction.emit({ event: event, panel: this.panel });\n        }\n     }\n\n     /** @hidden @internal */\n     @HostListener('keydown.Alt.ArrowUp', ['$event'])\n     public closePanel(event: KeyboardEvent) {\n        if (event.altKey) {\n            this.panel.collapse(event);\n            this.onInteraction.emit({ event: event, panel: this.panel });\n        }\n     }\n\n     /**\n      * @hidden\n      */\n     public get iconPositionClass(): string {\n        switch (this.iconPosition) {\n            case (ICON_POSITION.LEFT):\n                return `igx-expansion-panel__header-icon--start`;\n            case (ICON_POSITION.RIGHT):\n                return `igx-expansion-panel__header-icon--end`;\n            case (ICON_POSITION.NONE):\n                return `igx-expansion-panel__header-icon--none`;\n            default:\n                return '';\n        }\n     }\n}\n","import {\n    Component,\n    ChangeDetectorRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    Output,\n    ContentChild,\n    AfterContentInit\n} from '@angular/core';\nimport { AnimationBuilder, AnimationReferenceMetadata, useAnimation } from '@angular/animations';\nimport { growVerOut, growVerIn } from '../animations/main';\nimport { IgxExpansionPanelBodyComponent } from './expansion-panel-body.component';\nimport { IgxExpansionPanelHeaderComponent } from './expansion-panel-header.component';\nimport { IGX_EXPANSION_PANEL_COMPONENT, IgxExpansionPanelBase, IExpansionPanelEventArgs } from './expansion-panel.common';\n\nlet NEXT_ID = 0;\n\nexport interface AnimationSettings {\n    openAnimation: AnimationReferenceMetadata;\n    closeAnimation: AnimationReferenceMetadata;\n}\n@Component({\n    selector: 'igx-expansion-panel',\n    templateUrl: 'expansion-panel.component.html',\n    providers: [{ provide: IGX_EXPANSION_PANEL_COMPONENT, useExisting: IgxExpansionPanelComponent }]\n})\nexport class IgxExpansionPanelComponent implements IgxExpansionPanelBase, AfterContentInit {\n    private _collapsed = true;\n    /**\n     * Sets/gets the animation settings of the expansion panel component\n     * Open and Close animation should be passed\n     *\n     * Get\n     * ```typescript\n     *  const currentAnimations = this.panel.animationSettings;\n     * ```\n     * Set\n     * ```typescript\n     *  import { slideInLeft, slideOutRight } from 'igniteui-angular';\n     *  ...\n     *  this.panel.animationsSettings = {\n     *      openAnimation: slideInLeft,\n     *      closeAnimation: slideOutRight\n     * };\n     * ```\n     * or via template\n     * ```typescript\n     *  import { slideInLeft, slideOutRight } from 'igniteui-angular';\n     *  ...\n     *  myCustomAnimationObject = {\n     *      openAnimation: slideInLeft,\n     *      closeAnimation: slideOutRight\n     * };\n     * ```html\n     *  <igx-expansion-panel [animationSettings]='myCustomAnimationObject'>\n     *  ...\n     *  </igx-expansion-panel>\n     * ```\n     */\n    @Input()\n    public animationSettings: AnimationSettings = {\n        openAnimation: growVerIn,\n        closeAnimation: growVerOut\n    };\n\n    /**\n     * Sets/gets the `id` of the expansion panel component.\n     * If not set, `id` will have value `\"igx-expansion-panel-0\"`;\n     * ```html\n     * <igx-expansion-panel id = \"my-first-expansion-panel\"></igx-expansion-panel>\n     * ```\n     * ```typescript\n     * let panelId =  this.panel.id;\n     * ```\n     * @memberof IgxExpansionPanelComponent\n     */\n    @HostBinding('attr.id')\n    @Input()\n    public id = `igx-expansion-panel-${NEXT_ID++}`;\n\n    /**\n     * @hidden\n     */\n    @HostBinding('class.igx-expansion-panel')\n    public cssClass = 'igx-expansion-panel';\n\n    /**\n     * Gets/sets whether the component is collapsed (its content is hidden)\n     * Get\n     * ```typescript\n     *  const myPanelState: boolean = this.panel.collapsed;\n     * ```\n     * Set\n     * ```html\n     *  this.panel.collapsed = true;\n     * ```\n     *\n     * Two-way data binding:\n     * ```html\n     * <igx-expansion-panel [(collapsed)]=\"model.isCollapsed\"></igx-expansion-panel>\n     * ```\n     */\n    @Input()\n    public get collapsed(): boolean {\n        return this._collapsed;\n    }\n    public set collapsed(value) {\n        this._collapsed = value;\n        this.collapsedChange.emit(this._collapsed);\n    }\n\n    /**\n     * @hidden\n     */\n    @Output()\n    public collapsedChange = new EventEmitter<boolean>();\n\n    /**\n     * Emitted when the expansion panel finishes collapsing\n     * ```typescript\n     *  handleCollapsed(event: {\n     *  panel: IgxExpansionPanelComponent,\n     *  event: Event\n     * })\n     * ```\n     * ```html\n     *  <igx-expansion-panel (onCollapsed)=\"handleCollapsed($event)\">\n     *      ...\n     *  </igx-expansion-panel>\n     * ```\n     */\n    @Output()\n    public onCollapsed = new EventEmitter<IExpansionPanelEventArgs>();\n\n    /**\n     * Emitted when the expansion panel finishes expanding\n     * ```typescript\n     *  handleExpanded(event: {\n     *  panel: IgxExpansionPanelComponent,\n     *  event: Event\n     * })\n     * ```\n     * ```html\n     *  <igx-expansion-panel (onExpanded)=\"handleExpanded($event)\">\n     *      ...\n     *  </igx-expansion-panel>\n     * ```\n     */\n    @Output()\n    public onExpanded = new EventEmitter<IExpansionPanelEventArgs>();\n\n    /**\n     * @hidden\n     */\n    public get headerId() {\n        return this.header ? `${this.id}-header` : '';\n    }\n\n    /**\n     * @hidden\n     */\n    @ContentChild(IgxExpansionPanelBodyComponent, { read: IgxExpansionPanelBodyComponent })\n    public body: IgxExpansionPanelBodyComponent;\n\n    /**\n     * @hidden\n     */\n    @ContentChild(IgxExpansionPanelHeaderComponent, { read: IgxExpansionPanelHeaderComponent })\n    public header: IgxExpansionPanelHeaderComponent;\n\n    constructor(private cdr: ChangeDetectorRef, private builder: AnimationBuilder) { }\n\n    /** @hidden */\n    ngAfterContentInit(): void {\n        if (this.body && this.header) {\n            // schedule at end of turn:\n            Promise.resolve().then(() => {\n                this.body.labelledBy = this.body.labelledBy || this.headerId;\n                this.body.label = this.body.label || this.id + '-region';\n            });\n        }\n    }\n\n    private playOpenAnimation(cb: () => void) {\n        if (!this.body) { // if not body element is passed, there is nothing to animate\n            return;\n        }\n        const animation = useAnimation(this.animationSettings.openAnimation);\n        const animationBuilder = this.builder.build(animation);\n        const openAnimationPlayer = animationBuilder.create(this.body.element.nativeElement);\n\n        openAnimationPlayer.onDone(() => {\n            cb();\n            openAnimationPlayer.reset();\n        });\n\n        openAnimationPlayer.play();\n    }\n\n    private playCloseAnimation(cb: () => void) {\n        if (!this.body) { // if not body element is passed, there is nothing to animate\n            return;\n        }\n        const animation = useAnimation(this.animationSettings.closeAnimation);\n        const animationBuilder = this.builder.build(animation);\n        const closeAnimationPlayer = animationBuilder.create(this.body.element.nativeElement);\n        closeAnimationPlayer.onDone(() => {\n            cb();\n            closeAnimationPlayer.reset();\n        });\n\n        closeAnimationPlayer.play();\n    }\n\n    /**\n     * Collapses the panel\n     *\n     * ```html\n     *  <igx-expansion-panel #myPanel>\n     *      ...\n     *  </igx-expansion-panel>\n     *  <button (click)=\"myPanel.collapse($event)\">Collpase Panel</button>\n     * ```\n     */\n    collapse(evt?: Event) {\n        if (this.collapsed) { // If expansion panel is already collapsed, do nothing\n            return;\n        }\n        this.playCloseAnimation(\n            () => {\n                this.onCollapsed.emit({ event: evt, panel: this });\n                this.collapsed = true;\n            }\n        );\n    }\n\n    /**\n     * Expands the panel\n     *\n     * ```html\n     *  <igx-expansion-panel #myPanel>\n     *      ...\n     *  </igx-expansion-panel>\n     *  <button (click)=\"myPanel.expand($event)\">Expand Panel</button>\n     * ```\n     */\n    expand(evt?: Event) {\n        if (!this.collapsed) { // If the panel is already opened, do nothing\n            return;\n        }\n        this.collapsed = false;\n        this.cdr.detectChanges();\n        this.playOpenAnimation(\n            () => {\n                this.onExpanded.emit({ event: evt, panel: this });\n            }\n        );\n    }\n\n    /**\n     * Toggles the panel\n     *\n     * ```html\n     *  <igx-expansion-panel #myPanel>\n     *      ...\n     *  </igx-expansion-panel>\n     *  <button (click)=\"myPanel.toggle($event)\">Expand Panel</button>\n     * ```\n     */\n    toggle(evt?: Event) {\n        if (this.collapsed) {\n            this.open(evt);\n        } else {\n            this.close(evt);\n        }\n    }\n\n    open(evt?: Event) {\n        this.expand(evt);\n    }\n    close(evt?: Event) {\n        this.collapse(evt);\n    }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { IgxRippleModule } from '../directives/ripple/ripple.directive';\nimport { IgxButtonModule } from '../directives/button/button.directive';\nimport { IgxAvatarModule } from '../avatar/avatar.component';\nimport { IgxIconModule } from '../icon/public_api';\nimport { IgxExpansionPanelComponent } from './expansion-panel.component';\nimport { IgxExpansionPanelHeaderComponent } from './expansion-panel-header.component';\nimport { IgxExpansionPanelBodyComponent } from './expansion-panel-body.component';\nimport {\n    IgxExpansionPanelDescriptionDirective,\n    IgxExpansionPanelTitleDirective,\n    IgxExpansionPanelIconDirective\n} from './expansion-panel.directives';\n\n/**\n * @hidden\n */\n@NgModule({\n  declarations: [\n    IgxExpansionPanelComponent,\n    IgxExpansionPanelHeaderComponent,\n    IgxExpansionPanelBodyComponent,\n    IgxExpansionPanelDescriptionDirective,\n    IgxExpansionPanelTitleDirective,\n    IgxExpansionPanelIconDirective\n  ],\n  entryComponents: [\n  ],\n  exports: [\n    IgxExpansionPanelComponent,\n    IgxExpansionPanelHeaderComponent,\n    IgxExpansionPanelBodyComponent,\n    IgxExpansionPanelDescriptionDirective,\n    IgxExpansionPanelTitleDirective,\n      IgxExpansionPanelIconDirective\n  ],\n  imports: [\n    CommonModule,\n    IgxRippleModule,\n    IgxIconModule,\n    IgxButtonModule,\n    IgxAvatarModule\n  ]\n})\nexport class IgxExpansionPanelModule {\n}\n","import { Directive } from '@angular/core';\n\n// tslint:disable:directive-selector\n@Directive({\n    selector: 'igx-banner-actions'\n})\nexport class IgxBannerActionsDirective {\n}\n","import { Component, NgModule, EventEmitter, Output, Input, ViewChild, ElementRef,\n    ContentChild, HostBinding } from '@angular/core';\nimport { IgxExpansionPanelModule } from '../expansion-panel/expansion-panel.module';\nimport { AnimationSettings } from '../expansion-panel/expansion-panel.component';\nimport { IgxExpansionPanelComponent } from '../expansion-panel/public_api';\nimport { IgxIconModule, IgxIconComponent } from '../icon/public_api';\nimport { IToggleView } from '../core/navigation';\nimport { IgxButtonModule } from '../directives/button/button.directive';\nimport { IgxRippleModule } from '../directives/ripple/ripple.directive';\nimport { IgxBannerActionsDirective } from './banner.directives';\nimport { CommonModule } from '@angular/common';\nimport { CancelableEventArgs, IBaseEventArgs } from '../core/utils';\n\nexport interface BannerEventArgs extends IBaseEventArgs {\n    banner: IgxBannerComponent;\n    event?: Event;\n}\n\nexport interface BannerCancelEventArgs extends BannerEventArgs, CancelableEventArgs {\n}\n/**\n * **Ignite UI for Angular Banner** -\n * [Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/banner.html)\n *\n * The Ignite UI Banner provides a highly templateable and easy to use banner that can be shown in your application.\n *\n * Usage:\n *\n * ```html\n * <igx-banner #banner>\n *   Our privacy settings have changed.\n *  <igx-banner-actions>\n *      <button igxButton=\"raised\">Read More</button>\n *      <button igxButton=\"raised\">Accept and Continue</button>\n *  </igx-banner-actions>\n * </igx-banner>\n * ```\n */\n@Component({\n    selector: 'igx-banner',\n    templateUrl: 'banner.component.html'\n})\nexport class IgxBannerComponent implements IToggleView {\n    private _bannerEvent: BannerEventArgs;\n    private _animationSettings: AnimationSettings;\n\n    @ViewChild('expansionPanel', { static: true })\n    private _expansionPanel: IgxExpansionPanelComponent;\n\n    @ContentChild(IgxBannerActionsDirective)\n    private _bannerActionTemplate: IgxBannerActionsDirective;\n\n    /**\n     * @hidden\n     */\n    @ContentChild(IgxIconComponent)\n    public bannerIcon: IgxIconComponent;\n\n    /**\n     * Fires after the banner shows up\n     * ```typescript\n     * public handleOpened(event) {\n     *  ...\n     * }\n     * ```\n     * ```html\n     * <igx-banner (onOpened)=\"handleOpened($event)\"></igx-banner>\n     * ```\n     */\n    @Output()\n    public onOpened = new EventEmitter<BannerEventArgs>();\n\n    /**\n     * Fires before the banner shows up\n     * ```typescript\n     * public handleOpening(event) {\n     *  ...\n     * }\n     * ```\n     * ```html\n     * <igx-banner (onOpening)=\"handleOpening($event)\"></igx-banner>\n     * ```\n     */\n    @Output()\n    public onOpening = new EventEmitter<BannerCancelEventArgs>();\n\n    /**\n     * Fires after the banner hides\n     * ```typescript\n     * public handleClosed(event) {\n     *  ...\n     * }\n     * ```\n     * ```html\n     * <igx-banner (onClosed)=\"handleClosed($event)\"></igx-banner>\n     * ```\n     */\n    @Output()\n    public onClosed = new EventEmitter<BannerEventArgs>();\n\n    /**\n     * Fires before the banner hides\n     * ```typescript\n     * public handleClosing(event) {\n     *  ...\n     * }\n     * ```\n     * ```html\n     * <igx-banner (onClosing)=\"handleClosing($event)\"></igx-banner>\n     * ```\n     */\n    @Output()\n    public onClosing = new EventEmitter<BannerCancelEventArgs>();\n\n    /** @hidden */\n    public get useDefaultTemplate(): boolean {\n        return !this._bannerActionTemplate;\n    }\n\n    /**\n     * Get the animation settings used by the banner open/close methods\n     * ```typescript\n     * let currentAnimations: AnimationSettings = banner.animationSettings\n     * ```\n     */\n    @Input()\n    public get animationSettings(): AnimationSettings {\n        return this._animationSettings ? this._animationSettings : this._expansionPanel.animationSettings;\n    }\n\n    /**\n     * Set the animation settings used by the banner open/close methods\n     * ```typescript\n     * import { slideInLeft, slideOutRight } from 'igniteui-angular';\n     * ...\n     * banner.animationSettings: AnimationSettings = { openAnimation: slideInLeft, closeAnimation: slideOutRight };\n     * ```\n     */\n    public set animationSettings(settings: AnimationSettings) {\n        this._animationSettings = settings;\n    }\n    /**\n     * Gets whether banner is collapsed\n     *\n     * ```typescript\n     * const isCollapsed: boolean = banner.collapsed;\n     * ```\n     */\n    public get collapsed() {\n        return this._expansionPanel.collapsed;\n    }\n\n    /**\n     * Returns the native element of the banner component\n     * ```typescript\n     *  const myBannerElement: HTMLElement = banner.element;\n     * ```\n     */\n    public get element() {\n        return this.elementRef.nativeElement;\n    }\n\n    /**\n     * @hidden\n     */\n    @HostBinding('style.display')\n    public get displayStyle(): string {\n        return this.collapsed ? '' : 'block';\n    }\n\n    constructor(public elementRef: ElementRef) { }\n\n    /**\n     * Opens the banner\n     *\n     * ```typescript\n     *  myBanner.open();\n     * ```\n     *\n     * ```html\n     * <igx-banner #banner>\n     * ...\n     * </igx-banner>\n     * <button (click)=\"banner.open()\">Open Banner</button>\n     * ```\n     */\n    public open(event?: Event) {\n        this._bannerEvent = { banner: this, event};\n        const openingArgs = {\n            banner: this,\n            event,\n            cancel: false\n        };\n        this.onOpening.emit(openingArgs);\n        if (openingArgs.cancel) {\n            return;\n        }\n        this._expansionPanel.open(event);\n    }\n\n    /**\n     * Closes the banner\n     *\n     * ```typescript\n     *  myBanner.close();\n     * ```\n     *\n     * ```html\n     * <igx-banner #banner>\n     * ...\n     * </igx-banner>\n     * <button (click)=\"banner.close()\">Close Banner</button>\n     * ```\n     */\n    public close(event?: Event) {\n        this._bannerEvent = { banner: this, event};\n        const closingArgs = {\n            banner: this,\n            event,\n            cancel: false\n        };\n        this.onClosing.emit(closingArgs);\n        if (closingArgs.cancel) {\n            return;\n        }\n        this._expansionPanel.close(event);\n    }\n\n    /**\n     * Toggles the banner\n     *\n     * ```typescript\n     *  myBanner.toggle();\n     * ```\n     *\n     * ```html\n     * <igx-banner #banner>\n     * ...\n     * </igx-banner>\n     * <button (click)=\"banner.toggle()\">Toggle Banner</button>\n     * ```\n     */\n    toggle(event?: Event) {\n        if (this.collapsed) {\n            this.open(event);\n        } else {\n            this.close(event);\n        }\n    }\n\n    /** @hidden */\n    public onExpansionPanelOpen() {\n        this.onOpened.emit(this._bannerEvent);\n    }\n\n    /** @hidden */\n    public onExpansionPanelClose() {\n        this.onClosed.emit(this._bannerEvent);\n    }\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [IgxBannerComponent, IgxBannerActionsDirective],\n    exports: [IgxBannerComponent, IgxBannerActionsDirective],\n    imports: [CommonModule, IgxExpansionPanelModule, IgxIconModule, IgxButtonModule, IgxRippleModule]\n})\nexport class IgxBannerModule { }\n","import { CommonModule } from '@angular/common';\nimport {\n    Component,\n    Directive,\n    HostBinding,\n    Optional,\n    Inject,\n    Input,\n    NgModule,\n    OnInit,\n    OnChanges,\n    SimpleChanges\n} from '@angular/core';\nimport { IgxButtonModule } from '../directives/button/button.directive';\n\nlet NEXT_ID = 0;\n\n/**\n * IgxCardMedia is container for the card media section.\n * Use it to wrap images and videos.\n */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: 'igx-card-media'\n})\nexport class IgxCardMediaDirective {\n    /** @hidden @internal */\n    @HostBinding('class.igx-card__media')\n    public cssClass = 'igx-card__media';\n\n    /**\n     * An @Input property that sets the `width` and `min-width` style property\n     * of the media container. If not provided it will be set to `auto`.\n     *\n     * @example\n     * ```html\n     * <igx-card-media width=\"300px\"></igx-card-media>\n     * ```\n     */\n    @HostBinding('style.width')\n    @HostBinding('style.min-width')\n    @Input()\n    public width = 'auto';\n\n    /**\n     * An @Input property that sets the `height` style property of the media container.\n     * If not provided it will be set to `auto`.\n     *\n     * @example\n     * ```html\n     * <igx-card-media height=\"50%\"></igx-card-media>\n     * ```\n     */\n    @HostBinding('style.height')\n    @Input()\n    public height = 'auto';\n\n    /**\n     * An @Input property that sets the `role` attribute of the media container.\n     */\n    @HostBinding('attr.role')\n    @Input()\n    public role = 'img';\n}\n\n/**\n * IgxCardHeader is container for the card header\n */\n@Component({\n    selector: 'igx-card-header',\n    templateUrl: 'card-header.component.html'\n})\nexport class IgxCardHeaderComponent {\n    /** @hidden @internal */\n    @HostBinding('class.igx-card-header')\n    public cssClass = 'igx-card-header';\n\n    /**\n     * An @Input property that sets the layout style of the header.\n     * By default the header elements(thumbnail and title/subtitle) are aligned horizontally.\n     *\n     * @example\n     * ```html\n     * <igx-card-header [vertical]=\"true\"></igx-card-header>\n     * ```\n     */\n    @HostBinding('class.igx-card-header--vertical')\n    @Input()\n    public vertical = false;\n\n    /**\n     * An @Input property that sets the value of the `role` attribute of the card header.\n     * By default the value is set to `header`.\n     *\n     * @example\n     * ```html\n     * <igx-card-header role=\"header\"></igx-card-header>\n     * ```\n     */\n    @HostBinding('attr.role')\n    public role = 'header';\n}\n\n/**\n * IgxCardThumbnail is container for the card thumbnail section.\n * Use it to wrap anything you want to be used as a thumbnail.\n */\n@Directive({\n    selector: '[igxCardThumbnail]'\n})\nexport class IgxCardThumbnailDirective { }\n\n/**\n * igxCardHeaderTitle is used to denote the header title in a card.\n * Use it to tag text nodes.\n */\n@Directive({\n    selector: '[igxCardHeaderTitle]'\n})\nexport class IgxCardHeaderTitleDirective {\n    /** @hidden @internal */\n    @HostBinding('class.igx-card-header__title')\n    public cssClass = 'igx-card__header__title';\n}\n\n/**\n * igxCardHeaderSubtitle is used to denote the header subtitle in a card.\n * Use it to tag text nodes.\n */\n@Directive({\n    selector: '[igxCardHeaderSubtitle]'\n})\nexport class IgxCardHeaderSubtitleDirective {\n    /** @hidden @internal */\n    @HostBinding('class.igx-card-header__subtitle')\n    public cssClass = 'igx-card-header__subtitle';\n}\n/**\n * IgxCardContent is container for the card content.\n */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: 'igx-card-content'\n})\nexport class IgxCardContentDirective {\n    /** @hidden @internal */\n    @HostBinding('class.igx-card-content')\n    public cssClass = 'igx-card-content';\n}\n\n/**\n * IgxCardFooter is container for the card footer\n */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: 'igx-card-footer'\n})\nexport class IgxCardFooterDirective {\n    /**\n     * An @Input property that sets the value of the `role` attribute of the card footer.\n     * By default the value is set to `footer`.\n     *\n     * @example\n     * ```html\n     * <igx-card-footer role=\"footer\"></igx-card-footer>\n     * ```\n     */\n    @HostBinding('attr.role')\n    @Input()\n    public role = 'footer';\n}\n\n/**\n * Card provides a way to display organized content in appealing way.\n *\n * @igxModule IgxCardModule\n *\n * @igxTheme igx-card-theme, igx-icon-theme, igx-button-theme\n *\n * @igxKeywords card, button, avatar, icon\n *\n * @igxGroup Layouts\n *\n * @remarks\n * The Ignite UI Card serves as a container that allows custom content to be organized in an appealing way. There are\n * five sections in a card that you can use to organize your content. These are header, media, content, actions, and footer.\n *\n * @example\n * ```html\n * <igx-card>\n *   <igx-card-header>\n *     <h3 igxCardHeaderTitle>{{title}}</h3>\n *     <h5 igxCardHeaderSubtitle>{{subtitle}}</h5>\n *   </igx-card-header>\n *   <igx-card-actions>\n *       <button igxButton igxRipple>Share</button>\n *       <button igxButton igxRipple>Play Album</button>\n *   </igx-card-actions>\n * </igx-card>\n * ```\n */\n\nexport enum IgxCardType {\n    ELEVATED = 'elevated',\n    OUTLINED = 'outlined'\n}\n\n@Component({\n    selector: 'igx-card',\n    templateUrl: 'card.component.html'\n})\nexport class IgxCardComponent {\n    /**\n     * Sets/gets the `id` of the card.\n     * If not set, `id` will have value `\"igx-card-0\"`;\n     *\n     * @example\n     * ```html\n     * <igx-card id = \"my-first-card\"></igx-card>\n     * ```\n     * ```typescript\n     * let cardId =  this.card.id;\n     * ```\n     */\n    @HostBinding('attr.id')\n    @Input()\n    public id = `igx-card-${NEXT_ID++}`;\n\n    /**\n     * An @Input property that sets the value of the `role` attribute of the card.\n     * By default the value is set to `group`.\n     *\n     * @example\n     * ```html\n     * <igx-card role=\"group\"></igx-card>\n     * ```\n     */\n    @HostBinding('attr.role')\n    @Input()\n    public role = 'group';\n\n    /**\n     * An @Input property that sets the value of the `type` attribute of the card.\n     * By default the value is set to `default`. You can make the card use the\n     * outlined style by setting the value to `outlined`.\n     *\n     * @example\n     * ```html\n     * <igx-card type=\"outlined\"></igx-card>\n     * ```\n     */\n    @HostBinding('class.igx-card')\n    @Input()\n    public type: IgxCardType | string = IgxCardType.ELEVATED;\n\n    /**\n     * A getter which will return true if the card type is `outlined`.\n     */\n    @HostBinding('class.igx-card--outlined')\n    get isOutlinedCard() {\n        return this.type === IgxCardType.OUTLINED;\n    }\n\n    /**\n     * An @Input property that sets the value of the `horizontal` attribute of the card.\n     * Setting this to `true` will make the different card sections align horizontally,\n     * essentially flipping the card to the side.\n     *\n     * @example\n     * ```html\n     * <igx-card [horizontal]=\"true\"></igx-card>\n     * ```\n     */\n    @HostBinding('class.igx-card--horizontal')\n    @Input()\n    public horizontal = false;\n}\n\nexport enum IgxCardActionsLayout {\n    START = 'start',\n    JUSTIFY = 'justify',\n}\n\n/**\n * IgxCardActions is container for the card actions.\n */\n@Component({\n    // tslint:disable-next-line:directive-selector\n    selector: 'igx-card-actions',\n    templateUrl: 'card-actions.component.html'\n})\nexport class IgxCardActionsComponent implements OnInit, OnChanges {\n    private isVerticalSet = false;\n\n    constructor(@Optional() @Inject(IgxCardComponent) public card: IgxCardComponent) { }\n\n    /**\n     * An @Input property that sets the layout style of the actions.\n     * By default icons and icon buttons, as well as regular buttons\n     * are split into two containers, which are then positioned on both ends\n     * of the card-actions area.\n     * You can justify the elements in those groups so they are positioned equally\n     * from one another taking up all the space available along the card actions axis.\n     *\n     * @example\n     * ```html\n     * <igx-card-actions layout=\"justify\"></igx-card-actions>\n     * ```\n     */\n    @HostBinding('class.igx-card-actions')\n    @Input()\n    public layout: IgxCardActionsLayout | string = IgxCardActionsLayout.START;\n\n    /**\n     * An @Input property that sets the vertical attribute of the actions.\n     * When set to `true` the actions will be layed out vertically.\n     */\n    @HostBinding('class.igx-card-actions--vertical')\n    @Input()\n    public vertical: boolean;\n\n    /**\n     * A getter that returns `true` when the layout has been\n     * set to `justify`.\n     */\n    @HostBinding('class.igx-card-actions--justify')\n    get isJustifyLayout() {\n        return this.layout === IgxCardActionsLayout.JUSTIFY;\n    }\n\n    /**\n     * An @Input property that sets order of the buttons the actions area.\n     * By default all icons/icon buttons are placed at the end of the action\n     * area. Any regular buttons(flat, raised) will appear before the icons/icon buttons\n     * placed in the actions area.\n     * If you want to reverse their positions so that icons appear first, use the `reverse`\n     * attribute.\n     *\n     * @example\n     * ```html\n     * <igx-card-actions [reverse]=\"true\"></igx-card-actions>\n     * ```\n     */\n    @HostBinding('class.igx-card-actions--reverse')\n    @Input()\n    public reverse = false;\n\n    ngOnChanges(changes: SimpleChanges) {\n        for (const prop in changes) {\n            if (prop === 'vertical') {\n                this.isVerticalSet = true;\n            }\n        }\n    }\n\n    ngOnInit() {\n        this.vertical = !this.isVerticalSet && this.card.horizontal;\n    }\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [\n        IgxCardComponent,\n        IgxCardHeaderComponent,\n        IgxCardMediaDirective,\n        IgxCardContentDirective,\n        IgxCardActionsComponent,\n        IgxCardFooterDirective,\n        IgxCardHeaderTitleDirective,\n        IgxCardHeaderSubtitleDirective,\n        IgxCardThumbnailDirective,\n    ],\n    exports: [\n        IgxCardComponent,\n        IgxCardHeaderComponent,\n        IgxCardMediaDirective,\n        IgxCardContentDirective,\n        IgxCardActionsComponent,\n        IgxCardFooterDirective,\n        IgxCardHeaderTitleDirective,\n        IgxCardHeaderSubtitleDirective,\n        IgxCardThumbnailDirective,\n    ],\n    imports: [CommonModule, IgxButtonModule]\n})\nexport class IgxCardModule { }\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n    selector: '[igxCarouselIndicator]'\n})\nexport class IgxCarouselIndicatorDirective {\n}\n\n@Directive({\n    selector: '[igxCarouselNextButton]'\n})\nexport class IgxCarouselNextButtonDirective {\n}\n\n@Directive({\n    selector: '[igxCarouselPrevButton]'\n})\nexport class IgxCarouselPrevButtonDirective {\n}\n","import { Component, OnDestroy, Input, HostBinding, Output, EventEmitter, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nexport enum Direction { NONE, NEXT, PREV }\n\n/**\n * A slide component that usually holds an image and/or a caption text.\n * IgxSlideComponent is usually a child component of an IgxCarouselComponent.\n *\n * ```\n * <igx-slide [input bindings] >\n *    <ng-content></ng-content>\n * </igx-slide>\n * ```\n *\n * @export\n */\n@Component({\n    selector: 'igx-slide',\n    templateUrl: 'slide.component.html'\n})\n\nexport class IgxSlideComponent implements OnDestroy {\n    private _active = false;\n    private _destroy$ = new Subject<boolean>();\n    /**\n     * Gets/sets the `index` of the slide inside the carousel.\n     * ```html\n     * <igx-carousel>\n     *  <igx-slide index = \"1\"></igx-slide>\n     * <igx-carousel>\n     * ```\n     * @memberOf IgxSlideComponent\n     */\n    @Input() public index: number;\n\n    /**\n     * Gets/sets the target `direction` for the slide.\n     * ```html\n     * <igx-carousel>\n     *  <igx-slide direction=\"NEXT\"></igx-slide>\n     * <igx-carousel>\n     * ```\n     * @memberOf IgxSlideComponent\n     */\n    @Input() public direction: Direction;\n\n    /**\n     * Returns the `tabIndex` of the slide component.\n     * ```typescript\n     * let tabIndex =  this.carousel.tabIndex;\n     * ```\n     * @memberof IgxSlideComponent\n     */\n    @HostBinding('attr.tabindex')\n    get tabIndex() {\n        return this.active ? 0 : null;\n    }\n\n    /**\n     * Returns the `aria-selected` of the slide.\n     *\n     * ```typescript\n     * let slide = this.slide.ariaSelected;\n     * ```\n     *\n     */\n    @HostBinding('attr.aria-selected')\n    public get ariaSelected(): boolean {\n        return this.active;\n    }\n\n    /**\n     * Returns the `aria-live` of the slide.\n     *\n     * ```typescript\n     * let slide = this.slide.ariaLive;\n     * ```\n     *\n     */\n    @HostBinding('attr.aria-selected')\n    public get ariaLive() {\n        return this.active ? 'polite' : null;\n    }\n\n    /**\n     * Returns the class of the slide component.\n     * ```typescript\n     * let class =  this.slide.cssClass;\n     * ```\n     * @memberof IgxSlideComponent\n     */\n    @HostBinding('class.igx-slide')\n    public cssClass = 'igx-slide';\n\n    /**\n     * Gets/sets the `active` state of the slide.\n     * ```html\n     * <igx-carousel>\n     *  <igx-slide [active] =\"false\"></igx-slide>\n     * <igx-carousel>\n     * ```\n     *\n     * Two-way data binding.\n     * ```html\n     * <igx-carousel>\n     *  <igx-slide [(active)] =\"model.isActive\"></igx-slide>\n     * <igx-carousel>\n     * ```\n     * @memberof IgxSlideComponent\n     */\n    @HostBinding('class.igx-slide--current')\n    @Input()\n    public get active(): boolean {\n        return this._active;\n    }\n\n    public set active(value) {\n        this._active = !!value;\n        this.activeChange.emit(this._active);\n    }\n\n    @HostBinding('class.igx-slide--previous')\n    @Input() public previous = false;\n\n    /**\n     * @hidden\n     */\n    @Output() public activeChange = new EventEmitter<boolean>();\n\n    constructor(private elementRef: ElementRef) { }\n\n    /**\n     * Returns a reference to the carousel element in the DOM.\n     * ```typescript\n     * let nativeElement =  this.slide.nativeElement;\n     * ```\n     * @memberof IgxSlideComponent\n     */\n    public get nativeElement() {\n        return this.elementRef.nativeElement;\n    }\n\n    /**\n     * @hidden\n     */\n    public get isDestroyed(): Subject<boolean> {\n    return this._destroy$;\n    }\n\n    /**\n     * @hidden\n     */\n    public ngOnDestroy() {\n        this._destroy$.next(true);\n        this._destroy$.complete();\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    HostListener,\n    Input,\n    NgModule,\n    OnDestroy,\n    Output,\n    ContentChildren,\n    QueryList,\n    IterableDiffer,\n    IterableDiffers,\n    AfterContentInit,\n    IterableChangeRecord,\n    TemplateRef,\n    ViewChild,\n    ContentChild,\n    Injectable\n} from '@angular/core';\nimport { IgxIconModule } from '../icon/public_api';\nimport { IBaseEventArgs, PlatformUtil } from '../core/utils';\nimport { Subject, merge } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { IgxCarouselIndicatorDirective, IgxCarouselNextButtonDirective, IgxCarouselPrevButtonDirective } from './carousel.directives';\nimport { useAnimation, AnimationBuilder, AnimationPlayer, AnimationReferenceMetadata } from '@angular/animations';\nimport { slideInLeft, fadeIn } from '../animations/main';\nimport { IgxSlideComponent, Direction } from './slide.component';\nimport { ICarouselResourceStrings } from '../core/i18n/carousel-resources';\nimport { CurrentResourceStrings } from '../core/i18n/resources';\nimport { HammerGestureConfig, HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\n\nlet NEXT_ID = 0;\n\nexport enum CarouselIndicatorsOrientation {\n    bottom = 'bottom',\n    top = 'top'\n}\n\nexport enum CarouselAnimationType {\n    none = 'none',\n    slide = 'slide',\n    fade = 'fade'\n}\n\nexport interface CarouselAnimationSettings {\n    enterAnimation: AnimationReferenceMetadata;\n    leaveAnimation: AnimationReferenceMetadata;\n}\n\n@Injectable()\nexport class CarouselHammerConfig extends HammerGestureConfig {\n    public overrides = {\n        pan: { direction: Hammer.DIRECTION_HORIZONTAL }\n    };\n}\n/**\n * **Ignite UI for Angular Carousel** -\n * [Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/carousel.html)\n *\n * The Ignite UI Carousel is used to browse or navigate through a collection of slides. Slides can contain custom\n * content such as images or cards and be used for things such as on-boarding tutorials or page-based interfaces.\n * It can be used as a separate fullscreen element or inside another component.\n *\n * Example:\n * ```html\n * <igx-carousel>\n *   <igx-slide>\n *     <h3>First Slide Header</h3>\n *     <p>First slide Content</p>\n *   <igx-slide>\n *   <igx-slide>\n *     <h3>Second Slide Header</h3>\n *     <p>Second Slide Content</p>\n * </igx-carousel>\n * ```\n */\n@Component({\n    providers: [\n        {\n            provide: HAMMER_GESTURE_CONFIG,\n            useClass: CarouselHammerConfig\n        }\n    ],\n    selector: 'igx-carousel',\n    templateUrl: 'carousel.component.html',\n    styles: [`\n    :host {\n        display: block;\n        outline-style: none;\n    }`]\n})\n\nexport class IgxCarouselComponent implements OnDestroy, AfterContentInit {\n    /**\n     * Returns the `role` attribute of the carousel.\n     * ```typescript\n     * let carouselRole =  this.carousel.role;\n     * ```\n     * @memberof IgxCarouselComponent\n     */\n    @HostBinding('attr.role') public role = 'region';\n\n    /**\n     * Sets the `id` of the carousel.\n     * If not set, the `id` of the first carousel component will be `\"igx-carousel-0\"`.\n     * ```html\n     * <igx-carousel id=\"my-first-carousel\"></igx-carousel>\n     * ```\n     * @memberof IgxCarouselComponent\n     */\n    @HostBinding('attr.id')\n    @Input()\n    public id = `igx-carousel-${NEXT_ID++}`;\n\n    /**\n     * Returns the `aria-label` of the carousel.\n     *\n     * ```typescript\n     * let carousel = this.carousel.ariaLabel;\n     * ```\n     *\n     */\n    @HostBinding('attr.aria-label')\n    public ariaLabel = 'carousel';\n\n    /**\n     * Returns the `tabIndex` of the carousel component.\n     * ```typescript\n     * let tabIndex =  this.carousel.tabIndex;\n     * ```\n     * @memberof IgxCarouselComponent\n     */\n    @HostBinding('attr.tabindex')\n    get tabIndex() {\n        return 0;\n    }\n\n    /**\n     * Returns the class of the carousel component.\n     * ```typescript\n     * let class =  this.carousel.cssClass;\n     * ```\n     * @memberof IgxCarouselComponent\n     */\n    @HostBinding('class.igx-carousel')\n    public cssClass = 'igx-carousel';\n\n    /**\n     * Gets the `touch-action` style of the `list item`.\n     * ```typescript\n     * let touchAction = this.listItem.touchAction;\n     * ```\n     */\n    @HostBinding('style.touch-action')\n    get touchAction() {\n        return this.gesturesSupport ? 'pan-y' : 'auto';\n    }\n\n    /**\n     * Sets whether the carousel should `loop` back to the first slide after reaching the last slide.\n     * Default value is `true`.\n     * ```html\n     * <igx-carousel [loop]=\"false\"></igx-carousel>\n     * ```\n     * @memberOf IgxCarouselComponent\n     */\n    @Input() public loop = true;\n\n    /**\n     * Sets whether the carousel will `pause` the slide transitions on user interactions.\n     * Default value is `true`.\n     * ```html\n     *  <igx-carousel [pause]=\"false\"></igx-carousel>\n     * ```\n     * @memberOf IgxCarouselComponent\n     */\n    @Input() public pause = true;\n\n    /**\n     * Returns the time `interval` in milliseconds before the slide changes.\n     * ```typescript\n     * let timeInterval = this.carousel.interval;\n     * ```\n     * @memberof IgxCarouselComponent\n     */\n    @Input()\n    get interval(): number {\n        return this._interval;\n    }\n\n    /**\n     * Sets the time `interval` in milliseconds before the slide changes.\n     * If not set, the carousel will not change `slides` automatically.\n     * ```html\n     * <igx-carousel [interval] = \"1000\"></igx-carousel>\n     * ```\n     * @memberof IgxCarouselComponent\n     */\n    set interval(value: number) {\n        this._interval = +value;\n        this.restartInterval();\n    }\n\n    /**\n     * Controls whether the carousel should render the left/right `navigation` buttons.\n     * Default value is `true`.\n     * ```html\n     * <igx-carousel [navigation] = \"false\"></igx-carousel>\n     * ```\n     * @memberOf IgxCarouselComponent\n     */\n    @Input() public navigation = true;\n\n    /**\n     * Controls whether the carousel should support keyboard navigation.\n     * Default value is `true`.\n     * ```html\n     * <igx-carousel [keyboardSupport] = \"false\"></igx-carousel>\n     * ```\n     * @memberOf IgxCarouselComponent\n     */\n    @Input() public keyboardSupport = true;\n\n    /**\n     * Controls whether the carousel should support gestures.\n     * Default value is `true`.\n     * ```html\n     * <igx-carousel [gesturesSupport] = \"false\"></igx-carousel>\n     * ```\n     * @memberOf IgxCarouselComponent\n     */\n    @Input() public gesturesSupport = true;\n\n    /**\n     * Controls the maximum indexes that can be shown.\n     * Default value is `5`.\n     * ```html\n     * <igx-carousel [maximumIndicatorsCount] = \"10\"></igx-carousel>\n     * ```\n     * @memberOf IgxCarouselComponent\n     */\n    @Input() public maximumIndicatorsCount = 5;\n\n    /**\n     * Gets/sets the display mode of carousel indicators. It can be top or bottom.\n     * Default value is `bottom`.\n     * ```html\n     * <igx-carousel indicatorsOrientation='top'>\n     * <igx-carousel>\n     * ```\n     * @memberOf IgxSlideComponent\n     */\n    @Input() public indicatorsOrientation: CarouselIndicatorsOrientation = CarouselIndicatorsOrientation.bottom;\n\n    /**\n     * Gets/sets the animation type of carousel.\n     * Default value is `slide`.\n     * ```html\n     * <igx-carousel animationType='none'>\n     * <igx-carousel>\n     * ```\n     * @memberOf IgxSlideComponent\n     */\n    @Input() public animationType = CarouselAnimationType.slide;\n\n    /**\n     * An accessor that sets the resource strings.\n     * By default it uses EN resources.\n     */\n    @Input()\n    set resourceStrings(value: ICarouselResourceStrings) {\n        this._resourceStrings = Object.assign({}, this._resourceStrings, value);\n    }\n\n    /**\n     * An accessor that returns the resource strings.\n     */\n    get resourceStrings(): ICarouselResourceStrings {\n        return this._resourceStrings;\n    }\n\n    @ViewChild('defaultIndicator', { read: TemplateRef, static: true })\n    private defaultIndicator: TemplateRef<any>;\n\n    @ViewChild('defaultNextButton', { read: TemplateRef, static: true })\n    private defaultNextButton: TemplateRef<any>;\n\n    @ViewChild('defaultPrevButton', { read: TemplateRef, static: true })\n    private defaultPrevButton: TemplateRef<any>;\n\n    /**\n     * The custom template, if any, that should be used when rendering carousel indicators\n     *\n     * ```typescript\n     * // Set in typescript\n     * const myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\n     * myComponent.carousel.indicatorTemplate = myCustomTemplate;\n     * ```\n     * ```html\n     * <!-- Set in markup -->\n     *  <igx-carousel #carousel>\n     *      ...\n     *      <ng-template igxCarouselIndicator let-slide>\n     *         <igx-icon *ngIf=\"slide.active\"  fontSet=\"material\">brightness_7</igx-icon>\n     *         <igx-icon *ngIf=\"!slide.active\"  fontSet=\"material\">brightness_5</igx-icon>\n     *      </ng-template>\n     *  </igx-carousel>\n     * ```\n     */\n    @ContentChild(IgxCarouselIndicatorDirective, { read: TemplateRef, static: false })\n    public indicatorTemplate: TemplateRef<any> = null;\n\n    /**\n     * The custom template, if any, that should be used when rendering carousel next button\n     *\n     * ```typescript\n     * // Set in typescript\n     * const myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\n     * myComponent.carousel.nextButtonTemplate = myCustomTemplate;\n     * ```\n     * ```html\n     * <!-- Set in markup -->\n     *  <igx-carousel #carousel>\n     *      ...\n     *      <ng-template igxCarouselNextButton let-disabled>\n     *            <button igxButton=\"fab\" igxRipple=\"white\" [disabled]=\"disabled\">\n     *                <igx-icon fontSet=\"material\">add</igx-icon>\n     *           </button>\n     *      </ng-template>\n     *  </igx-carousel>\n     * ```\n     */\n    @ContentChild(IgxCarouselNextButtonDirective, { read: TemplateRef, static: false })\n    public nextButtonTemplate: TemplateRef<any> = null;\n\n    /**\n     * The custom template, if any, that should be used when rendering carousel previous button\n     *\n     * ```typescript\n     * // Set in typescript\n     * const myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\n     * myComponent.carousel.nextButtonTemplate = myCustomTemplate;\n     * ```\n     * ```html\n     * <!-- Set in markup -->\n     *  <igx-carousel #carousel>\n     *      ...\n     *      <ng-template igxCarouselPrevButton let-disabled>\n     *            <button igxButton=\"fab\" igxRipple=\"white\" [disabled]=\"disabled\">\n     *                <igx-icon fontSet=\"material\">remove</igx-icon>\n     *           </button>\n     *      </ng-template>\n     *  </igx-carousel>\n     * ```\n     */\n    @ContentChild(IgxCarouselPrevButtonDirective, { read: TemplateRef, static: false })\n    public prevButtonTemplate: TemplateRef<any> = null;\n\n    /**\n     * The collection of `slides` currently in the carousel.\n     * ```typescript\n     * let slides: QueryList<IgxSlideComponent> = this.carousel.slides;\n     * ```\n     * @memberOf IgxCarouselComponent\n     */\n    @ContentChildren(IgxSlideComponent)\n    public slides: QueryList<IgxSlideComponent>;\n\n    /**\n     * An event that is emitted after a slide transition has happened.\n     * Provides references to the `IgxCarouselComponent` and `IgxSlideComponent` as event arguments.\n     * ```html\n     * <igx-carousel (onSlideChanged)=\"onSlideChanged($event)\"></igx-carousel>\n     * ```\n     * @memberOf IgxCarouselComponent\n     */\n    @Output() public onSlideChanged = new EventEmitter<ISlideEventArgs>();\n\n    /**\n     * An event that is emitted after a slide has been added to the carousel.\n     * Provides references to the `IgxCarouselComponent` and `IgxSlideComponent` as event arguments.\n     * ```html\n     * <igx-carousel (onSlideAdded)=\"onSlideAdded($event)\"></igx-carousel>\n     * ```\n     * @memberOf IgxCarouselComponent\n     */\n    @Output() public onSlideAdded = new EventEmitter<ISlideEventArgs>();\n\n    /**\n     * An event that is emitted after a slide has been removed from the carousel.\n     * Provides references to the `IgxCarouselComponent` and `IgxSlideComponent` as event arguments.\n     * ```html\n     * <igx-carousel (onSlideRemoved)=\"onSlideRemoved($event)\"></igx-carousel>\n     * ```\n     * @memberOf IgxCarouselComponent\n     */\n    @Output() public onSlideRemoved = new EventEmitter<ISlideEventArgs>();\n\n    /**\n     * An event that is emitted after the carousel has been paused.\n     * Provides a reference to the `IgxCarouselComponent` as an event argument.\n     * ```html\n     * <igx-carousel (onCarouselPaused)=\"onCarouselPaused($event)\"></igx-carousel>\n     * ```\n     * @memberOf IgxCarouselComponent\n     */\n    @Output() public onCarouselPaused = new EventEmitter<IgxCarouselComponent>();\n\n    /**\n     * An event that is emitted after the carousel has resumed transitioning between `slides`.\n     * Provides a reference to the `IgxCarouselComponent` as an event argument.\n     * ```html\n     * <igx-carousel (onCarouselPlaying)=\"onCarouselPlaying($event)\"></igx-carousel>\n     * ```\n     * @memberOf IgxCarouselComponent\n     */\n    @Output() public onCarouselPlaying = new EventEmitter<IgxCarouselComponent>();\n\n    private _interval: number;\n    private _resourceStrings = CurrentResourceStrings.CarouselResStrings;\n    private lastInterval: any;\n    private playing: boolean;\n    private stoppedByInteraction: boolean;\n    private destroyed: boolean;\n    private destroy$ = new Subject<any>();\n    private differ: IterableDiffer<IgxSlideComponent> | null = null;\n    private enterAnimationPlayer?: AnimationPlayer;\n    private leaveAnimationPlayer?: AnimationPlayer;\n    private currentSlide: IgxSlideComponent;\n    private previousSlide: IgxSlideComponent;\n    private animationDuration = 320;\n    private incomingSlide: IgxSlideComponent;\n    private animationPosition = 0;\n    private newDuration = 0;\n\n    constructor(private element: ElementRef, private iterableDiffers: IterableDiffers,\n        private builder: AnimationBuilder, private platformUtil: PlatformUtil) {\n        this.differ = this.iterableDiffers.find([]).create(null);\n    }\n\n    /** @hidden */\n    public ngAfterContentInit() {\n        this.slides.changes\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((change: QueryList<IgxSlideComponent>) => { this.initSlides(change); });\n\n        this.initSlides(this.slides);\n    }\n\n    /** @hidden */\n    public ngOnDestroy() {\n        this.destroy$.next(true);\n        this.destroy$.complete();\n        this.destroyed = true;\n        if (this.lastInterval) {\n            clearInterval(this.lastInterval);\n        }\n    }\n\n    private unsubscriber(slide: IgxSlideComponent) {\n        return merge(this.destroy$, slide.isDestroyed);\n    }\n\n    private onSlideActivated(slide: IgxSlideComponent) {\n        if (slide.active && slide !== this.currentSlide) {\n            if (slide.direction === Direction.NONE) {\n                const newIndex = slide.index;\n                slide.direction = newIndex > this.current ? Direction.NEXT : Direction.PREV;\n            }\n\n            if (this.currentSlide) {\n                if (this.previousSlide && this.previousSlide.previous) {\n                    this.previousSlide.previous = false;\n                }\n                this.currentSlide.direction = slide.direction;\n                this.currentSlide.active = false;\n\n                this.previousSlide = this.currentSlide;\n                this.currentSlide = slide;\n                if (this.animationType !== CarouselAnimationType.none) {\n                    if (this.animationStarted(this.leaveAnimationPlayer) || this.animationStarted(this.enterAnimationPlayer)) {\n                        requestAnimationFrame(() => {\n                            this.resetAnimations();\n                            this.playAnimations();\n                        });\n                    } else {\n                        this.playAnimations();\n                    }\n                }\n            } else {\n                this.currentSlide = slide;\n            }\n            this.onSlideChanged.emit({ carousel: this, slide });\n            this.restartInterval();\n        }\n    }\n\n    private playAnimations() {\n        this.playLeaveAnimation();\n        this.playEnterAnimation();\n    }\n\n    private finishAnimations() {\n        if (this.animationStarted(this.leaveAnimationPlayer)) {\n            this.leaveAnimationPlayer.finish();\n        }\n\n        if (this.animationStarted(this.enterAnimationPlayer)) {\n            this.enterAnimationPlayer.finish();\n        }\n    }\n\n    private resetAnimations() {\n        if (this.animationStarted(this.leaveAnimationPlayer)) {\n            this.leaveAnimationPlayer.reset();\n        }\n\n        if (this.animationStarted(this.enterAnimationPlayer)) {\n            this.enterAnimationPlayer.reset();\n        }\n    }\n\n    private animationStarted(animation: AnimationPlayer): boolean {\n        return animation && animation.hasStarted();\n    }\n\n    private getAnimation(): CarouselAnimationSettings {\n        let duration;\n        if (this.newDuration) {\n            duration = this.animationPosition ? this.animationPosition * this.newDuration : this.newDuration;\n        } else {\n            duration = this.animationPosition ? this.animationPosition * this.animationDuration : this.animationDuration;\n        }\n\n        switch (this.animationType) {\n            case CarouselAnimationType.slide:\n                const trans = this.animationPosition ? this.animationPosition * 100 : 100;\n                return {\n                    enterAnimation: useAnimation(slideInLeft,\n                        {\n                            params: {\n                                delay: '0s',\n                                duration: `${duration}ms`,\n                                endOpacity: 1,\n                                startOpacity: 1,\n                                fromPosition: `translateX(${this.currentSlide.direction === 1 ? trans : -trans}%)`,\n                                toPosition: 'translateX(0%)'\n                            }\n                        }),\n                    leaveAnimation: useAnimation(slideInLeft,\n                        {\n                            params: {\n                                delay: '0s',\n                                duration: `${duration}ms`,\n                                endOpacity: 1,\n                                startOpacity: 1,\n                                fromPosition: `translateX(0%)`,\n                                toPosition: `translateX(${this.currentSlide.direction === 1 ? -trans : trans}%)`,\n                            }\n                        })\n                };\n            case CarouselAnimationType.fade:\n                return {\n                    enterAnimation: useAnimation(fadeIn,\n                        { params: { duration: `${duration}ms`, startOpacity: `${this.animationPosition}` } }),\n                    leaveAnimation: null\n                };\n        }\n        return {\n            enterAnimation: null,\n            leaveAnimation: null\n        };\n    }\n\n    private playEnterAnimation() {\n        const animation = this.getAnimation().enterAnimation;\n        if (!animation) {\n            return;\n        }\n        const animationBuilder = this.builder.build(animation);\n\n        this.enterAnimationPlayer = animationBuilder.create(this.currentSlide.nativeElement);\n\n        this.enterAnimationPlayer.onDone(() => {\n            if (this.enterAnimationPlayer) {\n                this.enterAnimationPlayer.reset();\n                this.enterAnimationPlayer = null;\n            }\n            this.animationPosition = 0;\n            this.newDuration = 0;\n            this.previousSlide.previous = false;\n        });\n        this.previousSlide.previous = true;\n        this.enterAnimationPlayer.play();\n    }\n\n    private playLeaveAnimation() {\n        const animation = this.getAnimation().leaveAnimation;\n        if (!animation) {\n            return;\n        }\n\n        const animationBuilder = this.builder.build(animation);\n        this.leaveAnimationPlayer = animationBuilder.create(this.previousSlide.nativeElement);\n\n        this.leaveAnimationPlayer.onDone(() => {\n            if (this.leaveAnimationPlayer) {\n                this.leaveAnimationPlayer.reset();\n                this.leaveAnimationPlayer = null;\n            }\n            this.animationPosition = 0;\n            this.newDuration = 0;\n        });\n        this.leaveAnimationPlayer.play();\n    }\n\n    private initSlides(change: QueryList<IgxSlideComponent>) {\n        const diff = this.differ.diff(change.toArray());\n        if (diff) {\n            this.slides.reduce((any, c, ind) => c.index = ind, 0); // reset slides indexes\n            diff.forEachAddedItem((record: IterableChangeRecord<IgxSlideComponent>) => {\n                const slide = record.item;\n                this.onSlideAdded.emit({ carousel: this, slide });\n                if (slide.active) {\n                    this.currentSlide = slide;\n                }\n                slide.activeChange.pipe(takeUntil(this.unsubscriber(slide))).subscribe(() => this.onSlideActivated(slide));\n            });\n\n            diff.forEachRemovedItem((record: IterableChangeRecord<IgxSlideComponent>) => {\n                const slide = record.item;\n                this.onSlideRemoved.emit({ carousel: this, slide });\n                if (slide.active) {\n                    slide.active = false;\n                    this.currentSlide = this.get(slide.index < this.total ? slide.index : this.total - 1);\n                }\n            });\n\n            this.updateSlidesSelection();\n        }\n    }\n\n    private updateSlidesSelection() {\n        requestAnimationFrame(() => {\n            if (this.currentSlide) {\n                this.currentSlide.active = true;\n                const activeSlides = this.slides.filter(slide => slide.active && slide.index !== this.currentSlide.index);\n                activeSlides.forEach(slide => { slide.active = false; });\n            } else if (this.total) {\n                this.slides.first.active = true;\n            }\n            this.play();\n        });\n    }\n\n    /** @hidden */\n    public get getIndicatorTemplate(): TemplateRef<any> {\n        if (this.indicatorTemplate) {\n            return this.indicatorTemplate;\n        }\n        return this.defaultIndicator;\n    }\n\n    /** @hidden */\n    public get getNextButtonTemplate(): TemplateRef<any> {\n        if (this.nextButtonTemplate) {\n            return this.nextButtonTemplate;\n        }\n        return this.defaultNextButton;\n    }\n\n    /** @hidden */\n    public get getPrevButtonTemplate(): TemplateRef<any> {\n        if (this.prevButtonTemplate) {\n            return this.prevButtonTemplate;\n        }\n        return this.defaultPrevButton;\n    }\n\n    /** @hidden */\n    public setAriaLabel(slide) {\n        return `Item ${slide.index + 1} of ${this.total}`;\n    }\n\n    /** @hidden */\n    public get indicatorsOrientationClass() {\n        return `igx-carousel-indicators--${this.indicatorsOrientation}`;\n    }\n\n    /** @hidden */\n    public get showIndicators(): boolean {\n        return this.total <= this.maximumIndicatorsCount && this.total > 0;\n    }\n\n    /** @hidden */\n    public get showIndicatorsLabel(): boolean {\n        return this.total > this.maximumIndicatorsCount;\n    }\n\n    /** @hidden */\n    public get getCarouselLabel() {\n        return `${this.current + 1} ${this.resourceStrings.igx_carousel_of} ${this.total}`;\n    }\n\n    /**\n     * Returns the total number of `slides` in the carousel.\n     * ```typescript\n     * let slideCount =  this.carousel.total;\n     * ```\n     * @memberOf IgxCarouselComponent\n     */\n    public get total(): number {\n        return this.slides.length;\n    }\n\n    /**\n     * The index of the slide being currently shown.\n     * ```typescript\n     * let currentSlideNumber =  this.carousel.current;\n     * ```\n     * @memberOf IgxCarouselComponent\n     */\n    public get current(): number {\n        return !this.currentSlide ? 0 : this.currentSlide.index;\n    }\n\n    private getNextIndex(): number {\n        return (this.current + 1) % this.total;\n    }\n\n    private getPrevIndex(): number {\n        return this.current - 1 < 0 ? this.total - 1 : this.current - 1;\n    }\n\n    /**\n     * Returns a boolean indicating if the carousel is playing.\n     * ```typescript\n     * let isPlaying =  this.carousel.isPlaying;\n     * ```\n     * @memberOf IgxCarouselComponent\n     */\n    public get isPlaying(): boolean {\n        return this.playing;\n    }\n\n    /**\n     * Returns а boolean indicating if the carousel is destroyed.\n     * ```typescript\n     * let isDestroyed =  this.carousel.isDestroyed;\n     * ```\n     * @memberOf IgxCarouselComponent\n     */\n    public get isDestroyed(): boolean {\n        return this.destroyed;\n    }\n    /**\n     * Returns a reference to the carousel element in the DOM.\n     * ```typescript\n     * let nativeElement =  this.carousel.nativeElement;\n     * ```\n     * @memberof IgxCarouselComponent\n     */\n    get nativeElement(): any {\n        return this.element.nativeElement;\n    }\n\n    /**\n     * Returns the slide corresponding to the provided `index` or null.\n     * ```typescript\n     * let slide1 =  this.carousel.get(1);\n     * ```\n     * @memberOf IgxCarouselComponent\n     */\n    public get(index: number): IgxSlideComponent {\n        return this.slides.find((slide) => slide.index === index);\n    }\n\n    /**\n     * Adds a new slide to the carousel.\n     * ```typescript\n     * this.carousel.add(newSlide);\n     * ```\n     * @memberOf IgxCarouselComponent\n     */\n    public add(slide: IgxSlideComponent) {\n        const newSlides = this.slides.toArray();\n        newSlides.push(slide);\n        this.slides.reset(newSlides);\n        this.slides.notifyOnChanges();\n    }\n\n    /**\n     * Removes a slide from the carousel.\n     * ```typescript\n     * this.carousel.remove(slide);\n     * ```\n     * @memberOf IgxCarouselComponent\n     */\n    public remove(slide: IgxSlideComponent) {\n        if (slide && slide === this.get(slide.index)) { // check if the requested slide for delete is present in the carousel\n            const newSlides = this.slides.toArray();\n            newSlides.splice(slide.index, 1);\n            this.slides.reset(newSlides);\n            this.slides.notifyOnChanges();\n        }\n    }\n\n    /**\n     * Kicks in a transition for a given slide with a given `direction`.\n     * ```typescript\n     * this.carousel.select(this.carousel.get(2), Direction.NEXT);\n     * ```\n     * @memberOf IgxCarouselComponent\n     */\n    public select(slide: IgxSlideComponent, direction: Direction = Direction.NONE) {\n        if (slide && slide !== this.currentSlide) {\n            slide.direction = direction;\n            slide.active = true;\n        }\n    }\n\n    /**\n     * Transitions to the next slide in the carousel.\n     * ```typescript\n     * this.carousel.next();\n     * ```\n     * @memberOf IgxCarouselComponent\n     */\n    public next() {\n        const index = this.getNextIndex();\n\n        if (index === 0 && !this.loop) {\n            this.stop();\n            return;\n        }\n        return this.select(this.get(index), Direction.NEXT);\n    }\n\n    /**\n     * Transitions to the previous slide in the carousel.\n     * ```typescript\n     * this.carousel.prev();\n     * ```\n     * @memberOf IgxCarouselComponent\n     */\n    public prev() {\n        const index = this.getPrevIndex();\n\n        if (!this.loop && index === this.total - 1) {\n            this.stop();\n            return;\n        }\n        return this.select(this.get(index), Direction.PREV);\n    }\n\n    /**\n     * Resumes playing of the carousel if in paused state.\n     * No operation otherwise.\n     * ```typescript\n     * this.carousel.play();\n     * }\n     * ```\n     * @memberOf IgxCarouselComponent\n     */\n    public play() {\n        if (!this.playing) {\n            this.playing = true;\n            this.onCarouselPlaying.emit(this);\n            this.restartInterval();\n            this.stoppedByInteraction = false;\n        }\n    }\n\n    /**\n     * Stops slide transitions if the `pause` option is set to `true`.\n     * No operation otherwise.\n     * ```typescript\n     *  this.carousel.stop();\n     * }\n     * ```\n     * @memberOf IgxCarouselComponent\n     */\n    public stop() {\n        if (this.pause) {\n            this.playing = false;\n            this.onCarouselPaused.emit(this);\n            this.resetInterval();\n        }\n    }\n\n    private resetInterval() {\n        if (this.lastInterval) {\n            clearInterval(this.lastInterval);\n            this.lastInterval = null;\n        }\n    }\n\n    private restartInterval() {\n        this.resetInterval();\n\n        if (!isNaN(this.interval) && this.interval > 0 && this.platformUtil.isBrowser) {\n            this.lastInterval = setInterval(() => {\n                const tick = +this.interval;\n                if (this.playing && this.total && !isNaN(tick) && tick > 0) {\n                    this.next();\n                } else {\n                    this.stop();\n                }\n            }, this.interval);\n        }\n    }\n\n    /** @hidden */\n    public get nextButtonDisabled() {\n        return !this.loop && this.current === (this.total - 1);\n    }\n\n    /** @hidden */\n    public get prevButtonDisabled() {\n        return !this.loop && this.current === 0;\n    }\n\n    /** @hidden */\n    @HostListener('keydown.arrowright', ['$event'])\n    public onKeydownArrowRight(event) {\n        if (this.keyboardSupport) {\n            event.preventDefault();\n            this.next();\n            requestAnimationFrame(() => this.nativeElement.focus());\n        }\n    }\n\n    /** @hidden */\n    @HostListener('keydown.arrowleft', ['$event'])\n    public onKeydownArrowLeft(event) {\n        if (this.keyboardSupport) {\n            event.preventDefault();\n            this.prev();\n            requestAnimationFrame(() => this.nativeElement.focus());\n        }\n    }\n\n    /** @hidden */\n    @HostListener('tap', ['$event'])\n    public onTap(event) {\n        // play pause only when tap on slide\n        if (event.target && event.target.classList.contains('igx-slide')) {\n            if (this.isPlaying) {\n                if (this.pause) {\n                    this.stoppedByInteraction = true;\n                }\n                this.stop();\n            } else if (this.stoppedByInteraction) {\n                this.play();\n            }\n        }\n    }\n\n    /** @hidden */\n    @HostListener('keydown.home', ['$event'])\n    public onKeydownHome(event) {\n        if (this.keyboardSupport && this.slides.length > 0) {\n            event.preventDefault();\n            this.slides.first.active = true;\n            requestAnimationFrame(() => this.nativeElement.focus());\n        }\n    }\n\n    /** @hidden */\n    @HostListener('keydown.end', ['$event'])\n    public onKeydownEnd(event) {\n        if (this.keyboardSupport && this.slides.length > 0) {\n            event.preventDefault();\n            this.slides.last.active = true;\n            requestAnimationFrame(() => this.nativeElement.focus());\n        }\n    }\n\n    /** @hidden */\n    @HostListener('mouseenter')\n    public onMouseEnter() {\n        if (this.pause && this.isPlaying) {\n            this.stoppedByInteraction = true;\n        }\n        this.stop();\n    }\n\n    /** @hidden */\n    @HostListener('mouseleave')\n    public onMouseLeave() {\n        if (this.stoppedByInteraction) {\n            this.play();\n        }\n    }\n\n    /** @hidden */\n    @HostListener('panleft', ['$event'])\n    public onPanLeft(event) {\n        this.pan(event);\n    }\n\n    /** @hidden */\n    @HostListener('panright', ['$event'])\n    public onPanRight(event) {\n        this.pan(event);\n    }\n\n    private resetSlideStyles(slide: IgxSlideComponent) {\n        slide.nativeElement.style.transform = '';\n        slide.nativeElement.style.opacity = '';\n    }\n\n    private pan(event) {\n        const slideWidth = this.currentSlide.nativeElement.offsetWidth;\n        const panOffset = (slideWidth / 1000);\n        const deltaX = event.deltaX;\n        const index = deltaX < 0 ? this.getNextIndex() : this.getPrevIndex();\n        const offset = deltaX < 0 ? slideWidth + deltaX : -slideWidth + deltaX;\n\n        if (!this.gesturesSupport || event.isFinal || Math.abs(deltaX) + panOffset >= slideWidth) {\n            return;\n        }\n\n        if (!this.loop && ((this.current === 0 && deltaX > 0) || (this.current === this.total - 1 && deltaX < 0))) {\n            this.incomingSlide = null;\n            return;\n        }\n\n        event.preventDefault();\n        if (this.isPlaying) {\n            this.stoppedByInteraction = true;\n            this.stop();\n        }\n\n        if (this.previousSlide && this.previousSlide.previous) {\n            this.previousSlide.previous = false;\n        }\n        this.finishAnimations();\n\n        if (this.incomingSlide) {\n            if (index !== this.incomingSlide.index) {\n                this.resetSlideStyles(this.incomingSlide);\n                this.incomingSlide.previous = false;\n                this.incomingSlide = this.get(index);\n            }\n        } else {\n            this.incomingSlide = this.get(index);\n        }\n        this.incomingSlide.previous = true;\n\n        if (this.animationType === CarouselAnimationType.fade) {\n            this.currentSlide.nativeElement.style.opacity = `${Math.abs(offset) / slideWidth}`;\n        } else {\n            this.currentSlide.nativeElement.style.transform = `translateX(${deltaX}px)`;\n            this.incomingSlide.nativeElement.style.transform = `translateX(${offset}px)`;\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('panend', ['$event'])\n    public onPanEnd(event) {\n        if (!this.gesturesSupport) {\n            return;\n        }\n        event.preventDefault();\n\n        const slideWidth = this.currentSlide.nativeElement.offsetWidth;\n        const panOffset = (slideWidth / 1000);\n        const deltaX = Math.abs(event.deltaX) + panOffset < slideWidth ? Math.abs(event.deltaX) : slideWidth - panOffset;\n        const velocity = Math.abs(event.velocity);\n        this.resetSlideStyles(this.currentSlide);\n        if (this.incomingSlide) {\n            this.resetSlideStyles(this.incomingSlide);\n            if (slideWidth / 2 < deltaX || velocity > 1) {\n                this.incomingSlide.direction = event.deltaX < 0 ? Direction.NEXT : Direction.PREV;\n                this.incomingSlide.previous = false;\n\n                this.animationPosition = this.animationType === CarouselAnimationType.fade ?\n                    deltaX / slideWidth : (slideWidth - deltaX) / slideWidth;\n\n                if (velocity > 1) {\n                    this.newDuration = this.animationDuration / velocity;\n                }\n                this.incomingSlide.active = true;\n            } else {\n                this.currentSlide.direction = event.deltaX > 0 ? Direction.NEXT : Direction.PREV;\n                this.previousSlide = this.incomingSlide;\n                this.previousSlide.previous = true;\n                this.animationPosition = this.animationType === CarouselAnimationType.fade ?\n                    Math.abs((slideWidth - deltaX) / slideWidth) : deltaX / slideWidth;\n                this.playAnimations();\n            }\n        }\n\n        if (this.stoppedByInteraction) {\n            this.play();\n        }\n    }\n}\n\nexport interface ISlideEventArgs extends IBaseEventArgs {\n    carousel: IgxCarouselComponent;\n    slide: IgxSlideComponent;\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [\n        IgxCarouselComponent,\n        IgxSlideComponent,\n        IgxCarouselIndicatorDirective,\n        IgxCarouselNextButtonDirective,\n        IgxCarouselPrevButtonDirective\n    ],\n    exports: [\n        IgxCarouselComponent,\n        IgxSlideComponent,\n        IgxCarouselIndicatorDirective,\n        IgxCarouselNextButtonDirective,\n        IgxCarouselPrevButtonDirective\n    ],\n    imports: [CommonModule, IgxIconModule]\n})\nexport class IgxCarouselModule {\n}\n","import { Directive } from '@angular/core';\n\n/**\n * @hidden\n */\n@Directive({\n    selector: '[igxComboHeader]'\n})\nexport class IgxComboHeaderDirective {\n}\n\n/**\n * @hidden\n */\n@Directive({\n    selector: '[igxComboFooter]'\n})\nexport class IgxComboFooterDirective {\n}\n\n/**\n * @hidden\n */\n@Directive({\n    selector: '[igxComboItem]'\n})\nexport class IgxComboItemDirective {\n}\n\n/**\n * @hidden\n */\n@Directive({\n    selector: '[igxComboEmpty]'\n})\nexport class IgxComboEmptyDirective {\n}\n\n/**\n * @hidden\n */\n@Directive({\n    selector: '[igxComboHeaderItem]'\n})\n\nexport class IgxComboHeaderItemDirective {\n}\n\n/**\n * @hidden\n */\n@Directive({\n    selector: '[igxComboAddItem]'\n})\nexport class IgxComboAddItemDirective {\n}\n\n/**\n * @hidden\n */\n@Directive({\n    selector: '[igxComboToggleIcon]'\n})\nexport class IgxComboToggleIconDirective {\n}\n\n/**\n * @hidden\n */\n@Directive({\n    selector: '[igxComboClearIcon]'\n})\nexport class IgxComboClearIconDirective {\n}\n\n","import { IgxComboBase } from './combo.common';\nimport { Injectable } from '@angular/core';\n\n/**\n * @hidden\n */\n@Injectable()\nexport class IgxComboAPIService {\n    protected combo: IgxComboBase;\n\n    public disableTransitions = false;\n\n    public register(combo: IgxComboBase) {\n        this.combo = combo;\n    }\n\n\n    public clear(): void {\n        this.combo = null;\n    }\n\n    public get valueKey() {\n        return this.combo.valueKey !== null && this.combo.valueKey !== undefined ? this.combo.valueKey : null;\n    }\n\n    public get item_focusable(): boolean {\n        return false;\n    }\n    public get isRemote(): boolean {\n        return this.combo.isRemote;\n    }\n\n    public add_custom_item(): void {\n        if (!this.combo) {\n            return;\n        }\n        this.combo.addItemToCollection();\n    }\n\n    public get comboID(): string {\n        return this.combo.id;\n    }\n\n    public set_selected_item(itemID: any, event?: Event): void {\n        const selected = this.combo.isItemSelected(itemID);\n        if (itemID === null || itemID === undefined) {\n            return;\n        }\n        if (!selected) {\n            this.combo.selectItems([itemID], false, event);\n        } else {\n            this.combo.deselectItems([itemID], event);\n        }\n    }\n\n    public is_item_selected(itemID: any): boolean {\n        return this.combo.isItemSelected(itemID);\n    }\n}\n","import {\n    Component,\n    ElementRef,\n    HostBinding,\n    Inject,\n    Input,\n    DoCheck\n} from '@angular/core';\nimport { IgxDropDownItemComponent } from '../drop-down/drop-down-item.component';\nimport { IGX_DROPDOWN_BASE, IDropDownBase, Navigate } from '../drop-down/drop-down.common';\nimport { IgxComboAPIService } from './combo.api';\nimport { IgxSelectionAPIService } from '../core/selection';\n\n/** @hidden */\n@Component({\n    selector: 'igx-combo-item',\n    templateUrl: 'combo-item.component.html'\n})\nexport class IgxComboItemComponent extends IgxDropDownItemComponent implements DoCheck {\n\n    /**\n     * Gets the height of a list item\n     * @hidden\n     */\n    @Input()\n    @HostBinding('style.height.px')\n    public itemHeight = '';\n\n    /**\n     * @hidden\n     */\n    public get itemID() {\n        const valueKey = this.comboAPI.valueKey;\n        return valueKey !== null ? this.value[valueKey] : this.value;\n    }\n\n    /**\n     * @hidden\n     */\n    public get comboID() {\n        return this.comboAPI.comboID;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public get disableTransitions() {\n        return this.comboAPI.disableTransitions;\n    }\n\n    constructor(\n        protected comboAPI: IgxComboAPIService,\n        @Inject(IGX_DROPDOWN_BASE) protected dropDown: IDropDownBase,\n        protected elementRef: ElementRef,\n        @Inject(IgxSelectionAPIService) protected selection: IgxSelectionAPIService\n    ) {\n        super(dropDown, elementRef, null, selection);\n    }\n\n    /**\n     * @hidden\n     */\n    get selected(): boolean {\n        return this.comboAPI.is_item_selected(this.itemID);\n    }\n\n    set selected(value: boolean) {\n        if (this.isHeader) {\n            return;\n        }\n        this._selected = value;\n    }\n\n    /**\n     * @hidden\n     */\n    isVisible(direction: Navigate): boolean {\n        const rect = this.element.nativeElement.getBoundingClientRect();\n        const parentDiv = this.element.nativeElement.parentElement.parentElement.getBoundingClientRect();\n        if (direction === Navigate.Down) {\n            return rect.y + rect.height <= parentDiv.y + parentDiv.height;\n        }\n        return rect.y >= parentDiv.y;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    clicked(event): void {\n        this.comboAPI.disableTransitions = false;\n        if (!this.isSelectable) { return; }\n        this.dropDown.navigateItem(this.index);\n        this.comboAPI.set_selected_item(this.itemID, event);\n    }\n\n    /**\n     * @hidden\n     * @internal\n     * The event that is prevented is the click on the checkbox label element.\n     * That is the only visible element that a user can interact with.\n     * The click propagates to the host and the preventDefault is to stop it from\n     * switching focus to the input it's base on.\n     * The toggle happens in an internal handler in the drop-down on the next task queue cycle.\n     */\n    disableCheck(event: MouseEvent) {\n        event.preventDefault();\n    }\n\n    ngDoCheck() {\n    }\n}\n","import { ElementRef, EventEmitter, InjectionToken } from '@angular/core';\nimport { CancelableEventArgs, CancelableBrowserEventArgs } from '../core/utils';\n\nexport const IGX_COMBO_COMPONENT = new InjectionToken<IgxComboBase>('IgxComboComponentToken');\n\n/** @hidden @internal TODO: Evaluate */\nexport interface IgxComboBase {\n    id: string;\n    data: any[];\n    valueKey: string;\n    groupKey: string;\n    isRemote: boolean;\n    filteredData: any[];\n    totalItemCount: number;\n    itemsMaxHeight: number;\n    itemHeight: number;\n    searchValue: string;\n    searchInput: ElementRef<HTMLInputElement>;\n    comboInput: ElementRef<HTMLInputElement>;\n    onOpened: EventEmitter<void>;\n    onOpening: EventEmitter<CancelableEventArgs>;\n    onClosing: EventEmitter<CancelableBrowserEventArgs>;\n    onClosed: EventEmitter<void>;\n    focusSearchInput(opening?: boolean): void;\n    triggerCheck(): void;\n    addItemToCollection(): void;\n    isAddButtonVisible(): boolean;\n    handleInputChange(event?: string): void;\n    isItemSelected(itemID: any): boolean;\n    selectItems(itemIDs: any[], clearSelection?: boolean, event?: Event): void;\n    deselectItems(itemIDs: any[], event?: Event): void;\n}\n","import { IgxComboItemComponent } from './combo-item.component';\nimport { Component } from '@angular/core';\n\n/**\n * @hidden\n */\n@Component({\n    selector: 'igx-combo-add-item',\n    template: '<ng-content></ng-content>',\n    providers: [{ provide: IgxComboItemComponent, useExisting: IgxComboAddItemComponent}]\n})\nexport class IgxComboAddItemComponent extends IgxComboItemComponent {\n    get selected(): boolean {\n        return false;\n    }\n    set selected(value: boolean) {\n    }\n\n    /**\n     * @inheritdoc\n     */\n    clicked(event?) {\n        this.comboAPI.disableTransitions = false;\n        this.comboAPI.add_custom_item();\n    }\n}\n","import {\n    ChangeDetectorRef, Component, ElementRef, Inject, QueryList, OnDestroy, AfterViewInit, ContentChildren, Optional\n} from '@angular/core';\nimport { IgxComboBase, IGX_COMBO_COMPONENT } from './combo.common';\nimport { IDropDownBase, IGX_DROPDOWN_BASE } from '../drop-down/drop-down.common';\nimport { IgxDropDownComponent } from '../drop-down/drop-down.component';\nimport { DropDownActionKey } from '../drop-down/drop-down.common';\nimport { IgxComboAddItemComponent } from './combo-add-item.component';\nimport { IgxComboAPIService } from './combo.api';\nimport { IgxDropDownItemBaseDirective } from '../drop-down/drop-down-item.base';\nimport { IgxSelectionAPIService } from '../core/selection';\nimport { IgxComboItemComponent } from './combo-item.component';\nimport { DisplayDensityToken, IDisplayDensityOptions } from '../core/density';\n\n/** @hidden */\n@Component({\n    selector: 'igx-combo-drop-down',\n    templateUrl: '../drop-down/drop-down.component.html',\n    providers: [{ provide: IGX_DROPDOWN_BASE, useExisting: IgxComboDropDownComponent }]\n})\nexport class IgxComboDropDownComponent extends IgxDropDownComponent implements IDropDownBase, OnDestroy, AfterViewInit {\n    constructor(\n        protected elementRef: ElementRef,\n        protected cdr: ChangeDetectorRef,\n        protected selection: IgxSelectionAPIService,\n        @Inject(IGX_COMBO_COMPONENT) public combo: IgxComboBase,\n        protected comboAPI: IgxComboAPIService,\n        @Optional() @Inject(DisplayDensityToken) protected _displayDensityOptions: IDisplayDensityOptions) {\n        super(elementRef, cdr, selection, _displayDensityOptions);\n    }\n\n    /** @hidden @internal */\n   public get scrollContainer(): HTMLElement {\n        return this.virtDir.dc.location.nativeElement;\n    }\n\n    protected get isScrolledToLast(): boolean {\n        const scrollTop = this.virtDir.scrollPosition;\n        const scrollHeight = this.virtDir.getScroll().scrollHeight;\n        return Math.floor(scrollTop + this.virtDir.igxForContainerSize) === scrollHeight;\n    }\n\n    protected get lastVisibleIndex(): number {\n        return this.combo.totalItemCount ?\n            Math.floor(this.combo.itemsMaxHeight / this.combo.itemHeight) :\n            this.items.length - 1;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @ContentChildren(IgxComboItemComponent, { descendants: true })\n    public children: QueryList<IgxDropDownItemBaseDirective> = null;\n\n    /**\n     * @hidden @internal\n     */\n    public onFocus() {\n        this.focusedItem = this._focusedItem || this.items[0];\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onBlur(evt?) {\n        this.focusedItem = null;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onToggleOpened() {\n        this.onOpened.emit();\n    }\n\n    /**\n     * @hidden\n     */\n    public navigateFirst() {\n        this.navigateItem(this.virtDir.igxForOf.findIndex(e => !e.isHeader));\n    }\n\n    /**\n     * @hidden\n     */\n    public navigatePrev() {\n        if (this._focusedItem && this._focusedItem.index === 0 && this.virtDir.state.startIndex === 0) {\n            this.combo.focusSearchInput(false);\n        } else {\n            super.navigatePrev();\n        }\n    }\n\n\n    /**\n     * @hidden\n     */\n    public navigateNext() {\n        const lastIndex = this.combo.totalItemCount ? this.combo.totalItemCount - 1 : this.virtDir.igxForOf.length - 1;\n        if (this._focusedItem && this._focusedItem.index === lastIndex) {\n            this.focusAddItemButton();\n        } else {\n            super.navigateNext();\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public selectItem(item: IgxDropDownItemBaseDirective) {\n        if (item === null || item === undefined) {\n            return;\n        }\n        this.comboAPI.set_selected_item(item.itemID);\n        this._focusedItem = item;\n    }\n\n    private focusAddItemButton() {\n        if (this.combo.isAddButtonVisible()) {\n            this.focusedItem = this.items[this.items.length - 1];\n        }\n    }\n\n    protected scrollToHiddenItem(newItem: any): void { }\n\n    protected scrollHandler = () => {\n        this.comboAPI.disableTransitions = true;\n    }\n\n    protected get sortedChildren(): IgxDropDownItemBaseDirective[] {\n        if (this.children !== undefined) {\n            return this.children.toArray()\n                .sort((a: IgxDropDownItemBaseDirective, b: IgxDropDownItemBaseDirective) => {\n                    return a.index - b.index;\n                });\n        }\n        return null;\n    }\n\n    /**\n     * Get all non-header items\n     *\n     * ```typescript\n     * let myDropDownItems = this.dropdown.items;\n     * ```\n     */\n    public get items(): IgxComboItemComponent[] {\n        const items: IgxComboItemComponent[] = [];\n        if (this.children !== undefined) {\n            const sortedChildren = this.sortedChildren as IgxComboItemComponent[];\n            for (const child of sortedChildren) {\n                if (!child.isHeader) {\n                    items.push(child);\n                }\n            }\n        }\n\n        return items;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public updateScrollPosition() {\n        this.virtDir.getScroll().scrollTop = this._scrollPosition;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onItemActionKey(key: DropDownActionKey) {\n        switch (key) {\n            case DropDownActionKey.ENTER:\n                this.handleEnter();\n                break;\n            case DropDownActionKey.SPACE:\n                this.handleSpace();\n                break;\n            case DropDownActionKey.ESCAPE:\n                this.close();\n        }\n    }\n\n    private handleEnter() {\n        if (this.isAddItemFocused()) {\n            this.combo.addItemToCollection();\n        } else {\n            this.close();\n        }\n    }\n\n    private handleSpace() {\n        if (this.isAddItemFocused()) {\n            return;\n        } else {\n            this.selectItem(this.focusedItem);\n        }\n    }\n\n    private isAddItemFocused(): boolean {\n        return this.focusedItem instanceof IgxComboAddItemComponent;\n    }\n\n    public ngAfterViewInit() {\n        this.virtDir.getScroll().addEventListener('scroll', this.scrollHandler);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public ngOnDestroy(): void {\n        this.virtDir.getScroll().removeEventListener('scroll', this.scrollHandler);\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n}\n","import { Inject, Pipe, PipeTransform} from '@angular/core';\nimport { cloneArray } from '../core/utils';\nimport { DataUtil } from '../data-operations/data-util';\nimport { SortingDirection } from '../data-operations/sorting-expression.interface';\nimport { IGX_COMBO_COMPONENT, IgxComboBase } from './combo.common';\nimport { DefaultSortingStrategy } from '../data-operations/sorting-strategy';\n\n\n/**\n * @hidden\n */\n@Pipe({\n    name: 'comboFiltering'\n})\nexport class IgxComboFilteringPipe implements PipeTransform {\n    public transform(collection: any[], searchValue: any, displayKey: any, shouldFilter: boolean) {\n        if (!collection) {\n            return [];\n        }\n        if (!searchValue || !shouldFilter) {\n            return collection;\n        } else {\n            const searchTerm = searchValue.toLowerCase().trim();\n            if (displayKey != null) {\n                return collection.filter(e => e[displayKey].toLowerCase().includes(searchTerm));\n            } else {\n                return collection.filter(e => e.toLowerCase().includes(searchTerm));\n            }\n        }\n    }\n}\n\n/**\n * @hidden\n */\n@Pipe({\n    name: 'comboGrouping'\n})\nexport class IgxComboGroupingPipe implements PipeTransform {\n\n    constructor(@Inject(IGX_COMBO_COMPONENT) public combo: IgxComboBase) { }\n\n    public transform(collection: any[], groupKey: any, valueKey: any) {\n        this.combo.filteredData = collection;\n        if ((!groupKey && groupKey !== 0) || !collection.length) {\n            return collection;\n        }\n        const sorted = DataUtil.sort(cloneArray(collection), [{\n            fieldName: groupKey,\n            dir: SortingDirection.Asc,\n            ignoreCase: true,\n            strategy: DefaultSortingStrategy.instance()\n        }]);\n        const data = cloneArray(sorted);\n        let inserts = 0;\n        let currentHeader = null;\n        for (let i = 0; i < sorted.length; i++) {\n            let insertFlag = 0;\n            if (currentHeader !== sorted[i][groupKey]) {\n                currentHeader = sorted[i][groupKey];\n                insertFlag = 1;\n            }\n            if (insertFlag) {\n                data.splice(i + inserts, 0, {\n                    [valueKey]: currentHeader,\n                    [groupKey]: currentHeader,\n                    isHeader: true\n                });\n                inserts++;\n            }\n        }\n        return data;\n    }\n}\n","import { ConnectedPositioningStrategy } from './../services/overlay/position/connected-positioning-strategy';\nimport { CommonModule } from '@angular/common';\nimport {\n    AfterViewInit, ChangeDetectorRef, Component, ContentChild, ElementRef, EventEmitter, HostBinding, HostListener,\n    Input, NgModule, OnInit, OnDestroy, Output, TemplateRef, ViewChild, Optional, Inject, Injector, Type\n} from '@angular/core';\nimport {\n    IgxComboItemDirective,\n    IgxComboEmptyDirective,\n    IgxComboHeaderItemDirective,\n    IgxComboHeaderDirective,\n    IgxComboFooterDirective,\n    IgxComboAddItemDirective,\n    IgxComboToggleIconDirective,\n    IgxComboClearIconDirective\n} from './combo.directives';\nimport { FormsModule, ReactiveFormsModule, ControlValueAccessor, NG_VALUE_ACCESSOR, NgControl, AbstractControl } from '@angular/forms';\nimport { IgxCheckboxModule } from '../checkbox/checkbox.component';\nimport { IgxSelectionAPIService } from '../core/selection';\nimport { cloneArray, CancelableEventArgs, CancelableBrowserEventArgs, IBaseEventArgs } from '../core/utils';\nimport { IgxStringFilteringOperand, IgxBooleanFilteringOperand } from '../data-operations/filtering-condition';\nimport { FilteringLogic } from '../data-operations/filtering-expression.interface';\nimport { IgxForOfModule, IForOfState, IgxForOfDirective } from '../directives/for-of/for_of.directive';\nimport { IgxIconModule } from '../icon/public_api';\nimport { IgxRippleModule } from '../directives/ripple/ripple.directive';\nimport { IgxToggleModule } from '../directives/toggle/toggle.directive';\nimport { IgxButtonModule } from '../directives/button/button.directive';\nimport { IgxDropDownModule } from '../drop-down/public_api';\nimport { IgxInputGroupModule, IgxInputGroupComponent } from '../input-group/input-group.component';\nimport { IgxComboItemComponent } from './combo-item.component';\nimport { IgxComboDropDownComponent } from './combo-dropdown.component';\nimport { IgxComboFilteringPipe, IgxComboGroupingPipe } from './combo.pipes';\nimport { OverlaySettings, AbsoluteScrollStrategy } from '../services/public_api';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { DisplayDensityBase, DisplayDensityToken, IDisplayDensityOptions } from '../core/density';\nimport { IGX_COMBO_COMPONENT, IgxComboBase } from './combo.common';\nimport { IgxComboAddItemComponent } from './combo-add-item.component';\nimport { IgxComboAPIService } from './combo.api';\nimport { EditorProvider } from '../core/edit-provider';\nimport { IgxInputState, IgxInputDirective } from '../directives/input/input.directive';\n\n/**\n * @hidden\n */\nenum DataTypes {\n    EMPTY = 'empty',\n    PRIMITIVE = 'primitive',\n    COMPLEX = 'complex',\n    PRIMARYKEY = 'valueKey'\n}\n\n/**\n * @hidden\n */\nconst ItemHeights = {\n    'comfortable': 40,\n    'cosy': 32,\n    'compact': 28,\n};\n\n/**\n * @hidden\n * The default number of items that should be in the combo's\n * drop-down list if no `[itemsMaxHeight]` is specified\n */\nconst itemsInContainer = 10;\n\nexport enum IgxComboState {\n    /**\n     * Combo with initial state.\n     */\n    INITIAL = IgxInputState.INITIAL,\n    /**\n     * Combo with valid state.\n     */\n    VALID = IgxInputState.VALID,\n    /**\n     * Combo with invalid state.\n     */\n    INVALID = IgxInputState.INVALID\n}\n\n/** Event emitted when an igx-combo's selection is changing */\nexport interface IComboSelectionChangeEventArgs extends CancelableEventArgs, IBaseEventArgs {\n    /** An array containing the values that are currently selected */\n    oldSelection: any[];\n    /** An array containing the values that will be selected after this event */\n    newSelection: any[];\n    /** An array containing the values that will be added to the selection (if any) */\n    added: any[];\n    /** An array containing the values that will be removed from the selection (if any) */\n    removed: any[];\n    /** The text that will be displayed in the combo text box */\n    displayText: string;\n    /** The user interaction that triggered the selection change */\n    event?: Event;\n}\n\nexport interface IComboItemAdditionEvent extends IBaseEventArgs {\n    oldCollection: any[];\n    addedItem: any;\n    newCollection: any[];\n}\n\n/**\n * When called with sets A & B, returns A - B (as array);\n * @hidden\n */\nfunction diffInSets(set1: Set<any>, set2: Set<any>): any[] {\n    const results = [];\n    set1.forEach(entry => {\n        if (!set2.has(entry)) {\n            results.push(entry);\n        }\n    });\n    return results;\n}\n\nlet NEXT_ID = 0;\nconst noop = () => { };\n\n@Component({\n    selector: 'igx-combo',\n    templateUrl: 'combo.component.html',\n    providers: [\n        IgxComboAPIService,\n        { provide: IGX_COMBO_COMPONENT, useExisting: IgxComboComponent },\n        { provide: NG_VALUE_ACCESSOR, useExisting: IgxComboComponent, multi: true }\n    ]\n})\nexport class IgxComboComponent extends DisplayDensityBase implements IgxComboBase, AfterViewInit, ControlValueAccessor, OnInit,\n    OnDestroy, EditorProvider {\n    /**\n     * @hidden @internal\n     */\n    public customValueFlag = true;\n    /**\n     * @hidden @internal\n     */\n    public defaultFallbackGroup = 'Other';\n    protected stringFilters = IgxStringFilteringOperand;\n    protected booleanFilters = IgxBooleanFilteringOperand;\n    protected _groupKey = '';\n    protected _displayKey: string;\n    protected _prevInputValue = '';\n    private _dataType = '';\n    private ngControl: NgControl = null;\n    private destroy$ = new Subject<any>();\n    private _data = [];\n    private _filteredData = [];\n    private _itemHeight = null;\n    private _itemsMaxHeight = null;\n    private _remoteSelection = {};\n    private _onChangeCallback: (_: any) => void = noop;\n    private _onTouchedCallback: () => void = noop;\n    private _overlaySettings: OverlaySettings = {\n        scrollStrategy: new AbsoluteScrollStrategy(),\n        positionStrategy: new ConnectedPositioningStrategy(),\n        modal: false,\n        closeOnOutsideClick: true,\n        excludePositionTarget: true\n    };\n    private _value = '';\n    private _valid = IgxComboState.INITIAL;\n    constructor(\n        protected elementRef: ElementRef,\n        protected cdr: ChangeDetectorRef,\n        protected selection: IgxSelectionAPIService,\n        protected comboAPI: IgxComboAPIService,\n        @Optional() @Inject(DisplayDensityToken) protected _displayDensityOptions: IDisplayDensityOptions,\n        @Optional() private _injector: Injector) {\n        super(_displayDensityOptions);\n        this.comboAPI.register(this);\n    }\n\n    @ViewChild(IgxForOfDirective, { read: IgxForOfDirective, static: true })\n    protected virtDir: IgxForOfDirective<any>;\n\n    /**\n     * Set custom overlay settings that control how the combo's list of items is displayed.\n     * Set:\n     * ```html\n     * <igx-combo [overlaySettings] = \"customOverlaySettings\"></igx-combo>\n     * ```\n     *\n     * ```typescript\n     *  const customSettings = { positionStrategy: { settings: { target: myTarget } } };\n     *  combo.overlaySettings = customSettings;\n     * ```\n     * Get any custom overlay settings used by the combo:\n     * ```typescript\n     *  const comboOverlaySettings: OverlaySettings = myCombo.overlaySettings;\n     * ```\n     */\n\n    @Input()\n    public overlaySettings: OverlaySettings = null;\n\n    /** @hidden @internal */\n    @ViewChild('inputGroup', { read: IgxInputGroupComponent, static: true }) public inputGroup: IgxInputGroupComponent;\n\n    /** @hidden @internal */\n    @ViewChild('comboInput', { read: IgxInputDirective, static: true }) public comboInput: IgxInputDirective;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild(IgxComboDropDownComponent, { read: IgxComboDropDownComponent, static: true })\n    public dropdown: IgxComboDropDownComponent;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('searchInput')\n    public searchInput: ElementRef<HTMLInputElement> = null;\n\n    /**\n     * @hidden @internal\n     */\n    get displaySearchInput(): boolean {\n        return this.filterable || this.allowCustomValues;\n    }\n\n    /**\n     * The custom template, if any, that should be used when rendering ITEMS in the combo list\n     *\n     * ```typescript\n     * // Set in typescript\n     * const myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\n     * myComponent.combo.itemTemplate = myCustomTemplate;\n     * ```\n     * ```html\n     * <!-- Set in markup -->\n     *  <igx-combo #combo>\n     *      ...\n     *      <ng-template igxComboItem>\n     *          <div class=\"custom-item\" let-item let-key=\"valueKey\">\n     *              <div class=\"custom-item__name\">{{ item[key] }}</div>\n     *              <div class=\"custom-item__cost\">{{ item.cost }}</div>\n     *          </div>\n     *      </ng-template>\n     *  </igx-combo>\n     * ```\n     */\n    @ContentChild(IgxComboItemDirective, { read: TemplateRef })\n    public itemTemplate: TemplateRef<any> = null;\n\n    /**\n     * The custom template, if any, that should be used when rendering the HEADER for the combo items list\n     *\n     * ```typescript\n     * // Set in typescript\n     * const myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\n     * myComponent.combo.headerTemplate = myCustomTemplate;\n     * ```\n     * ```html\n     * <!-- Set in markup -->\n     *  <igx-combo #combo>\n     *      ...\n     *      <ng-template igxComboHeader>\n     *          <div class=\"combo__header\">\n     *              This is a custom header\n     *          </div>\n     *      </ng-template>\n     *  </igx-combo>\n     * ```\n     */\n    @ContentChild(IgxComboHeaderDirective, { read: TemplateRef })\n    public headerTemplate: TemplateRef<any> = null;\n\n    /**\n     * The custom template, if any, that should be used when rendering the FOOTER for the combo items list\n     *\n     * ```typescript\n     * // Set in typescript\n     * const myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\n     * myComponent.combo.footerTemplate = myCustomTemplate;\n     * ```\n     * ```html\n     * <!-- Set in markup -->\n     *  <igx-combo #combo>\n     *      ...\n     *      <ng-template igxComboFooter>\n     *          <div class=\"combo__footer\">\n     *              This is a custom footer\n     *          </div>\n     *      </ng-template>\n     *  </igx-combo>\n     * ```\n     */\n    @ContentChild(IgxComboFooterDirective, { read: TemplateRef })\n    public footerTemplate: TemplateRef<any> = null;\n\n    /**\n     * The custom template, if any, that should be used when rendering HEADER ITEMS for groups in the combo list\n     *\n     * ```typescript\n     * // Set in typescript\n     * const myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\n     * myComponent.combo.headerItemTemplate = myCustomTemplate;\n     * ```\n     * ```html\n     * <!-- Set in markup -->\n     *  <igx-combo #combo>\n     *      ...\n     *      <ng-template igxComboHeaderItem let-item let-key=\"groupKey\">\n     *          <div class=\"custom-item--group\">Group header for {{ item[key] }}</div>\n     *      </ng-template>\n     *  </igx-combo>\n     * ```\n     */\n    @ContentChild(IgxComboHeaderItemDirective, { read: TemplateRef })\n    public headerItemTemplate: TemplateRef<any> = null;\n\n    /**\n     * The custom template, if any, that should be used when rendering the ADD BUTTON in the combo drop down\n     *\n     * ```typescript\n     * // Set in typescript\n     * const myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\n     * myComponent.combo.addItemTemplate = myCustomTemplate;\n     * ```\n     * ```html\n     * <!-- Set in markup -->\n     *  <igx-combo #combo>\n     *      ...\n     *      <ng-template igxComboAddItem>\n     *          <button class=\"combo__add-button\">\n     *              Click to add item\n     *          </button>\n     *      </ng-template>\n     *  </igx-combo>\n     * ```\n     */\n    @ContentChild(IgxComboAddItemDirective, { read: TemplateRef })\n    public addItemTemplate: TemplateRef<any> = null;\n\n    /**\n     * The custom template, if any, that should be used when rendering the ADD BUTTON in the combo drop down\n     *\n     * ```typescript\n     * // Set in typescript\n     * const myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\n     * myComponent.combo.emptyTemplate = myCustomTemplate;\n     * ```\n     * ```html\n     * <!-- Set in markup -->\n     *  <igx-combo #combo>\n     *      ...\n     *      <ng-template igxComboEmpty>\n     *          <div class=\"combo--empty\">\n     *              There are no items to display\n     *          </div>\n     *      </ng-template>\n     *  </igx-combo>\n     * ```\n     */\n    @ContentChild(IgxComboEmptyDirective, { read: TemplateRef })\n    public emptyTemplate: TemplateRef<any> = null;\n\n    /**\n     * The custom template, if any, that should be used when rendering the combo TOGGLE(open/close) button\n     *\n     * ```typescript\n     * // Set in typescript\n     * const myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\n     * myComponent.combo.toggleIconTemplate = myCustomTemplate;\n     * ```\n     * ```html\n     * <!-- Set in markup -->\n     *  <igx-combo #combo>\n     *      ...\n     *      <ng-template igxComboToggleIcon let-collapsed>\n     *          <igx-icon>{{ collapsed ? 'remove_circle' : 'remove_circle_outline'}}</igx-icon>\n     *      </ng-template>\n     *  </igx-combo>\n     * ```\n     */\n    @ContentChild(IgxComboToggleIconDirective, { read: TemplateRef })\n    public toggleIconTemplate: TemplateRef<any> = null;\n\n    /**\n     * The custom template, if any, that should be used when rendering the combo CLEAR button\n     *\n     * ```typescript\n     * // Set in typescript\n     * const myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\n     * myComponent.combo.clearIconTemplate = myCustomTemplate;\n     * ```\n     * ```html\n     * <!-- Set in markup -->\n     *  <igx-combo #combo>\n     *      ...\n     *      <ng-template igxComboClearIcon>\n     *          <igx-icon>clear</igx-icon>\n     *      </ng-template>\n     *  </igx-combo>\n     * ```\n     */\n    @ContentChild(IgxComboClearIconDirective, { read: TemplateRef })\n    public clearIconTemplate: TemplateRef<any> = null;\n\n    @ViewChild('primitive', { read: TemplateRef, static: true })\n    protected primitiveTemplate: TemplateRef<any>;\n\n    @ViewChild('complex', { read: TemplateRef, static: true })\n    protected complexTemplate: TemplateRef<any>;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild(IgxForOfDirective, { static: true })\n    public virtualScrollContainer: IgxForOfDirective<any>;\n\n    @ViewChild('dropdownItemContainer', { static: true })\n    protected dropdownContainer: ElementRef = null;\n\n    /**\n     * Emitted when item selection is changing, before the selection completes\n     *\n     * ```html\n     * <igx-combo (onSelectionChange)='handleSelection()'></igx-combo>\n     * ```\n     */\n    @Output()\n    public onSelectionChange = new EventEmitter<IComboSelectionChangeEventArgs>();\n\n    /**\n     * Emitted before the dropdown is opened\n     *\n     * ```html\n     * <igx-combo onOpening='handleOpening($event)'></igx-combo>\n     * ```\n     */\n    @Output()\n    public onOpening = new EventEmitter<CancelableEventArgs & IBaseEventArgs>();\n\n    /**\n     * Emitted after the dropdown is opened\n     *\n     * ```html\n     * <igx-combo (onOpened)='handleOpened()'></igx-combo>\n     * ```\n     */\n    @Output()\n    public onOpened = new EventEmitter<void>();\n\n    /**\n     * Emitted before the dropdown is closed\n     *\n     * ```html\n     * <igx-combo (onClosing)='handleClosing($event)'></igx-combo>\n     * ```\n     */\n    @Output()\n    public onClosing = new EventEmitter<CancelableBrowserEventArgs & IBaseEventArgs>();\n\n    /**\n     * Emitted after the dropdown is closed\n     *\n     * ```html\n     * <igx-combo (onClosed)='handleClosed()'></igx-combo>\n     * ```\n     */\n    @Output()\n    public onClosed = new EventEmitter<void>();\n\n    /**\n     * Emitted when an item is being added to the data collection\n     *\n     * ```html\n     * <igx-combo (onAddition)='handleAdditionEvent()'></igx-combo>\n     * ```\n     */\n    @Output()\n    public onAddition = new EventEmitter<IComboItemAdditionEvent>();\n\n    /**\n     * Emitted when the value of the search input changes (e.g. typing, pasting, clear, etc.)\n     *\n     * ```html\n     * <igx-combo (onSearchInput)='handleSearchInputEvent()'></igx-combo>\n     * ```\n     */\n    @Output()\n    public onSearchInput = new EventEmitter();\n\n    /**\n     * Emitted when new chunk of data is loaded from the virtualization\n     *\n     * ```html\n     * <igx-combo (onDataPreLoad)='handleDataPreloadEvent()'></igx-combo>\n     * ```\n     */\n    @Output()\n    public onDataPreLoad = new EventEmitter<any>();\n\n    /**\n     * Gets/gets combo id.\n     *\n     * ```typescript\n     * // get\n     * let id = this.combo.id;\n     * ```\n     *\n     * ```html\n     * <!--set-->\n     * <igx-combo [id]='combo1'></igx-combo>\n     * ```\n     */\n    @HostBinding('attr.id')\n    @Input()\n    public id = `igx-combo-${NEXT_ID++}`;\n\n    /**\n     * Sets the style width of the element\n     *\n     * ```typescript\n     * // get\n     * let myComboWidth = this.combo.width;\n     * ```\n     *\n     * ```html\n     * <!--set-->\n     * <igx-combo [width]='250px'></igx-combo>\n     * ```\n     */\n    @HostBinding('style.width')\n    @Input()\n    public width: string;\n\n    /**\n     * @hidden @internal\n     */\n    @HostBinding('class.igx-combo')\n    public cssClass = 'igx-combo'; // Independent of display density, at the time being\n\n    /**\n     * @hidden @internal\n     */\n    @HostBinding(`attr.role`)\n    public role = 'combobox';\n\n    /**\n     * @hidden @internal\n     */\n    @HostBinding('attr.aria-expanded')\n    public get ariaExpanded(): boolean {\n        return !this.dropdown.collapsed;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    @HostBinding('attr.aria-haspopup')\n    public get hasPopUp() {\n        return 'listbox';\n    }\n\n    /**\n     * @hidden @internal\n     */\n    @HostBinding('attr.aria-owns')\n    public get ariaOwns() {\n        return this.dropdown.id;\n    }\n\n    /**\n     * Controls whether custom values can be added to the collection\n     *\n     * ```typescript\n     * // get\n     * let comboAllowsCustomValues = this.combo.allowCustomValues;\n     * ```\n     *\n     * ```html\n     * <!--set-->\n     * <igx-combo [allowCustomValues]='true'></igx-combo>\n     * ```\n     */\n    @Input()\n    public allowCustomValues = false;\n\n    /**\n     * Configures the drop down list height\n     *\n     * ```typescript\n     * // get\n     * let myComboItemsMaxHeight = this.combo.itemsMaxHeight;\n     * ```\n     *\n     * ```html\n     * <!--set-->\n     * <igx-combo [itemsMaxHeight]='320'></igx-combo>\n     * ```\n     */\n    @Input()\n    public get itemsMaxHeight(): number {\n        if (this._itemsMaxHeight === null || this._itemsMaxHeight === undefined) {\n            return this.itemHeight * itemsInContainer;\n        }\n        return this._itemsMaxHeight;\n    }\n\n    public set itemsMaxHeight(val: number) {\n        this._itemsMaxHeight = val;\n    }\n\n    /**\n     * Configures the drop down list width\n     *\n     * ```typescript\n     * // get\n     * let myComboItemsWidth = this.combo.itemsWidth;\n     * ```\n     *\n     * ```html\n     * <!--set-->\n     * <igx-combo [itemsWidth] = '\"180px\"'></igx-combo>\n     * ```\n     */\n    @Input()\n    public itemsWidth: string;\n\n    /**\n     * Configures the drop down list item height\n     *\n     * ```typescript\n     * // get\n     * let myComboItemHeight = this.combo.itemHeight;\n     * ```\n     *\n     * ```html\n     * <!--set-->\n     * <igx-combo [itemHeight]='32'></igx-combo>\n     * ```\n     */\n    @Input()\n    public get itemHeight(): number {\n        if (this._itemHeight === null || this._itemHeight === undefined) {\n            return ItemHeights[this.displayDensity];\n        }\n        return this._itemHeight;\n    }\n\n    public set itemHeight(val: number) {\n        this._itemHeight = val;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public filteringLogic = FilteringLogic.Or;\n\n    /**\n     * Defines the placeholder value for the combo value field\n     *\n     * ```typescript\n     * // get\n     * let myComboPlaceholder = this.combo.placeholder;\n     * ```\n     *\n     * ```html\n     * <!--set-->\n     * <igx-combo [placeholder]='newPlaceHolder'></igx-combo>\n     * ```\n     */\n    @Input()\n    public placeholder;\n\n    /**\n     * @hidden @internal\n     */\n    public get inputEmpty(): boolean {\n        return !this.value && !this.placeholder;\n    }\n\n    /**\n     * Defines the placeholder value for the combo dropdown search field\n     *\n     * ```typescript\n     * // get\n     * let myComboSearchPlaceholder = this.combo.searchPlaceholder;\n     * ```\n     *\n     * ```html\n     * <!--set-->\n     * <igx-combo [searchPlaceholder]='newPlaceHolder'></igx-combo>\n     * ```\n     */\n    @Input()\n    public searchPlaceholder = 'Enter a Search Term';\n\n    /**\n     * Combo data source.\n     *\n     * ```html\n     * <!--set-->\n     * <igx-combo [data]='items'></igx-combo>\n     * ```\n     */\n    @Input()\n    get data(): any[] {\n        return this._data;\n    }\n    set data(val: any[]) {\n        this._data = (val) ? val : [];\n    }\n\n    /**\n     * Combo value data source property.\n     *\n     * ```typescript\n     * // get\n     * let myComboValueKey = this.combo.valueKey;\n     * ```\n     *\n     * ```html\n     * <!--set-->\n     * <igx-combo [valueKey]='myKey'></igx-combo>\n     * ```\n     */\n    @Input()\n    public valueKey: string = null;\n\n    @Input()\n    set displayKey(val: string) {\n        this._displayKey = val;\n    }\n\n    /**\n     * Combo text data source property.\n     *\n     * ```typescript\n     * // get\n     * let myComboDisplayKey = this.combo.displayKey;\n     *\n     * // set\n     * this.combo.displayKey = 'val';\n     *\n     * ```\n     *\n     * ```html\n     * <!--set-->\n     * <igx-combo [displayKey]='myDisplayKey'></igx-combo>\n     * ```\n     */\n    get displayKey() {\n        return this._displayKey ? this._displayKey : this.valueKey;\n    }\n\n    /**\n     * The item property by which items should be grouped inside the items list. Not usable if data is not of type Object[].\n     *\n     * ```html\n     * <!--set-->\n     * <igx-combo [groupKey]='newGroupKey'></igx-combo>\n     * ```\n     */\n    @Input()\n    public set groupKey(val: string) {\n        this._groupKey = val;\n    }\n\n    /**\n     * The item property by which items should be grouped inside the items list. Not usable if data is not of type Object[].\n     *\n     * ```typescript\n     * // get\n     * let currentGroupKey = this.combo.groupKey;\n     * ```\n     */\n    public get groupKey(): string {\n        return this._groupKey;\n    }\n\n    /**\n     * An @Input property that enabled/disables filtering in the list. The default is `true`.\n     * ```html\n     * <igx-combo [filterable]=\"false\">\n     * ```\n     */\n    @Input()\n    public filterable = true;\n\n    /**\n     * An @Input property that set aria-labelledby attribute\n     * ```html\n     * <igx-combo [ariaLabelledBy]=\"'label1'\">\n     * ```\n     */\n    @Input()\n    @HostBinding('attr.aria-labelledby')\n    public ariaLabelledBy: string;\n\n    /**\n     * An @Input property that enabled/disables combo. The default is `false`.\n     * ```html\n     * <igx-combo [disabled]=\"'true'\">\n     * ```\n     */\n    @Input()\n    public disabled = false;\n\n    /**\n     * An @Input property that sets how the combo will be styled.\n     * The allowed values are `line`, `box`, `border` and `search`. The default is `box`.\n     * ```html\n     * <igx-combo [type]=\"'line'\">\n     * ```\n     */\n    @Input()\n    public type = 'box';\n\n    /**\n     * An @Input property that controls whether the combo's search box\n     * should be focused after the `onOpened` event is called\n     * When `false`, the combo's list item container will be focused instead\n     */\n    @Input()\n    public autoFocusSearch = true;\n\n    /**\n     * Gets if control is valid, when used in a form\n     *\n     * ```typescript\n     * // get\n     * let valid = this.combo.valid;\n     * ```\n     */\n    public get valid(): IgxComboState {\n        return this._valid;\n    }\n\n    /**\n     * Sets if control is valid, when used in a form\n     *\n     * ```typescript\n     * // set\n     * this.combo.valid = IgxComboState.INVALID;\n     * ```\n     */\n    public set valid(valid: IgxComboState) {\n        this._valid = valid;\n        this.comboInput.valid = IgxInputState[IgxComboState[valid]];\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public searchValue = '';\n\n    /**\n     * @hidden @internal\n     */\n    @HostListener('keydown.ArrowDown', ['$event'])\n    @HostListener('keydown.Alt.ArrowDown', ['$event'])\n    onArrowDown(event: Event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.open();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    onInputClick(event: Event) {\n        event.stopPropagation();\n        event.preventDefault();\n        this.toggle();\n    }\n\n    /**\n     * Defines the current state of the virtualized data. It contains `startIndex` and `chunkSize`\n     *\n     * ```typescript\n     * // get\n     * let state = this.combo.virtualizationState;\n     * ```\n     */\n    get virtualizationState(): IForOfState {\n        return this.virtDir.state;\n    }\n    /**\n     * Sets the current state of the virtualized data.\n     *\n     * ```typescript\n     * // set\n     * this.combo.virtualizationState(state);\n     * ```\n     */\n    set virtualizationState(state: IForOfState) {\n        this.virtDir.state = state;\n    }\n\n    /**\n     * Gets total count of the virtual data items, when using remote service.\n     *\n     * ```typescript\n     * // get\n     * let count = this.combo.totalItemCount;\n     * ```\n     */\n    get totalItemCount(): number {\n        return this.virtDir.totalItemCount;\n    }\n    /**\n     * Sets total count of the virtual data items, when using remote service.\n     *\n     * ```typescript\n     * // set\n     * this.combo.totalItemCount(remoteService.count);\n     * ```\n     */\n    set totalItemCount(count: number) {\n        this.virtDir.totalItemCount = count;\n    }\n\n    /**\n     * The text displayed in the combo input\n     *\n     * ```typescript\n     * // get\n     * let comboValue = this.combo.value;\n     * ```\n     */\n    get value(): string {\n        return this._value;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public get filteredData(): any[] {\n        return this.filterable ? this._filteredData : this.data;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public set filteredData(val: any[]) {\n        this._filteredData = this.groupKey ? (val || []).filter((e) => e.isHeader !== true) : val;\n        this.checkMatch();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public handleKeyUp(event: KeyboardEvent): void {\n        if (event.key === 'ArrowDown' || event.key === 'Down') {\n            this.dropdown.focusedItem = this.dropdown.items[0];\n            this.dropdownContainer.nativeElement.focus();\n        } else if (event.key === 'Escape' || event.key === 'Esc') {\n            this.toggle();\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public handleKeyDown(event: KeyboardEvent) {\n        if (event.key === 'ArrowUp' || event.key === 'Up') {\n            event.preventDefault();\n            event.stopPropagation();\n            this.close();\n        }\n    }\n\n    private checkMatch(): void {\n        const displayKey = this.displayKey;\n        const matchFn = (e) => {\n            const value = displayKey ? e[displayKey] : e;\n            return value.toString().toLowerCase() === this.searchValue.trim().toLowerCase();\n        };\n        const itemMatch = this.filteredData.some(matchFn);\n        this.customValueFlag = this.allowCustomValues && !itemMatch;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public handleInputChange(event?: string) {\n        if (event !== undefined) {\n            this.onSearchInput.emit(event);\n        }\n        this.checkMatch();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public get dataType(): string {\n        if (this.displayKey) {\n            return DataTypes.COMPLEX;\n        }\n        return DataTypes.PRIMITIVE;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public get isRemote() {\n        return this.totalItemCount > 0 &&\n            this.valueKey &&\n            this.dataType === DataTypes.COMPLEX;\n    }\n\n    /** Contains key-value pairs of the selected valueKeys and their resp. displayKeys */\n    private registerRemoteEntries(ids: any[], add = true) {\n        if (add) {\n            const selection = this.getValueDisplayPairs(ids);\n            for (const entry of selection) {\n                this._remoteSelection[entry[this.valueKey]] = entry[this.displayKey];\n            }\n        } else {\n            for (const entry of ids) {\n                delete this._remoteSelection[entry];\n            }\n        }\n    }\n\n    /**\n     * For `id: any[]` returns a mapped `{ [combo.valueKey]: any, [combo.displayKey]: any }[]`\n     */\n    private getValueDisplayPairs(ids: any[]) {\n        return this.data.filter(entry => ids.indexOf(entry[this.valueKey]) > -1).map(e => {\n            return {\n                [this.valueKey]: e[this.valueKey],\n                [this.displayKey]: e[this.displayKey]\n            };\n        });\n    }\n\n    /**\n     * Returns if the specified itemID is selected\n     * @hidden\n     * @internal\n     */\n    public isItemSelected(item: any): boolean {\n        return this.selection.is_item_selected(this.id, item);\n    }\n\n    /**\n     * Triggers change detection on the combo view\n     */\n    public triggerCheck() {\n        this.cdr.detectChanges();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public isAddButtonVisible(): boolean {\n        // This should always return a boolean value. If this.searchValue was '', it returns '' instead of false;\n        return this.searchValue !== '' && this.customValueFlag;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public handleSelectAll(evt) {\n        if (evt.checked) {\n            this.selectAllItems();\n        } else {\n            this.deselectAllItems();\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public addItemToCollection() {\n        if (!this.searchValue) {\n            return;\n        }\n        const newValue = this.searchValue.trim();\n        const addedItem = this.displayKey ? {\n            [this.valueKey]: newValue,\n            [this.displayKey]: newValue\n        } : newValue;\n        if (this.groupKey) {\n            Object.assign(addedItem, { [this.groupKey]: this.defaultFallbackGroup });\n        }\n        const oldCollection = this.data;\n        const newCollection = [...this.data];\n        newCollection.push(addedItem);\n        const args: IComboItemAdditionEvent = {\n            oldCollection, addedItem, newCollection\n        };\n        this.onAddition.emit(args);\n        this.data.push(addedItem);\n        // If you mutate the array, no pipe is invoked and the display isn't updated;\n        // if you replace the array, the pipe executes and the display is updated.\n        this.data = cloneArray(this.data);\n        this.selectItems(this.comboAPI.valueKey !== null ? [addedItem[this.valueKey]] : [addedItem], false);\n        this.customValueFlag = false;\n        this.searchInput.nativeElement.focus();\n        this.dropdown.focusedItem = null;\n        this.virtDir.scrollTo(0);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public focusSearchInput(opening?: boolean): void {\n        if (this.displaySearchInput && this.searchInput) {\n            this.searchInput.nativeElement.focus();\n        } else {\n            if (opening) {\n                this.dropdownContainer.nativeElement.focus();\n            } else {\n                this.comboInput.nativeElement.focus();\n                this.toggle();\n            }\n        }\n    }\n\n    protected onStatusChanged = () => {\n        if ((this.ngControl.control.touched || this.ngControl.control.dirty) &&\n            (this.ngControl.control.validator || this.ngControl.control.asyncValidator)) {\n            this.valid = this.ngControl.valid ? IgxComboState.VALID : IgxComboState.INVALID;\n        }\n        this.manageRequiredAsterisk();\n    }\n\n    protected manageRequiredAsterisk(): void {\n        if (this.ngControl && this.ngControl.control.validator) {\n            // Run the validation with empty object to check if required is enabled.\n            const error = this.ngControl.control.validator({} as AbstractControl);\n            this.inputGroup.isRequired = error && error.required;\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onBlur() {\n        if (this.collapsed) {\n            this._onTouchedCallback();\n            if (this.ngControl && !this.ngControl.valid) {\n                this.valid = IgxComboState.INVALID;\n            } else {\n                this.valid = IgxComboState.INITIAL;\n            }\n        }\n    }\n\n    /** @hidden @internal */\n    public onFocus() {\n        if (this.collapsed) {\n            this._onTouchedCallback();\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public ngOnInit() {\n        this.ngControl = this._injector.get<NgControl>(NgControl, null);\n        this._overlaySettings.positionStrategy.settings.target = this.elementRef.nativeElement;\n        this.selection.set(this.id, new Set());\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public ngAfterViewInit() {\n        this.filteredData = [...this.data];\n\n        if (this.ngControl) {\n            this.ngControl.statusChanges.pipe(takeUntil(this.destroy$)).subscribe(this.onStatusChanged);\n            this.manageRequiredAsterisk();\n            this.cdr.detectChanges();\n        }\n        this.virtDir.onChunkPreload.pipe(takeUntil(this.destroy$)).subscribe((e) => {\n            this.onDataPreLoad.emit(e);\n        });\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n        this.comboAPI.clear();\n        this.selection.clear(this.id);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public writeValue(value: any[]): void {\n        this.selectItems(value, true);\n        this.cdr.markForCheck();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public registerOnChange(fn: any): void {\n        this._onChangeCallback = fn;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public registerOnTouched(fn: any): void {\n        this._onTouchedCallback = fn;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    /**\n     * @hidden\n     */\n    public getEditElement(): HTMLElement {\n        return this.comboInput.nativeElement;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public get template(): TemplateRef<any> {\n        this._dataType = this.dataType;\n        if (this.itemTemplate) {\n            return this.itemTemplate;\n        }\n        if (this._dataType === DataTypes.COMPLEX) {\n            return this.complexTemplate;\n        }\n        return this.primitiveTemplate;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public get context(): any {\n        return {\n            $implicit: this\n        };\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public handleClearItems(event: Event): void {\n        this.deselectAllItems(true, event);\n        if (this.collapsed) {\n            this.getEditElement().focus();\n        } else {\n            this.focusSearchInput(true);\n        }\n        event.stopPropagation();\n    }\n\n    /**\n     * A method that opens/closes the combo.\n     *\n     * ```html\n     * <button (click)=\"combo.toggle()\">Toggle Combo</button>\n     * <igx-combo #combo></igx-combo>\n     * ```\n     */\n    public toggle(): void {\n        const overlaySettings = Object.assign({}, this._overlaySettings, this.overlaySettings);\n        this.dropdown.toggle(overlaySettings);\n    }\n\n    /**\n     * A method that opens the combo.\n     *\n     * ```html\n     * <button (click)=\"combo.open()\">Open Combo</button>\n     * <igx-combo #combo></igx-combo>\n     * ```\n     */\n    public open(): void {\n        const overlaySettings = Object.assign({}, this._overlaySettings, this.overlaySettings);\n        this.dropdown.open(overlaySettings);\n    }\n\n    /**\n     * A method that closes the combo.\n     *\n     * ```html\n     * <button (click)=\"combo.close()\">Close Combo</button>\n     * <igx-combo #combo></igx-combo>\n     * ```\n     */\n    public close(): void {\n        this.dropdown.close();\n    }\n\n    /**\n     * Gets drop down state.\n     *\n     * ```typescript\n     * let state = this.combo.collapsed;\n     * ```\n     */\n    public get collapsed(): boolean {\n        return this.dropdown.collapsed;\n    }\n\n    /**\n     * Get current selection state\n     * @returns Array of selected items\n     * ```typescript\n     * let selectedItems = this.combo.selectedItems();\n     * ```\n     */\n    public selectedItems() {\n        const items = Array.from(this.selection.get(this.id));\n        return items;\n    }\n\n    /**\n     * Select defined items\n     * @param newItems new items to be selected\n     * @param clearCurrentSelection if true clear previous selected items\n     * ```typescript\n     * this.combo.selectItems([\"New York\", \"New Jersey\"]);\n     * ```\n     */\n    public selectItems(newItems: Array<any>, clearCurrentSelection?: boolean, event?: Event) {\n        if (newItems) {\n            const newSelection = this.selection.add_items(this.id, newItems, clearCurrentSelection);\n            this.setSelection(newSelection, event);\n        }\n    }\n\n    /**\n     * Deselect defined items\n     * @param items items to deselected\n     * ```typescript\n     * this.combo.deselectItems([\"New York\", \"New Jersey\"]);\n     * ```\n     */\n    public deselectItems(items: Array<any>, event?: Event) {\n        if (items) {\n            const newSelection = this.selection.delete_items(this.id, items);\n            this.setSelection(newSelection, event);\n        }\n    }\n\n    /**\n     * Select all (filtered) items\n     * @param ignoreFilter if set to true, selects all items, otherwise selects only the filtered ones.\n     * ```typescript\n     * this.combo.selectAllItems();\n     * ```\n     */\n    public selectAllItems(ignoreFilter?: boolean, event?: Event) {\n        const allVisible = this.selection.get_all_ids(ignoreFilter ? this.data : this.filteredData, this.valueKey);\n        const newSelection = this.selection.add_items(this.id, allVisible);\n        this.setSelection(newSelection, event);\n    }\n\n    /**\n     * Deselect all (filtered) items\n     * @param ignoreFilter if set to true, deselects all items, otherwise deselects only the filtered ones.\n     * ```typescript\n     * this.combo.deselectAllItems();\n     * ```\n     */\n    public deselectAllItems(ignoreFilter?: boolean, event?: Event): void {\n        let newSelection = this.selection.get_empty();\n        if (this.filteredData.length !== this.data.length && !ignoreFilter) {\n            newSelection = this.selection.delete_items(this.id, this.selection.get_all_ids(this.filteredData, this.valueKey));\n        }\n        this.setSelection(newSelection, event);\n    }\n\n    /**\n     * Selects/Deselects a single item\n     * @param itemID the itemID of the specific item\n     * @param select If the item should be selected (true) or deselected (false)\n     *\n     * Without specified valueKey;\n     * ```typescript\n     * this.combo.valueKey = null;\n     * const items: { field: string, region: string}[] = data;\n     * this.combo.setSelectedItem(items[0], true);\n     * ```\n     * With specified valueKey;\n     * ```typescript\n     * this.combo.valueKey = 'field';\n     * const items: { field: string, region: string}[] = data;\n     * this.combo.setSelectedItem('Connecticut', true);\n     * ```\n     */\n    public setSelectedItem(itemID: any, select = true, event?: Event): void {\n        if (itemID === null || itemID === undefined) {\n            return;\n        }\n        if (select) {\n            this.selectItems([itemID], false, event);\n        } else {\n            this.deselectItems([itemID], event);\n        }\n    }\n\n    protected setSelection(newSelection: Set<any>, event?: Event): void {\n        const removed = diffInSets(this.selection.get(this.id), newSelection);\n        const added = diffInSets(newSelection, this.selection.get(this.id));\n        const newSelectionAsArray = Array.from(newSelection);\n        const oldSelectionAsArray = Array.from(this.selection.get(this.id) || []);\n        const displayText = this.createDisplayText(newSelectionAsArray, oldSelectionAsArray);\n        const args: IComboSelectionChangeEventArgs = {\n            newSelection: newSelectionAsArray,\n            oldSelection: oldSelectionAsArray,\n            added,\n            removed,\n            event,\n            displayText,\n            cancel: false\n        };\n        this.onSelectionChange.emit(args);\n        if (!args.cancel) {\n            this.selection.select_items(this.id, args.newSelection, true);\n            if (displayText !== args.displayText) {\n                this._value = args.displayText;\n            } else {\n                this._value = this.createDisplayText(args.newSelection, args.oldSelection);\n            }\n            this._onChangeCallback(args.newSelection);\n        }\n    }\n\n    /** Returns a string that should be populated in the combo's text box */\n    private concatDisplayText(selection: any[]): string {\n        const value = this.displayKey !== null && this.displayKey !== undefined ?\n        this.convertKeysToItems(selection).map(entry => entry[this.displayKey]).join(', ') :\n        selection.join(', ');\n        return value;\n    }\n\n    /**\n     * Constructs the combo display value\n     * If remote, caches the key displayText\n     * If not, just combine the object.displayKeys\n     */\n    private createDisplayText(newSelection: any[], oldSelection: any[]) {\n        let value = '';\n        if (this.isRemote) {\n            if (newSelection.length) {\n                const removedItems = oldSelection.filter(e => newSelection.indexOf(e) < 0);\n                const addedItems = newSelection.filter(e => oldSelection.indexOf(e) < 0);\n                this.registerRemoteEntries(addedItems);\n                this.registerRemoteEntries(removedItems, false);\n                value = Object.keys(this._remoteSelection).map(e => this._remoteSelection[e]).join(', ');\n            } else {\n                // If new selection is empty, clear all items\n                this.registerRemoteEntries(oldSelection, false);\n            }\n        } else {\n            value = this.concatDisplayText(newSelection);\n        }\n        return value;\n    }\n\n    /** if there is a valueKey - map the keys to data items, else - just return the keys */\n    private convertKeysToItems(keys: any[]) {\n        if (this.comboAPI.valueKey === null) {\n            return keys;\n        }\n        // map keys vs. filter data to retain the order of the selected items\n        return keys.map(key => this.data.find(entry => entry[this.valueKey] === key)).filter(e => e !== undefined);\n    }\n    /**\n     * Event handlers\n     * @hidden\n     * @internal\n     */\n    public handleOpening(event: CancelableEventArgs) {\n        this.onOpening.emit(event);\n        if (event.cancel) {\n            return;\n        }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public handleOpened() {\n        this.triggerCheck();\n\n        // Disabling focus of the search input should happen only when drop down opens.\n        // During keyboard navigation input should receive focus, even the autoFocusSearch is disabled.\n        // That is why in such cases focusing of the dropdownContainer happens outside focusSearchInput method.\n        if (this.autoFocusSearch) {\n            this.focusSearchInput(true);\n        } else {\n            this.dropdownContainer.nativeElement.focus();\n        }\n        this.onOpened.emit();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public handleClosing(event) {\n        this.onClosing.emit(event);\n        if (event.cancel) {\n            return;\n        }\n        this.searchValue = '';\n        this.comboInput.nativeElement.focus();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public handleClosed() {\n        this.onClosed.emit();\n    }\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [IgxComboComponent, IgxComboItemComponent, IgxComboGroupingPipe,\n        IgxComboFilteringPipe, IgxComboDropDownComponent, IgxComboAddItemComponent,\n        IgxComboItemDirective,\n        IgxComboEmptyDirective,\n        IgxComboHeaderItemDirective,\n        IgxComboHeaderDirective,\n        IgxComboFooterDirective,\n        IgxComboAddItemDirective,\n        IgxComboToggleIconDirective,\n        IgxComboClearIconDirective],\n    exports: [IgxComboComponent, IgxComboItemComponent, IgxComboDropDownComponent, IgxComboAddItemComponent,\n        IgxComboItemDirective,\n        IgxComboEmptyDirective,\n        IgxComboHeaderItemDirective,\n        IgxComboHeaderDirective,\n        IgxComboFooterDirective,\n        IgxComboAddItemDirective,\n        IgxComboToggleIconDirective,\n        IgxComboClearIconDirective],\n    imports: [IgxRippleModule, CommonModule, IgxInputGroupModule, FormsModule, ReactiveFormsModule,\n        IgxForOfModule, IgxToggleModule, IgxCheckboxModule, IgxDropDownModule, IgxButtonModule, IgxIconModule]\n})\nexport class IgxComboModule { }\n","import { DOCUMENT } from '@angular/common';\nimport { Directive, HostBinding } from '@angular/core';\n\n/**\n * @hidden\n */\n@Directive({\n    selector: 'igx-dialog-title,[igxDialogTitle]'\n})\nexport class IgxDialogTitleDirective {\n\n    @HostBinding('class.igx-dialog__window-title')\n    public defaultStyle = true;\n }\n\n/**\n * @hidden\n */\n@Directive({\n    selector: 'igx-dialog-actions,[igxDialogActions]'\n})\nexport class IgxDialogActionsDirective {\n\n    @HostBinding('class.igx-dialog__window-actions')\n    public defaultClass = true;\n }\n","import { useAnimation } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\nimport {\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    NgModule,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    ViewChild,\n    AfterContentInit\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { IgxNavigationService, IToggleView } from '../core/navigation';\nimport { IgxButtonModule } from '../directives/button/button.directive';\nimport { IgxRippleModule } from '../directives/ripple/ripple.directive';\nimport { IgxDialogActionsDirective, IgxDialogTitleDirective } from './dialog.directives';\nimport { IgxToggleModule, IgxToggleDirective } from '../directives/toggle/toggle.directive';\nimport { OverlaySettings, GlobalPositionStrategy, NoOpScrollStrategy, PositionSettings } from '../services/public_api';\nimport { slideInBottom, slideOutTop } from '../animations/slide/index';\nimport { IgxFocusModule } from '../directives/focus/focus.directive';\nimport { IBaseEventArgs } from '../core/utils';\n\nlet DIALOG_ID = 0;\n/**\n * **Ignite UI for Angular Dialog Window** -\n * [Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/dialog.html)\n *\n * The Ignite UI Dialog Window presents a dialog window to the user which can simply display messages or display\n * more complicated visuals such as a user sign-in form.  It also provides a right and left button\n * which can be used for custom actions.\n *\n * Example:\n * ```html\n * <button (click)=\"form.open()\">Show Dialog</button>\n * <igx-dialog #form title=\"Sign In\" rightButtonLabel=\"OK\">\n *   <div>\n *     <input type=\"text\" igxInput/>\n *     <label igxLabel>Username</label>\n *   </div>\n *   <div>\n *     <input type=\"password\" igxInput/>\n *     <label igxLabel>Password</label>\n *   </div>\n * </igx-dialog>\n * ```\n */\n@Component({\n    selector: 'igx-dialog',\n    templateUrl: 'dialog-content.component.html'\n})\nexport class IgxDialogComponent implements IToggleView, OnInit, OnDestroy, AfterContentInit {\n    private static NEXT_ID = 1;\n    private static readonly DIALOG_CLASS = 'igx-dialog';\n\n    @ViewChild(IgxToggleDirective, { static: true })\n    public toggleRef: IgxToggleDirective;\n\n    /**\n     * An @Input property that sets the value of the `id` attribute. If not provided it will be automatically generated.\n     * ```html\n     * <igx-dialog [id]=\"'igx-dialog-56'\" #alert title=\"Notification\"\n     *  leftButtonLabel=\"OK\" (onLeftButtonSelect)=\"alert.close()\">\n     * </igx-dialog>\n     * ```\n     */\n    @HostBinding('attr.id')\n    @Input()\n    public id = `igx-dialog-${DIALOG_ID++}`;\n\n    @Input()\n    get isModal() {\n        return this._isModal;\n    }\n\n    set isModal(val: boolean) {\n        this._overlayDefaultSettings.modal = val;\n        this._isModal = val;\n    }\n\n    /**\n     * An @Input property controlling the `title` of the dialog.\n     * ```html\n     * <igx-dialog title=\"Notification\" #alert leftButtonLabel=\"OK\" (onLeftButtonSelect)=\"alert.close()\"></igx-dialog>\n     * ```\n     */\n    @Input()\n    public title = '';\n\n    /**\n     *  An @Input property controlling the `message` of the dialog.\n     * ```html\n     * <igx-dialog message=\"Your email was sent!\" #alert leftButtonLabel=\"OK\" (onLeftButtonSelect)=\"alert.close()\"></igx-dialog>\n     * ```\n     */\n    @Input()\n    public message = '';\n\n    /**\n     * An @Input property to set the `label` of the left button of the dialog.\n     * ```html\n     * <igx-dialog leftButtonLabel=\"OKAY\" #alert title=\"Notification\"  (onLeftButtonSelect)=\"alert.close()\"></igx-dialog>\n     * ```\n     */\n    @Input()\n    public leftButtonLabel = '';\n\n    /**\n     * An @Input property to set the left button `type`. The types are `flat`, `raised` and `fab`.\n     * The `flat` type button is a rectangle and doesn't have a shadow. <br>\n     * The `raised` type button is also a rectangle but has a shadow. <br>\n     * The `fab` type button is a circle with a shadow. <br>\n     * The default value is `flat`.\n     * ```html\n     * <igx-dialog leftButtonType=\"raised\" leftButtonLabel=\"OKAY\" #alert (onLeftButtonSelect)=\"alert.close()\"></igx-dialog>\n     * ```\n     */\n    @Input()\n    public leftButtonType = 'flat';\n    /**\n     * An @Input property to set the left button color. The property accepts all valid CSS color property values.\n     * ```html\n     * <igx-dialog leftButtonColor=\"yellow\" leftButtonLabel=\"OKAY\" #alert (onLeftButtonSelect)=\"alert.close()\"></igx-dialog>\n     * ```\n     */\n    @Input()\n    public leftButtonColor = '';\n\n    /**\n     * An @Input property to set the left button `background-color`. The property accepts all valid CSS color property values.\n     * ```html\n     * <igx-dialog leftButtonBackgroundColor=\"black\" leftButtonLabel=\"OKAY\" #alert (onLeftButtonSelect)=\"alert.close()\"></igx-dialog>\n     * ```\n     */\n    @Input()\n    public leftButtonBackgroundColor = '';\n\n    /**\n     * An @Input property to set the left button `ripple`. The `ripple` animates a click/tap to a component as a series of fading waves.\n     * The property accepts all valid CSS color property values.\n     * ```html\n     * <igx-dialog leftButtonRipple=\"green\" leftButtonLabel=\"OKAY\" #alert (onLeftButtonSelect)=\"alert.close()\"></igx-dialog>\n     * ```\n     */\n    @Input()\n    public leftButtonRipple = '';\n\n    /**\n     * An @Input property to set the `label` of the right button of the dialog.\n     * ```html\n     * <igx-dialog rightButtonLabel=\"OKAY\" #alert title=\"Notification\"  (onLeftButtonSelect)=\"alert.close()\"></igx-dialog>\n     * ```\n     */\n    @Input()\n    public rightButtonLabel = '';\n\n    /**\n     * An @Input property to set the right button `type`. The types are `flat`, `raised` and `fab`.\n     * The `flat` type button is a rectangle and doesn't have a shadow. <br>\n     * The `raised` type button is also a rectangle but has a shadow. <br>\n     * The `fab` type button is a circle with a shadow. <br>\n     * The default value is `flat`.\n     * ```html\n     * <igx-dialog rightButtonType=\"fab\" rightButtonLabel=\"OKAY\" #alert (onLeftButtonSelect)=\"alert.close()\"></igx-dialog>\n     * ```\n     */\n    @Input()\n    public rightButtonType = 'flat';\n\n    /**\n     * An @Input property to set the right button `color`. The property accepts all valid CSS color property values.\n     * ```html\n     * <igx-dialog rightButtonColor=\"yellow\" rightButtonLabel=\"OKAY\" #alert (onLeftButtonSelect)=\"alert.close()\"></igx-dialog>\n     * ```\n     */\n    @Input()\n    public rightButtonColor = '';\n\n    /**\n     * An @Input property to set the right button `background-color`. The property accepts all valid CSS color property values.\n     * ```html\n     * <igx-dialog rightButtonBackgroundColor=\"black\" rightButtonLabel=\"OKAY\" #alert (onLeftButtonSelect)=\"alert.close()\"></igx-dialog>\n     * ```\n     */\n    @Input()\n    public rightButtonBackgroundColor = '';\n\n    /**\n     * An @Input property to set the right button `ripple`.\n     * ```html\n     * <igx-dialog rightButtonRipple=\"green\" rightButtonLabel=\"OKAY\" #alert (onLeftButtonSelect)=\"alert.close()\"></igx-dialog>\n     * ```\n     */\n    @Input()\n    public rightButtonRipple = '';\n\n    /**\n     * An @Input property that allows you to enable the \"close on click outside the dialog\". By default it's disabled.\n     * ```html\n     * <igx-dialog closeOnOutsideSelect=\"true\" leftButtonLabel=\"Cancel\" (onLeftButtonSelect)=\"dialog.close()\"\n     * rightButtonLabel=\"OK\" rightButtonRipple=\"#4CAF50\" (onRightButtonSelect)=\"onDialogOKSelected($event)\">\n     * </igx-dialog>\n     * ```\n     */\n    @Input()\n    get closeOnOutsideSelect() {\n        return this._closeOnOutsideSelect;\n    }\n\n    set closeOnOutsideSelect(val: boolean) {\n        this._overlayDefaultSettings.closeOnOutsideClick = val;\n        this._closeOnOutsideSelect = val;\n    }\n\n    /**\n     * Get the position and animation settings used by the dialog.\n     * ```typescript\n     * @ViewChild('alert', { static: true }) public alert: IgxDialogComponent;\n     * let currentPosition: PositionSettings = this.alert.positionSettings\n     * ```\n     */\n    @Input()\n    public get positionSettings(): PositionSettings {\n        return this._positionSettings;\n    }\n\n    /**\n     * Set the position and animation settings used by the dialog.\n     * ```typescript\n     * import { slideInLeft, slideOutRight } from 'igniteui-angular';\n     * ...\n     * @ViewChild('alert', { static: true }) public alert: IgxDialogComponent;\n     *  public newPositionSettings: PositionSettings = {\n     *      openAnimation: useAnimation(slideInTop, { params: { duration: '2000ms' } }),\n     *      closeAnimation: useAnimation(slideOutBottom, { params: { duration: '2000ms'} }),\n     *      horizontalDirection: HorizontalAlignment.Left,\n     *      verticalDirection: VerticalAlignment.Middle,\n     *      horizontalStartPoint: HorizontalAlignment.Left,\n     *      verticalStartPoint: VerticalAlignment.Middle,\n     *      minSize: { height: 100, width: 100 }\n     *  };\n     * this.alert.positionSettings = this.newPositionSettings;\n     * ```\n     */\n    public set positionSettings(settings: PositionSettings) {\n        this._positionSettings = settings;\n        this._overlayDefaultSettings.positionStrategy = new GlobalPositionStrategy(this._positionSettings);\n    }\n\n    /**\n     * An event that is emitted when the dialog is opened.\n     * ```html\n     * <igx-dialog (onOpen)=\"onDialogOpenHandler($event)\" (onLeftButtonSelect)=\"dialog.close()\" rightButtonLabel=\"OK\">\n     * </igx-dialog>\n     * ```\n     */\n    @Output()\n    public onOpen = new EventEmitter<IDialogEventArgs>();\n\n    /**\n     * An event that is emitted when the dialog is closed.\n     * ```html\n     * <igx-dialog (onClose)=\"onDialogCloseHandler($event)\" title=\"Confirmation\" leftButtonLabel=\"Cancel\" rightButtonLabel=\"OK\">\n     * </igx-dialog>\n     * ```\n     */\n    @Output()\n    public onClose = new EventEmitter<IDialogEventArgs>();\n\n    /**\n     * An event that is emitted when the left button is clicked.\n     * ```html\n     * <igx-dialog (onLeftButtonSelect)=\"onDialogOKSelected($event)\" #dialog leftButtonLabel=\"OK\" rightButtonLabel=\"Cancel\">\n     * </igx-dialog>\n     * ```\n     */\n    @Output()\n    public onLeftButtonSelect = new EventEmitter<IDialogEventArgs>();\n\n    /**\n     * An event that is emitted when the right button is clicked.\n     * ```html\n     * <igx-dialog (onRightButtonSelect)=\"onDialogOKSelected($event)\"\n     * #dialog title=\"Confirmation\" (onLeftButtonSelect)=\"dialog.close()\" rightButtonLabel=\"OK\"\n     * rightButtonRipple=\"#4CAF50\" closeOnOutsideSelect=\"true\">\n     * </igx-dialog>\n     * ```\n     */\n    @Output()\n    public onRightButtonSelect = new EventEmitter<IDialogEventArgs>();\n\n    private _positionSettings: PositionSettings = {\n        openAnimation: useAnimation(slideInBottom, { params: { fromPosition: 'translateY(100%)' } }),\n        closeAnimation: useAnimation(slideOutTop, { params: { toPosition: 'translateY(-100%)' } })\n    };\n\n    private _overlayDefaultSettings: OverlaySettings;\n    private _closeOnOutsideSelect = false;\n    private _isModal = true;\n    protected destroy$ = new Subject<boolean>();\n\n    /**\n     * @hidden\n     */\n    public get element() {\n        return this.elementRef.nativeElement;\n    }\n\n    /**\n     * The default `tabindex` attribute for the component\n     *\n     * @hidden\n     */\n    @HostBinding('attr.tabindex')\n    public tabindex = -1;\n\n    private _titleId: string;\n\n    /**\n     * Returns the value of state. Possible state values are \"open\" or \"close\".\n     * ```typescript\n     * @ViewChild(\"MyDialog\")\n     * public dialog: IgxDialogComponent;\n     * ngAfterViewInit() {\n     *     let dialogState = this.dialog.state;\n     * }\n     * ```\n     */\n    get state(): string {\n        return this.isOpen ? 'open' : 'close';\n    }\n\n    /**\n     * Returns whether the dialog is visible to the end user.\n     * ```typescript\n     * @ViewChild(\"MyDialog\")\n     * public dialog: IgxDialogComponent;\n     * ngAfterViewInit() {\n     *     let dialogOpen = this.dialog.isOpen;\n     * }\n     * ```\n     */\n    @Input()\n    get isOpen() {\n        return !this.toggleRef.collapsed;\n    }\n\n    @HostBinding('class.igx-dialog--hidden')\n    get isCollapsed() {\n        return this.toggleRef.collapsed;\n    }\n\n    /**\n     * Returns the value of the role of the dialog. The valid values are `dialog`, `alertdialog`, `alert`.\n     * ```typescript\n     * @ViewChild(\"MyDialog\")\n     * public dialog: IgxDialogComponent;\n     * ngAfterViewInit() {\n     *     let dialogRole = this.dialog.role;\n     * }\n     *  ```\n     */\n    @Input()\n    get role() {\n        if (this.leftButtonLabel !== '' && this.rightButtonLabel !== '') {\n            return 'dialog';\n        } else if (\n            this.leftButtonLabel !== '' ||\n            this.rightButtonLabel !== ''\n        ) {\n            return 'alertdialog';\n        } else {\n            return 'alert';\n        }\n    }\n\n    /**\n     * Returns the value of the title id.\n     * ```typescript\n     *  @ViewChild(\"MyDialog\")\n     * public dialog: IgxDialogComponent;\n     * ngAfterViewInit() {\n     *     let dialogTitle = this.dialog.titleId;\n     * }\n     * ```\n     */\n    @Input()\n    get titleId() {\n        return this._titleId;\n    }\n\n    constructor(\n        private elementRef: ElementRef,\n        @Optional() private navService: IgxNavigationService\n    ) {\n        this._titleId = IgxDialogComponent.NEXT_ID++ + '_title';\n\n        this._overlayDefaultSettings = {\n            positionStrategy: new GlobalPositionStrategy(this._positionSettings),\n            scrollStrategy: new NoOpScrollStrategy(),\n            modal: this.isModal,\n            closeOnOutsideClick: this.closeOnOutsideSelect\n        };\n    }\n\n    ngAfterContentInit() {\n        this.toggleRef.onClosing.pipe(takeUntil(this.destroy$)).subscribe(() => this.emitCloseFromDialog());\n    }\n\n    private emitCloseFromDialog() {\n        this.onClose.emit({ dialog: this, event: null });\n    }\n\n    /**\n     * A method that opens the dialog.\n     * @memberOf {@link IgxDialogComponent}\n     * ```html\n     * <button (click)=\"dialog.open() igxButton=\"raised\" igxButtonColor=\"white\" igxRipple=\"white\">Trigger Dialog</button>\n     * <igx-dialog #dialog></igx-dialog>\n     * ```\n     */\n    public open(overlaySettings: OverlaySettings = this._overlayDefaultSettings) {\n        this.toggleRef.open(overlaySettings);\n        this.onOpen.emit({ dialog: this, event: null });\n        if (!this.leftButtonLabel && !this.rightButtonLabel) {\n            this.toggleRef.element.focus();\n        }\n    }\n\n    /**\n     * A method that that closes the dialog.\n     *  @memberOf {@link IgxDialogComponent}\n     * ```html\n     * <button (click)=\"dialog.close() igxButton=\"raised\" igxButtonColor=\"white\" igxRipple=\"white\">Trigger Dialog</button>\n     * <igx-dialog #dialog></igx-dialog>\n     * ```\n     */\n    public close() {\n        // `onClose` will emit from `toggleRef.onClosing` subscription\n        this.toggleRef.close();\n    }\n\n\n    /**\n     * A method that opens/closes the dialog.\n     * @memberOf {@link IgxDialogComponent}\n     * ```html\n     * <button (click)=\"dialog.toggle() igxButton=\"raised\" igxButtonColor=\"white\" igxRipple=\"white\">Trigger Dialog</button>\n     * <igx-dialog #dialog></igx-dialog>\n     * ```\n     */\n    public toggle() {\n        this.isOpen ? this.close() : this.open();\n    }\n\n    /**\n     * @hidden\n     */\n    public onDialogSelected(event) {\n        event.stopPropagation();\n        if (\n            this.isOpen &&\n            this.closeOnOutsideSelect &&\n            event.target.classList.contains(IgxDialogComponent.DIALOG_CLASS)\n        ) {\n            this.close();\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public onInternalLeftButtonSelect(event) {\n        this.onLeftButtonSelect.emit({ dialog: this, event });\n    }\n\n    /**\n     * @hidden\n     */\n    public onInternalRightButtonSelect(event) {\n        this.onRightButtonSelect.emit({ dialog: this, event });\n    }\n\n    /**\n     * @hidden\n     */\n    public ngOnInit() {\n        if (this.navService && this.id) {\n            this.navService.add(this.id, this);\n        }\n    }\n    /**\n     * @hidden\n     */\n    public ngOnDestroy() {\n        if (this.navService && this.id) {\n            this.navService.remove(this.id);\n        }\n\n    }\n\n}\n\nexport interface IDialogEventArgs extends IBaseEventArgs {\n    dialog: IgxDialogComponent;\n    event: Event;\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [IgxDialogComponent, IgxDialogTitleDirective, IgxDialogActionsDirective],\n    exports: [IgxDialogComponent, IgxDialogTitleDirective, IgxDialogActionsDirective],\n    imports: [CommonModule, IgxToggleModule, IgxButtonModule, IgxRippleModule, IgxFocusModule]\n})\nexport class IgxDialogModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { cloneArray } from '../../core/utils';\nimport { DataUtil } from '../../data-operations/data-util';\nimport { IGroupByExpandState } from '../../data-operations/groupby-expand-state.interface';\nimport { IGroupByResult } from '../../data-operations/grouping-result.interface';\nimport { IFilteringExpressionsTree, FilteringExpressionsTree } from '../../data-operations/filtering-expressions-tree';\nimport { ISortingExpression } from '../../data-operations/sorting-expression.interface';\nimport { IgxGridAPIService } from './grid-api.service';\nimport { IgxGridComponent } from './grid.component';\nimport { IGroupingExpression } from '../../data-operations/grouping-expression.interface';\nimport { GridBaseAPIService } from '../api.service';\nimport { IgxGridBaseDirective } from '../grid-base.directive';\nimport { GridType } from '../common/grid.interface';\nimport { IFilteringStrategy } from '../../data-operations/filtering-strategy';\nimport { IGridSortingStrategy } from '../../data-operations/sorting-strategy';\n\n/**\n * @hidden\n */\n@Pipe({\n    name: 'gridSort',\n    pure: true\n})\nexport class IgxGridSortingPipe implements PipeTransform {\n    private gridAPI: IgxGridAPIService;\n\n    constructor(gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>) {\n        this.gridAPI = <IgxGridAPIService>gridAPI;\n    }\n\n    public transform(collection: any[], expressions: ISortingExpression[], sorting: IGridSortingStrategy,\n        id: string, pipeTrigger: number, pinned?): any[] {\n        const grid = this.gridAPI.grid;\n        let result: any[];\n\n        if (!expressions.length) {\n            result = collection;\n        } else {\n            result = DataUtil.sort(cloneArray(collection), expressions, sorting);\n        }\n        grid.setFilteredSortedData(result, pinned);\n\n        return result;\n    }\n}\n\n/**\n * @hidden\n */\n@Pipe({\n    name: 'gridGroupBy',\n    pure: true\n})\nexport class IgxGridGroupingPipe implements PipeTransform {\n    private gridAPI: IgxGridAPIService;\n\n    constructor(gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>) {\n        this.gridAPI = <IgxGridAPIService>gridAPI;\n    }\n\n    public transform(collection: any[], expression: IGroupingExpression | IGroupingExpression[],\n        expansion: IGroupByExpandState | IGroupByExpandState[], defaultExpanded: boolean,\n        id: string, groupsRecords: any[], pipeTrigger: number): IGroupByResult {\n\n        const state = { expressions: [], expansion: [], defaultExpanded };\n        const grid: IgxGridComponent = this.gridAPI.grid;\n        state.expressions = grid.groupingExpressions;\n        let result: IGroupByResult;\n        const fullResult: IGroupByResult = { data: [], metadata: [] };\n\n        if (!state.expressions.length) {\n            // empty the array without changing reference\n            groupsRecords.splice(0, groupsRecords.length);\n            result = {\n                data: collection,\n                metadata: collection\n            };\n        } else {\n            state.expansion = grid.groupingExpansionState;\n            state.defaultExpanded = grid.groupsExpanded;\n            result = DataUtil.group(cloneArray(collection), state, grid, groupsRecords, fullResult);\n        }\n        grid.groupingFlatResult = result.data;\n        grid.groupingResult = fullResult.data;\n        grid.groupingMetadata = fullResult.metadata;\n        return result;\n    }\n}\n\n/**\n * @hidden\n */\n@Pipe({\n    name: 'gridPaging',\n    pure: true\n})\nexport class IgxGridPagingPipe implements PipeTransform {\n\n    constructor(private gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>) { }\n\n    public transform(collection: IGroupByResult, page = 0, perPage = 15, id: string, pipeTrigger: number): IGroupByResult {\n\n        if (!this.gridAPI.grid.paging) {\n            return collection;\n        }\n        const state = {\n            index: page,\n            recordsPerPage: perPage\n        };\n        DataUtil.correctPagingState(state, collection.data.length);\n\n        const result = {\n            data: DataUtil.page(cloneArray(collection.data), state),\n            metadata: DataUtil.page(cloneArray(collection.metadata), state)\n        };\n        if (this.gridAPI.grid.page !== state.index) {\n            this.gridAPI.grid.page = state.index;\n        }\n        this.gridAPI.grid.pagingState = state;\n        return result;\n    }\n}\n\n/**\n * @hidden\n */\n@Pipe({\n    name: 'gridFiltering',\n    pure: true\n})\nexport class IgxGridFilteringPipe implements PipeTransform {\n\n    constructor(private gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>) { }\n\n    public transform(collection: any[], expressionsTree: IFilteringExpressionsTree,\n        filterStrategy: IFilteringStrategy,\n        advancedExpressionsTree: IFilteringExpressionsTree, id: string, pipeTrigger: number, filteringPipeTrigger: number, pinned?) {\n        const grid = this.gridAPI.grid;\n        const state = {\n            expressionsTree: expressionsTree,\n            strategy: filterStrategy,\n            advancedExpressionsTree: advancedExpressionsTree\n        };\n\n        if (FilteringExpressionsTree.empty(state.expressionsTree) && FilteringExpressionsTree.empty(state.advancedExpressionsTree)) {\n            return collection;\n        }\n\n        const result = DataUtil.filter(cloneArray(collection), state);\n        grid.setFilterData(result, pinned);\n        return result;\n    }\n}\n","import { Component, forwardRef, ChangeDetectionStrategy,\n     ElementRef, ChangeDetectorRef, HostBinding, ViewChildren, QueryList } from '@angular/core';\nimport { IgxGridComponent } from './grid.component';\nimport { IgxRowDirective } from '../row.directive';\nimport { GridBaseAPIService } from '../api.service';\nimport { IgxGridSelectionService, IgxGridCRUDService } from '../selection/selection.service';\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false,\n    selector: 'igx-grid-row',\n    templateUrl: './grid-row.component.html',\n    providers: [{ provide: IgxRowDirective, useExisting: forwardRef(() => IgxGridRowComponent) }]\n})\nexport class IgxGridRowComponent extends IgxRowDirective<IgxGridComponent> {\n\n    // R.K. TODO: Remove\n    constructor(\n        public gridAPI: GridBaseAPIService<IgxGridComponent>,\n        public crudService: IgxGridCRUDService,\n        public selectionService: IgxGridSelectionService,\n        public element: ElementRef,\n        public cdr: ChangeDetectorRef) {\n            // D.P. constructor duplication due to es6 compilation, might be obsolete in the future\n            super(gridAPI, crudService, selectionService, element, cdr);\n        }\n\n    @HostBinding('class.igx-grid__tr--mrl')\n    get hasColumnLayouts(): boolean {\n        return this.grid.hasColumnLayouts;\n    }\n\n    getContext(col, row) {\n        return {\n            $implicit: col,\n            row: row\n        };\n    }\n\n    get mrlRightPinnedOffset(): string {\n        return !this.grid.isPinningToStart ?\n            - this.grid.pinnedWidth - this.grid.headerFeaturesWidth + 'px' :\n            null;\n    }\n\n    getContextMRL(pinnedCols, row) {\n        return {\n            $implicit: pinnedCols,\n            row: row\n        };\n    }\n\n    get expanded() {\n        return this.gridAPI.get_row_expansion_state(this.rowData);\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { IgxGridAPIService } from './grid-api.service';\nimport { GridBaseAPIService } from '../api.service';\nimport { IgxGridBaseDirective } from '../grid-base.directive';\nimport { IgxGridComponent } from './grid.component';\nimport { ISummaryRecord } from '../summaries/grid-summary';\nimport { IGroupByRecord } from '../../data-operations/groupby-record.interface';\nimport { IGroupByResult } from '../../data-operations/grouping-result.interface';\nimport { GridSummaryCalculationMode, GridSummaryPosition } from '../common/enums';\nimport { GridType } from '../common/grid.interface';\n\n/** @hidden */\ninterface ISkipRecord {\n    skip?: boolean;\n}\n\n/** @hidden */\n@Pipe({\n    name: 'gridSummary',\n    pure: true\n})\nexport class IgxGridSummaryPipe implements PipeTransform {\n    private gridAPI: IgxGridAPIService;\n\n    constructor(gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>) {\n        this.gridAPI = <IgxGridAPIService>gridAPI;\n    }\n\n    public transform(collection: IGroupByResult,\n        hasSummary: boolean,\n        summaryCalculationMode: GridSummaryCalculationMode,\n        summaryPosition: GridSummaryPosition,\n        id: string, pipeTrigger: number, summaryPipeTrigger: number): any[] {\n\n        if (!collection.data || !hasSummary || summaryCalculationMode === GridSummaryCalculationMode.rootLevelOnly) {\n            return collection.data;\n        }\n\n        return this.addSummaryRows(id, collection, summaryPosition);\n    }\n\n    private addSummaryRows(gridId: string, collection: IGroupByResult, summaryPosition: GridSummaryPosition): any[] {\n        const recordsWithSummary = [];\n        const lastChildMap = new Map<any, IGroupByRecord[]>();\n        const grid: IgxGridComponent = this.gridAPI.grid;\n        const maxSummaryHeight = grid.summaryService.calcMaxSummaryHeight();\n\n        if (collection.metadata.length && !grid.isGroupByRecord(collection.data[0]) &&\n            grid.isGroupByRecord(collection.metadata[0]) && summaryPosition === GridSummaryPosition.bottom) {\n            const groups: Array<IGroupByRecord & ISkipRecord> = [];\n            groups.push(collection.metadata[0]);\n            while (groups[groups.length - 1].groupParent) {\n                groups.push(groups[groups.length - 1].groupParent);\n            }\n            groups.reverse();\n            groups.forEach(g => g.skip = true);\n            collection.data.splice(0, 0, ...groups);\n        }\n        for (let i = 0; i < collection.data.length; i++) {\n            const record = collection.data[i];\n            let skipAdd = false;\n            let recordId;\n            let groupByRecord: IGroupByRecord = null;\n            if (grid.isGroupByRecord(record)) {\n                skipAdd = !!record.skip;\n                record.skip = null;\n                groupByRecord = record as IGroupByRecord;\n                recordId = this.gridAPI.get_groupBy_record_id(groupByRecord);\n            } else {\n                recordId = this.gridAPI.get_row_id(record);\n            }\n            if (!skipAdd) {\n                recordsWithSummary.push(record);\n            }\n\n            if (summaryPosition === GridSummaryPosition.bottom && lastChildMap.has(recordId)) {\n                const groupRecords = lastChildMap.get(recordId);\n\n                for (let j = 0; j < groupRecords.length; j++) {\n                    const groupRecord = groupRecords[j];\n                    const groupRecordId = this.gridAPI.get_groupBy_record_id(groupRecord);\n                    const records = this.removeDeletedRecord(grid, groupRecord.records.slice());\n                    const summaries = grid.summaryService.calculateSummaries(groupRecordId, records);\n                    const summaryRecord: ISummaryRecord = {\n                        summaries: summaries,\n                        max: maxSummaryHeight\n                    };\n                    recordsWithSummary.push(summaryRecord);\n                }\n            }\n\n            if (groupByRecord === null || !grid.isExpandedGroup(groupByRecord)) {\n                continue;\n            }\n\n            if (summaryPosition === GridSummaryPosition.top) {\n                const records = this.removeDeletedRecord(grid, groupByRecord.records.slice());\n                const summaries = grid.summaryService.calculateSummaries(recordId, records);\n                const summaryRecord: ISummaryRecord = {\n                    summaries: summaries,\n                    max: maxSummaryHeight\n                };\n                recordsWithSummary.push(summaryRecord);\n            } else if (summaryPosition === GridSummaryPosition.bottom) {\n                let lastChild = groupByRecord;\n\n                while (lastChild.groups && lastChild.groups.length > 0 && grid.isExpandedGroup(lastChild)) {\n                    lastChild = lastChild.groups[lastChild.groups.length - 1];\n                }\n\n                let lastChildId;\n                if (grid.isExpandedGroup(lastChild)) {\n                    lastChildId = this.gridAPI.get_row_id(lastChild.records[lastChild.records.length - 1]);\n                } else {\n                    lastChildId = this.gridAPI.get_groupBy_record_id(lastChild);\n                }\n\n                let groupRecords = lastChildMap.get(lastChildId);\n                if (!groupRecords) {\n                    groupRecords = [];\n                    lastChildMap.set(lastChildId, groupRecords);\n                }\n                groupRecords.unshift(groupByRecord);\n            }\n        }\n\n        return recordsWithSummary;\n    }\n\n    private removeDeletedRecord(grid, data) {\n        if (!grid.transactions.enabled) {\n            return data;\n        }\n        const deletedRows = grid.transactions.getTransactionLog().filter(t => t.type === 'delete').map(t => t.id);\n        deletedRows.forEach(rowID => {\n            const tempData = grid.primaryKey ? data.map(rec => rec[grid.primaryKey]) : data;\n            const index = tempData.indexOf(rowID);\n            if (index !== -1) {\n                data.splice(index, 1);\n            }\n        });\n        return data;\n    }\n}\n","import { PipeTransform, Pipe } from '@angular/core';\nimport { GridType } from '../common/grid.interface';\nimport { IgxGridBaseDirective } from '../grid-base.directive';\nimport { GridBaseAPIService } from '../api.service';\nimport { IgxGridAPIService } from './grid-api.service';\n\n/** @hidden */\n@Pipe({\n    name: 'gridDetails',\n    pure: true\n})\nexport class IgxGridDetailsPipe implements PipeTransform {\n    private gridAPI: IgxGridAPIService;\n    constructor(gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>) {\n        this.gridAPI = <IgxGridAPIService>gridAPI;\n    }\n    public transform(collection: any[], hasDetails: boolean, expansionStates:  Map<any, boolean>, pipeTrigger: number) {\n        if (!hasDetails) {\n            return collection;\n        }\n        const res = this.addDetailRows(collection, expansionStates);\n        return res;\n    }\n\n    protected addDetailRows(collection: any[], expansionStates: Map<any, boolean>) {\n        const result = [];\n        collection.forEach((v) => {\n            result.push(v);\n            if (!this.gridAPI.grid.isGroupByRecord(v) && !this.gridAPI.grid.isSummaryRow(v) &&\n                this.gridAPI.get_row_expansion_state(v)) {\n                const detailsObj = { detailsData: v };\n                result.push(detailsObj);\n            }\n        });\n        return result;\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    Inject,\n    Input,\n    NgZone,\n    OnInit,\n    TemplateRef,\n    ViewChild\n} from '@angular/core';\nimport { IgxGridCellComponent } from '../cell.component';\nimport { GridBaseAPIService } from '../api.service';\nimport { getNodeSizeViaRange, PlatformUtil } from '../../core/utils';\nimport { DOCUMENT } from '@angular/common';\nimport { IgxGridBaseDirective } from './public_api';\nimport { IgxGridSelectionService, IgxGridCRUDService } from '../selection/selection.service';\nimport { HammerGesturesManager } from '../../core/touch';\nimport { GridType } from '../common/grid.interface';\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'igx-expandable-grid-cell',\n    templateUrl: 'expandable-cell.component.html',\n    providers: [HammerGesturesManager]\n})\nexport class IgxGridExpandableCellComponent extends IgxGridCellComponent implements OnInit {\n\n    constructor(\n                selectionService: IgxGridSelectionService,\n                crudService: IgxGridCRUDService,\n                gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>,\n                cdr: ChangeDetectorRef,\n                element: ElementRef,\n                protected zone: NgZone,\n                touchManager: HammerGesturesManager,\n                @Inject(DOCUMENT) public document,\n                protected platformUtil: PlatformUtil) {\n        super(selectionService, crudService, gridAPI, cdr, element, zone, touchManager, platformUtil);\n    }\n\n    /**\n     * @hidden\n     */\n    @Input()\n    expanded = false;\n\n    @ViewChild('indicator', { read: ElementRef })\n    public indicator: ElementRef;\n\n    @ViewChild('indentationDiv', { read: ElementRef })\n    public indentationDiv: ElementRef;\n\n   /**\n    * @hidden\n    */\n   @ViewChild('defaultExpandedTemplate', { read: TemplateRef, static: true })\n   protected defaultExpandedTemplate: TemplateRef<any>;\n\n   /**\n    * @hidden\n    */\n   @ViewChild('defaultCollapsedTemplate', { read: TemplateRef, static: true })\n   protected defaultCollapsedTemplate: TemplateRef<any>;\n\n    /**\n     * @hidden\n     */\n    public toggle(event: Event) {\n        event.stopPropagation();\n        const expansionState = this.gridAPI.get_row_expansion_state(this.row.rowData);\n        this.gridAPI.set_row_expansion_state(this.row.rowID, !expansionState, event);\n    }\n\n    /**\n     * @hidden\n     */\n    public onIndicatorFocus() {\n        this.gridAPI.submit_value();\n    }\n\n    /**\n     * @hidden\n     */\n    public calculateSizeToFit(range: any): number {\n        const indicatorWidth = this.indicator.nativeElement.getBoundingClientRect().width;\n        const indicatorStyle = this.document.defaultView.getComputedStyle(this.indicator.nativeElement);\n        const indicatorMargin = parseFloat(indicatorStyle.marginRight);\n        let leftPadding = 0;\n        if (this.indentationDiv) {\n            const indentationStyle = this.document.defaultView.getComputedStyle(this.indentationDiv.nativeElement);\n            leftPadding = parseFloat(indentationStyle.paddingLeft);\n        }\n        const largestWidth = Math.max(...Array.from(this.nativeElement.children)\n            .map((child) => getNodeSizeViaRange(range, child)));\n        return largestWidth + indicatorWidth + indicatorMargin + leftPadding;\n    }\n\n    /**\n     * @hidden\n     */\n    public get iconTemplate() {\n        if (this.expanded) {\n            return this.grid.rowExpandedIndicatorTemplate || this.defaultExpandedTemplate;\n        } else {\n            return this.grid.rowCollapsedIndicatorTemplate || this.defaultCollapsedTemplate;\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public get showExpanderIndicator() {\n        const isGhost = this.row.pinned && this.row.disabled;\n        return !this.editMode && (!this.row.pinned || isGhost);\n    }\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport {\n    IgxGroupAreaDropDirective,\n    IgxGroupByRowTemplateDirective,\n    IgxRowExpandedIndicatorDirective,\n    IgxRowCollapsedIndicatorDirective,\n    IgxHeaderExpandIndicatorDirective,\n    IgxHeaderCollapseIndicatorDirective,\n    IgxGridDetailTemplateDirective\n} from './grid.directives';\nimport { IgxGridComponent } from './grid.component';\nimport {\n    IgxGridPagingPipe,\n    IgxGridGroupingPipe,\n    IgxGridSortingPipe,\n    IgxGridFilteringPipe\n} from './grid.pipes';\nimport { IgxGridGroupByRowComponent } from './groupby-row.component';\nimport { IgxGridRowComponent } from './grid-row.component';\nimport { IgxGridCommonModule } from '../grid-common.module';\nimport { IgxGridSummaryPipe } from './grid.summary.pipe';\nimport { IgxGridDetailsPipe } from './grid.details.pipe';\nimport { IgxGridExpandableCellComponent } from './expandable-cell.component';\n/**\n * @hidden\n */\n@NgModule({\n  declarations: [\n    IgxGridComponent,\n    IgxGridRowComponent,\n    IgxGridGroupByRowComponent,\n    IgxGroupByRowTemplateDirective,\n    IgxGridDetailTemplateDirective,\n    IgxRowExpandedIndicatorDirective,\n    IgxRowCollapsedIndicatorDirective,\n    IgxHeaderExpandIndicatorDirective,\n    IgxHeaderCollapseIndicatorDirective,\n    IgxGroupAreaDropDirective,\n    IgxGridGroupingPipe,\n    IgxGridPagingPipe,\n    IgxGridSortingPipe,\n    IgxGridFilteringPipe,\n    IgxGridSummaryPipe,\n    IgxGridDetailsPipe,\n    IgxGridExpandableCellComponent\n  ],\n  exports: [\n    IgxGridComponent,\n    IgxGridExpandableCellComponent,\n    IgxGridGroupByRowComponent,\n    IgxGridRowComponent,\n    IgxGroupByRowTemplateDirective,\n    IgxGridDetailTemplateDirective,\n    IgxRowExpandedIndicatorDirective,\n    IgxRowCollapsedIndicatorDirective,\n    IgxHeaderExpandIndicatorDirective,\n    IgxHeaderCollapseIndicatorDirective,\n    IgxGroupAreaDropDirective,\n    IgxGridGroupingPipe,\n    IgxGridPagingPipe,\n    IgxGridSortingPipe,\n    IgxGridFilteringPipe,\n    IgxGridSummaryPipe,\n    IgxGridDetailsPipe,\n    IgxGridCommonModule\n  ],\n  imports: [\n    IgxGridCommonModule,\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class IgxGridModule {}\n","import { GridBaseAPIService } from '../api.service';\nimport { IgxTreeGridComponent } from './tree-grid.component';\nimport { DataType } from '../../data-operations/data-util';\nimport { ITreeGridRecord } from './tree-grid.interfaces';\nimport { IRowToggleEventArgs } from '../common/events';\nimport { HierarchicalTransaction, TransactionType, State } from '../../services/public_api';\nimport { mergeObjects } from '../../core/utils';\nimport { Injectable } from '@angular/core';\nimport { ColumnType } from '../common/column.interface';\n\n@Injectable()\nexport class IgxTreeGridAPIService extends GridBaseAPIService<IgxTreeGridComponent> {\n    public get_all_data(transactions?: boolean): any[] {\n        const grid = this.grid;\n        const data = transactions ? grid.dataWithAddedInTransactionRows : grid.flatData;\n        return data ? data : [];\n    }\n\n    public get_summary_data() {\n        const grid = this.grid;\n        const data = grid.processedRootRecords.filter(row => row.isFilteredOutParent === undefined || row.isFilteredOutParent === false)\n            .map(rec => rec.data);\n        if (grid.transactions.enabled) {\n            const deletedRows = grid.transactions.getTransactionLog().filter(t => t.type === TransactionType.DELETE).map(t => t.id);\n            deletedRows.forEach(rowID => {\n                const tempData = grid.primaryKey ? data.map(rec => rec[grid.primaryKey]) : data;\n                const index = tempData.indexOf(rowID);\n                if (index !== -1) {\n                    data.splice(index, 1);\n                }\n            });\n        }\n        return data;\n    }\n\n    public allow_expansion_state_change(rowID, expanded): boolean {\n        const grid = this.grid;\n        const row = grid.records.get(rowID);\n        if (row.expanded === expanded ||\n            ((!row.children || !row.children.length) && (!grid.loadChildrenOnDemand ||\n            (grid.hasChildrenKey && !row.data[grid.hasChildrenKey])))) {\n            return false;\n        }\n        return true;\n    }\n\n    public expand_path_to_record(record: ITreeGridRecord) {\n        const grid = this.grid;\n        const expandedStates = grid.expansionStates;\n\n        while (record.parent) {\n            record = record.parent;\n            const expanded = this.get_row_expansion_state(record);\n\n            if (!expanded) {\n                expandedStates.set(record.rowID, true);\n            }\n        }\n        grid.expansionStates = expandedStates;\n\n        if (grid.rowEditable) {\n            grid.endEdit(true);\n        }\n    }\n\n    public get_row_expansion_state(record: ITreeGridRecord): boolean {\n        const grid = this.grid;\n        const states = grid.expansionStates;\n        const expanded = states.get(record.rowID);\n\n        if (expanded !== undefined) {\n            return expanded;\n        } else {\n            return record.children && record.children.length && record.level < grid.expansionDepth;\n        }\n    }\n\n    protected update_row_in_array(value: any, rowID: any, index: number) {\n        const grid = this.grid;\n        if (grid.primaryKey && grid.foreignKey) {\n            super.update_row_in_array(value, rowID, index);\n        } else {\n            const record = grid.records.get(rowID);\n            const childData = record.parent ? record.parent.data[grid.childDataKey] : grid.data;\n            index = grid.primaryKey ? childData.map(c => c[grid.primaryKey]).indexOf(rowID) :\n                childData.indexOf(rowID);\n            childData[index] = value;\n        }\n    }\n\n    public should_apply_number_style(column: ColumnType): boolean {\n        return column.dataType === DataType.Number && column.visibleIndex !== 0;\n    }\n\n    public deleteRowById(rowID: any) {\n        const treeGrid = this.grid;\n        const flatDataWithCascadeOnDeleteAndTransactions =\n        treeGrid.primaryKey &&\n        treeGrid.foreignKey &&\n        treeGrid.cascadeOnDelete &&\n        treeGrid.transactions.enabled;\n\n        if (flatDataWithCascadeOnDeleteAndTransactions) {\n            treeGrid.transactions.startPending();\n        }\n\n        super.deleteRowById(rowID);\n\n        if (flatDataWithCascadeOnDeleteAndTransactions) {\n            treeGrid.transactions.endPending(true);\n        }\n    }\n\n    public deleteRowFromData(rowID: any, index: number) {\n        const treeGrid = this.grid;\n        const record = treeGrid.records.get(rowID);\n\n        if (treeGrid.primaryKey && treeGrid.foreignKey) {\n            index = treeGrid.primaryKey ?\n                treeGrid.data.map(c => c[treeGrid.primaryKey]).indexOf(rowID) :\n                treeGrid.data.indexOf(rowID);\n            super.deleteRowFromData(rowID, index);\n\n            if (treeGrid.cascadeOnDelete) {\n                if (record && record.children && record.children.length > 0) {\n                    for (let i = 0; i < record.children.length; i++) {\n                        const child = record.children[i];\n                        super.deleteRowById(child.rowID);\n                    }\n                }\n            }\n        } else {\n            const collection = record.parent ? record.parent.data[treeGrid.childDataKey] : treeGrid.data;\n            index = treeGrid.primaryKey ?\n                collection.map(c => c[treeGrid.primaryKey]).indexOf(rowID) :\n                collection.indexOf(rowID);\n\n            const selectedChildren = [];\n            this.get_selected_children(record, selectedChildren);\n            if (selectedChildren.length > 0) {\n                treeGrid.deselectRows(selectedChildren);\n            }\n\n            if (treeGrid.transactions.enabled) {\n                const path = treeGrid.generateRowPath(rowID);\n                treeGrid.transactions.add({\n                    id: rowID,\n                    type: TransactionType.DELETE,\n                    newValue: null,\n                    path: path\n                },\n                    collection[index]\n                );\n            } else {\n                collection.splice(index, 1);\n            }\n        }\n    }\n\n    /**\n     * Updates related row of provided grid's data source with provided new row value\n     * @param grid Grid to update data for\n     * @param rowID ID of the row to update\n     * @param rowValueInDataSource Initial value of the row as it is in data source\n     * @param rowCurrentValue Current value of the row as it is with applied previous transactions\n     * @param rowNewValue New value of the row\n     */\n    protected updateData(\n        grid: IgxTreeGridComponent,\n        rowID: any,\n        rowValueInDataSource: any,\n        rowCurrentValue: any,\n        rowNewValue: { [x: string]: any }) {\n        if (grid.transactions.enabled) {\n            const path = grid.generateRowPath(rowID);\n            const transaction: HierarchicalTransaction = {\n                id: rowID,\n                type: TransactionType.UPDATE,\n                newValue: rowNewValue,\n                path: path\n            };\n            grid.transactions.add(transaction, rowCurrentValue);\n        } else {\n            mergeObjects(rowValueInDataSource, rowNewValue);\n        }\n    }\n\n    public get_selected_children(record: ITreeGridRecord, selectedRowIDs: any[]) {\n        const grid = this.grid;\n        if (!record.children || record.children.length === 0) {\n            return;\n        }\n        for (const child of record.children) {\n            if (grid.selectionService.isRowSelected(child.rowID)) {\n                selectedRowIDs.push(child.rowID);\n            }\n            this.get_selected_children(child, selectedRowIDs);\n        }\n    }\n\n    public row_deleted_transaction(rowID: any): boolean {\n        return this.row_deleted_parent(rowID) || super.row_deleted_transaction(rowID);\n    }\n\n    public get_rec_by_id(rowID) {\n        return this.grid.records.get(rowID);\n    }\n\n    private row_deleted_parent(rowID: any): boolean {\n        const grid = this.grid;\n        if (!grid) {\n            return false;\n        }\n        if ((grid.cascadeOnDelete && grid.foreignKey) || grid.childDataKey) {\n            let node = grid.records.get(rowID);\n            while (node) {\n                const state: State = grid.transactions.getState(node.rowID);\n                if (state && state.type === TransactionType.DELETE) {\n                    return true;\n                }\n                node = node.parent;\n            }\n        }\n        return false;\n    }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * @hidden\n */\n@Directive({\n    selector: '[igxRowLoadingIndicator]'\n})\nexport class IgxRowLoadingIndicatorTemplateDirective {\n\n    constructor(public template: TemplateRef<any>) { }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    HostBinding,\n    Input,\n    forwardRef,\n    OnInit,\n    TemplateRef,\n    QueryList,\n    ContentChild,\n    AfterContentInit,\n    ViewChild,\n    DoCheck\n} from '@angular/core';\nimport { IgxTreeGridAPIService } from './tree-grid-api.service';\nimport { IgxGridBaseDirective } from '../grid-base.directive';\nimport { GridBaseAPIService } from '../api.service';\nimport { ITreeGridRecord } from './tree-grid.interfaces';\nimport { IRowToggleEventArgs } from '../common/events';\nimport { HierarchicalTransaction, HierarchicalState, TransactionType } from '../../services/transaction/transaction';\nimport { IgxHierarchicalTransactionService } from '../../services/public_api';\nimport { IgxFilteringService } from '../filtering/grid-filtering.service';\nimport { IgxGridSummaryService } from '../summaries/grid-summary.service';\nimport { IgxGridSelectionService, IgxGridCRUDService } from '../selection/selection.service';\nimport { mergeObjects } from '../../core/utils';\nimport { first, takeUntil } from 'rxjs/operators';\nimport { IgxRowLoadingIndicatorTemplateDirective } from './tree-grid.directives';\nimport { IgxForOfSyncService, IgxForOfScrollSyncService } from '../../directives/for-of/for_of.sync.service';\nimport { IgxGridNavigationService } from '../grid-navigation.service';\nimport { GridType } from '../common/grid.interface';\nimport { IgxColumnComponent } from '../columns/column.component';\nimport { IgxRowIslandAPIService } from '../hierarchical-grid/row-island-api.service';\n\nlet NEXT_ID = 0;\n\n/**\n * **Ignite UI for Angular Tree Grid** -\n * [Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/grid.html)\n *\n * The Ignite UI Tree Grid displays and manipulates hierarchical data with consistent schema formatted as a table and\n * provides features such as sorting, filtering, editing, column pinning, paging, column moving and hiding.\n *\n * Example:\n * ```html\n * <igx-tree-grid [data]=\"employeeData\" primaryKey=\"employeeID\" foreignKey=\"PID\" autoGenerate=\"false\">\n *   <igx-column field=\"first\" header=\"First Name\"></igx-column>\n *   <igx-column field=\"last\" header=\"Last Name\"></igx-column>\n *   <igx-column field=\"role\" header=\"Role\"></igx-column>\n * </igx-tree-grid>\n * ```\n */\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false,\n    selector: 'igx-tree-grid',\n    templateUrl: 'tree-grid.component.html',\n    providers: [\n        IgxGridSelectionService,\n        IgxGridCRUDService,\n        IgxGridSummaryService,\n        IgxGridNavigationService,\n        { provide: GridBaseAPIService, useClass: IgxTreeGridAPIService },\n        { provide: IgxGridBaseDirective, useExisting: forwardRef(() => IgxTreeGridComponent) },\n        IgxFilteringService,\n        IgxForOfSyncService,\n        IgxForOfScrollSyncService,\n        IgxRowIslandAPIService\n    ]\n})\nexport class IgxTreeGridComponent extends IgxGridBaseDirective implements GridType, OnInit, DoCheck, AfterContentInit {\n    private _id = `igx-tree-grid-${NEXT_ID++}`;\n    private _data;\n    private _rowLoadingIndicatorTemplate: TemplateRef<any>;\n    protected _transactions: IgxHierarchicalTransactionService<HierarchicalTransaction, HierarchicalState>;\n\n    /**\n     * An @Input property that sets the value of the `id` attribute. If not provided it will be automatically generated.\n     * ```html\n     * <igx-tree-grid [id]=\"'igx-tree-grid-1'\"></igx-tree-grid>\n     * ```\n     * @memberof IgxTreeGridComponent\n     */\n    @HostBinding('attr.id')\n    @Input()\n    public get id(): string {\n        return this._id;\n    }\n    public set id(value: string) {\n        this._id = value;\n    }\n\n    /**\n     * An @Input property that lets you fill the `IgxTreeGridComponent` with an array of data.\n     * ```html\n     * <igx-tree-grid [data]=\"Data\" [autoGenerate]=\"true\"></igx-tree-grid>\n     * ```\n     * @memberof IgxTreeGridComponent\n     */\n    @Input()\n    public get data(): any[] {\n        return this._data;\n    }\n\n    public set data(value: any[]) {\n        this._data = value || [];\n        this.summaryService.clearSummaryCache();\n        if (this.shouldGenerate) {\n            this.setupColumns();\n        }\n        this.cdr.markForCheck();\n    }\n\n    /**\n     * Returns an array of objects containing the filtered data in the `IgxGridComponent`.\n     * ```typescript\n     * let filteredData = this.grid.filteredData;\n     * ```\n     * @memberof IgxTreeGridComponent\n     */\n    get filteredData() {\n        return this._filteredData;\n    }\n\n    /**\n     * Sets an array of objects containing the filtered data in the `IgxGridComponent`.\n     * ```typescript\n     * this.grid.filteredData = [{\n     *       ID: 1,\n     *       Name: \"A\"\n     * }];\n     * ```\n     * @memberof IgxTreeGridComponent\n     */\n    set filteredData(value) {\n        this._filteredData = value;\n    }\n\n    /**\n     * Get transactions service for the grid.\n     * @experimental @hidden\n     */\n    get transactions() {\n        return this._transactions;\n    }\n\n    /**\n     * @hidden\n     */\n    public flatData: any[];\n\n    /**\n     * @hidden\n     */\n    public processedExpandedFlatData: any[];\n\n    /**\n     * Returns an array of the root level `ITreeGridRecord`s.\n     * ```typescript\n     * // gets the root record with index=2\n     * const states = this.grid.rootRecords[2];\n     * ```\n     * @memberof IgxTreeGridComponent\n     */\n    public rootRecords: ITreeGridRecord[];\n\n    /**\n     * Returns a map of all `ITreeGridRecord`s.\n     * ```typescript\n     * // gets the record with primaryKey=2\n     * const states = this.grid.records.get(2);\n     * ```\n     * @memberof IgxTreeGridComponent\n     */\n    public records: Map<any, ITreeGridRecord> = new Map<any, ITreeGridRecord>();\n\n    /**\n     * Returns an array of processed (filtered and sorted) root `ITreeGridRecord`s.\n     * ```typescript\n     * // gets the processed root record with index=2\n     * const states = this.grid.processedRootRecords[2];\n     * ```\n     * @memberof IgxTreeGridComponent\n     */\n    public processedRootRecords: ITreeGridRecord[];\n\n    /**\n     * Returns a map of all processed (filtered and sorted) `ITreeGridRecord`s.\n     * ```typescript\n     * // gets the processed record with primaryKey=2\n     * const states = this.grid.processedRecords.get(2);\n     * ```\n     * @memberof IgxTreeGridComponent\n     */\n    public processedRecords: Map<any, ITreeGridRecord> = new Map<any, ITreeGridRecord>();\n\n    /**\n     * An @Input property that sets the child data key of the `IgxTreeGridComponent`.\n     * ```html\n     * <igx-tree-grid #grid [data]=\"employeeData\" [childDataKey]=\"'employees'\" [autoGenerate]=\"true\"></igx-tree-grid>\n     * ```\n     * @memberof IgxTreeGridComponent\n     */\n    @Input()\n    public childDataKey;\n\n    /**\n     * An @Input property that sets the foreign key of the `IgxTreeGridComponent`.\n     * ```html\n     * <igx-tree-grid #grid [data]=\"employeeData\" [primaryKey]=\"'employeeID'\" [foreignKey]=\"'parentID'\" [autoGenerate]=\"true\">\n     * </igx-tree-grid>\n     * ```\n     * @memberof IgxTreeGridComponent\n     */\n    @Input()\n    public foreignKey;\n\n    /**\n     * An @Input property that sets the key indicating whether a row has children.\n     * This property is only used for load on demand scenarios.\n     * ```html\n     * <igx-tree-grid #grid [data]=\"employeeData\" [primaryKey]=\"'employeeID'\" [foreignKey]=\"'parentID'\"\n     *                [loadChildrenOnDemand]=\"loadChildren\"\n     *                [hasChildrenKey]=\"'hasEmployees'\">\n     * </igx-tree-grid>\n     * ```\n     * @memberof IgxTreeGridComponent\n     */\n    @Input()\n    public hasChildrenKey;\n\n    /**\n     * An @Input property indicating whether child records should be deleted when their parent gets deleted.\n     * By default it is set to true and deletes all children along with the parent.\n     * ```html\n     * <igx-tree-grid [data]=\"employeeData\" [primaryKey]=\"'employeeID'\" [foreignKey]=\"'parentID'\" cascadeOnDelete=\"false\">\n     * </igx-tree-grid>\n     * ```\n     * @memberof IgxTreeGridComponent\n     */\n    @Input()\n    public cascadeOnDelete = true;\n\n    private _expansionDepth = Infinity;\n\n    /**\n     * An @Input property that sets the count of levels to be expanded in the `IgxTreeGridComponent`. By default it is\n     * set to `Infinity` which means all levels would be expanded.\n     * ```html\n     * <igx-tree-grid #grid [data]=\"employeeData\" [childDataKey]=\"'employees'\" expansionDepth=\"1\" [autoGenerate]=\"true\"></igx-tree-grid>\n     * ```\n     * @memberof IgxTreeGridComponent\n     */\n    @Input()\n    public get expansionDepth(): number {\n        return this._expansionDepth;\n    }\n\n    public set expansionDepth(value: number) {\n        this._expansionDepth = value;\n        this.notifyChanges();\n    }\n\n    /**\n     * @hidden\n     */\n    @ContentChild(IgxRowLoadingIndicatorTemplateDirective, { read: IgxRowLoadingIndicatorTemplateDirective })\n    protected rowLoadingTemplate: IgxRowLoadingIndicatorTemplateDirective;\n\n    /**\n     * An @Input property that provides a template for the row loading indicator when load on demand is enabled.\n     * ```html\n     * <ng-template #rowLoadingTemplate>\n     *     <igx-icon fontSet=\"material\">loop</igx-icon>\n     * </ng-template>\n     *\n     * <igx-tree-grid #grid [data]=\"employeeData\" [primaryKey]=\"'ID'\" [foreignKey]=\"'parentID'\"\n     *                [loadChildrenOnDemand]=\"loadChildren\"\n     *                [rowLoadingIndicatorTemplate]=\"rowLoadingTemplate\">\n     * </igx-tree-grid>\n     * ```\n     * @memberof IgxTreeGridComponent\n     */\n    @Input()\n    public get rowLoadingIndicatorTemplate(): TemplateRef<any> {\n        return this._rowLoadingIndicatorTemplate;\n    }\n\n    public set rowLoadingIndicatorTemplate(value: TemplateRef<any>) {\n        this._rowLoadingIndicatorTemplate = value;\n        this.notifyChanges();\n    }\n\n    /**\n     * An @Input property that provides a callback for loading child rows on demand.\n     * ```html\n     * <igx-tree-grid [data]=\"employeeData\" [primaryKey]=\"'employeeID'\" [foreignKey]=\"'parentID'\" [loadChildrenOnDemand]=\"loadChildren\">\n     * </igx-tree-grid>\n     * ```\n     * ```typescript\n     * public loadChildren = (parentID: any, done: (children: any[]) => void) => {\n     *     this.dataService.getData(parentID, children => done(children));\n     * }\n     * ```\n     * @memberof IgxTreeGridComponent\n     */\n    @Input()\n    public loadChildrenOnDemand: (parentID: any, done: (children: any[]) => void) => void;\n\n    /**\n     * @hidden\n     */\n    public loadingRows = new Set<any>();\n\n    // Kind of stupid\n    private get _gridAPI(): IgxTreeGridAPIService {\n        return this.gridAPI as IgxTreeGridAPIService;\n    }\n    private _filteredData = null;\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @ViewChild('dragIndicatorIconBase', { read: TemplateRef, static: true })\n    public dragIndicatorIconBase: TemplateRef<any>;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('record_template', { read: TemplateRef, static: true })\n    protected recordTemplate: TemplateRef<any>;\n\n    /**\n     * @hidden @internal\n     */\n    @ViewChild('summary_template', { read: TemplateRef, static: true })\n    protected summaryTemplate: TemplateRef<any>;\n\n    /**\n     * @hidden\n     */\n    public ngOnInit() {\n        super.ngOnInit();\n\n        this.onRowToggle.pipe(takeUntil(this.destroy$)).subscribe((args) => {\n            this.loadChildrenOnRowExpansion(args);\n        });\n    }\n\n    ngDoCheck() {\n        super.ngDoCheck();\n    }\n\n    /**\n     * @hidden\n     */\n    public ngAfterContentInit() {\n        if (this.rowLoadingTemplate) {\n            this._rowLoadingIndicatorTemplate = this.rowLoadingTemplate.template;\n        }\n        super.ngAfterContentInit();\n    }\n\n    private loadChildrenOnRowExpansion(args: IRowToggleEventArgs) {\n        if (this.loadChildrenOnDemand) {\n            const parentID = args.rowID;\n\n            if (args.expanded && !this._expansionStates.has(parentID)) {\n                this.loadingRows.add(parentID);\n\n                this.loadChildrenOnDemand(parentID, children => {\n                    this.loadingRows.delete(parentID);\n                    this.addChildRows(children, parentID);\n                    this.notifyChanges();\n                });\n            }\n        }\n    }\n\n    private addChildRows(children: any[], parentID: any) {\n        if (this.primaryKey && this.foreignKey) {\n            for (const child of children) {\n                child[this.foreignKey] = parentID;\n            }\n            this.data.push(...children);\n        } else if (this.childDataKey) {\n            let parent = this.records.get(parentID);\n            let parentData = parent.data;\n\n            if (this.transactions.enabled && this.transactions.getAggregatedChanges(true).length) {\n                const path = [];\n                while (parent) {\n                    path.push(parent.rowID);\n                    parent = parent.parent;\n                }\n\n                let collection = this.data;\n                let record: any;\n                for (let i = path.length - 1; i >= 0; i--) {\n                    const pid = path[i];\n                    record = collection.find(r => r[this.primaryKey] === pid);\n\n                    if (!record) {\n                        break;\n                    }\n                    collection = record[this.childDataKey];\n                }\n                if (record) {\n                    parentData = record;\n                }\n            }\n\n            parentData[this.childDataKey] = children;\n        }\n        this.selectionService.clearHeaderCBState();\n        this._pipeTrigger++;\n    }\n\n    private cloneMap(mapIn: Map<any, boolean>): Map<any, boolean> {\n        const mapCloned: Map<any, boolean> = new Map<any, boolean>();\n\n        mapIn.forEach((value: boolean, key: any, mapObj: Map<any, boolean>) => {\n\n            mapCloned.set(key, value);\n        });\n\n        return mapCloned;\n    }\n\n    public getDefaultExpandState(record: ITreeGridRecord) {\n        return record.children && record.children.length && record.level < this.expansionDepth;\n    }\n\n    /**\n     * Expands all rows.\n     * ```typescript\n     * this.grid.expandAll();\n     * ```\n     * @memberof IgxTreeGridComponent\n     */\n    public expandAll() {\n        this._expansionDepth = Infinity;\n        this.expansionStates = new Map<any, boolean>();\n    }\n\n    /**\n     * Collapses all rows.\n     *\n     * ```typescript\n     * this.grid.collapseAll();\n     *  ```\n     * @memberof IgxTreeGridComponent\n     */\n    public collapseAll() {\n        this._expansionDepth = 0;\n        this.expansionStates = new Map<any, boolean>();\n    }\n\n    /**\n     * Creates a new `IgxTreeGridRowComponent` with the given data. If a parentRowID is not specified, the newly created\n     * row would be added at the root level. Otherwise, it would be added as a child of the row whose primaryKey matches\n     * the specified parentRowID. If the parentRowID does not exist, an error would be thrown.\n     * ```typescript\n     * const record = {\n     *     ID: this.grid.data[this.grid1.data.length - 1].ID + 1,\n     *     Name: this.newRecord\n     * };\n     * this.grid.addRow(record, 1); // Adds a new child row to the row with ID=1.\n     * ```\n     * @param data\n     * @param parentRowID\n     * @memberof IgxTreeGridComponent\n     */\n    public addRow(data: any, parentRowID?: any) {\n        if (parentRowID !== undefined && parentRowID !== null) {\n            super.endEdit(true);\n\n            const state = this.transactions.getState(parentRowID);\n            // we should not allow adding of rows as child of deleted row\n            if (state && state.type === TransactionType.DELETE) {\n                throw Error(`Cannot add child row to deleted parent row`);\n            }\n\n            const parentRecord = this.records.get(parentRowID);\n\n            if (!parentRecord) {\n                throw Error('Invalid parent row ID!');\n            }\n            this.summaryService.clearSummaryCache({rowID: parentRecord.rowID});\n            if (this.primaryKey && this.foreignKey) {\n                data[this.foreignKey] = parentRowID;\n                super.addRow(data);\n            } else {\n                const parentData = parentRecord.data;\n                const childKey = this.childDataKey;\n                if (this.transactions.enabled) {\n                    const rowId = this.primaryKey ? data[this.primaryKey] : data;\n                    const path: any[] = [];\n                    path.push(...this.generateRowPath(parentRowID));\n                    path.push(parentRowID);\n                    this.transactions.add({\n                        id: rowId,\n                        path: path,\n                        newValue: data,\n                        type: TransactionType.ADD\n                    } as HierarchicalTransaction,\n                        null);\n                } else {\n                    if (!parentData[childKey]) {\n                        parentData[childKey] = [];\n                    }\n                    parentData[childKey].push(data);\n                }\n                this.onRowAdded.emit({ data });\n                this._pipeTrigger++;\n                this.notifyChanges();\n            }\n        } else {\n            if (this.primaryKey && this.foreignKey) {\n                const rowID = data[this.foreignKey];\n                this.summaryService.clearSummaryCache({rowID: rowID});\n            }\n            super.addRow(data);\n        }\n    }\n\n    /** @hidden */\n    public deleteRowById(rowId: any) {\n        //  if this is flat self-referencing data, and CascadeOnDelete is set to true\n        //  and if we have transactions we should start pending transaction. This allows\n        //  us in case of delete action to delete all child rows as single undo action\n        this._gridAPI.deleteRowById(rowId);\n\n    }\n\n    /** @hidden */\n    public generateRowPath(rowId: any): any[] {\n        const path: any[] = [];\n        let record = this.records.get(rowId);\n\n        while (record.parent) {\n            path.push(record.parent.rowID);\n            record = record.parent;\n        }\n\n        return path.reverse();\n    }\n\n    /**\n     * @hidden @internal\n     */\n    protected getDataBasedBodyHeight(): number {\n        return !this.flatData || (this.flatData.length < this._defaultTargetRecordNumber) ?\n            0 : this.defaultTargetBodyHeight;\n    }\n\n    /**\n     * @hidden\n     */\n    protected scrollTo(row: any | number, column: any | number): void {\n        let delayScrolling = false;\n        let record: ITreeGridRecord;\n\n        if (typeof(row) !== 'number') {\n            const rowData = row;\n            const rowID = this._gridAPI.get_row_id(rowData);\n            record = this.processedRecords.get(rowID);\n            this._gridAPI.expand_path_to_record(record);\n\n            if (this.paging) {\n                const rowIndex = this.processedExpandedFlatData.indexOf(rowData);\n                const page = Math.floor(rowIndex / this.perPage);\n\n                if (this.page !== page) {\n                    delayScrolling = true;\n                    this.page = page;\n                }\n            }\n        }\n\n        if (delayScrolling) {\n            this.verticalScrollContainer.onDataChanged.pipe(first()).subscribe(() => {\n                this.scrollDirective(this.verticalScrollContainer,\n                    typeof(row) === 'number' ? row : this.unpinnedDataView.indexOf(record));\n            });\n        } else {\n            this.scrollDirective(this.verticalScrollContainer,\n                typeof(row) === 'number' ? row : this.unpinnedDataView.indexOf(record));\n        }\n\n        this.scrollToHorizontally(column);\n    }\n\n    /**\n     * @hidden\n     */\n    public getContext(rowData: any, rowIndex: number, pinned?: boolean): any {\n        return {\n            $implicit: this.isGhostRecord(rowData) ? rowData.recordRef : rowData,\n            index: this.getDataViewIndex(rowIndex, pinned),\n            templateID: this.isSummaryRow(rowData) ? 'summaryRow' : 'dataRow',\n            disabled: this.isGhostRecord(rowData) ? rowData.recordRef.isFilteredOutParent === undefined : false\n        };\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public getInitialPinnedIndex(rec) {\n        return this._pinnedRecordIDs.indexOf(rec.rowID);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getSelectedData(formatters = false, headers = false): any[] {\n        let source = [];\n\n        const process = (record) => {\n            if (record.summaries) {\n                source.push(null);\n                return;\n            }\n            source.push(record.data);\n        };\n\n        this.unpinnedDataView.forEach(process);\n        source = this.isRowPinningToTop ? [...this.pinnedDataView, ...source] : [...source, ...this.pinnedDataView];\n        return this.extractDataFromSelection(source, formatters, headers);\n    }\n\n    /**\n     * @hidden\n     */\n    public get template(): TemplateRef<any> {\n        if (this.filteredData && this.filteredData.length === 0) {\n            return this.emptyGridTemplate ? this.emptyGridTemplate : this.emptyFilteredGridTemplate;\n        }\n\n        if (this.isLoading && (!this.data || this.dataLength === 0)) {\n            return this.loadingGridTemplate ? this.loadingGridTemplate : this.loadingGridDefaultTemplate;\n        }\n\n        if (this.dataLength === 0) {\n            return this.emptyGridTemplate ? this.emptyGridTemplate : this.emptyGridDefaultTemplate;\n        }\n    }\n\n    protected writeToData(rowIndex: number, value: any) {\n        mergeObjects(this.flatData[rowIndex], value);\n    }\n\n    /**\n     * @hidden\n     */\n   protected initColumns(collection: QueryList<IgxColumnComponent>, cb: Function = null) {\n        if (this.hasColumnLayouts) {\n            // invalid configuration - tree grid should not allow column layouts\n            // remove column layouts\n            const nonColumnLayoutColumns = this.columnList.filter((col) => !col.columnLayout && !col.columnLayoutChild);\n            this.columnList.reset(nonColumnLayoutColumns);\n        }\n        super.initColumns(collection, cb);\n    }\n}\n","import { Component, forwardRef, Input, ViewChildren, QueryList, HostBinding, DoCheck, ChangeDetectionStrategy } from '@angular/core';\nimport { IgxTreeGridComponent } from './tree-grid.component';\nimport { IgxRowDirective } from '../row.directive';\nimport { ITreeGridRecord } from './tree-grid.interfaces';\nimport { IgxTreeGridAPIService } from './tree-grid-api.service';\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'igx-tree-grid-row',\n    templateUrl: 'tree-grid-row.component.html',\n    providers: [{ provide: IgxRowDirective, useExisting: forwardRef(() => IgxTreeGridRowComponent) }]\n})\nexport class IgxTreeGridRowComponent extends IgxRowDirective<IgxTreeGridComponent> implements DoCheck {\n    private _treeRow: ITreeGridRecord;\n\n    @ViewChildren('treeCell')\n    protected _cells: QueryList<any>;\n\n    /**\n     * The `ITreeGridRecord` passed to the row component.\n     *\n     * ```typescript\n     * const row = this.grid.getRowByKey(1) as IgxTreeGridRowComponent;\n     * const treeRow = row.treeRow;\n     * ```\n     */\n    @Input()\n    public get treeRow(): ITreeGridRecord {\n        return this._treeRow;\n    }\n\n    public set treeRow(value: ITreeGridRecord) {\n        if (this._treeRow !== value) {\n            this._treeRow = value;\n            this.rowData = this._treeRow.data;\n        }\n    }\n\n    /**\n     * Gets whether the row is pinned.\n     * ```typescript\n     * let isPinned = row.pinned;\n     * ```\n     */\n    public get pinned() {\n        return this.grid.isRecordPinned(this._treeRow);\n    }\n\n    /**\n     * Sets whether the row is pinned.\n     * Default value is `false`.\n     * ```typescript\n     * this.grid.selectedRows[0].pinned = true;\n     * ```\n     */\n    public set pinned(value: boolean) {\n        if (value) {\n            this.grid.pinRow(this.rowID);\n        } else {\n            this.grid.unpinRow(this.rowID);\n        }\n    }\n\n    /**\n     * Returns a value indicating whether the row component is expanded.\n     *\n     * ```typescript\n     * const row = this.grid.getRowByKey(1) as IgxTreeGridRowComponent;\n     * const expanded = row.expanded;\n     * ```\n     */\n    @HostBinding('attr.aria-expanded')\n    get expanded(): boolean {\n        return this._treeRow.expanded;\n    }\n\n    /**\n     * Sets a value indicating whether the row component is expanded.\n     *\n     * ```typescript\n     * const row = this.grid.getRowByKey(1) as IgxTreeGridRowComponent;\n     * row.expanded = true;\n     * ```\n     */\n    set expanded(value: boolean) {\n        (this.gridAPI as IgxTreeGridAPIService).set_row_expansion_state(this._treeRow.rowID, value);\n    }\n\n    /**\n     * @hidden\n     */\n    public isLoading: boolean;\n\n    /**\n     * @hidden\n     * @internal\n     */\n    get viewIndex(): number {\n        return this.index + this.grid.page * this.grid.perPage;\n    }\n\n    /**\n     * @hidden\n     */\n    public get showIndicator() {\n        return this.grid.loadChildrenOnDemand ?\n            this.grid.expansionStates.has(this.rowID) ?\n                this.treeRow.children && this.treeRow.children.length :\n                this.grid.hasChildrenKey ?\n                    this.rowData[this.grid.hasChildrenKey] :\n                    true :\n            this.treeRow.children && this.treeRow.children.length;\n    }\n\n    /**\n     * @hidden\n     */\n    protected resolveClasses(): string {\n        const classes = super.resolveClasses();\n        const filteredClass = this.treeRow.isFilteredOutParent ? 'igx-grid__tr--filtered' : '';\n        return `${classes} ${filteredClass}`;\n    }\n\n    /**\n     * @hidden\n     */\n    public ngDoCheck() {\n        this.isLoading = this.grid.loadChildrenOnDemand ? this.grid.loadingRows.has(this.rowID) : false;\n        super.ngDoCheck();\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { cloneArray, cloneHierarchicalArray } from '../../core/utils';\nimport { DataUtil } from '../../data-operations/data-util';\nimport { IgxTreeGridAPIService } from './tree-grid-api.service';\nimport { GridBaseAPIService } from '../api.service';\nimport { IgxTreeGridComponent } from './tree-grid.component';\nimport { ITreeGridRecord } from './tree-grid.interfaces';\nimport { IgxGridBaseDirective } from '../grid/public_api';\nimport { ISortingExpression } from '../../data-operations/sorting-expression.interface';\nimport { GridType } from '../common/grid.interface';\nimport { IGridSortingStrategy } from '../../data-operations/sorting-strategy';\n\n/**\n * @hidden\n */\n@Pipe({\n    name: 'treeGridHierarchizing',\n    pure: true\n})\nexport class IgxTreeGridHierarchizingPipe implements PipeTransform {\n    private gridAPI: IgxTreeGridAPIService;\n\n    constructor(gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>) {\n        this.gridAPI = <IgxTreeGridAPIService>gridAPI;\n    }\n\n    public transform(collection: any[], primaryKey: string, foreignKey: string, childDataKey: string,\n        id: string, pipeTrigger: number): ITreeGridRecord[] {\n        const grid = this.gridAPI.grid;\n        let hierarchicalRecords: ITreeGridRecord[] = [];\n        const treeGridRecordsMap = new Map<any, ITreeGridRecord>();\n        const flatData: any[] = [];\n\n        if (primaryKey && foreignKey) {\n            hierarchicalRecords = this.hierarchizeFlatData(id, collection, primaryKey, foreignKey, treeGridRecordsMap, flatData);\n        } else if (childDataKey) {\n            hierarchicalRecords = this.hierarchizeRecursive(id, collection, primaryKey, childDataKey, undefined,\n                flatData, 0, treeGridRecordsMap);\n        }\n\n        grid.flatData = flatData;\n        grid.records = treeGridRecordsMap;\n        grid.rootRecords = hierarchicalRecords;\n        return hierarchicalRecords;\n    }\n\n    private getRowID(primaryKey: any, rowData: any) {\n        return primaryKey ? rowData[primaryKey] : rowData;\n    }\n\n    private hierarchizeFlatData(id: string, collection: any[], primaryKey: string, foreignKey: string,\n        map: Map<any, ITreeGridRecord>, flatData: any[]):\n        ITreeGridRecord[] {\n        const result: ITreeGridRecord[] = [];\n        const missingParentRecords: ITreeGridRecord[] = [];\n        collection.forEach(row => {\n            const record: ITreeGridRecord = {\n                rowID: this.getRowID(primaryKey, row),\n                data: row,\n                children: []\n            };\n            const parent = map.get(row[foreignKey]);\n            if (parent) {\n                record.parent = parent;\n                parent.children.push(record);\n            } else {\n                missingParentRecords.push(record);\n            }\n\n            map.set(row[primaryKey], record);\n        });\n\n        missingParentRecords.forEach(record => {\n            const parent = map.get(record.data[foreignKey]);\n            if (parent) {\n                record.parent = parent;\n                parent.children.push(record);\n            } else {\n                result.push(record);\n            }\n        });\n\n        this.setIndentationLevels(id, result, 0, flatData);\n\n        return result;\n    }\n\n    private setIndentationLevels(id: string, collection: ITreeGridRecord[], indentationLevel: number, flatData: any[]) {\n        for (let i = 0; i < collection.length; i++) {\n            const record = collection[i];\n            record.level = indentationLevel;\n            record.expanded = this.gridAPI.get_row_expansion_state(record);\n            flatData.push(record.data);\n\n            if (record.children && record.children.length > 0) {\n                this.setIndentationLevels(id, record.children, indentationLevel + 1, flatData);\n            }\n        }\n    }\n\n    private hierarchizeRecursive(id: string, collection: any[], primaryKey: string, childDataKey: string,\n        parent: ITreeGridRecord, flatData: any[], indentationLevel: number, map: Map<any, ITreeGridRecord>): ITreeGridRecord[] {\n        const result: ITreeGridRecord[] = [];\n\n        for (let i = 0; i < collection.length; i++) {\n            const item = collection[i];\n            const record: ITreeGridRecord = {\n                rowID: this.getRowID(primaryKey, item),\n                data: item,\n                parent: parent,\n                level: indentationLevel\n            };\n            record.expanded = this.gridAPI.get_row_expansion_state(record);\n            flatData.push(item);\n            map.set(record.rowID, record);\n            record.children = item[childDataKey] ?\n                this.hierarchizeRecursive(id, item[childDataKey], primaryKey, childDataKey, record, flatData, indentationLevel + 1, map) :\n                undefined;\n            result.push(record);\n        }\n\n        return result;\n    }\n}\n\n/**\n * @hidden\n */\n@Pipe({\n    name: 'treeGridFlattening',\n    pure: true\n})\nexport class IgxTreeGridFlatteningPipe implements PipeTransform {\n    private gridAPI: IgxTreeGridAPIService;\n\n    constructor(gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>) {\n        this.gridAPI = <IgxTreeGridAPIService>gridAPI;\n    }\n\n    public transform(collection: ITreeGridRecord[], id: string,\n        expandedLevels: number, expandedStates: Map<any, boolean>, pipeTrigger: number): any[] {\n\n        const grid: IgxTreeGridComponent = this.gridAPI.grid;\n        const data: ITreeGridRecord[] = [];\n\n        grid.processedRootRecords = collection;\n        grid.processedRecords = new Map<any, ITreeGridRecord>();\n\n        this.getFlatDataRecursive(collection, data, expandedLevels, expandedStates, id, true);\n\n        grid.processedExpandedFlatData = data.map(r => r.data);\n\n        return data;\n    }\n\n    private getFlatDataRecursive(collection: ITreeGridRecord[], data: ITreeGridRecord[],\n        expandedLevels: number, expandedStates: Map<any, boolean>, gridID: string,\n        parentExpanded: boolean) {\n        if (!collection || !collection.length) {\n            return;\n        }\n        const grid: IgxTreeGridComponent = this.gridAPI.grid;\n\n        for (let i = 0; i < collection.length; i++) {\n            const hierarchicalRecord = collection[i];\n\n            if (parentExpanded) {\n                data.push(hierarchicalRecord);\n            }\n\n            hierarchicalRecord.expanded = this.gridAPI.get_row_expansion_state(hierarchicalRecord);\n\n            this.updateNonProcessedRecordExpansion(grid, hierarchicalRecord);\n\n            grid.processedRecords.set(hierarchicalRecord.rowID, hierarchicalRecord);\n\n            this.getFlatDataRecursive(hierarchicalRecord.children, data, expandedLevels,\n                expandedStates, gridID, parentExpanded && hierarchicalRecord.expanded);\n        }\n    }\n\n    private updateNonProcessedRecordExpansion(grid: IgxTreeGridComponent, record: ITreeGridRecord) {\n        const rec = grid.records.get(record.rowID);\n        rec.expanded = record.expanded;\n    }\n}\n\n/** @hidden */\n@Pipe({\n    name: 'treeGridSorting',\n    pure: true\n})\nexport class IgxTreeGridSortingPipe implements PipeTransform {\n    private gridAPI: IgxTreeGridAPIService;\n\n    constructor(gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>) {\n        this.gridAPI = <IgxTreeGridAPIService>gridAPI;\n    }\n\n    public transform(\n        hierarchicalData: ITreeGridRecord[],\n        expressions: ISortingExpression[],\n        sorting: IGridSortingStrategy,\n        id: string,\n        pipeTrigger: number,\n        pinned?: boolean): ITreeGridRecord[] {\n        const grid = this.gridAPI.grid;\n\n        let result: ITreeGridRecord[];\n        if (!expressions.length) {\n            result = hierarchicalData;\n        } else {\n            result = DataUtil.treeGridSort(hierarchicalData, expressions, sorting);\n        }\n\n        const filteredSortedData = [];\n        this.flattenTreeGridRecords(result, filteredSortedData);\n        grid.setFilteredSortedData(filteredSortedData, pinned);\n\n        return result;\n    }\n\n    private flattenTreeGridRecords(records: ITreeGridRecord[], flatData: any[]) {\n        if (records && records.length) {\n            for (const record of records) {\n                flatData.push(record.data);\n                this.flattenTreeGridRecords(record.children, flatData);\n            }\n        }\n    }\n}\n\n/** @hidden */\n@Pipe({\n    name: 'treeGridPaging',\n    pure: true\n})\nexport class IgxTreeGridPagingPipe implements PipeTransform {\n    private gridAPI: IgxTreeGridAPIService;\n\n    constructor(gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>) {\n        this.gridAPI = <IgxTreeGridAPIService>gridAPI;\n    }\n\n    public transform(collection: ITreeGridRecord[], page = 0, perPage = 15, id: string, pipeTrigger: number): ITreeGridRecord[] {\n        const grid = this.gridAPI.grid;\n        if (!grid.paging) {\n            return collection;\n        }\n\n        const len = collection.length;\n        const totalPages = Math.ceil(len / perPage);\n\n        const state = {\n            index: (totalPages > 0 && page >= totalPages) ? totalPages - 1 : page,\n            recordsPerPage: perPage\n        };\n\n        const result: ITreeGridRecord[] = DataUtil.page(cloneArray(collection), state);\n        grid.pagingState = state;\n        (grid as any)._page = state.index;\n\n        return result;\n    }\n}\n/** @hidden */\n@Pipe({\n    name: 'treeGridTransaction',\n    pure: true\n})\nexport class IgxTreeGridTransactionPipe implements PipeTransform {\n\n    private gridAPI: IgxTreeGridAPIService;\n\n    constructor(gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>) {\n        this.gridAPI = <IgxTreeGridAPIService>gridAPI;\n    }\n\n    transform(collection: any[], id: string, pipeTrigger: number): any[] {\n        const grid: IgxTreeGridComponent = this.gridAPI.grid;\n\n        if (grid.transactions.enabled) {\n            const aggregatedChanges = grid.transactions.getAggregatedChanges(true);\n            if (aggregatedChanges.length > 0) {\n                const primaryKey = grid.primaryKey;\n                if (!primaryKey) {\n                    return collection;\n                }\n\n                const foreignKey = grid.foreignKey;\n                const childDataKey = grid.childDataKey;\n\n                if (foreignKey) {\n                    const flatDataClone = cloneArray(collection);\n                    return DataUtil.mergeTransactions(\n                        flatDataClone,\n                        aggregatedChanges,\n                        grid.primaryKey);\n                } else if (childDataKey) {\n                    const hierarchicalDataClone = cloneHierarchicalArray(collection, childDataKey);\n                    return DataUtil.mergeHierarchicalTransactions(\n                        hierarchicalDataClone,\n                        aggregatedChanges,\n                        childDataKey,\n                        grid.primaryKey);\n                }\n            }\n        }\n        return collection;\n    }\n}\n\n/**\n * This pipe maps the original record to ITreeGridRecord format used in TreeGrid.\n */\n@Pipe({\n    name: 'treeGridNormalizeRecord',\n    pure: true\n})\nexport class IgxTreeGridNormalizeRecordsPipe implements PipeTransform {\n    private gridAPI: IgxTreeGridAPIService;\n\n    constructor(gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>) {\n        this.gridAPI = <IgxTreeGridAPIService> gridAPI;\n    }\n\n    transform(collection: any[], pipeTrigger: number): any[] {\n        const grid =  this.gridAPI.grid;\n        const primaryKey = grid.primaryKey;\n        // using flattened data because origin data may be hierarchical.\n        const flatData = grid.flatData;\n        const res = flatData.map(rec =>\n            ({\n                    rowID: grid.primaryKey ? rec[primaryKey] : rec,\n                    data: rec,\n                    level: 0,\n                    children: []\n            }));\n        return res;\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    Inject,\n    Input,\n    NgZone\n} from '@angular/core';\nimport { IgxTreeGridAPIService } from './tree-grid-api.service';\nimport { GridBaseAPIService } from '../api.service';\nimport { PlatformUtil } from '../../core/utils';\nimport { DOCUMENT } from '@angular/common';\nimport { IgxGridBaseDirective } from '../grid/public_api';\nimport { IgxGridSelectionService, IgxGridCRUDService } from '../selection/selection.service';\nimport { HammerGesturesManager } from '../../core/touch';\nimport { GridType } from '../common/grid.interface';\nimport { IgxGridExpandableCellComponent } from '../grid/expandable-cell.component';\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'igx-tree-grid-cell',\n    templateUrl: 'tree-cell.component.html',\n    providers: [HammerGesturesManager]\n})\nexport class IgxTreeGridCellComponent extends IgxGridExpandableCellComponent {\n    private treeGridAPI: IgxTreeGridAPIService;\n\n    constructor(\n        selectionService: IgxGridSelectionService,\n        crudService: IgxGridCRUDService,\n        gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>,\n        cdr: ChangeDetectorRef,\n        element: ElementRef,\n        protected zone: NgZone,\n        touchManager: HammerGesturesManager,\n        @Inject(DOCUMENT) public document,\n        protected platformUtil: PlatformUtil) {\n        super(selectionService, crudService, gridAPI, cdr, element, zone, touchManager, document, platformUtil);\n        this.treeGridAPI = <IgxTreeGridAPIService>gridAPI;\n    }\n\n    /**\n     * @hidden\n     */\n    @Input()\n    level = 0;\n\n    /**\n     * @hidden\n     */\n    @Input()\n    showIndicator = false;\n\n    /**\n     * @hidden\n     */\n    @Input()\n    public isLoading: boolean;\n\n    /**\n     * @hidden\n     */\n    public toggle(event: Event) {\n        event.stopPropagation();\n        this.treeGridAPI.set_row_expansion_state(this.row.rowID, !this.row.expanded, event);\n    }\n\n    /**\n     * @hidden\n     */\n    public onLoadingDblClick(event: Event) {\n        event.stopPropagation();\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { IgxTreeGridAPIService } from './tree-grid-api.service';\nimport { GridBaseAPIService } from '../api.service';\nimport { IgxGridBaseDirective } from '../grid-base.directive';\nimport { ITreeGridRecord } from './tree-grid.interfaces';\nimport { IgxTreeGridComponent } from './tree-grid.component';\nimport { ISummaryRecord } from '../summaries/grid-summary';\nimport { GridSummaryCalculationMode, GridSummaryPosition } from '../common/enums';\nimport { GridType } from '../common/grid.interface';\n\n/** @hidden */\n@Pipe({\n    name: 'treeGridSummary',\n    pure: true\n})\nexport class IgxTreeGridSummaryPipe implements PipeTransform {\n    private gridAPI: IgxTreeGridAPIService;\n\n    constructor(gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>) {\n        this.gridAPI = <IgxTreeGridAPIService>gridAPI;\n     }\n\n    public transform(flatData: ITreeGridRecord[],\n        hasSummary: boolean,\n        summaryCalculationMode: GridSummaryCalculationMode,\n        summaryPosition: GridSummaryPosition,\n        id: string, pipeTrigger: number, summaryPipeTrigger: number): any[] {\n        const grid: IgxTreeGridComponent = this.gridAPI.grid;\n\n        if (!flatData || !hasSummary || summaryCalculationMode === GridSummaryCalculationMode.rootLevelOnly) {\n            return flatData;\n        }\n\n        return this.addSummaryRows(grid, flatData, summaryPosition);\n    }\n\n    private addSummaryRows(grid: IgxTreeGridComponent, collection: ITreeGridRecord[], summaryPosition: GridSummaryPosition): any[] {\n        const recordsWithSummary = [];\n        const maxSummaryHeight = grid.summaryService.calcMaxSummaryHeight();\n\n        for (let i = 0; i < collection.length; i++) {\n            const record = collection[i];\n            recordsWithSummary.push(record);\n\n            const isExpanded = record.children && record.children.length > 0 && record.expanded;\n\n            if (summaryPosition === GridSummaryPosition.bottom && !isExpanded) {\n                let childRecord = record;\n                let parent = record.parent;\n\n                while (parent) {\n                    const children = parent.children;\n\n                    if (children[children.length - 1] === childRecord ) {\n                        let childData = children.filter(r => !r.isFilteredOutParent).map(r => r.data);\n                        childData = this.removeDeletedRecord(grid, parent.rowID, childData);\n                        const summaries = grid.summaryService.calculateSummaries(parent.rowID, childData);\n                        const summaryRecord: ISummaryRecord = {\n                            summaries: summaries,\n                            max: maxSummaryHeight,\n                            cellIndentation: parent.level + 1\n                        };\n                        recordsWithSummary.push(summaryRecord);\n\n                        childRecord = parent;\n                        parent = childRecord.parent;\n                    } else {\n                        break;\n                    }\n                }\n            } else if (summaryPosition === GridSummaryPosition.top && isExpanded) {\n                let childData = record.children.filter(r => !r.isFilteredOutParent).map(r => r.data);\n                childData = this.removeDeletedRecord(grid, record.rowID, childData);\n                const summaries = grid.summaryService.calculateSummaries(record.rowID, childData);\n                const summaryRecord: ISummaryRecord = {\n                    summaries: summaries,\n                    max: maxSummaryHeight,\n                    cellIndentation: record.level + 1\n                };\n                recordsWithSummary.push(summaryRecord);\n            }\n        }\n        return recordsWithSummary;\n    }\n\n    private removeDeletedRecord(grid, rowId, data) {\n        if (!grid.transactions.enabled || !grid.cascadeOnDelete) {\n            return data;\n        }\n        const deletedRows = grid.transactions.getTransactionLog().filter(t => t.type === 'delete').map(t => t.id);\n        let row = grid.records.get(rowId);\n        if (!row && deletedRows.lenght === 0) { return []; }\n        row = row.children ? row : row.parent;\n        while (row) {\n            rowId = row.rowID;\n            if (deletedRows.indexOf(rowId) !== -1) {\n                return [];\n            }\n            row = row.parent;\n        }\n        deletedRows.forEach(rowID => {\n            const tempData = grid.primaryKey ? data.map(rec => rec[grid.primaryKey]) : data;\n            const index = tempData.indexOf(rowID);\n            if (index !== -1) {\n                data.splice(index, 1);\n            }\n        });\n        return data;\n    }\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { IgxTreeGridComponent } from './tree-grid.component';\nimport { IgxTreeGridRowComponent } from './tree-grid-row.component';\nimport { IgxGridCommonModule } from '../grid-common.module';\nimport { IgxTreeGridHierarchizingPipe, IgxTreeGridNormalizeRecordsPipe } from './tree-grid.pipes';\nimport { IgxTreeGridFlatteningPipe, IgxTreeGridSortingPipe, IgxTreeGridPagingPipe, IgxTreeGridTransactionPipe } from './tree-grid.pipes';\nimport { IgxTreeGridCellComponent } from './tree-cell.component';\nimport { IgxTreeGridFilteringPipe } from './tree-grid.filtering.pipe';\nimport { IgxTreeGridSummaryPipe } from './tree-grid.summary.pipe';\nimport { IgxRowLoadingIndicatorTemplateDirective } from './tree-grid.directives';\n/**\n * @hidden\n */\n@NgModule({\n  declarations: [\n    IgxTreeGridComponent,\n    IgxTreeGridRowComponent,\n    IgxTreeGridCellComponent,\n    IgxTreeGridHierarchizingPipe,\n    IgxTreeGridFlatteningPipe,\n    IgxTreeGridSortingPipe,\n    IgxTreeGridFilteringPipe,\n    IgxTreeGridPagingPipe,\n    IgxTreeGridTransactionPipe,\n    IgxTreeGridSummaryPipe,\n    IgxRowLoadingIndicatorTemplateDirective,\n    IgxTreeGridNormalizeRecordsPipe\n  ],\n  exports: [\n    IgxTreeGridComponent,\n    IgxTreeGridRowComponent,\n    IgxTreeGridCellComponent,\n    IgxRowLoadingIndicatorTemplateDirective,\n    IgxGridCommonModule\n  ],\n  imports: [\n    IgxGridCommonModule,\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class IgxTreeGridModule {\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnInit,\n    ViewChild,\n    AfterViewInit,\n    SimpleChanges,\n    ComponentFactoryResolver\n} from '@angular/core';\nimport { GridBaseAPIService } from '.././api.service';\nimport { IgxRowIslandComponent } from './row-island.component';\nimport { IgxGridComponent } from '../grid/grid.component';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false,\n    selector: 'igx-child-grid-row',\n    templateUrl: './child-grid-row.component.html'\n})\nexport class IgxChildGridRowComponent implements AfterViewInit, OnInit {\nprivate resolver;\n\n    /**\n     * Returns whether the row is expanded.\n     * ```typescript\n     * const RowExpanded = this.grid1.rowList.first.expanded;\n     * ```\n     */\n    public expanded = false;\n\n    @Input()\n    layout: IgxRowIslandComponent;\n\n    /**\n     * @hidden\n     */\n    public get parentHasScroll() {\n        return !this.parentGrid.verticalScrollContainer.dc.instance.notVirtual;\n    }\n\n\n    /**\n     * @hidden\n     */\n    @Input()\n    public parentGridID: string;\n\n    /**\n     *  The data passed to the row component.\n     *\n     * ```typescript\n     * // get the row data for the first selected row\n     * let selectedRowData = this.grid.selectedRows[0].rowData;\n     * ```\n     */\n    @Input()\n    public rowData: any = [];\n\n    /**\n     * The index of the row.\n     *\n     * ```typescript\n     * // get the index of the second selected row\n     * let selectedRowIndex = this.grid.selectedRows[1].index;\n     * ```\n     */\n    @Input()\n    public index: number;\n\n    @ViewChild('hgrid', { static: true })\n    public hGrid: any/* TODO: IgxHierarchicalGridComponent*/;\n\n    /**\n     * @hidden\n     */\n    @HostBinding('attr.role')\n    public role = 'row';\n\n    /**\n     * Get a reference to the grid that contains the selected row.\n     *\n     * ```typescript\n     * handleRowSelection(event) {\n     *  // the grid on which the onRowSelectionChange event was triggered\n     *  const grid = event.row.grid;\n     * }\n     * ```\n     *\n     * ```html\n     *  <igx-grid\n     *    [data]=\"data\"\n     *    (onRowSelectionChange)=\"handleRowSelection($event)\">\n     *  </igx-grid>\n     * ```\n     */\n    // TODO: Refactor\n    get parentGrid(): any/* TODO: IgxHierarchicalGridComponent*/ {\n        return this.gridAPI.grid;\n    }\n\n    @HostBinding('attr.data-level')\n    get level() {\n        return this.layout.level;\n    }\n\n    /**\n     * The native DOM element representing the row. Could be null in certain environments.\n     *\n     * ```typescript\n     * // get the nativeElement of the second selected row\n     * let selectedRowNativeElement = this.grid.selectedRows[1].nativeElement;\n     * ```\n     */\n    get nativeElement() {\n        return this.element.nativeElement;\n    }\n\n    constructor(public gridAPI: GridBaseAPIService<any/* TODO: IgxHierarchicalGridComponent*/>,\n        public element: ElementRef,\n        resolver: ComponentFactoryResolver,\n        public cdr: ChangeDetectorRef) {\n            this.resolver = resolver;\n    }\n\n    /**\n     * @hidden\n     */\n    ngOnInit() {\n        this.layout.onLayoutChange.subscribe((ch) => {\n            this._handleLayoutChanges(ch);\n        });\n        const changes = this.layout.initialChanges;\n        changes.forEach(change => {\n            this._handleLayoutChanges(change);\n        });\n        this.hGrid.parent = this.parentGrid;\n        this.hGrid.parentIsland = this.layout;\n        this.hGrid.childRow =  this;\n        // handler logic that re-emits hgrid events on the row island\n        this.setupEventEmitters();\n        this.layout.onGridCreated.emit({\n            owner: this.layout,\n            parentID: this.rowData.rowID,\n            grid: this.hGrid\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    ngAfterViewInit() {\n        this.hGrid.childLayoutList = this.layout.children;\n        const layouts = this.hGrid.childLayoutList.toArray();\n        layouts.forEach((l) => this.hGrid.hgridAPI.registerChildRowIsland(l));\n        this.parentGrid.hgridAPI.registerChildGrid(this.rowData.rowID, this.layout.key, this.hGrid);\n        this.layout.rowIslandAPI.registerChildGrid(this.rowData.rowID, this.hGrid);\n\n        this.layout.onGridInitialized.emit({\n            owner: this.layout,\n            parentID: this.rowData.rowID,\n            grid: this.hGrid\n        });\n\n        this.hGrid.cdr.detectChanges();\n    }\n\n    private setupEventEmitters() {\n        const destructor = takeUntil(this.hGrid.destroy$);\n\n        const factory = this.resolver.resolveComponentFactory(IgxGridComponent);\n        // exclude outputs related to two-way binding functionality\n        const inputNames = factory.inputs.map(input => input.propName);\n        const outputs = factory.outputs.filter(o => {\n            const matchingInputPropName = o.propName.slice(0, o.propName.indexOf('Change'));\n            return inputNames.indexOf(matchingInputPropName) === -1;\n        });\n        outputs.forEach(output => {\n            if (this.hGrid[output.propName]) {\n                this.hGrid[output.propName].pipe(destructor).subscribe((args) => {\n                    if (!args) {\n                        args = {};\n                    }\n                    args.owner = this.hGrid;\n                    this.layout[output.propName].emit(args);\n                });\n            }\n        });\n    }\n\n\n    private _handleLayoutChanges(changes: SimpleChanges) {\n        for (const change in changes) {\n            if (changes.hasOwnProperty(change)) {\n                this.hGrid[change] = changes[change].currentValue;\n            }\n        }\n    }\n}\n","import { IgxGridNavigationService } from '../grid-navigation.service';\nimport { IgxHierarchicalGridComponent } from './hierarchical-grid.component';\nimport { first } from 'rxjs/operators';\nimport { SUPPORTED_KEYS, NAVIGATION_KEYS } from '../../core/utils';\nimport { Injectable } from '@angular/core';\nimport { IgxChildGridRowComponent } from './child-grid-row.component';\nimport { IgxRowDirective, IgxGridBaseDirective } from '../grid/public_api';\nimport { GridType } from '../common/grid.interface';\nimport { IPathSegment } from './hierarchical-grid-base.directive';\n\n@Injectable()\nexport class IgxHierarchicalGridNavigationService extends IgxGridNavigationService {\n    public grid: IgxHierarchicalGridComponent;\n\n    protected _pendingNavigation = false;\n\n\n    dispatchEvent(event: KeyboardEvent) {\n        const key = event.key.toLowerCase();\n        if (!this.activeNode || !(SUPPORTED_KEYS.has(key) || (key === 'tab' && this.grid.crudService.cell))) { return; }\n\n        const targetGrid = this.getClosestElemByTag(event.target, 'igx-hierarchical-grid');\n        if (targetGrid !== this.grid.nativeElement) {\n            return;\n        }\n\n        if (this._pendingNavigation && NAVIGATION_KEYS.has(key)) {\n            // In case focus needs to be moved from one grid to another, however there is a pending scroll operation\n            // which is an async operation, any additional navigation keys should be ignored\n            // untill operation complete.\n            event.preventDefault();\n            return;\n        }\n        super.dispatchEvent(event);\n    }\n\n    public navigateInBody(rowIndex, visibleColIndex, cb: Function = null): void {\n        const rec = this.grid.dataView[rowIndex];\n        if (rec && this.grid.isChildGridRecord(rec)) {\n             // target is child grid\n            const virtState = this.grid.verticalScrollContainer.state;\n             const inView = rowIndex >= virtState.startIndex && rowIndex <= virtState.startIndex + virtState.chunkSize;\n             const isNext =  this.activeNode.row < rowIndex;\n             const targetLayoutIndex = isNext ? null : this.grid.childLayoutKeys.length - 1;\n             if (inView) {\n                this._moveToChild(rowIndex, visibleColIndex, isNext, targetLayoutIndex, cb);\n            } else {\n                let scrollAmount = this.grid.verticalScrollContainer.getScrollForIndex(rowIndex, !isNext);\n                scrollAmount += isNext ? 1 : -1;\n                this.grid.verticalScrollContainer.getScroll().scrollTop = scrollAmount;\n                this._pendingNavigation = true;\n                this.grid.verticalScrollContainer.onChunkLoad.pipe(first()).subscribe(() => {\n                    this._moveToChild(rowIndex, visibleColIndex, isNext, targetLayoutIndex, cb);\n                    this._pendingNavigation = false;\n                });\n            }\n            return;\n        }\n\n        const isLast = rowIndex === this.grid.dataView.length;\n        if ((rowIndex === -1 || isLast) &&\n            this.grid.parent !== null) {\n            // reached end of child grid\n            const nextSiblingIndex = this.nextSiblingIndex(isLast);\n            if (nextSiblingIndex !== null) {\n                this.grid.parent.navigation._moveToChild(this.grid.childRow.index, visibleColIndex, isLast, nextSiblingIndex, cb);\n            } else {\n                this._moveToParent(isLast, visibleColIndex, cb);\n            }\n            return;\n        }\n\n        if (this.grid.parent) {\n            const isNext = this.activeNode && typeof this.activeNode.row === 'number' ? rowIndex > this.activeNode.row : false;\n            const cbHandler = (args) => {\n                this._handleScrollInChild(rowIndex, isNext);\n                cb(args);\n            };\n            if (!this.activeNode) {\n                this.activeNode = { row: null, column: null };\n            }\n            super.navigateInBody(rowIndex, visibleColIndex, cbHandler);\n            return;\n        }\n\n        if (!this.activeNode) {\n            this.activeNode = { row: null, column: null };\n        }\n        super.navigateInBody(rowIndex, visibleColIndex, cb);\n    }\n\n    public shouldPerformVerticalScroll(index, visibleColumnIndex = -1, isNext?) {\n        const targetRec = this.grid.dataView[index];\n        if (this.grid.isChildGridRecord(targetRec)) {\n            const scrollAmount = this.grid.verticalScrollContainer.getScrollForIndex(index, !isNext);\n            const currScroll = this.grid.verticalScrollContainer.getScroll().scrollTop;\n            const shouldScroll = !isNext ? scrollAmount > currScroll : currScroll < scrollAmount;\n            return shouldScroll;\n        } else {\n            return super.shouldPerformVerticalScroll(index, visibleColumnIndex);\n        }\n    }\n\n    focusTbody(event) {\n        if (!this.activeNode || this.activeNode.row === null) {\n            this.activeNode = {\n                row: 0,\n                column: 0\n            };\n\n            this.grid.navigateTo(0, 0, (obj) => {\n                this.grid.clearCellSelection();\n                obj.target.activate(event);\n            });\n\n        } else {\n            super.focusTbody(event);\n        }\n    }\n\n    protected nextSiblingIndex(isNext) {\n        const layoutKey = this.grid.childRow.layout.key;\n        const layoutIndex = this.grid.parent.childLayoutKeys.indexOf(layoutKey);\n        const nextIndex = isNext ? layoutIndex + 1 : layoutIndex - 1;\n        if (nextIndex <= this.grid.parent.childLayoutKeys.length - 1 && nextIndex > -1) {\n            return nextIndex;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Handles scrolling in child grid and ensures target child row is in main grid view port.\n     * @param rowIndex The row index which should be in view.\n     * @param isNext  Optional. Whether we are navigating to next. Used to determine scroll direction.\n     * @param cb  Optional.Callback function called when operation is complete.\n     */\n    protected _handleScrollInChild(rowIndex: number, isNext?: boolean, cb?: Function) {\n        const shouldScroll = this.shouldPerformVerticalScroll(rowIndex, -1, isNext);\n        if (shouldScroll) {\n            this.grid.navigation.performVerticalScrollToCell(rowIndex, -1, () => {\n                this.positionInParent(rowIndex, isNext, cb);\n            });\n        } else {\n            this.positionInParent(rowIndex, isNext, cb);\n        }\n    }\n\n    /**\n     *\n     * @param rowIndex Row index that should come in view.\n     * @param isNext  Whether we are navigating to next. Used to determine scroll direction.\n     * @param cb  Optional.Callback function called when operation is complete.\n     */\n    protected positionInParent(rowIndex, isNext, cb?: Function) {\n        const rowObj = this.grid.getRowByIndex(rowIndex);\n        if (!rowObj) {\n            if (cb) {\n                cb();\n            }\n            return;\n        }\n        const positionInfo = this.getPositionInfo(rowObj, isNext);\n        if (!positionInfo.inView) {\n            // stop event from triggering multiple times before scrolling is complete.\n            this._pendingNavigation = true;\n            const scrollableGrid = isNext ? this.getNextScrollableDown(this.grid) : this.getNextScrollableUp(this.grid);\n            scrollableGrid.grid.verticalScrollContainer.recalcUpdateSizes();\n            scrollableGrid.grid.verticalScrollContainer.addScrollTop(positionInfo.offset);\n            scrollableGrid.grid.verticalScrollContainer.onChunkLoad.pipe(first()).subscribe(() => {\n                this._pendingNavigation = false;\n                if (cb) {\n                    cb();\n                }\n            });\n        } else {\n            if (cb) {\n                cb();\n            }\n        }\n    }\n\n    /**\n     * Moves navigation to child grid.\n     * @param parentRowIndex The parent row index, at which the child grid is rendered.\n     * @param childLayoutIndex Optional. The index of the child row island to which the child grid belongs to. Uses first if not set.\n     */\n    protected _moveToChild(parentRowIndex: number, visibleColIndex: number, isNext: boolean, childLayoutIndex?: number, cb?: Function) {\n        const ri = typeof childLayoutIndex !== 'number' ?\n         this.grid.childLayoutList.first : this.grid.childLayoutList.toArray()[childLayoutIndex];\n        const rowId = this.grid.dataView[parentRowIndex].rowID;\n        const pathSegment: IPathSegment = {\n            rowID: rowId,\n            rowIslandKey: ri.key\n        };\n        const childGrid =  this.grid.hgridAPI.getChildGrid([pathSegment]);\n        const targetIndex = isNext ? 0 : childGrid.dataView.length - 1;\n        const targetRec =  childGrid.dataView[targetIndex];\n        if (!targetRec) {\n            // if no target rec, then move on in next sibling or parent\n            childGrid.navigation.navigateInBody(targetIndex, visibleColIndex, cb);\n            return;\n        }\n        if (childGrid.isChildGridRecord(targetRec)) {\n            // if target is a child grid record should move into it.\n            this.grid.navigation.activeNode.row = null;\n            childGrid.navigation.activeNode = { row: targetIndex, column: this.activeNode.column};\n            childGrid.navigation._handleScrollInChild(targetIndex, isNext, () => {\n                const targetLayoutIndex = isNext ? 0 : childGrid.childLayoutList.toArray().length - 1;\n                childGrid.navigation._moveToChild(targetIndex, visibleColIndex, isNext, targetLayoutIndex, cb);\n            });\n            return;\n        }\n\n        const childGridNav =  childGrid.navigation;\n        this.clearActivation();\n        const lastVisibleIndex = childGridNav.lastColumnIndex;\n        const columnIndex = visibleColIndex <= lastVisibleIndex ? visibleColIndex : lastVisibleIndex;\n        childGridNav.activeNode = { row: targetIndex, column: columnIndex};\n        childGrid.tbody.nativeElement.focus({preventScroll: true});\n        this._pendingNavigation = false;\n        childGrid.navigation._handleScrollInChild(targetIndex, isNext, () => {\n            childGrid.navigateTo(targetIndex, columnIndex, cb);\n        });\n    }\n\n    /**\n     * Moves navigation back to parent grid.\n     * @param rowIndex\n     */\n    protected _moveToParent(isNext: boolean, columnIndex, cb?) {\n        const indexInParent = this.grid.childRow.index;\n        const hasNextTarget = this.hasNextTarget(this.grid.parent, indexInParent, isNext);\n        if (!hasNextTarget) {\n            return;\n        }\n        this.clearActivation();\n        const targetRowIndex =  isNext ? indexInParent + 1 : indexInParent - 1;\n        const lastVisibleIndex = this.grid.parent.navigation.lastColumnIndex;\n        const nextColumnIndex = columnIndex <= lastVisibleIndex ? columnIndex : lastVisibleIndex;\n        this._pendingNavigation = true;\n        const cbFunc = (args) => {\n            args.target.grid.tbody.nativeElement.focus();\n            this._pendingNavigation = false;\n            cb(args);\n        };\n        this.grid.parent.navigation.navigateInBody(targetRowIndex, nextColumnIndex, cbFunc);\n    }\n\n    /**\n     * Gets information on the row position relative to the root grid view port.\n     * Returns whether the row is in view and its offset.\n     * @param rowObj\n     * @param isNext\n     */\n    protected getPositionInfo(rowObj: IgxRowDirective<IgxGridBaseDirective & GridType>, isNext: boolean) {\n        let rowElem = rowObj.nativeElement;\n        if (rowObj instanceof IgxChildGridRowComponent) {\n            const childLayoutKeys = this.grid.childLayoutKeys;\n            const riKey = isNext ? childLayoutKeys[0] : childLayoutKeys[childLayoutKeys.length - 1];\n            const pathSegment: IPathSegment = {\n                rowID: rowObj.rowData.rowID,\n                rowIslandKey: riKey\n            };\n            const childGrid =  this.grid.hgridAPI.getChildGrid([pathSegment]);\n            rowElem = childGrid.tfoot.nativeElement;\n        }\n        const gridBottom = this._getMinBottom(this.grid);\n        const diffBottom =\n        rowElem.getBoundingClientRect().bottom - gridBottom;\n        const gridTop = this._getMaxTop(this.grid);\n        const diffTop = rowElem.getBoundingClientRect().bottom -\n        rowElem.offsetHeight - gridTop;\n        const isInView = isNext ? diffBottom <= 0 : diffTop >= 0;\n        const calcOffset =  isNext ? diffBottom : diffTop;\n\n        return { inView: isInView, offset: calcOffset };\n    }\n\n    private clearActivation() {\n        // clear if previous activation exists.\n        if (this.activeNode) {\n            this.activeNode.row = null;\n        }\n    }\n\n    private hasNextTarget(grid, index: number, isNext: boolean) {\n        const targetRowIndex =  isNext ? index + 1 : index - 1;\n        const hasTargetRecord = !!grid.dataView[targetRowIndex];\n        if (hasTargetRecord) {\n            return true;\n        } else {\n            let hasTargetRecordInParent = false;\n            if (grid.parent) {\n                const indexInParent = grid.childRow.index;\n                hasTargetRecordInParent = this.hasNextTarget(grid.parent, indexInParent, isNext);\n            }\n            return hasTargetRecordInParent;\n        }\n    }\n\n    /**\n     * Gets closest element by its tag name.\n     * @param sourceElem The element from which to start the search.\n     * @param targetTag The target element tag name, for which to search.\n     */\n    protected getClosestElemByTag(sourceElem, targetTag) {\n        let result = sourceElem;\n        while (result !== null && result.nodeType === 1) {\n            if (result.tagName.toLowerCase() === targetTag.toLowerCase()) {\n                return result;\n            }\n            result = result.parentNode;\n        }\n        return null;\n    }\n\n    /**\n     * Gets the max top view in the current grid hierarchy.\n     * @param grid\n     */\n    private _getMaxTop(grid) {\n        let currGrid = grid;\n        let top = currGrid.tbody.nativeElement.getBoundingClientRect().top;\n        while (currGrid.parent) {\n            currGrid = currGrid.parent;\n            const pinnedRowsHeight = currGrid.hasPinnedRecords && currGrid.isRowPinningToTop ? currGrid.pinnedRowHeight : 0;\n            top = Math.max(top, currGrid.tbody.nativeElement.getBoundingClientRect().top + pinnedRowsHeight);\n        }\n        return top;\n    }\n\n    /**\n     * Gets the min bottom view in the current grid hierarchy.\n     * @param grid\n     */\n    private _getMinBottom(grid) {\n        let currGrid = grid;\n        let bottom = currGrid.tbody.nativeElement.getBoundingClientRect().bottom;\n        while (currGrid.parent) {\n            currGrid = currGrid.parent;\n            const pinnedRowsHeight = currGrid.hasPinnedRecords && !currGrid.isRowPinningToTop ? currGrid.pinnedRowHeight : 0;\n            bottom = Math.min(bottom, currGrid.tbody.nativeElement.getBoundingClientRect().bottom - pinnedRowsHeight);\n        }\n        return bottom;\n    }\n\n    /**\n     * Finds the next grid that allows scrolling down.\n     * @param grid The grid from which to begin the search.\n     */\n    private getNextScrollableDown(grid) {\n        let currGrid = grid.parent;\n        if (!currGrid) {\n            return { grid: grid, prev: null };\n        }\n        let scrollTop = currGrid.verticalScrollContainer.scrollPosition;\n        let scrollHeight = currGrid.verticalScrollContainer.getScroll().scrollHeight;\n        let nonScrollable = scrollHeight === 0 ||\n            Math.round(scrollTop + currGrid.verticalScrollContainer.igxForContainerSize) === scrollHeight;\n        let prev = grid;\n        while (nonScrollable && currGrid.parent !== null) {\n            prev = currGrid;\n            currGrid = currGrid.parent;\n            scrollTop = currGrid.verticalScrollContainer.scrollPosition;\n            scrollHeight = currGrid.verticalScrollContainer.getScroll().scrollHeight;\n            nonScrollable = scrollHeight === 0 ||\n                Math.round(scrollTop + currGrid.verticalScrollContainer.igxForContainerSize) === scrollHeight;\n        }\n        return { grid: currGrid, prev: prev };\n    }\n\n    /**\n     * Finds the next grid that allows scrolling up.\n     * @param grid The grid from which to begin the search.\n     */\n    private getNextScrollableUp(grid) {\n        let currGrid = grid.parent;\n        if (!currGrid) {\n            return { grid: grid, prev: null };\n        }\n        let nonScrollable = currGrid.verticalScrollContainer.scrollPosition === 0;\n        let prev = grid;\n        while (nonScrollable && currGrid.parent !== null) {\n            prev = currGrid;\n            currGrid = currGrid.parent;\n            nonScrollable = currGrid.verticalScrollContainer.scrollPosition === 0;\n        }\n        return { grid: currGrid, prev: prev };\n    }\n}\n","import {\n    ElementRef,\n    NgZone,\n    ChangeDetectorRef,\n    IterableDiffers,\n    ViewContainerRef,\n    Inject,\n    ComponentFactoryResolver,\n    Optional,\n    Input,\n    ViewChild,\n    TemplateRef,\n    Directive\n} from '@angular/core';\nimport { IgxGridBaseDirective, IgxGridTransaction } from '../grid-base.directive';\nimport { GridBaseAPIService } from '../api.service';\nimport { IgxHierarchicalGridAPIService } from './hierarchical-grid-api.service';\nimport { IgxRowIslandComponent } from './row-island.component';\nimport { IgxFilteringService } from '../filtering/grid-filtering.service';\nimport { IDisplayDensityOptions, DisplayDensityToken } from '../../core/displayDensity';\nimport { IgxSummaryOperand } from '../summaries/grid-summary';\nimport { IgxOverlayService, IgxTransactionService, Transaction, TransactionService, State } from '../../services/public_api';\nimport { DOCUMENT } from '@angular/common';\nimport { IgxHierarchicalGridNavigationService } from './hierarchical-grid-navigation.service';\nimport { IgxGridSummaryService } from '../summaries/grid-summary.service';\nimport { IgxGridSelectionService, IgxGridCRUDService } from '../selection/selection.service';\nimport { IgxChildGridRowComponent } from './child-grid-row.component';\nimport { IgxColumnResizingService } from '../resizing/resizing.service';\nimport { GridType } from '../common/grid.interface';\nimport { IgxColumnGroupComponent } from '../columns/column-group.component';\nimport { IgxColumnComponent } from '../columns/column.component';\n\nexport const IgxHierarchicalTransactionServiceFactory = {\n    provide: IgxGridTransaction,\n    useFactory: hierarchicalTransactionServiceFactory\n};\n\nexport function hierarchicalTransactionServiceFactory() {\n    return new IgxTransactionService();\n}\n\nexport interface IPathSegment {\n    rowID: any;\n    rowIslandKey: string;\n}\n\n@Directive({\n    selector: '[igxHierarchicalGridBase]'\n})\nexport class IgxHierarchicalGridBaseDirective extends IgxGridBaseDirective {\n    public rootGrid;\n\n    @Input()\n    public expandChildren: boolean;\n\n    @Input()\n    public hasChildrenKey: string;\n\n    @Input()\n    public showExpandAll = false;\n\n    /**\n     * @hidden\n     */\n    get maxLevelHeaderDepth() {\n        if (this._maxLevelHeaderDepth === null) {\n            this._maxLevelHeaderDepth = this.columnList.reduce((acc, col) => Math.max(acc, col.level), 0);\n        }\n        return this._maxLevelHeaderDepth;\n    }\n\n    /**\n     * @hidden\n     */\n    protected get outlet() {\n        return this.rootGrid ? this.rootGrid.outletDirective : this.outletDirective;\n    }\n\n    /**\n     * @hidden\n     */\n    public hgridAPI: IgxHierarchicalGridAPIService;\n\n    /**\n     * @hidden\n     */\n    public parentIsland: IgxRowIslandComponent;\n\n    /**\n     * @hidden\n     */\n    public childRow: IgxChildGridRowComponent;\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @ViewChild('dragIndicatorIconBase', { read: TemplateRef, static: true })\n    public dragIndicatorIconBase: TemplateRef<any>;\n\n    constructor(\n        public selectionService: IgxGridSelectionService,\n        crudService: IgxGridCRUDService,\n        public colResizingService: IgxColumnResizingService,\n        gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>,\n        @Inject(IgxGridTransaction) protected transactionFactory: TransactionService<Transaction, State>,\n        elementRef: ElementRef,\n        zone: NgZone,\n        @Inject(DOCUMENT) public document,\n        cdr: ChangeDetectorRef,\n        resolver: ComponentFactoryResolver,\n        differs: IterableDiffers,\n        viewRef: ViewContainerRef,\n        navigation: IgxHierarchicalGridNavigationService,\n        filteringService: IgxFilteringService,\n        @Inject(IgxOverlayService) protected overlayService: IgxOverlayService,\n        public summaryService: IgxGridSummaryService,\n        @Optional() @Inject(DisplayDensityToken) protected _displayDensityOptions: IDisplayDensityOptions) {\n        super(\n            selectionService,\n            crudService,\n            colResizingService,\n            gridAPI,\n            transactionFactory,\n            elementRef,\n            zone,\n            document,\n            cdr,\n            resolver,\n            differs,\n            viewRef,\n            navigation,\n            filteringService,\n            overlayService,\n            summaryService,\n            _displayDensityOptions);\n        this.hgridAPI = <IgxHierarchicalGridAPIService>gridAPI;\n    }\n\n    /**\n     * @hidden\n     */\n    public createColumnsList(cols: Array<any>) {\n        const columns = [];\n        const topLevelCols = this.onlyTopLevel(cols);\n        topLevelCols.forEach((col) => {\n            const ref = this._createColumn(col);\n            ref.changeDetectorRef.detectChanges();\n            columns.push(ref.instance);\n        });\n        const result = flatten(columns);\n        this.columnList.reset(result);\n        this.columnList.notifyOnChanges();\n        this.initPinning();\n    }\n\n    protected _createColumn(col) {\n        let ref;\n        if (col instanceof IgxColumnGroupComponent) {\n            ref = this._createColGroupComponent(col);\n        } else {\n            ref = this._createColComponent(col);\n        }\n        return ref;\n    }\n\n    protected _createColGroupComponent(col: IgxColumnGroupComponent) {\n        const factoryGroup = this.resolver.resolveComponentFactory(IgxColumnGroupComponent);\n        const ref = this.viewRef.createComponent(factoryGroup, null, this.viewRef.injector);\n        ref.changeDetectorRef.detectChanges();\n        factoryGroup.inputs.forEach((input) => {\n            const propName = input.propName;\n            (<any>ref.instance)[propName] = (<any>col)[propName];\n        });\n        if (col.children.length > 0) {\n            const newChildren = [];\n            col.children.forEach(child => {\n                const newCol = this._createColumn(child).instance;\n                newCol.parent = ref.instance;\n                newChildren.push(newCol);\n            });\n            (<IgxColumnGroupComponent>ref.instance).children.reset(newChildren);\n            (<IgxColumnGroupComponent>ref.instance).children.notifyOnChanges();\n        }\n        return ref;\n    }\n\n    protected _createColComponent(col) {\n        const factoryColumn = this.resolver.resolveComponentFactory(IgxColumnComponent);\n        const ref = this.viewRef.createComponent(factoryColumn, null, this.viewRef.injector);\n        factoryColumn.inputs.forEach((input) => {\n            const propName = input.propName;\n            if (!((<any>col)[propName] instanceof IgxSummaryOperand)) {\n                (<any>ref.instance)[propName] = (<any>col)[propName];\n            } else {\n                (<any>ref.instance)[propName] = col[propName].constructor;\n            }\n        });\n        return ref;\n    }\n\n    protected getGridsForIsland(rowIslandID: string) {\n        return this.hgridAPI.getChildGridsForRowIsland(rowIslandID);\n    }\n\n    protected getChildGrid(path: Array<IPathSegment>) {\n        if (!path) {\n            return;\n        }\n        return this.hgridAPI.getChildGrid(path);\n    }\n}\n\nfunction flatten(arr: any[]) {\n    let result = [];\n\n    arr.forEach(el => {\n        result.push(el);\n        if (el.children) {\n            result = result.concat(flatten(el.children.toArray()));\n        }\n    });\n    return result;\n}\n","import { IgxHierarchicalGridComponent } from './hierarchical-grid.component';\nimport { IgxRowIslandComponent } from './row-island.component';\nimport { Subject } from 'rxjs';\nimport { IPathSegment } from './hierarchical-grid-base.directive';\nimport { IgxGridBaseDirective, GridBaseAPIService } from '../grid/public_api';\nimport { GridType } from '../common/grid.interface';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class IgxHierarchicalGridAPIService extends GridBaseAPIService<IgxGridBaseDirective & GridType> {\n    protected childRowIslands: Map<string, IgxRowIslandComponent> = new Map<string, IgxRowIslandComponent>();\n    protected childGrids:  Map<string, Map<any, IgxHierarchicalGridComponent>> =\n        new Map<string, Map<any, IgxHierarchicalGridComponent>>();\n\n    registerChildRowIsland(rowIsland: IgxRowIslandComponent) {\n        this.childRowIslands.set(rowIsland.key, rowIsland);\n        this.destroyMap.set(rowIsland.key, new Subject<boolean>());\n    }\n\n    unsetChildRowIsland(rowIsland: IgxRowIslandComponent) {\n        this.childGrids.delete(rowIsland.key);\n        this.childRowIslands.delete(rowIsland.key);\n        this.destroyMap.delete(rowIsland.key);\n    }\n\n    getChildRowIsland(key: string) {\n        return this.childRowIslands.get(key);\n    }\n\n    getChildGrid(path: Array<IPathSegment>) {\n        const currPath = path;\n        let grid;\n        const pathElem = currPath.shift();\n        const childrenForLayout = this.childGrids.get(pathElem.rowIslandKey);\n        if (childrenForLayout) {\n            const childGrid = childrenForLayout.get(pathElem.rowID);\n            if (currPath.length === 0) {\n                grid = childGrid;\n            } else {\n                grid = childGrid.hgridAPI.getChildGrid(currPath);\n            }\n        }\n        return grid;\n    }\n\n    getChildGrids(inDepth?: boolean) {\n        const allChildren = [];\n        this.childGrids.forEach((layoutMap) => {\n            layoutMap.forEach((grid) => {\n                allChildren.push(grid);\n                if (inDepth) {\n                    const children = grid.hgridAPI.getChildGrids(inDepth);\n                    children.forEach((item) => {\n                        allChildren.push(item);\n                    });\n                }\n            });\n        });\n\n        return allChildren;\n    }\n\n    getParentRowId(childGrid: IgxHierarchicalGridComponent) {\n        let rowID;\n        this.childGrids.forEach((layoutMap) => {\n            layoutMap.forEach((grid, key) => {\n                if (grid === childGrid) {\n                    rowID = key;\n                    return;\n                }\n            });\n        });\n        return rowID;\n    }\n\n    registerChildGrid(parentRowID: string|object, rowIslandKey: string, grid: IgxHierarchicalGridComponent) {\n        let childrenForLayout = this.childGrids.get(rowIslandKey);\n        if (!childrenForLayout) {\n            this.childGrids.set(rowIslandKey, new Map<any, IgxHierarchicalGridComponent>());\n            childrenForLayout = this.childGrids.get(rowIslandKey);\n        }\n        childrenForLayout.set(parentRowID, grid);\n    }\n\n    getChildGridsForRowIsland(rowIslandKey): IgxHierarchicalGridComponent[] {\n        const childrenForLayout = this.childGrids.get(rowIslandKey);\n        const children = [];\n        if (childrenForLayout) {\n            childrenForLayout.forEach((child) => {\n                children.push(child);\n            });\n        }\n        return children;\n    }\n\n    getChildGridByID(rowIslandKey, rowID) {\n        const childrenForLayout = this.childGrids.get(rowIslandKey);\n        return childrenForLayout.get(rowID);\n    }\n\n    public get_row_expansion_state(record: any): boolean {\n        let inState;\n        if (record.childGridsData !== undefined) {\n            const ri = record.rowID;\n            const rec = this.grid.primaryKey ? this.get_rec_by_id(ri) : ri;\n            inState = !!super.get_row_expansion_state(rec);\n        } else {\n            inState = !!super.get_row_expansion_state(record);\n        }\n        return inState && (this.grid as any).childLayoutList.length !== 0;\n    }\n\n    public allow_expansion_state_change(rowID, expanded): boolean {\n        const rec = this.get_rec_by_id(rowID);\n        const grid = (this.grid as any);\n        if (grid.hasChildrenKey && !rec[grid.hasChildrenKey]) {\n            return false;\n        }\n        return !!rec && this.grid.expansionStates.get(rowID) !== expanded;\n    }\n\n    public get_rec_by_id(rowID): any {\n        const data = this.get_all_data(false);\n        const index = this.get_row_index_in_data(rowID);\n        return data[index];\n    }\n}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    Input,\n    QueryList,\n    OnInit,\n    Inject,\n    ElementRef,\n    ChangeDetectorRef,\n    ComponentFactoryResolver,\n    IterableDiffers,\n    ViewContainerRef,\n    NgZone,\n    AfterViewInit,\n    OnChanges,\n    Output,\n    EventEmitter,\n    Optional,\n    OnDestroy,\n    DoCheck\n} from '@angular/core';\nimport { IgxHierarchicalGridComponent } from './hierarchical-grid.component';\nimport { IgxGridTransaction, IgxGridBaseDirective } from '../grid-base.directive';\nimport { GridBaseAPIService } from '../api.service';\nimport { IgxHierarchicalGridAPIService } from './hierarchical-grid-api.service';\nimport { DOCUMENT } from '@angular/common';\nimport { IgxFilteringService } from '../filtering/grid-filtering.service';\nimport { IDisplayDensityOptions, DisplayDensityToken } from '../../core/displayDensity';\nimport { TransactionService, Transaction, State } from '../../services/public_api';\nimport { IgxGridSummaryService } from '../summaries/grid-summary.service';\nimport { IgxHierarchicalGridBaseDirective } from './hierarchical-grid-base.directive';\nimport { IgxHierarchicalGridNavigationService } from './hierarchical-grid-navigation.service';\nimport { IgxGridSelectionService, IgxGridCRUDService } from '../selection/selection.service';\n\nimport { IgxOverlayService } from '../../services/public_api';\nimport { takeUntil } from 'rxjs/operators';\nimport { IgxColumnComponent } from '../columns/column.component';\nimport { IgxRowIslandAPIService } from './row-island-api.service';\nimport { IBaseEventArgs } from '../../core/utils';\nimport { IgxColumnResizingService } from '../resizing/resizing.service';\nimport { GridType } from '../common/grid.interface';\nexport interface IGridCreatedEventArgs extends IBaseEventArgs {\n    owner: IgxRowIslandComponent;\n    parentID: any;\n    grid: IgxHierarchicalGridComponent;\n}\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'igx-row-island',\n    template: ``,\n    providers: [IgxRowIslandAPIService]\n})\nexport class IgxRowIslandComponent extends IgxHierarchicalGridBaseDirective\n            implements AfterContentInit, AfterViewInit, OnChanges, OnInit, OnDestroy, DoCheck {\n    /**\n     * Sets the key of the row island by which child data would be taken from the row data if such is provided.\n     * ```html\n     * <igx-hierarchical-grid [data]=\"Data\" [autoGenerate]=\"true\">\n     *      <igx-row-island [key]=\"'childData'\">\n     *          <!-- ... -->\n     *      </igx-row-island>\n     * </igx-hierarchical-grid>\n     * ```\n     * @memberof IgxRowIslandComponent\n     */\n    @Input()\n    public key: string;\n\n    /**\n     * Sets if all immediate children of the grids for this `IgxRowIslandComponent` should be expanded/collapsed.\n     * ```html\n     * <igx-hierarchical-grid [data]=\"Data\" [autoGenerate]=\"true\">\n     *      <igx-row-island [key]=\"'childData'\" [expandChildren]=\"true\" #rowIsland>\n     *          <!-- ... -->\n     *      </igx-row-island>\n     * </igx-hierarchical-grid>\n     * ```\n     * @memberof IgxRowIslandComponent\n     */\n    @Input()\n    set expandChildren(value: boolean) {\n        this._defaultExpandState  = value;\n        this.rowIslandAPI.getChildGrids().forEach((grid) => {\n            if (document.body.contains(grid.nativeElement)) {\n                // Detect changes right away if the grid is visible\n                grid.expandChildren = value;\n                grid.markForCheck();\n            } else {\n                // Else defer the detection on changes when the grid gets into view for performance.\n                grid.updateOnRender = true;\n            }\n        });\n    }\n\n    /**\n     * Gets if all immediate children of the grids for this `IgxRowIslandComponent` have been set to be expanded/collapsed.\n     * ```typescript\n     * const expanded = this.rowIsland.expandChildren;\n     * ```\n     * @memberof IgxRowIslandComponent\n     */\n    get expandChildren(): boolean {\n        return this._defaultExpandState;\n    }\n\n    /**\n     * @hidden\n     */\n    @ContentChildren(IgxRowIslandComponent, { read: IgxRowIslandComponent, descendants: false })\n    public children = new QueryList<IgxRowIslandComponent>();\n\n    /**\n     * @hidden\n     */\n    @ContentChildren(IgxColumnComponent, { read: IgxColumnComponent, descendants: false })\n    public childColumns = new QueryList<IgxColumnComponent>();\n\n    /**\n     * @hidden\n     */\n    @Output()\n    public onLayoutChange = new EventEmitter<any>();\n\n    /**\n     * Event emmited when a grid is being created based on this row island.\n     * ```html\n     * <igx-hierarchical-grid [data]=\"Data\" [autoGenerate]=\"true\">\n     *      <igx-row-island [key]=\"'childData'\" (onGridCreated)=\"gridCreated($event)\" #rowIsland>\n     *          <!-- ... -->\n     *      </igx-row-island>\n     * </igx-hierarchical-grid>\n     * ```\n     * @memberof IgxRowIslandComponent\n     */\n    @Output()\n    public onGridCreated = new EventEmitter<IGridCreatedEventArgs>();\n\n    /**\n     * Emitted after a grid is being initialized for this row island.\n     * The emitting is done in `ngAfterViewInit`.\n     * ```html\n     * <igx-hierarchical-grid [data]=\"Data\" [autoGenerate]=\"true\">\n     *      <igx-row-island [key]=\"'childData'\" (onGridInitialized)=\"gridInitialized($event)\" #rowIsland>\n     *          <!-- ... -->\n     *      </igx-row-island>\n     * </igx-hierarchical-grid>\n     * ```\n     * @memberof IgxRowIslandComponent\n     */\n    @Output()\n    public onGridInitialized = new EventEmitter<IGridCreatedEventArgs>();\n\n    /**\n     * @hidden\n     */\n    get id() {\n        const pId = this.parentId ? this.parentId.substring(this.parentId.indexOf(this.layout_id) + this.layout_id.length) + '-' : '';\n        return this.layout_id + pId +  this.key;\n    }\n\n    /**\n     * @hidden\n     */\n    get parentId() {\n       return this.parentIsland ? this.parentIsland.id : null;\n    }\n\n    /**\n     * @hidden\n     */\n    get level() {\n        let ptr = this.parentIsland;\n        let lvl = 0;\n        while (ptr) {\n            lvl++;\n            ptr = ptr.parentIsland;\n        }\n        return lvl + 1;\n    }\n\n    /**\n     * @hidden\n     */\n    public initialChanges = [];\n\n    /**\n     * @hidden\n     */\n    public rootGrid = null;\n    readonly data: any[];\n    readonly filteredData: any[];\n    private layout_id = `igx-row-island-`;\n    private isInit = false;\n\n    constructor(\n        public selectionService: IgxGridSelectionService,\n        crudService: IgxGridCRUDService,\n        public colResizingService: IgxColumnResizingService,\n        gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>,\n        @Inject(IgxGridTransaction) protected transactionFactory: any,\n        elementRef: ElementRef,\n        zone: NgZone,\n        @Inject(DOCUMENT) public document,\n        cdr: ChangeDetectorRef,\n        resolver: ComponentFactoryResolver,\n        differs: IterableDiffers,\n        viewRef: ViewContainerRef,\n        navigation: IgxHierarchicalGridNavigationService,\n        filteringService: IgxFilteringService,\n        @Inject(IgxOverlayService) protected overlayService: IgxOverlayService,\n        public summaryService: IgxGridSummaryService,\n        @Optional() @Inject(DisplayDensityToken) protected _displayDensityOptions: IDisplayDensityOptions,\n        public rowIslandAPI: IgxRowIslandAPIService) {\n        super(\n            selectionService,\n            crudService,\n            colResizingService,\n            gridAPI,\n            typeof transactionFactory === 'function' ? transactionFactory() : transactionFactory,\n            elementRef,\n            zone,\n            document,\n            cdr,\n            resolver,\n            differs,\n            viewRef,\n            navigation,\n            filteringService,\n            overlayService,\n            summaryService,\n            _displayDensityOptions\n        );\n        this.hgridAPI = <IgxHierarchicalGridAPIService>gridAPI;\n    }\n\n    /**\n     * @hidden\n     */\n    ngOnInit() {\n        this.rootGrid = this.hgridAPI.grid;\n        this.rowIslandAPI.rowIsland = this;\n    }\n\n    /**\n     * @hidden\n     */\n    ngDoCheck() {\n    }\n\n    /**\n     * @hidden\n     */\n    ngAfterContentInit() {\n        this.updateChildren();\n        this.children.notifyOnChanges();\n        this.children.changes.pipe(takeUntil(this.destroy$))\n        .subscribe((change) => {\n            this.updateChildren();\n            // update existing grids since their child ri have been changed.\n            this.getGridsForIsland(this.key).forEach(grid => {\n                (grid as any).onRowIslandChange(this.children);\n            });\n        });\n        const nestedColumns = this.children.map((layout) => layout.columnList.toArray());\n        const colsArray = [].concat.apply([], nestedColumns);\n        const topCols = this.columnList.filter((item) => {\n            return colsArray.indexOf(item) === -1;\n        });\n        this.childColumns.reset(topCols);\n        this.columnList.changes.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            Promise.resolve().then(() => {\n                this.updateColumnList();\n            });\n         });\n    }\n\n    protected updateChildren() {\n        if (this.children.first === this) {\n            this.children.reset(this.children.toArray().slice(1));\n        }\n        this.children.forEach(child => {\n            child.parentIsland = this;\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    ngAfterViewInit() {\n        this.rowIslandAPI.register(this);\n        if (this.parentIsland) {\n            this.parentIsland.rowIslandAPI.registerChildRowIsland(this);\n        } else {\n            this.rootGrid.hgridAPI.registerChildRowIsland(this);\n        }\n        this._init = false;\n    }\n\n    /**\n     * @hidden\n     */\n    ngOnChanges(changes) {\n        this.onLayoutChange.emit(changes);\n        if (!this.isInit) {\n            this.initialChanges.push(changes);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    ngOnDestroy() {\n        // Override the base destroy because we don't have rendered anything to use removeEventListener on\n        this.destroy$.next(true);\n        this.destroy$.complete();\n        this._destroyed = true;\n        this.rowIslandAPI.unset(this.id);\n        if (this.parentIsland) {\n            this.getGridsForIsland(this.key).forEach(grid => {\n                this.cleanGridState(grid);\n                grid.hgridAPI.unsetChildRowIsland(this);\n            });\n            this.parentIsland.rowIslandAPI.unsetChildRowIsland(this);\n        } else {\n            this.rootGrid.hgridAPI.unsetChildRowIsland(this);\n            this.cleanGridState(this.rootGrid);\n        }\n    }\n\n    private cleanGridState(grid) {\n        grid.childGridTemplates.forEach((tmpl) => {\n            tmpl.owner.cleanView(tmpl.context.templateID);\n        });\n        grid.childGridTemplates.clear();\n        grid.onRowIslandChange();\n    }\n\n    /**\n     * @hidden\n     */\n    reflow() {}\n\n    /**\n     * @hidden\n     */\n    calculateGridHeight() {}\n\n    protected updateColumnList() {\n        const nestedColumns = this.children.map((layout) => layout.columnList.toArray());\n        const colsArray = [].concat.apply([], nestedColumns);\n        const topCols = this.columnList.filter((item) => {\n            if (colsArray.indexOf(item) === -1) {\n                /* Reset the default width of the columns that come into this row island,\n                because the root catches them first during the detectChanges() and sets their defaultWidth. */\n                item.defaultWidth = undefined;\n                return true;\n            }\n            return false;\n        });\n        this.childColumns.reset(topCols);\n\n        if (this.parentIsland) {\n            this.parentIsland.columnList.notifyOnChanges();\n        } else {\n            this.rootGrid.columnList.notifyOnChanges();\n        }\n\n        this.rowIslandAPI.getChildGrids().forEach((grid: IgxHierarchicalGridComponent) => {\n            grid.createColumnsList(this.childColumns.toArray());\n            if (!document.body.contains(grid.nativeElement)) {\n                grid.updateOnRender = true;\n            }\n        });\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    HostBinding,\n    Input,\n    forwardRef,\n    TemplateRef,\n    ViewChild,\n    ViewChildren,\n    QueryList,\n    ContentChildren,\n    ElementRef,\n    AfterViewInit,\n    AfterContentInit,\n    OnInit,\n    OnDestroy,\n    DoCheck,\n    EventEmitter,\n    Output\n} from '@angular/core';\nimport { IgxGridBaseDirective } from '../grid-base.directive';\nimport { GridBaseAPIService } from '../api.service';\nimport { IgxHierarchicalGridAPIService } from './hierarchical-grid-api.service';\nimport { IgxRowIslandComponent } from './row-island.component';\nimport { IgxChildGridRowComponent } from './child-grid-row.component';\nimport { IgxFilteringService } from '../filtering/grid-filtering.service';\nimport { DisplayDensity } from '../../core/displayDensity';\nimport { IgxColumnComponent, } from '../columns/column.component';\nimport { IgxHierarchicalGridNavigationService } from './hierarchical-grid-navigation.service';\nimport { IgxGridSummaryService } from '../summaries/grid-summary.service';\nimport { IgxHierarchicalGridBaseDirective } from './hierarchical-grid-base.directive';\nimport { takeUntil } from 'rxjs/operators';\nimport { IgxTemplateOutletDirective } from '../../directives/template-outlet/template_outlet.directive';\nimport { IgxGridSelectionService, IgxGridCRUDService } from '../selection/selection.service';\nimport { IgxTransactionService } from '../../services/public_api';\nimport { IgxForOfSyncService, IgxForOfScrollSyncService } from '../../directives/for-of/for_of.sync.service';\nimport { GridType } from '../common/grid.interface';\nimport { IgxRowIslandAPIService } from './row-island-api.service';\nimport { DeprecateProperty } from '../../core/deprecateDecorators';\n\nlet NEXT_ID = 0;\n\nexport interface HierarchicalStateRecord {\n    rowID: any;\n}\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false,\n    selector: 'igx-hierarchical-grid',\n    templateUrl: 'hierarchical-grid.component.html',\n    providers: [\n        IgxGridSelectionService,\n        IgxGridCRUDService,\n        { provide: GridBaseAPIService, useClass: IgxHierarchicalGridAPIService },\n        { provide: IgxGridBaseDirective, useExisting: forwardRef(() => IgxHierarchicalGridComponent) },\n        IgxGridSummaryService,\n        IgxFilteringService,\n        IgxHierarchicalGridNavigationService,\n        IgxForOfSyncService,\n        IgxForOfScrollSyncService,\n        IgxRowIslandAPIService\n    ]\n})\nexport class IgxHierarchicalGridComponent extends IgxHierarchicalGridBaseDirective\n    implements GridType, AfterViewInit, AfterContentInit, OnInit, OnDestroy, DoCheck {\n\n    /**\n     * Gets/Sets the value of the `id` attribute.\n     * @remarks\n     * If not provided it will be automatically generated.\n     * @example\n     * ```html\n     * <igx-hierarchical-grid [id]=\"'igx-hgrid-1'\" [data]=\"Data\" [autoGenerate]=\"true\"></igx-hierarchical-grid>\n     * ```\n     */\n    @HostBinding('attr.id')\n    @Input()\n    public get id(): string {\n        return this.h_id;\n    }\n    public set id(value: string) {\n        this.h_id = value;\n    }\n\n    /**\n     * An @Input property that lets you fill the `IgxHierarchicalGridComponent` with an array of data.\n     * ```html\n     * <igx-hierarchical-grid [data]=\"Data\" [autoGenerate]=\"true\"></igx-hierarchical-grid>\n     * ```\n     * @memberof IgxHierarchicalGridComponent\n     */\n    @Input()\n    public set data(value: any[]) {\n        this._data = value || [];\n        this.summaryService.clearSummaryCache();\n        if (this.shouldGenerate) {\n            this.setupColumns();\n            this.reflow();\n        }\n        this.cdr.markForCheck();\n        if (this.parent && (this.height === null || this.height.indexOf('%') !== -1)) {\n            // If the height will change based on how much data there is, recalculate sizes in igxForOf.\n            this.notifyChanges(true);\n        }\n    }\n\n    /**\n     * Returns an array of data set to the `IgxHierarchicalGridComponent`.\n     * ```typescript\n     * let filteredData = this.grid.filteredData;\n     * ```\n     * @memberof IgxHierarchicalGridComponent\n     */\n    public get data(): any[] {\n        return this._data;\n    }\n\n\n    /**\n     * Sets an array of objects containing the filtered data in the `IgxHierarchicalGridComponent`.\n     * ```typescript\n     * this.grid.filteredData = [{\n     *       ID: 1,\n     *       Name: \"A\"\n     * }];\n     * ```\n     * @memberof IgxHierarchicalGridComponent\n     */\n    public set filteredData(value) {\n        this._filteredData = value;\n\n\n    }\n\n    /**\n     * Returns an array of objects containing the filtered data in the `IgxHierarchicalGridComponent`.\n     * ```typescript\n     * let filteredData = this.grid.filteredData;\n     * ```\n     * @memberof IgxHierarchicalGridComponent\n     */\n    public get filteredData() {\n        return this._filteredData;\n    }\n\n    /**\n     * Sets if all immediate children of the `IgxHierarchicalGridComponent` should be expanded/collapsed.\n     * Defult value is false.\n     * ```html\n     * <igx-hierarchical-grid [id]=\"'igx-grid-1'\" [data]=\"Data\" [autoGenerate]=\"true\" [expandChildren]=\"true\"></igx-hierarchical-grid>\n     * ```\n     * @memberof IgxHierarchicalGridComponent\n     */\n    @Input()\n    set expandChildren(value: boolean) {\n        this._defaultExpandState  = value;\n        this.expansionStates = new Map<any, boolean>();\n    }\n\n    /**\n     * Gets if all immediate children of the `IgxHierarchicalGridComponent` previously have been set to be expanded/collapsed.\n     * If previously set and some rows have been manually expanded/collapsed it will still return the last set value.\n     * ```typescript\n     * const expanded = this.grid.expandChildren;\n     * ```\n     * @memberof IgxHierarchicalGridComponent\n     */\n    get expandChildren(): boolean {\n        return this._defaultExpandState ;\n    }\n\n    /**\n     * Gets the unique identifier of the parent row. It may be a `string` or `number` if `primaryKey` of the\n     * parent grid is set or an object reference of the parent record otherwise.\n     * ```typescript\n     * const foreignKey = this.grid.foreignKey;\n     * ```\n     * @memberof IgxHierarchicalGridComponent\n     */\n    public get foreignKey() {\n        if (!this.parent) {\n            return null;\n        }\n        return this.parent.hgridAPI.getParentRowId(this);\n    }\n\n    /**\n     * @hidden\n     */\n    @ContentChildren(IgxRowIslandComponent, { read: IgxRowIslandComponent, descendants: false })\n    public childLayoutList: QueryList<IgxRowIslandComponent>;\n\n    /**\n     * @hidden\n     */\n    @ContentChildren(IgxRowIslandComponent, { read: IgxRowIslandComponent, descendants: true })\n    public allLayoutList: QueryList<IgxRowIslandComponent>;\n\n    @ViewChild('hierarchical_record_template', { read: TemplateRef, static: true })\n    protected hierarchicalRecordTemplate: TemplateRef<any>;\n\n    @ViewChild('child_record_template', { read: TemplateRef, static: true })\n    protected childTemplate: TemplateRef<any>;\n\n    @ViewChild('headerHierarchyExpander', { read: ElementRef, static: true })\n    protected headerHierarchyExpander: ElementRef;\n\n    /**\n     * @hidden\n     */\n    @ViewChildren(IgxTemplateOutletDirective, { read: IgxTemplateOutletDirective })\n    public templateOutlets: QueryList<any>;\n\n    /**\n     * @hidden\n     */\n    @ViewChildren(IgxChildGridRowComponent, { read: IgxChildGridRowComponent })\n    public hierarchicalRows: QueryList<IgxChildGridRowComponent>;\n\n    /**\n     * @hidden\n     */\n    get hasExpandableChildren() {\n        return !!this.childLayoutKeys.length;\n    }\n\n    /**\n     * @hidden\n     */\n    public childLayoutKeys = [];\n\n    /**\n     * @hidden\n     */\n    public highlightedRowID = null;\n\n    /**\n     * @hidden\n     */\n    public updateOnRender = false;\n\n    /**\n     * @hidden\n     */\n    public parent = null;\n\n    private _data;\n    private _filteredData = null;\n    private h_id = `igx-hierarchical-grid-${NEXT_ID++}`;\n    private childGridTemplates: Map<any, any> = new Map();\n    private scrollTop = 0;\n    private scrollLeft = 0;\n\n    /**\n     * @hidden\n     */\n    ngOnInit() {\n        if (this._transactions instanceof IgxTransactionService) {\n            // transaction service cannot be injected in a derived class in a factory manner\n            this._transactions = new IgxTransactionService();\n        }\n        this.expansionStatesChange.pipe(takeUntil(this.destroy$)).subscribe((value: Map<any, boolean>) => {\n            const res = Array.from(value.entries()).filter(({1: v}) => v === true).map(([k]) => k);\n        });\n        super.ngOnInit();\n    }\n\n    public ngDoCheck() {\n        if (this._cdrRequestRepaint && !this._init) {\n            this.updateSizes();\n        }\n        super.ngDoCheck();\n    }\n\n    /**\n     * @hidden\n     */\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        this.verticalScrollContainer.getScroll().addEventListener('scroll', this.hg_verticalScrollHandler.bind(this));\n        this.headerContainer.getScroll().addEventListener('scroll', this.hg_horizontalScrollHandler.bind(this));\n\n        this.verticalScrollContainer.onBeforeViewDestroyed.pipe(takeUntil(this.destroy$)).subscribe((view) => {\n            const rowData = view.context.$implicit;\n            if (this.isChildGridRecord(rowData)) {\n                const cachedData = this.childGridTemplates.get(rowData.rowID);\n                if (cachedData) {\n                    const tmlpOutlet = cachedData.owner;\n                    tmlpOutlet._viewContainerRef.detach(0);\n                }\n            }\n        });\n\n        if (this.parent) {\n            this._displayDensity = this.rootGrid._displayDensity;\n            this.rootGrid.onDensityChanged.pipe(takeUntil(this.destroy$)).subscribe(() => {\n                this._displayDensity = this.rootGrid._displayDensity;\n                this.notifyChanges(true);\n                this.cdr.markForCheck();\n            });\n            this.childLayoutKeys = this.parentIsland.children.map((item) => item.key);\n        }\n\n        this.toolbarCustomContentTemplates = this.parentIsland ?\n            this.parentIsland.toolbarCustomContentTemplates :\n            this.toolbarCustomContentTemplates;\n\n        this.headSelectorsTemplates = this.parentIsland ?\n            this.parentIsland.headSelectorsTemplates :\n            this.headSelectorsTemplates;\n\n        this.rowSelectorsTemplates = this.parentIsland ?\n            this.parentIsland.rowSelectorsTemplates :\n            this.rowSelectorsTemplates;\n        this.dragIndicatorIconTemplate = this.parentIsland ?\n            this.parentIsland.dragIndicatorIconTemplate :\n            this.dragIndicatorIconTemplate;\n        this.rowExpandedIndicatorTemplate  = this.rootGrid.rowExpandedIndicatorTemplate;\n        this.rowCollapsedIndicatorTemplate   = this.rootGrid.rowCollapsedIndicatorTemplate;\n        this.headerCollapseIndicatorTemplate = this.rootGrid.headerCollapseIndicatorTemplate;\n        this.headerExpandIndicatorTemplate = this.rootGrid.headerExpandIndicatorTemplate;\n        this.hasChildrenKey = this.parentIsland ?\n         this.parentIsland.hasChildrenKey || this.rootGrid.hasChildrenKey :\n         this.rootGrid.hasChildrenKey;\n         this.showExpandAll = this.parentIsland ?\n         this.parentIsland.showExpandAll : this.rootGrid.showExpandAll;\n    }\n\n    private updateSizes() {\n        if (document.body.contains(this.nativeElement) && this.isPercentWidth) {\n            this.reflow();\n\n            this.hgridAPI.getChildGrids(false).forEach((grid) => {\n                grid.updateSizes();\n            });\n        }\n    }\n\n    protected _shouldAutoSize(renderedHeight) {\n        if (this.isPercentHeight && this.parent) {\n            return true;\n        }\n        return super._shouldAutoSize(renderedHeight);\n    }\n\n    public get outletDirective() {\n        return this.rootGrid._outletDirective;\n    }\n\n    /**\n     * @hidden\n     */\n    ngAfterContentInit() {\n        this.updateColumnList(false);\n        this.childLayoutKeys = this.parent ?\n            this.parentIsland.children.map((item) => item.key) :\n            this.childLayoutKeys = this.childLayoutList.map((item) => item.key);\n        this.childLayoutList.notifyOnChanges();\n        this.childLayoutList.changes.pipe(takeUntil(this.destroy$)).subscribe(() =>\n            this.onRowIslandChange()\n        );\n        super.ngAfterContentInit();\n    }\n\n    /** @hidden */\n    public featureColumnsWidth() {\n        return super.featureColumnsWidth(this.headerHierarchyExpander);\n    }\n\n    /**\n     * @hidden\n     */\n    public onRowIslandChange() {\n        if (this.parent) {\n            this.childLayoutKeys = this.parentIsland.children.filter(item => !(item as any)._destroyed).map((item) => item.key);\n        } else {\n            this.childLayoutKeys = this.childLayoutList.filter(item => !(item as any)._destroyed).map((item) => item.key);\n        }\n        if (!(this.cdr as any).destroyed) {\n            this.cdr.detectChanges();\n        }\n    }\n\n\n    protected setupColumns() {\n        if (this.parentIsland && this.parentIsland.childColumns.length > 0 && !this.autoGenerate) {\n            this.createColumnsList(this.parentIsland.childColumns.toArray());\n        }\n        super.setupColumns();\n    }\n\n    protected onColumnsChanged(change: QueryList<IgxColumnComponent>) {\n        Promise.resolve().then(() => {\n            this.updateColumnList();\n            const cols = change.filter(c => c.gridAPI.grid === this);\n            if (cols.length > 0 || this.autoGenerate) {\n                this.columnList.reset(cols);\n                super.onColumnsChanged(this.columnList);\n            }\n        });\n    }\n\n    private updateColumnList(recalcColSizes = true) {\n        const childLayouts = this.parent ? this.childLayoutList : this.allLayoutList;\n        const nestedColumns = childLayouts.map((layout) => {\n            return layout.columnList.toArray();\n        });\n        const colsArray = [].concat.apply([], nestedColumns);\n        const colLength = this.columnList.length;\n        if (colsArray.length > 0) {\n            const topCols = this.columnList.filter((item) => {\n                return colsArray.indexOf(item) === -1;\n            });\n            this.columnList.reset(topCols);\n            if (recalcColSizes && this.columnList.length !== colLength) {\n                this.calculateGridSizes(false);\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        if (!this.parent) {\n            this.hgridAPI.getChildGrids(true).forEach((grid) => {\n                if (!grid.childRow.cdr.destroyed) {\n                    grid.childRow.cdr.destroy();\n                }\n            });\n        }\n        if (this.parent && this.selectionService.activeElement) {\n            // in case selection is in destroyed child grid, selection should be cleared.\n            this._clearSeletionHighlights();\n        }\n        super.ngOnDestroy();\n    }\n\n    private _clearSeletionHighlights() {\n        [this.rootGrid, ...this.rootGrid.getChildGrids(true)].forEach(grid => {\n            grid.selectionService.clear();\n            grid.selectionService.activeElement = null;\n            grid.nativeElement.classList.remove('igx-grid__tr--highlighted');\n            grid.highlightedRowID = null;\n            grid.cdr.markForCheck();\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    public get template(): TemplateRef<any> {\n        if (this.filteredData && this.filteredData.length === 0) {\n            return this.emptyGridTemplate ? this.emptyGridTemplate : this.emptyFilteredGridTemplate;\n        }\n\n        if (this.isLoading && (!this.data || this.dataLength === 0)) {\n            return this.loadingGridTemplate ? this.loadingGridTemplate : this.loadingGridDefaultTemplate;\n        }\n\n        if (this.dataLength === 0) {\n            return this.emptyGridTemplate ? this.emptyGridTemplate : this.emptyGridDefaultTemplate;\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public isRowHighlighted(rowData) {\n        return this.highlightedRowID === rowData.rowID;\n    }\n\n    /**\n     * @hidden\n     */\n    public isHierarchicalRecord(record: any): boolean {\n        if (this.isGhostRecord(record)) {\n            record = record.recordRef;\n        }\n        return this.childLayoutList.length !== 0 && record[this.childLayoutList.first.key];\n    }\n\n    /**\n     * @hidden\n     */\n    public isChildGridRecord(record: any): boolean {\n        // Can be null when there is defined layout but no child data was found\n        return record.childGridsData !== undefined;\n    }\n\n    /**\n     * @hidden\n     */\n    public trackChanges(index, rec) {\n        if (rec.childGridsData !== undefined) {\n            // if is child rec\n            return rec.rowID;\n        }\n        return rec;\n    }\n\n    /**\n     * @hidden\n     */\n    public getContext(rowData, rowIndex, pinned): any {\n        if (this.isChildGridRecord(rowData)) {\n            const cachedData = this.childGridTemplates.get(rowData.rowID);\n            if (cachedData) {\n                const view = cachedData.view;\n                const tmlpOutlet = cachedData.owner;\n                return {\n                    $implicit: rowData,\n                    moveView: view,\n                    owner: tmlpOutlet,\n                    index: this.dataView.indexOf(rowData)\n                };\n            } else {\n                const rowID = this.primaryKey ? rowData.rowID : this.data.indexOf(rowData.rowID);\n                // child rows contain unique grids, hence should have unique templates\n                return {\n                    $implicit: rowData,\n                    templateID: 'childRow-' + rowID,\n                    index: this.dataView.indexOf(rowData)\n                };\n            }\n        } else {\n            return {\n                $implicit: this.isGhostRecord(rowData) ? rowData.recordRef : rowData,\n                templateID: 'dataRow',\n                index: this.getDataViewIndex(rowIndex, pinned),\n                disabled: this.isGhostRecord(rowData)\n            };\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public get rootGrid() {\n        let currGrid = this;\n        while (currGrid.parent) {\n            currGrid = currGrid.parent;\n        }\n        return currGrid;\n    }\n\n    /**\n     * @hidden\n     */\n    public get iconTemplate() {\n        const expanded = this.hasExpandedRecords() && this.hasExpandableChildren;\n        if (!expanded && this.showExpandAll) {\n            return this.headerCollapseIndicatorTemplate || this.defaultCollapsedTemplate;\n        } else {\n            return this.headerExpandIndicatorTemplate || this.defaultExpandedTemplate;\n        }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public getDragGhostCustomTemplate(): TemplateRef<any> {\n        if (this.parentIsland) {\n            return this.parentIsland.getDragGhostCustomTemplate();\n        }\n        return super.getDragGhostCustomTemplate();\n    }\n\n    /**\n     * @hidden\n     */\n    protected initColumns(collection: QueryList<IgxColumnComponent>, cb: Function = null) {\n        if (this.hasColumnLayouts) {\n            // invalid configuration - hierarchical grid should not allow column layouts\n            // remove column layouts\n            const nonColumnLayoutColumns = this.columnList.filter((col) => !col.columnLayout && !col.columnLayoutChild);\n            this.columnList.reset(nonColumnLayoutColumns);\n        }\n        super.initColumns(collection, cb);\n    }\n\n    /**\n     * @hidden\n     * Gets the visible content height that includes header + tbody + footer.\n     * For hierarchical child grid it may be scrolled and not fully visible.\n     */\n    public getVisibleContentHeight() {\n        let height = super.getVisibleContentHeight();\n        if (this.parent) {\n            const rootHeight = this.rootGrid.getVisibleContentHeight();\n            const topDiff = this.nativeElement.getBoundingClientRect().top - this.rootGrid.nativeElement.getBoundingClientRect().top;\n            height = rootHeight - topDiff > height ? height : rootHeight - topDiff;\n        }\n        return height;\n    }\n\n    /**\n     * @hidden\n     */\n   toggleAll() {\n    const expanded = this.hasExpandedRecords() && this.hasExpandableChildren;\n    if (!expanded && this.showExpandAll) {\n        this.expandAll();\n    } else {\n        this.collapseAll();\n    }\n   }\n\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public hasExpandedRecords() {\n       if (this.expandChildren) {\n            return true;\n       }\n       let hasExpandedEntry = false;\n       this.expansionStates.forEach((value, key) => {\n           if (value) {\n            hasExpandedEntry = value;\n           }\n        });\n        return hasExpandedEntry;\n    }\n\n    public getDefaultExpandState(record: any) {\n        if (this.hasChildrenKey && !record[this.hasChildrenKey]) {\n            return false;\n        }\n        return this.expandChildren;\n\n    }\n\n    /**\n     * @hidden\n     */\n    public isExpanded(record: any): boolean {\n        return this.gridAPI.get_row_expansion_state(record);\n    }\n\n    /**\n     * @hidden\n     */\n    public viewCreatedHandler(args) {\n        if (this.isChildGridRecord(args.context.$implicit)) {\n            const key = args.context.$implicit.rowID;\n            this.childGridTemplates.set(key, args);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public viewMovedHandler(args) {\n        if (this.isChildGridRecord(args.context.$implicit)) {\n            // view was moved, update owner in cache\n            const key = args.context.$implicit.rowID;\n            const cachedData = this.childGridTemplates.get(key);\n            cachedData.owner = args.owner;\n\n            this.childLayoutList.forEach((layout) => {\n                const relatedGrid = this.hgridAPI.getChildGridByID(layout.key, args.context.$implicit.rowID);\n                if (relatedGrid && relatedGrid.updateOnRender) {\n                    // Detect changes if `expandChildren` has changed when the grid wasn't visible. This is for performance reasons.\n                    relatedGrid.notifyChanges(true);\n                    relatedGrid.updateOnRender = false;\n                }\n            });\n\n            const childGrids = this.getChildGrids(true);\n            childGrids.forEach((grid) => {\n                if (grid.isPercentWidth) {\n                    grid.notifyChanges(true);\n                }\n                grid.updateScrollPosition();\n            });\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public updateScrollPosition() {\n        const vScr = this.verticalScrollContainer.getScroll();\n        const hScr = this.headerContainer.getScroll();\n        if (vScr) {\n            vScr.scrollTop = this.scrollTop;\n        }\n        if (hScr) {\n            hScr.scrollLeft = this.scrollLeft;\n        }\n    }\n\n    protected getChildGrids(inDeph?: boolean) {\n        return this.hgridAPI.getChildGrids(inDeph);\n    }\n\n    protected generateDataFields(data: any[]): string[] {\n        return super.generateDataFields(data).filter((field) => {\n            const layoutsList = this.parentIsland ? this.parentIsland.children : this.childLayoutList;\n            const keys = layoutsList.map((item) => item.key);\n            return keys.indexOf(field) === -1;\n        });\n    }\n\n\n    private hg_verticalScrollHandler(event) {\n        this.scrollTop = event.target.scrollTop;\n    }\n\n    public onContainerScroll() {\n        this.hideOverlays();\n    }\n\n    private hg_horizontalScrollHandler(event) {\n        this.scrollLeft = event.target.scrollLeft;\n    }\n}\n","import { IgxGridCellComponent } from '../cell.component';\nimport { GridBaseAPIService } from '../api.service';\nimport { ChangeDetectorRef, ElementRef, ChangeDetectionStrategy, Component,\n     OnInit, HostListener, NgZone, HostBinding } from '@angular/core';\nimport { IgxHierarchicalGridComponent } from './hierarchical-grid.component';\nimport { IgxGridSelectionService, IgxGridCRUDService } from '../selection/selection.service';\nimport { HammerGesturesManager } from '../../core/touch';\nimport { PlatformUtil } from '../../core/utils';\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false,\n    selector: 'igx-hierarchical-grid-cell',\n    templateUrl: '../cell.component.html',\n    providers: [HammerGesturesManager]\n})\nexport class IgxHierarchicalGridCellComponent extends IgxGridCellComponent implements OnInit {\n    // protected hSelection;\n    protected _rootGrid;\n\n    constructor(\n        protected selectionService: IgxGridSelectionService,\n        protected crudService: IgxGridCRUDService,\n        public gridAPI: GridBaseAPIService<IgxHierarchicalGridComponent>,\n        public cdr: ChangeDetectorRef,\n        private helement: ElementRef,\n        protected zone: NgZone,\n        touchManager: HammerGesturesManager,\n        protected platformUtil: PlatformUtil\n        ) {\n            super(selectionService, crudService, gridAPI, cdr, helement, zone, touchManager, platformUtil);\n         }\n\n    ngOnInit() {\n        super.ngOnInit();\n        this._rootGrid = this._getRootGrid();\n    }\n\n    private _getRootGrid() {\n        let currGrid = this.grid;\n        while (currGrid.parent) {\n            currGrid = currGrid.parent;\n        }\n        return currGrid;\n    }\n\n    // TODO: Extend the new selection service to avoid complete traversal\n    _clearAllHighlights() {\n        [this._rootGrid, ...this._rootGrid.getChildGrids(true)].forEach(grid => {\n            grid.selectionService.clear();\n            if (grid.navigation.activeNode) {\n                grid.navigation.activeNode.row = null;\n            }\n            grid.selectionService.activeElement = null;\n            grid.nativeElement.classList.remove('igx-grid__tr--highlighted');\n            grid.highlightedRowID = null;\n            grid.cdr.markForCheck();\n        });\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public activate(event: FocusEvent) {\n        this._clearAllHighlights();\n        const currentElement = this.grid.nativeElement;\n        let parentGrid = this.grid;\n        let childGrid;\n        // add highligh to the current grid\n        if (this._rootGrid.id !== currentElement.id) {\n            currentElement.classList.add('igx-grid__tr--highlighted');\n        }\n\n        this.grid.navigation.activeNode = this.selectionNode;\n        // add highligh to the current grid\n        while (this._rootGrid.id !== parentGrid.id) {\n            childGrid = parentGrid;\n            parentGrid = parentGrid.parent;\n\n            const parentRowID = parentGrid.hgridAPI.getParentRowId(childGrid);\n            parentGrid.highlightedRowID = parentRowID;\n        }\n        super.activate(event);\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    HostBinding,\n    forwardRef,\n    ElementRef,\n    ViewChildren,\n    QueryList,\n    ViewChild,\n    TemplateRef,\n    Input,\n    HostListener\n} from '@angular/core';\nimport { IgxHierarchicalGridComponent } from './hierarchical-grid.component';\nimport { IgxRowDirective } from '../row.directive';\nimport { IgxHierarchicalGridCellComponent } from './hierarchical-cell.component';\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false,\n    selector: 'igx-hierarchical-grid-row',\n    templateUrl: './hierarchical-row.component.html',\n    providers: [{ provide: IgxRowDirective, useExisting: forwardRef(() => IgxHierarchicalRowComponent) }]\n})\nexport class IgxHierarchicalRowComponent extends IgxRowDirective<IgxHierarchicalGridComponent> {\n\n    protected expanderClass = 'igx-grid__hierarchical-expander';\n\n    /**\n     * @hidden\n     */\n    public get expanderClassResolved() {\n        return {\n            [this.expanderClass]: !this.pinned || this.disabled,\n            [`${this.expanderClass}--empty`]: this.pinned && !this.disabled\n        };\n    }\n\n    @ViewChildren(forwardRef(() => IgxHierarchicalGridCellComponent), { read: IgxHierarchicalGridCellComponent })\n    protected _cells: QueryList<IgxHierarchicalGridCellComponent>;\n\n    @ViewChild('expander', { read: ElementRef })\n    public expander: ElementRef<HTMLElement>;\n\n    get viewIndex(): number {\n        return this.index + this.grid.page * this.grid.perPage;\n    }\n\n    /**\n     * @hidden\n     */\n   @ViewChild('defaultExpandedTemplate', { read: TemplateRef, static: true })\n   protected defaultExpandedTemplate: TemplateRef<any>;\n\n    /**\n     * @hidden\n     */\n   @ViewChild('defaultEmptyTemplate', { read: TemplateRef, static: true })\n   protected defaultEmptyTemplate: TemplateRef<any>;\n\n    /**\n     * @hidden\n     */\n   @ViewChild('defaultCollapsedTemplate', { read: TemplateRef, static: true })\n   protected defaultCollapsedTemplate: TemplateRef<any>;\n\n    /**\n     * Returns whether the row is expanded.\n     * ```typescript\n     * const RowExpanded = this.grid1.rowList.first.expanded;\n     * ```\n     */\n    public get expanded() {\n        return this.gridAPI.get_row_expansion_state(this.rowData);\n    }\n\n    /**\n     * @hidden\n     */\n    @HostBinding('class.igx-grid__tr--expanded')\n    public get expandedClass() {\n        return this.expanded && !this.pinned;\n    }\n\n    public get hasChildren() {\n        return  !!this.grid.childLayoutKeys.length;\n    }\n\n    /**\n     * @hidden\n     */\n    @HostBinding('class.igx-grid__tr--highlighted')\n    public get highlighted() {\n        return this.grid && this.grid.highlightedRowID === this.rowID;\n    }\n\n   /**\n    * @hidden\n    */\n   public expanderClick(event) {\n        event.stopPropagation();\n        this.toggle();\n    }\n\n    /**\n     * Toggles the hierarchical row.\n     * ```typescript\n     * this.grid1.rowList.first.toggle()\n     * ```\n     */\n    public toggle() {\n        if (this.added) {\n            return;\n        }\n        const grid = this.gridAPI.grid;\n        this.endEdit(grid.rootGrid);\n        this.gridAPI.set_row_expansion_state(this.rowID, !this.expanded);\n        grid.cdr.detectChanges();\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public select = () => {\n        this.grid.selectRows([this.rowID]);\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public deselect = () => {\n        this.grid.deselectRows([this.rowID]);\n    }\n\n    /**\n     * @hidden\n     */\n    public get iconTemplate() {\n        let expandable = true;\n        if (this.grid.hasChildrenKey) {\n            expandable = this.rowData[this.grid.hasChildrenKey];\n        }\n        if (!expandable || (this.pinned && !this.disabled)) {\n            return this.defaultEmptyTemplate;\n        }\n        if (this.expanded) {\n            return this.grid.rowExpandedIndicatorTemplate || this.defaultExpandedTemplate;\n        } else {\n            return this.grid.rowCollapsedIndicatorTemplate || this.defaultCollapsedTemplate;\n        }\n    }\n\n    protected endEdit(grid: IgxHierarchicalGridComponent) {\n        if (grid.crudService.inEditMode) {\n            grid.endEdit();\n        }\n        grid.hgridAPI.getChildGrids(true).forEach(g => {\n            if (g.crudService.inEditMode) {\n            g.endEdit();\n        }});\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { cloneArray } from '../../core/utils';\nimport { GridBaseAPIService } from '../api.service';\nimport { IgxHierarchicalGridComponent } from './hierarchical-grid.component';\nimport { DataUtil } from '../../data-operations/data-util';\n\n/**\n * @hidden\n */\n@Pipe({\n    name: 'gridHierarchical',\n    pure: true\n})\nexport class IgxGridHierarchicalPipe implements PipeTransform {\n\n    constructor(private gridAPI: GridBaseAPIService<IgxHierarchicalGridComponent>) { }\n\n    public transform(\n        collection: any,\n        state = new Map<any, boolean>(),\n        id: string,\n        primaryKey: any,\n        childKeys: string[],\n        pipeTrigger: number\n        ): any[] {\n        if (childKeys.length === 0) {\n            return collection;\n        }\n        const grid: IgxHierarchicalGridComponent = this.gridAPI.grid;\n        const result = this.addHierarchy(grid, cloneArray(collection), state, primaryKey, childKeys);\n\n        return result;\n    }\n\n    public addHierarchy<T>(grid, data: T[], state, primaryKey, childKeys: string[]): T[] {\n        const result = [];\n\n        data.forEach((v) => {\n            result.push(v);\n            const childGridsData = {};\n            childKeys.forEach((childKey) => {\n                const childData = v[childKey] ? v[childKey] : null;\n                childGridsData[childKey] = childData;\n            });\n            if (grid.gridAPI.get_row_expansion_state(v)) {\n                result.push({ rowID: primaryKey ? v[primaryKey] : v, childGridsData: childGridsData});\n            }\n        });\n        return result;\n    }\n}\n\n/**\n * @hidden\n */\n@Pipe({\n    name: 'gridHierarchicalPaging',\n    pure: true\n})\nexport class IgxGridHierarchicalPagingPipe implements PipeTransform {\n\n    constructor(private gridAPI: GridBaseAPIService<IgxHierarchicalGridComponent>) { }\n\n    public transform(collection: any[], page = 0, perPage = 15, id: string, pipeTrigger: number): any[] {\n\n        if (!this.gridAPI.grid.paging) {\n            return collection;\n        }\n\n        const state = {\n            index: page,\n            recordsPerPage: perPage\n        };\n\n        const result: any[] = DataUtil.page(cloneArray(collection), state);\n        this.gridAPI.grid.pagingState = state;\n        return result;\n    }\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { IgxGridModule } from '../grid/grid.module';\nimport { IgxHierarchicalGridComponent } from './hierarchical-grid.component';\nimport { IgxHierarchicalRowComponent } from './hierarchical-row.component';\nimport { IgxGridHierarchicalPipe, IgxGridHierarchicalPagingPipe } from './hierarchical-grid.pipes';\nimport { IgxRowIslandComponent } from './row-island.component';\nimport { IgxChildGridRowComponent } from './child-grid-row.component';\nimport { IgxHierarchicalGridCellComponent } from './hierarchical-cell.component';\nimport { IgxGridComponent } from '../grid/grid.component';\nimport { IgxHierarchicalGridBaseDirective } from './hierarchical-grid-base.directive';\n\n/**\n * @hidden\n */\n@NgModule({\n  declarations: [\n    IgxHierarchicalGridBaseDirective,\n    IgxHierarchicalGridComponent,\n    IgxHierarchicalRowComponent,\n    IgxRowIslandComponent,\n    IgxChildGridRowComponent,\n    IgxHierarchicalGridCellComponent,\n    IgxGridHierarchicalPipe,\n    IgxGridHierarchicalPagingPipe\n  ],\n  exports: [\n    IgxGridModule,\n    IgxHierarchicalGridComponent,\n    IgxHierarchicalRowComponent,\n    IgxHierarchicalGridCellComponent,\n    IgxRowIslandComponent,\n    IgxChildGridRowComponent\n  ],\n  imports: [\n    IgxGridModule,\n  ],\n  entryComponents: [\n    IgxGridComponent\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class IgxHierarchicalGridModule {\n}\n","import { CommonModule } from '@angular/common';\nimport {\n    Component,\n    EventEmitter,\n    HostBinding,\n    Input,\n    NgModule,\n    Output,\n    Directive,\n    ContentChild\n} from '@angular/core';\nimport { IgxButtonModule } from '../directives/button/button.directive';\nimport { IgxIconModule } from '../icon/public_api';\n\n/**\n * IgxActionIcon is a container for the action nav icon of the IgxNavbar.\n */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: 'igx-action-icon'\n})\nexport class IgxActionIconDirective { }\n\nlet NEXT_ID = 0;\n/**\n * **Ignite UI for Angular Navbar** -\n * [Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/navbar.html)\n *\n * The Ignite UI Navbar is most commonly used to provide an app header with a hamburger menu and navigation\n * state such as a \"Go Back\" button. It also supports other actions represented by icons.\n *\n * Example:\n * ```html\n * <igx-navbar title=\"Sample App\" actionButtonIcon=\"menu\">\n *   <igx-icon>search</igx-icon>\n *   <igx-icon>favorite</igx-icon>\n *   <igx-icon>more_vert</igx-icon>\n * </igx-navbar>\n * ```\n */\n\n@Component({\n    selector: 'igx-navbar',\n    templateUrl: 'navbar.component.html',\n    styles: [`\n        :host {\n            display: block;\n        }\n    `\n    ]\n})\n\nexport class IgxNavbarComponent {\n    private static NEXT_ID = 1;\n    private isVisible = true;\n\n    /**\n     * An @Input property that sets the value of the `id` attribute. If not provided it will be automatically generated.\n     * ```html\n     * <igx-navbar [id]=\"'igx-navbar-12'\" title=\"Sample App\" actionButtonIcon=\"menu\">\n     * ```\n     */\n    @HostBinding('attr.id')\n    @Input()\n    public id = `igx-navbar-${NEXT_ID++}`;\n    /**\n     * Returns whether the `IgxNavbarComponent` action button is visible, true/false.\n     * ```typescript\n     *  @ViewChild(\"MyChild\")\n     * public navBar: IgxNavbarComponent;\n     * ngAfterViewInit(){\n     *     let actionButtonVisibile = this.navBar.isActionButtonVisible;\n     * }\n     * ```\n     */\n    @Input()\n    public get isActionButtonVisible(): boolean {\n        if (this.actionIconTemplate || !this.actionButtonIcon) {\n            return false;\n        }\n        return this.isVisible;\n    }\n\n    /**\n     * Sets whether the action button of the `IgxNavbarComponent` is visible.\n     * ```html\n     * <igx-navbar [title]=\"currentView\" [isActionButtonVisible]=\"'false'\"></igx-navbar>\n     * ```\n     */\n    public set isActionButtonVisible(value: boolean) {\n        this.isVisible = value;\n    }\n    /**\n     * An @Input property that sets the icon of the `IgxNavbarComponent`.\n     * ```html\n     * <igx-navbar [title]=\"currentView\" actionButtonIcon=\"arrow_back\"></igx-navbar>\n     * ```\n     */\n    @Input() public actionButtonIcon: string;\n\n    /**\n     * An @Input property that sets the title of the `IgxNavbarComponent`.\n     * ```html\n     * <igx-navbar title=\"Sample App\" actionButtonIcon=\"menu\">\n     * ```\n     */\n    @Input() public title: string;\n\n    /**\n     * The event that will be thrown when the action is executed,\n     * provides reference to the `IgxNavbar` component as argument\n     * ```typescript\n     * public actionExc(event){\n     *     alert(\"Action Execute!\");\n     * }\n     *  //..\n     * ```\n     * ```html\n     * <igx-navbar (onAction)=\"actionExc($event)\" title=\"Sample App\" actionButtonIcon=\"menu\">\n     * ```\n     */\n    @Output() public onAction = new EventEmitter<IgxNavbarComponent>();\n\n    /**\n     * An @Input property that sets the titleId of the `IgxNavbarComponent`. If not set it will be automatically generated.\n     * ```html\n     * <igx-navbar [titleId]=\"'igx-navbar-7'\" title=\"Sample App\" actionButtonIcon=\"menu\">\n     * ```\n     */\n    @Input()\n    public titleId = `igx-navbar-${IgxNavbarComponent.NEXT_ID++}`;\n\n    /**\n     * @hidden\n     */\n    @ContentChild(IgxActionIconDirective, { read: IgxActionIconDirective })\n    protected actionIconTemplate: IgxActionIconDirective;\n\n    /**\n     * @hidden\n     */\n    public _triggerAction() {\n        this.onAction.emit(this);\n    }\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [IgxNavbarComponent, IgxActionIconDirective],\n    exports: [IgxNavbarComponent, IgxActionIconDirective],\n    imports: [IgxButtonModule, IgxIconModule, CommonModule]\n})\nexport class IgxNavbarModule {\n}\n","import { Directive, HostBinding, Input, TemplateRef } from '@angular/core';\n\n@Directive({\n    selector: '[igxDrawerItem]',\n    exportAs: 'igxDrawerItem'\n})\nexport class IgxNavDrawerItemDirective {\n\n    /**\n     * @hidden\n     */\n    @Input('active') public active = false;\n\n    /**\n     * @hidden\n     */\n    @Input('isHeader') public isHeader = false;\n\n    /**\n     * @hidden\n     */\n    public readonly activeClass = 'igx-nav-drawer__item--active';\n\n    /**\n     * @hidden\n     */\n    @HostBinding('class.igx-nav-drawer__item')\n    get defaultCSS(): boolean {\n        return !this.active && !this.isHeader;\n    }\n\n    /**\n     * @hidden\n     */\n    @HostBinding('class.igx-nav-drawer__item--active')\n    get currentCSS(): boolean {\n        return this.active && !this.isHeader;\n    }\n\n    /**\n     * @hidden\n     */\n    @HostBinding('class.igx-nav-drawer__item--header')\n    get headerCSS(): boolean {\n        return this.isHeader;\n    }\n}\n\n@Directive({\n    selector: '[igxDrawer]'\n})\nexport class IgxNavDrawerTemplateDirective {\n\n    constructor(public template: TemplateRef<any>) {\n     }\n}\n\n@Directive({\n    selector: '[igxDrawerMini]'\n})\nexport class IgxNavDrawerMiniTemplateDirective {\n\n    constructor(public template: TemplateRef<any>) {\n     }\n}\n","import {\n    AfterContentInit,\n    Component,\n    ContentChild,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    SimpleChange,\n    ViewChild,\n    Renderer2\n} from '@angular/core';\nimport { fromEvent, interval, Subscription } from 'rxjs';\nimport { debounce } from 'rxjs/operators';\nimport { IgxNavigationService, IToggleView } from '../core/navigation';\nimport { HammerGesturesManager } from '../core/touch';\nimport { IgxNavDrawerMiniTemplateDirective, IgxNavDrawerTemplateDirective } from './navigation-drawer.directives';\nimport { PlatformUtil } from '../core/utils';\n\nlet NEXT_ID = 0;\n/**\n * **Ignite UI for Angular Navigation Drawer** -\n * [Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/navdrawer.html)\n *\n * The Ignite UI Navigation Drawer is a collapsible side navigation container commonly used in combination with the Navbar.\n *\n * Example:\n * ```html\n * <igx-nav-drawer id=\"navigation\" [isOpen]=\"true\">\n *   <ng-template igxDrawer>\n *     <nav>\n *       <span igxDrawerItem [isHeader]=\"true\">Email</span>\n *       <span igxDrawerItem igxRipple>Inbox</span>\n *       <span igxDrawerItem igxRipple>Deleted</span>\n *       <span igxDrawerItem igxRipple>Sent</span>\n *     </nav>\n *   </ng-template>\n * </igx-nav-drawer>\n * ```\n */\n@Component({\n    providers: [HammerGesturesManager],\n    selector: 'igx-nav-drawer',\n    templateUrl: 'navigation-drawer.component.html',\n    styles: [`\n        :host {\n            display: block;\n            height: 100%;\n        }\n    `]\n})\nexport class IgxNavigationDrawerComponent implements\n    IToggleView,\n    OnInit,\n    AfterContentInit,\n    OnDestroy,\n    OnChanges {\n\n    private _isOpen = false;\n\n    /** @hidden @internal */\n    @HostBinding('class.igx-nav-drawer')\n    public cssClass = true;\n\n    /**\n     * ID of the component\n     *\n     * ```typescript\n     * // get\n     * let myNavDrawerId = this.navdrawer.id;\n     * ```\n     *\n     * ```html\n     * <!--set-->\n     *  <igx-nav-drawer id='navdrawer'></igx-nav-drawer>\n     * ```\n     */\n    @HostBinding('attr.id')\n    @Input() public id = `igx-nav-drawer-${NEXT_ID++}`;\n\n    /**\n     * Position of the Navigation Drawer. Can be \"left\"(default) or \"right\".\n     *\n     * ```typescript\n     * // get\n     * let myNavDrawerPosition = this.navdrawer.position;\n     * ```\n     *\n     * ```html\n     * <!--set-->\n     * <igx-nav-drawer [position]=\"'left'\"></igx-nav-drawer>\n     * ```\n     */\n    @Input() public position = 'left';\n\n    /**\n     * Enables the use of touch gestures to manipulate the drawer:\n     * - swipe/pan from edge to open, swipe-toggle and pan-drag.\n     *\n     * ```typescript\n     * // get\n     * let gesturesEnabled = this.navdrawer.enableGestures;\n     * ```\n     *\n     * ```html\n     * <!--set-->\n     * <igx-nav-drawer [enableGestures]='true'></igx-nav-drawer>\n     * ```\n     */\n    @Input() public enableGestures = true;\n\n    /**\n     * State of the drawer.\n     *\n     * ```typescript\n     * // get\n     * let navDrawerIsOpen = this.navdrawer.isOpen;\n     * ```\n     *\n     * ```html\n     * <!--set-->\n     * <igx-nav-drawer [isOpen]='false'></igx-nav-drawer>\n     * ```\n     *\n     * Two-way data binding.\n     * ```html\n     * <!--set-->\n     * <igx-nav-drawer [(isOpen)]='model.isOpen'></igx-nav-drawer>\n     * ```\n     */\n    @Input()\n    public get isOpen() {\n        return this._isOpen;\n    }\n    public set isOpen(value) {\n        this._isOpen = value;\n        this.isOpenChange.emit(this._isOpen);\n    }\n\n    /**\n     * @hidden\n     */\n    @Output() public isOpenChange = new EventEmitter<boolean>();\n\n    /**\n     * When pinned the drawer is relatively positioned instead of sitting above content.\n     * May require additional layout styling.\n     *\n     * ```typescript\n     * // get\n     * let navDrawerIsPinned = this.navdrawer.pin;\n     * ```\n     *\n     * ```html\n     * <!--set-->\n     * <igx-nav-drawer [pin]='false'></igx-nav-drawer>\n     * ```\n     */\n    @Input() public pin = false;\n\n    /**\n     * Minimum device width required for automatic pin to be toggled.\n     * Default is 1024, can be set to a falsy value to disable this behavior.\n     *\n     * ```typescript\n     * // get\n     * let navDrawerPinTreshold = this.navdrawer.pinThreshold;\n     * ```\n     *\n     * ```html\n     * <!--set-->\n     * <igx-nav-drawer [pinTreshold]='1024'></igx-nav-drawer>\n     * ```\n     */\n    @Input() public pinThreshold = 1024;\n\n    /**\n     * Returns nativeElement of the component.\n     *\n     * @hidden\n     */\n    get element() {\n        return this.elementRef.nativeElement;\n    }\n\n    /**\n     * Width of the drawer in its open state. Defaults to \"280px\".\n     *\n     * ```typescript\n     * // get\n     * let navDrawerWidth = this.navdrawer.width;\n     * ```\n     *\n     * ```html\n     * <!--set-->\n     * <igx-nav-drawer [width]=\"'228px'\"></igx-nav-drawer>\n     * ```\n     */\n    @Input() public width = '280px';\n\n    /**\n     * Width of the drawer in its mini state. Defaults to 68px.\n     *\n     * ```typescript\n     * // get\n     * let navDrawerMiniWidth = this.navdrawer.miniWidth;\n     * ```\n     *\n     * ```html\n     * <!--set-->\n     * <igx-nav-drawer [miniWidth]=\"'34px'\"></igx-nav-drawer>\n     * ```\n     */\n    @Input() public miniWidth = '68px';\n\n    /**\n     * Pinned state change output for two-way binding.\n     *\n     * ```html\n     * <igx-nav-drawer [(pin)]='isPinned'></igx-nav-drawer>\n     * ```\n     */\n    @Output() public pinChange = new EventEmitter<boolean>(true);\n    /**\n     * Event fired as the Navigation Drawer is about to open.\n     *\n     * ```html\n     *  <igx-nav-drawer (opening)='onOpening()'></igx-nav-drawer>\n     * ```\n     */\n    @Output() public opening = new EventEmitter();\n    /**\n     * Event fired when the Navigation Drawer has opened.\n     *\n     * ```html\n     * <igx-nav-drawer (opened)='onOpened()'></igx-nav-drawer>\n     * ```\n     */\n    @Output() public opened = new EventEmitter();\n    /**\n     * Event fired as the Navigation Drawer is about to close.\n     *\n     * ```html\n     * <igx-nav-drawer (closing)='onClosing()'></igx-nav-drawer>\n     * ```\n     */\n    @Output() public closing = new EventEmitter();\n    /**\n     * Event fired when the Navigation Drawer has closed.\n     *\n     * ```html\n     * <igx-nav-drawer (closed)='onClosed()'></igx-nav-drawer>\n     * ```\n     */\n    @Output() public closed = new EventEmitter();\n\n    /**\n     * @hidden\n     */\n    get template() {\n        if (this.miniTemplate && !this.isOpen) {\n            return this.miniTemplate.template;\n        } else if (this.contentTemplate) {\n            return this.contentTemplate.template;\n        }\n    }\n\n    private _miniTemplate: IgxNavDrawerMiniTemplateDirective;\n    /**\n     * @hidden\n     */\n    public get miniTemplate(): IgxNavDrawerMiniTemplateDirective {\n        return this._miniTemplate;\n    }\n\n    /**\n     * @hidden\n     */\n    @ContentChild(IgxNavDrawerMiniTemplateDirective, { read: IgxNavDrawerMiniTemplateDirective })\n    public set miniTemplate(v: IgxNavDrawerMiniTemplateDirective) {\n        if (!this.isOpen) {\n            this.setDrawerWidth(v ? this.miniWidth : '');\n        }\n        this._miniTemplate = v;\n    }\n\n    /**\n     * @hidden\n     */\n    @ContentChild(IgxNavDrawerTemplateDirective, { read: IgxNavDrawerTemplateDirective })\n    protected contentTemplate: IgxNavDrawerTemplateDirective;\n\n    /**\n     * @hidden\n     */\n    @HostBinding('style.flexBasis')\n    get flexWidth() {\n        if (!this.pin) {\n            return '0px';\n        }\n        if (this.isOpen) {\n            return this.width;\n        }\n        if (this.miniTemplate && this.miniWidth) {\n            return this.miniWidth;\n        }\n\n        return '0px';\n    }\n\n    /** @hidden */\n    @HostBinding('style.order')\n    get isPinnedRight() {\n        return this.pin && this.position === 'right' ? '1' : '0';\n    }\n\n    private _gesturesAttached = false;\n    private _widthCache: { width: number, miniWidth: number, windowWidth: number } = { width: null, miniWidth: null, windowWidth: null };\n    private _resizeObserver: Subscription;\n    private css: { [name: string]: string; } = {\n        drawer: 'igx-nav-drawer__aside',\n        mini: 'igx-nav-drawer__aside--mini',\n        overlay: 'igx-nav-drawer__overlay',\n        styleDummy: 'igx-nav-drawer__style-dummy'\n    };\n\n    @ViewChild('aside', { static: true }) private _drawer: ElementRef;\n    @ViewChild('overlay', { static: true }) private _overlay: ElementRef;\n    @ViewChild('dummy', { static: true }) private _styleDummy: ElementRef;\n\n    /**\n     * @hidden\n     */\n    get drawer() {\n        return this._drawer.nativeElement;\n    }\n\n    /**\n     * @hidden\n     */\n    get overlay() {\n        return this._overlay.nativeElement;\n    }\n\n    /**\n     * @hidden\n     */\n    get styleDummy() {\n        return this._styleDummy.nativeElement;\n    }\n\n    /** Pan animation properties */\n    private _panning = false;\n    private _panStartWidth: number;\n    private _panLimit: number;\n\n    /**\n     * Property to decide whether to change width or translate the drawer from pan gesture.\n     *\n     * @hidden\n     */\n    public get hasAnimateWidth(): boolean {\n        return this.pin || !!this.miniTemplate;\n    }\n\n    private _maxEdgeZone = 50;\n    /**\n     * Used for touch gestures (swipe and pan).\n     * Defaults to 50 (in px) and is extended to at least 110% of the mini template width if available.\n     *\n     * @hidden\n     */\n    public get maxEdgeZone() {\n        return this._maxEdgeZone;\n    }\n\n    /**\n     * Gets the Drawer width for specific state.\n     * Will attempt to evaluate requested state and cache.\n     *\n     *\n     * @hidden\n     */\n    public get expectedWidth() {\n        return this.getExpectedWidth(false);\n    }\n\n    /**\n     * Get the Drawer mini width for specific state.\n     * Will attempt to evaluate requested state and cache.\n     *\n     * @hidden\n     */\n    public get expectedMiniWidth() {\n        return this.getExpectedWidth(true);\n    }\n\n    /**\n     * @hidden\n     */\n    public get touchManager() {\n        return this._touchManager;\n    }\n\n    /**\n     * Exposes optional navigation service\n     *\n     * @hidden\n     */\n    public get state() {\n        return this._state;\n    }\n\n    constructor(\n        @Inject(ElementRef) private elementRef: ElementRef,\n        @Optional() private _state: IgxNavigationService,\n        protected renderer: Renderer2,\n        private _touchManager: HammerGesturesManager,\n        private platformUtil: PlatformUtil) {\n    }\n\n    /**\n     * @hidden\n     */\n    public ngOnInit() {\n        // DOM and @Input()-s initialized\n        if (this._state) {\n            this._state.add(this.id, this);\n        }\n        if (this.isOpen) {\n            this.setDrawerWidth(this.width);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public ngAfterContentInit() {\n        // wait for template and ng-content to be ready\n        this.updateEdgeZone();\n        this.checkPinThreshold();\n\n        this.ensureEvents();\n\n        // TODO: apply platform-safe Ruler from http://plnkr.co/edit/81nWDyreYMzkunihfRgX?p=preview\n        // (https://github.com/angular/angular/issues/6515), blocked by https://github.com/angular/angular/issues/6904\n    }\n\n    /**\n     * @hidden\n     */\n    public ngOnDestroy() {\n        this._touchManager.destroy();\n        if (this._state) {\n            this._state.remove(this.id);\n        }\n        if (this._resizeObserver) {\n            this._resizeObserver.unsubscribe();\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public ngOnChanges(changes: { [propName: string]: SimpleChange }) {\n        // simple settings can come from attribute set (rather than binding), make sure boolean props are converted\n        if (changes.enableGestures && changes.enableGestures.currentValue !== undefined) {\n            this.enableGestures = !!(this.enableGestures && this.enableGestures.toString() === 'true');\n            this.ensureEvents();\n        }\n        if (changes.pin && changes.pin.currentValue !== undefined) {\n            this.pin = !!(this.pin && this.pin.toString() === 'true');\n            if (this.pin) {\n                this._touchManager.destroy();\n                this._gesturesAttached = false;\n            } else {\n                this.ensureEvents();\n            }\n        }\n\n        if (changes.pinThreshold) {\n            if (this.pinThreshold) {\n                this.ensureEvents();\n                this.checkPinThreshold();\n            }\n        }\n\n        if (changes.width && this.isOpen) {\n            this.setDrawerWidth(changes.width.currentValue);\n        }\n\n        if (changes.miniWidth) {\n            if (!this.isOpen) {\n                this.setDrawerWidth(changes.miniWidth.currentValue);\n            }\n            this.updateEdgeZone();\n        }\n    }\n\n    /**\n     * Toggle the open state of the Navigation Drawer.\n     *\n     * ```typescript\n     * this.navdrawer.toggle();\n     * ```\n     */\n    public toggle() {\n        if (this.isOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    /**\n     * Open the Navigation Drawer. Has no effect if already opened.\n     *\n     * ```typescript\n     * this.navdrawer.open();\n     * ```\n     */\n    public open() {\n        if (this._panning) {\n            this.resetPan();\n        }\n        if (this.isOpen) {\n            return;\n        }\n        this.opening.emit();\n        this.isOpen = true;\n\n        // TODO: Switch to animate API when available\n        // var animationCss = this.animate.css();\n        //     animationCss\n        //         .setStyles({'width':'50px'}, {'width':'400px'})\n        //         .start(this.elementRef.nativeElement)\n        //         .onComplete(() => animationCss.setToStyles({'width':'auto'}).start(this.elementRef.nativeElement));\n\n        this.elementRef.nativeElement.addEventListener('transitionend', this.toggleOpenedEvent, false);\n        this.setDrawerWidth(this.width);\n    }\n\n    /**\n     * Close the Navigation Drawer. Has no effect if already closed.\n     *\n     * ```typescript\n     * this.navdrawer.close();\n     * ```\n     */\n    public close() {\n        if (this._panning) {\n            this.resetPan();\n        }\n        if (!this.isOpen) {\n            return;\n        }\n        this.closing.emit();\n\n        this.isOpen = false;\n        this.setDrawerWidth(this.miniTemplate ? this.miniWidth : '');\n        this.elementRef.nativeElement.addEventListener('transitionend', this.toggleClosedEvent, false);\n    }\n\n    /**\n     * @hidden\n     */\n    protected set_maxEdgeZone(value: number) {\n        this._maxEdgeZone = value;\n    }\n\n    /**\n     * Get the Drawer width for specific state. Will attempt to evaluate requested state and cache.\n     *\n     * @hidden\n     * @param [mini] - Request mini width instead\n     */\n    protected getExpectedWidth(mini?: boolean): number {\n        if (mini) {\n            if (!this.miniTemplate) {\n                return 0;\n            }\n            if (this.miniWidth) {\n                return parseFloat(this.miniWidth);\n            } else {\n                // if (!this.isOpen) { // This WON'T work due to transition timings...\n                //     return this.elementRef.nativeElement.children[1].offsetWidth;\n                // } else {\n                if (this._widthCache.miniWidth === null) {\n                    // force class for width calc. TODO?\n                    // force class for width calc. TODO?\n                    this.renderer.addClass(this.styleDummy, this.css.drawer);\n                    this.renderer.addClass(this.styleDummy, this.css.mini);\n                    this._widthCache.miniWidth = this.styleDummy.offsetWidth;\n                    this.renderer.removeClass(this.styleDummy, this.css.drawer);\n                    this.renderer.removeClass(this.styleDummy, this.css.mini);\n                }\n                return this._widthCache.miniWidth;\n            }\n        } else {\n            if (this.width) {\n                return parseFloat(this.width);\n            } else {\n                if (this._widthCache.width === null) {\n                    // force class for width calc. TODO?\n                    // force class for width calc. TODO?\n                    this.renderer.addClass(this.styleDummy, this.css.drawer);\n                    this._widthCache.width = this.styleDummy.offsetWidth;\n                    this.renderer.removeClass(this.styleDummy, this.css.drawer);\n                }\n                return this._widthCache.width;\n            }\n        }\n    }\n\n    private getWindowWidth() {\n        return (window.innerWidth > 0) ? window.innerWidth : screen.width;\n    }\n\n    /**\n     * Sets the drawer width.\n     */\n    private setDrawerWidth(width: string) {\n        if (this.platformUtil.isBrowser) {\n            requestAnimationFrame(() => {\n                if (this.drawer) {\n                    this.renderer.setStyle(this.drawer, 'width', width);\n                }\n            });\n        } else {\n            this.renderer.setStyle(this.drawer, 'width', width);\n        }\n    }\n\n    /**\n     * Get current Drawer width.\n     */\n    private getDrawerWidth(): number {\n        return this.drawer.offsetWidth;\n    }\n\n    private ensureEvents() {\n        // set listeners for swipe/pan only if needed, but just once\n        if (this.enableGestures && !this.pin && !this._gesturesAttached) {\n            // Built-in manager handler(L20887) causes endless loop and max stack exception.\n            // https://github.com/angular/angular/issues/6993\n            // Use ours for now (until beta.10):\n            // this.renderer.listen(document, \"swipe\", this.swipe);\n            this._touchManager.addGlobalEventListener('document', 'swipe', this.swipe);\n            this._gesturesAttached = true;\n\n            // this.renderer.listen(document, \"panstart\", this.panstart);\n            // this.renderer.listen(document, \"pan\", this.pan);\n            this._touchManager.addGlobalEventListener('document', 'panstart', this.panstart);\n            this._touchManager.addGlobalEventListener('document', 'panmove', this.pan);\n            this._touchManager.addGlobalEventListener('document', 'panend', this.panEnd);\n        }\n        if (!this._resizeObserver && this.platformUtil.isBrowser) {\n            this._resizeObserver = fromEvent(window, 'resize').pipe(debounce(() => interval(150)))\n                .subscribe((value) => {\n                    this.checkPinThreshold(value);\n                });\n        }\n    }\n\n    private updateEdgeZone() {\n        let maxValue;\n\n        if (this.miniTemplate) {\n            maxValue = Math.max(this._maxEdgeZone, this.getExpectedWidth(true) * 1.1);\n            this.set_maxEdgeZone(maxValue);\n        }\n    }\n\n    private checkPinThreshold = (evt?: Event) => {\n        if (!this.platformUtil.isBrowser) {\n            return;\n        }\n        let windowWidth;\n        if (this.pinThreshold) {\n            windowWidth = this.getWindowWidth();\n            if (evt && this._widthCache.windowWidth === windowWidth) {\n                return;\n            }\n            this._widthCache.windowWidth = windowWidth;\n            if (!this.pin && windowWidth >= this.pinThreshold) {\n                this.pin = true;\n                this.pinChange.emit(true);\n            } else if (this.pin && windowWidth < this.pinThreshold) {\n                this.pin = false;\n                this.pinChange.emit(false);\n            }\n        }\n    }\n\n    private swipe = (evt: HammerInput) => {\n        // TODO: Could also force input type: http://stackoverflow.com/a/27108052\n        if (!this.enableGestures || evt.pointerType !== 'touch') {\n            return;\n        }\n\n        // HammerJS swipe is horizontal-only by default, don't check deltaY\n        let deltaX;\n        let startPosition;\n        if (this.position === 'right') {\n            // when on the right use inverse of deltaX\n            deltaX = -evt.deltaX;\n            startPosition = this.getWindowWidth() - (evt.center.x + evt.distance);\n        } else {\n            deltaX = evt.deltaX;\n            startPosition = evt.center.x - evt.distance;\n        }\n        // only accept closing swipe (ignoring minEdgeZone) when the drawer is expanded:\n        if ((this.isOpen && deltaX < 0) ||\n            // positive deltaX from the edge:\n            (deltaX > 0 && startPosition < this.maxEdgeZone)) {\n            this.toggle();\n        }\n    }\n\n    private panstart = (evt: HammerInput) => { // TODO: test code\n        if (!this.enableGestures || this.pin || evt.pointerType !== 'touch') {\n            return;\n        }\n        const startPosition = this.position === 'right' ? this.getWindowWidth() - (evt.center.x + evt.distance)\n            : evt.center.x - evt.distance;\n\n        // cache width during animation, flag to allow further handling\n        if (this.isOpen || (startPosition < this.maxEdgeZone)) {\n            this._panning = true;\n            this._panStartWidth = this.getExpectedWidth(!this.isOpen);\n            this._panLimit = this.getExpectedWidth(this.isOpen);\n\n            this.renderer.addClass(this.overlay, 'panning');\n            this.renderer.addClass(this.drawer, 'panning');\n        }\n    }\n\n    private pan = (evt: HammerInput) => {\n        // TODO: input.deltaX = prevDelta.x + (center.x - offset.x);\n        // get actual delta (not total session one) from event?\n        // pan WILL also fire after a full swipe, only resize on flag\n        if (!this._panning) {\n            return;\n        }\n        const right: boolean = this.position === 'right';\n        // when on the right use inverse of deltaX\n        const deltaX = right ? -evt.deltaX : evt.deltaX;\n        let visibleWidth;\n        let newX;\n        let percent;\n\n        visibleWidth = this._panStartWidth + deltaX;\n\n        if (this.isOpen && deltaX < 0) {\n            // when visibleWidth hits limit - stop animating\n            if (visibleWidth <= this._panLimit) {\n                return;\n            }\n\n            if (this.hasAnimateWidth) {\n                percent = (visibleWidth - this._panLimit) / (this._panStartWidth - this._panLimit);\n                newX = visibleWidth;\n            } else {\n                percent = visibleWidth / this._panStartWidth;\n                newX = evt.deltaX;\n            }\n            this.setXSize(newX, percent.toPrecision(2));\n\n        } else if (!this.isOpen && deltaX > 0) {\n            // when visibleWidth hits limit - stop animating\n            if (visibleWidth >= this._panLimit) {\n                return;\n            }\n\n            if (this.hasAnimateWidth) {\n                percent = (visibleWidth - this._panStartWidth) / (this._panLimit - this._panStartWidth);\n                newX = visibleWidth;\n            } else {\n                percent = visibleWidth / this._panLimit;\n                newX = (this._panLimit - visibleWidth) * (right ? 1 : -1);\n            }\n            this.setXSize(newX, percent.toPrecision(2));\n        }\n    }\n\n    private panEnd = (evt: HammerInput) => {\n        if (this._panning) {\n            const deltaX = this.position === 'right' ? -evt.deltaX : evt.deltaX;\n            const visibleWidth: number = this._panStartWidth + deltaX;\n            this.resetPan();\n\n            // check if pan brought the drawer to 50%\n            if (this.isOpen && visibleWidth <= this._panStartWidth / 2) {\n                this.close();\n            } else if (!this.isOpen && visibleWidth >= this._panLimit / 2) {\n                this.open();\n            }\n            this._panStartWidth = null;\n        }\n    }\n\n    private resetPan() {\n        this._panning = false;\n        /* styles fail to apply when set on parent due to extra attributes, prob ng bug */\n        /* styles fail to apply when set on parent due to extra attributes, prob ng bug */\n        this.renderer.removeClass(this.overlay, 'panning');\n        this.renderer.removeClass(this.drawer, 'panning');\n        this.setXSize(0, '');\n    }\n\n    /**\n     * Sets the absolute position or width in case the drawer doesn't change position.\n     * @param x the number pixels to translate on the X axis or the width to set. 0 width will clear the style instead.\n     * @param opacity optional value to apply to the overlay\n     */\n    private setXSize(x: number, opacity?: string) {\n        // Angular polyfills patches window.requestAnimationFrame, but switch to DomAdapter API (TODO)\n        window.requestAnimationFrame(() => {\n            if (this.hasAnimateWidth) {\n                this.renderer.setStyle(this.drawer, 'width', x ? Math.abs(x) + 'px' : '');\n            } else {\n                this.renderer.setStyle(this.drawer, 'transform', x ? 'translate3d(' + x + 'px,0,0)' : '');\n                this.renderer.setStyle(this.drawer, '-webkit-transform', x ? 'translate3d(' + x + 'px,0,0)' : '');\n            }\n            if (opacity !== undefined) {\n                this.renderer.setStyle(this.overlay, 'opacity', opacity);\n            }\n        });\n    }\n\n    private toggleOpenedEvent = (evt?) => {\n        this.elementRef.nativeElement.removeEventListener('transitionend', this.toggleOpenedEvent, false);\n        this.opened.emit();\n    }\n\n    private toggleClosedEvent = (evt?) => {\n        this.elementRef.nativeElement.removeEventListener('transitionend', this.toggleClosedEvent, false);\n        this.closed.emit();\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { IgxNavigationDrawerComponent } from './navigation-drawer.component';\nimport {\n    IgxNavDrawerItemDirective,\n    IgxNavDrawerMiniTemplateDirective,\n    IgxNavDrawerTemplateDirective\n} from './navigation-drawer.directives';\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [\n        IgxNavigationDrawerComponent,\n        IgxNavDrawerItemDirective,\n        IgxNavDrawerMiniTemplateDirective,\n        IgxNavDrawerTemplateDirective\n    ],\n    exports: [\n        IgxNavigationDrawerComponent,\n        IgxNavDrawerItemDirective,\n        IgxNavDrawerMiniTemplateDirective,\n        IgxNavDrawerTemplateDirective\n    ],\n    imports: [CommonModule]\n})\nexport class IgxNavigationDrawerModule {}\n","import { Directive } from '@angular/core';\nimport { IBaseEventArgs } from '../core/utils';\n\n/**\n * Template directive that allows you to set a custom template representing the lower label value of the {@link IgxSliderComponent}\n *\n * ```html\n * <igx-slider>\n *  <ng-template igxSliderThumbFrom let-value let-labels>{{value}}</ng-template>\n * </igx-slider>\n * ```\n *\n * @context {@link IgxSliderComponent.context}\n */\n@Directive({\n    selector: '[igxSliderThumbFrom]'\n})\nexport class IgxThumbFromTemplateDirective {}\n\n/**\n * Template directive that allows you to set a custom template representing the upper label value of the {@link IgxSliderComponent}\n *\n * ```html\n * <igx-slider>\n *  <ng-template igxSliderThumbTo let-value let-labels>{{value}}</ng-template>\n * </igx-slider>\n * ```\n *\n * @context {@link IgxSliderComponent.context}\n */\n@Directive({\n    selector: '[igxSliderThumbTo]'\n})\nexport class IgxThumbToTemplateDirective {}\n\n/**\n * Template directive that allows you to set a custom template, represeting primary/secondary tick labels of the {@link IgxSliderComponent}\n *\n * @context {@link IgxTicksComponent.context}\n */\n@Directive({\n    selector: '[igxSliderTickLabel]'\n})\nexport class IgxTickLabelTemplateDirective {}\n\nexport interface IRangeSliderValue {\n    lower: number;\n    upper: number;\n}\n\nexport interface ISliderValueChangeEventArgs {\n    oldValue: number | IRangeSliderValue;\n    value: number | IRangeSliderValue;\n}\n\nexport enum IgxSliderType {\n    /**\n     * Slider with single thumb.\n     */\n    SLIDER,\n    /**\n     *  Range slider with multiple thumbs, that can mark the range.\n     */\n    RANGE\n}\n\nexport enum SliderHandle {\n    FROM,\n    TO\n}\n\n/**\n * Slider Tick labels Orientation\n */\nexport enum TickLabelsOrientation {\n    Horizontal,\n    TopToBottom,\n    BottomToTop\n}\n\n/**\n * Slider Ticks orientation\n */\nexport enum TicksOrientation {\n    Top,\n    Bottom,\n    Mirror\n}\n","import {\n    Component,\n    Input,\n    HostListener,\n    ElementRef,\n    HostBinding,\n    Output,\n    EventEmitter,\n    OnInit,\n    OnDestroy,\n    TemplateRef\n} from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { SliderHandle } from '../slider.common';\nimport { Subject } from 'rxjs';\nimport { IgxDirectionality } from '../../services/direction/directionality';\n\n/**\n * @hidden\n */\n@Component({\n    selector: 'igx-thumb',\n    templateUrl: 'thumb-slider.component.html',\n})\nexport class IgxSliderThumbComponent implements OnInit, OnDestroy {\n\n    private _isActive = false;\n    private _isPressed = false;\n    private _destroy$ = new Subject<boolean>();\n\n    private get thumbPositionX() {\n        const thumbBounderies = this.nativeElement.getBoundingClientRect();\n        const thumbCenter = (thumbBounderies.right - thumbBounderies.left) / 2;\n        return thumbBounderies.left + thumbCenter;\n    }\n\n    public isActive = false;\n\n    @Input()\n    public value: number;\n\n    @Input()\n    public continuous: boolean;\n\n    @Input()\n    public thumbLabelVisibilityDuration;\n\n    @Input()\n    public disabled: boolean;\n\n    @Input()\n    public onPan: Subject<number>;\n\n    @Input()\n    public stepDistance: number;\n\n    @Input()\n    public step: number;\n\n    @Input()\n    public templateRef: TemplateRef<any>;\n\n    @Input()\n    public context: any;\n\n    @Input()\n    public type: SliderHandle;\n\n    @Input()\n    public deactiveState: boolean;\n\n    @Output()\n    public onThumbValueChange = new EventEmitter<number>();\n\n    @Output()\n    public onChange = new EventEmitter<any>();\n\n    @Output()\n    public onHoverChange = new EventEmitter<boolean>();\n\n    @HostBinding('attr.tabindex')\n    public tabindex = 0;\n\n    @HostBinding('attr.z-index')\n    public zIndex = 0;\n\n    @HostBinding('class.igx-slider__thumb-from')\n    public get thumbFromClass() {\n        return this.type === SliderHandle.FROM;\n    }\n\n    @HostBinding('class.igx-slider__thumb-to')\n    public get thumbToClass() {\n        return this.type === SliderHandle.TO;\n    }\n\n    @HostBinding('class.igx-slider__thumb-from--active')\n    public get thumbFromActiveClass() {\n        return this.type === SliderHandle.FROM && this._isActive;\n    }\n\n    @HostBinding('class.igx-slider__thumb-to--active')\n    public get thumbToActiveClass() {\n        return this.type === SliderHandle.TO && this._isActive;\n    }\n\n    @HostBinding('class.igx-slider__thumb--pressed')\n    public get thumbPressedClass() {\n        return this.isActive && this._isPressed;\n    }\n\n    public get nativeElement() {\n        return this._elementRef.nativeElement;\n    }\n\n    public get destroy(): Subject<boolean> {\n        return this._destroy$;\n    }\n\n    constructor(private _elementRef: ElementRef, private _dir: IgxDirectionality) { }\n\n    /**\n     * @hidden\n     */\n    public ngOnInit() {\n        this.onPan\n            .pipe(takeUntil(this._destroy$))\n            .subscribe(mouseX =>\n                this.updateThumbValue(mouseX)\n            );\n    }\n\n    /**\n     * @hidden\n     */\n    public ngOnDestroy() {\n        this._destroy$.next(true);\n        this._destroy$.complete();\n    }\n\n    @HostListener('pointerenter')\n    public onPinterEnter() {\n        this.onHoverChange.emit(true);\n    }\n\n    @HostListener('pointerleave')\n    public onPointerLeave() {\n        this.onHoverChange.emit(false);\n    }\n\n    @HostListener('keydown', ['$event'])\n    public onKeyDown(event: KeyboardEvent) {\n        if (this.disabled) {\n            return;\n        }\n\n        let increment = 0;\n        if (event.key.endsWith('Left')) {\n            increment = this.step * - 1;\n        } else if (event.key.endsWith('Right')) {\n            increment = this.step;\n        } else {\n            return;\n        }\n\n        this.onChange.emit();\n        this.onThumbValueChange.emit(increment);\n    }\n\n    @HostListener('blur')\n    public onBlur() {\n        this.isActive = false;\n        this.zIndex = 0;\n    }\n\n    @HostListener('focus')\n    public onFocusListener() {\n        this.isActive = true;\n        this.zIndex = 1;\n    }\n\n    /**\n     * Show thumb label and ripple.\n     */\n    public showThumbIndicators() {\n        this.toggleThumbIndicators(true);\n    }\n\n    /**\n     * Hide thumb label and ripple.\n     */\n    public hideThumbIndicators() {\n        this.toggleThumbIndicators(false);\n    }\n\n    private updateThumbValue(mouseX: number) {\n        const updateValue = this.calculateTrackUpdate(mouseX);\n        if (this.isActive && updateValue !== 0) {\n            this.onThumbValueChange.emit(updateValue);\n        }\n    }\n\n    private calculateTrackUpdate(mouseX: number): number {\n        const scaleX = this._dir.rtl ? this.thumbPositionX - mouseX : mouseX - this.thumbPositionX;\n        const stepDistanceCenter = this.stepDistance / 2;\n\n        // If the thumb scale range (slider update) is less thàn a half step,\n        // the position stays the same.\n        const scaleXPositive = Math.abs(scaleX);\n        if (scaleXPositive < stepDistanceCenter) {\n            return 0;\n        }\n\n        return this.stepToProceed(scaleX, this.stepDistance);\n    }\n\n    private stepToProceed(scaleX, stepDist) {\n        return Math.round(scaleX / stepDist) * this.step;\n    }\n\n    private toggleThumbIndicators(visible: boolean) {\n        this._isPressed = visible;\n\n        if (this.continuous || this.deactiveState) {\n            this._isActive = false;\n        } else {\n            this._isActive = visible;\n        }\n\n    }\n}\n","import { Component, Input, TemplateRef, HostBinding, ElementRef } from '@angular/core';\nimport { SliderHandle } from '../slider.common';\n\n@Component({\n    selector: 'igx-thumb-label',\n    templateUrl: 'thumb-label.component.html'\n})\nexport class IgxThumbLabelComponent {\n    private _active: boolean;\n\n    @Input()\n    public value: number;\n\n    @Input()\n    public templateRef: TemplateRef<any>;\n\n    @Input()\n    public context: any;\n\n    @Input()\n    public type: SliderHandle;\n\n    @Input()\n    public continuous: boolean;\n\n    @Input()\n    public deactiveState: boolean;\n\n    @HostBinding('class.igx-slider__label-from')\n    public get thumbFromClass() {\n        return this.type === SliderHandle.FROM;\n    }\n\n    @HostBinding('class.igx-slider__label-to')\n    public get thumbToClass() {\n        return this.type === SliderHandle.TO;\n    }\n\n    @HostBinding('class.igx-slider__label-from--active')\n    public get thumbFromActiveClass() {\n        return this.type === SliderHandle.FROM && this.active;\n    }\n\n    @HostBinding('class.igx-slider__label-to--active')\n    public get thumbToActiveClass() {\n        return this.type === SliderHandle.TO && this.active;\n    }\n\n    constructor(private _elementRef: ElementRef) { }\n\n    public get nativeElement() {\n        return this._elementRef.nativeElement;\n    }\n\n    public get active() {\n        return this._active;\n    }\n\n    public set active(val: boolean) {\n        if (this.continuous || this.deactiveState) {\n            this._active = false;\n        } else {\n            this._active = val;\n        }\n    }\n}\n","import { Component, Input, TemplateRef, HostBinding } from '@angular/core';\nimport { TicksOrientation, TickLabelsOrientation } from '../slider.common';\n\n/**\n * @hidden\n */\n@Component({\n    selector: 'igx-ticks',\n    templateUrl: 'ticks.component.html',\n})\nexport class IgxTicksComponent {\n    @Input()\n    public primaryTicks: number;\n\n    @Input()\n    public secondaryTicks: number;\n\n    @Input()\n    public primaryTickLabels: boolean;\n\n    @Input()\n    public secondaryTickLabels: boolean;\n\n    @Input()\n    public ticksOrientation: TicksOrientation;\n\n    @Input()\n    public tickLabelsOrientation: TickLabelsOrientation;\n\n    @Input()\n    public maxValue: number;\n\n    @Input()\n    public minValue: number;\n\n    @Input()\n    public labelsViewEnabled: boolean;\n\n    @Input()\n    public labels: Array<number | string | boolean | null | undefined>;\n\n    @Input()\n    public tickLabelTemplateRef: TemplateRef<any>;\n\n    /**\n     * @hidden\n     */\n    @HostBinding('class.igx-slider__ticks')\n    public ticksClass = true;\n\n    /**\n     * @hidden\n     */\n    @HostBinding('class.igx-slider__ticks--top')\n    public get ticksTopClass() {\n        return this.ticksOrientation === TicksOrientation.Top;\n    }\n\n    /**\n     * @hidden\n     */\n    @HostBinding('class.igx-slider__ticks--tall')\n    public get hasPrimaryClass() {\n        return this.primaryTicks > 0;\n    }\n\n    /**\n     * @hidden\n     */\n    @HostBinding('class.igx-slider__tick-labels--top-bottom')\n    public get labelsTopToBottomClass() {\n        return this.tickLabelsOrientation === TickLabelsOrientation.TopToBottom;\n    }\n\n    /**\n     * @hidden\n     */\n    @HostBinding('class.igx-slider__tick-labels--bottom-top')\n    public get labelsBottomToTopClass() {\n        return this.tickLabelsOrientation === TickLabelsOrientation.BottomToTop;\n    }\n\n    /**\n     * Returns the template context corresponding to\n     * {@link IgxTickLabelTemplateDirective}\n     *\n     * ```typescript\n     * return {\n     *  $implicit //returns the value per each tick label.\n     *  isPrimery //returns if the tick is primary.\n     *  labels // returns the {@link labels} collection.\n     *  index // returns the index per each tick of the whole sequence.\n     * }\n     * ```\n     *\n     * @param idx the index per each tick label.\n     */\n    public context(idx: number): any {\n        return {\n            $implicit: this.tickLabel(idx),\n            isPrimary: this.isPrimary(idx),\n            labels: this.labels,\n            index: idx\n        };\n    }\n\n    /**\n     * @hidden\n     */\n    public get ticksLength() {\n        return this.primaryTicks > 0 ?\n                ((this.primaryTicks - 1) * this.secondaryTicks) + this.primaryTicks :\n                this.secondaryTicks > 0 ? this.secondaryTicks : 0;\n    }\n\n    public hiddenTickLabels(idx: number) {\n        return this.isPrimary(idx) ? this.primaryTickLabels : this.secondaryTickLabels;\n    }\n\n    /**\n     * @hidden\n     */\n    public isPrimary(idx: number) {\n        return this.primaryTicks <= 0 ? false :\n            idx % (this.secondaryTicks + 1) === 0;\n    }\n\n    /**\n     * @hidden\n     */\n    public tickLabel(idx: number) {\n        if (this.labelsViewEnabled) {\n            return this.labels[idx];\n        }\n\n        const labelStep = (Math.max(this.minValue, this.maxValue) - Math.min(this.minValue, this.maxValue)) / (this.ticksLength - 1);\n        const labelVal = labelStep * idx;\n\n        return (this.minValue + labelVal).toFixed(2);\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'spreadTickLabels'\n})\nexport class IgxTickLabelsPipe implements PipeTransform {\n\n\n    public transform(labels: Array<string | number | boolean | null | undefined>, secondaryTicks: number) {\n        if (!labels) {\n            return;\n        }\n\n        const result = [];\n        labels.forEach(item => {\n            result.push(item);\n            for (let i = 0; i < secondaryTicks; i++) {\n                result.push('');\n            }\n        });\n\n        return result;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n    AfterViewInit, Component, ElementRef, EventEmitter,\n    HostBinding, Input, NgModule, OnInit, Output, Renderer2,\n    ViewChild,\n    TemplateRef,\n    ContentChild,\n    OnDestroy,\n    HostListener,\n    ViewChildren,\n    QueryList,\n    ChangeDetectorRef,\n    OnChanges,\n    NgZone,\n    AfterContentInit\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { EditorProvider } from '../core/edit-provider';\nimport { IgxSliderThumbComponent } from './thumb/thumb-slider.component';\nimport { Subject, merge, Observable, timer, pipe } from 'rxjs';\nimport { takeUntil, throttleTime } from 'rxjs/operators';\nimport { SliderHandle,\n    IgxThumbFromTemplateDirective,\n    IgxThumbToTemplateDirective,\n    IRangeSliderValue,\n    IgxSliderType,\n    ISliderValueChangeEventArgs,\n    TicksOrientation,\n    TickLabelsOrientation,\n    IgxTickLabelTemplateDirective\n} from './slider.common';\nimport { IgxThumbLabelComponent } from './label/thumb-label.component';\nimport { IgxTicksComponent } from './ticks/ticks.component';\nimport { IgxTickLabelsPipe } from './ticks/tick.pipe';\nimport { resizeObservable } from '../core/utils';\nimport { IgxDirectionality } from '../services/direction/directionality';\n\nconst noop = () => {\n};\n\nlet NEXT_ID = 0;\n\n/**\n * **Ignite UI for Angular Slider** -\n * [Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/slider.html)\n *\n * The Ignite UI Slider allows selection in a given range by moving the thumb along the track. The track\n * can be defined as continuous or stepped, and you can choose between single and range slider types.\n *\n * Example:\n * ```html\n * <igx-slider id=\"slider\"\n *            [minValue]=\"0\" [maxValue]=\"100\"\n *            [continuous]=true [(ngModel)]=\"volume\">\n * </igx-slider>\n * ```\n */\n@Component({\n    providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: IgxSliderComponent, multi: true }],\n    selector: 'igx-slider',\n    templateUrl: 'slider.component.html'\n})\nexport class IgxSliderComponent implements\n    ControlValueAccessor,\n    EditorProvider,\n    OnInit,\n    AfterViewInit,\n    AfterContentInit,\n    OnChanges,\n    OnDestroy {\n\n    // Limit handle travel zone\n    private _pMin = 0;\n    private _pMax = 1;\n\n    // From/upperValue in percent values\n    private _hasViewInit = false;\n    private _minValue = 0;\n    private _maxValue = 100;\n    private _lowerBound?: number;\n    private _upperBound?: number;\n    private _lowerValue?: number;\n    private _upperValue?: number;\n    private _continuous = false;\n    private _disabled = false;\n    private _step = 1;\n    private _value: number | IRangeSliderValue = 0;\n\n    // ticks\n    private _primaryTicks = 0;\n    private _secondaryTicks = 0;\n\n    private _labels = new Array<number|string|boolean|null|undefined>();\n    private _type = IgxSliderType.SLIDER;\n\n    private _destroyer$ = new Subject<boolean>();\n    private _indicatorsDestroyer$ = new Subject<boolean>();\n    private _indicatorsTimer: Observable<any>;\n\n    private _onChangeCallback: (_: any) => void = noop;\n    private _onTouchedCallback: () => void = noop;\n\n    /**\n     * @hidden\n     */\n    @ViewChild('ticks', { static: true })\n    private ticks: ElementRef;\n\n    /**\n     * @hidden\n     */\n    @ViewChildren(IgxSliderThumbComponent)\n    private thumbs: QueryList<IgxSliderThumbComponent> = new QueryList<IgxSliderThumbComponent>();\n\n    /**\n     * @hidden\n     */\n    @ViewChildren(IgxThumbLabelComponent)\n    private labelRefs: QueryList<IgxThumbLabelComponent> = new QueryList<IgxThumbLabelComponent>();\n\n    private get thumbFrom(): IgxSliderThumbComponent {\n        return this.thumbs.find(thumb => thumb.type === SliderHandle.FROM);\n    }\n\n    private get thumbTo(): IgxSliderThumbComponent {\n        return this.thumbs.find(thumb => thumb.type === SliderHandle.TO);\n    }\n\n    private get labelFrom(): IgxThumbLabelComponent {\n        return this.labelRefs.find(label => label.type === SliderHandle.FROM);\n    }\n\n    private get labelTo(): IgxThumbLabelComponent {\n        return this.labelRefs.find(label => label.type === SliderHandle.TO);\n    }\n\n    /**\n     * @hidden\n     */\n    @ViewChild('track', { static: true })\n    public trackRef: ElementRef;\n\n    /**\n     * @hidden\n     */\n    public stepDistance = this._step;\n\n    /**\n     * @hidden\n     */\n    public onPan: Subject<number> = new Subject<number>();\n\n    /**\n     * @hidden\n     */\n    @ContentChild(IgxThumbFromTemplateDirective, { read: TemplateRef })\n    public thumbFromTemplateRef: TemplateRef<any>;\n\n    /**\n     * @hidden\n     */\n    @ContentChild(IgxThumbToTemplateDirective, { read: TemplateRef })\n    public thumbToTemplateRef: TemplateRef<any>;\n\n    /**\n     * @hidden\n     */\n    @ContentChild(IgxTickLabelTemplateDirective, { read: TemplateRef, static: false })\n    public tickLabelTemplateRef: TemplateRef<any>;\n\n    /**\n     * @hidden\n     */\n    @HostBinding(`attr.role`)\n    public role = 'slider';\n\n    /**\n     * @hidden\n     */\n    @HostBinding(`attr.aria-valuemin`)\n    public get valuemin() {\n        return this.minValue;\n    }\n\n    /**\n     * @hidden\n     */\n    @HostBinding(`attr.aria-valuemax`)\n    public get valuemax() {\n        return this.maxValue;\n    }\n\n    /**\n     * @hidden\n     */\n    @HostBinding(`attr.aria-readonly`)\n    public get readonly() {\n        return this.disabled;\n    }\n\n    /**\n     * @hidden\n     */\n    @HostBinding('class.igx-slider')\n    public slierClass = true;\n\n    /**\n     * @hidden\n     */\n    @HostBinding('class.igx-slider--disabled')\n    public get disabledClass() {\n        return this.disabled;\n    }\n\n    /**\n     * An @Input property that sets the value of the `id` attribute.\n     * If not provided it will be automatically generated.\n     * ```html\n     * <igx-slider [id]=\"'igx-slider-32'\" [(ngModel)]=\"task.percentCompleted\" [step]=\"5\" [lowerBound]=\"20\">\n     * ```\n     */\n    @HostBinding('attr.id')\n    @Input()\n    public id = `igx-slider-${NEXT_ID++}`;\n\n    /**\n     * An @Input property that gets the type of the `IgxSliderComponent`.\n     * The slider can be IgxSliderType.SLIDER(default) or IgxSliderType.RANGE.\n     * ```typescript\n     * @ViewChild(\"slider2\")\n     * public slider: IgxSliderComponent;\n     * ngAfterViewInit(){\n     *     let type = this.slider.type;\n     * }\n     */\n    @Input()\n    public get type() {\n        return this._type;\n    }\n\n    /**\n     * An @Input property that sets the type of the `IgxSliderComponent`.\n     * The slider can be IgxSliderType.SLIDER(default) or IgxSliderType.RANGE.\n     * ```typescript\n     * sliderType: IgxSliderType = IgxSliderType.RANGE;\n     * ```\n     * ```html\n     * <igx-slider #slider2 [type]=\"sliderType\" [(ngModel)]=\"rangeValue\" [minValue]=\"0\" [maxValue]=\"100\">\n     * ```\n     */\n    public set type(type: IgxSliderType) {\n        this._type = type;\n\n        if (type === IgxSliderType.SLIDER) {\n            this.lowerValue = 0;\n        }\n\n        if (this.labelsViewEnabled && this.upperValue > this.maxValue) {\n            this.upperValue = this.labels.length - 1;\n        }\n\n        if (this._hasViewInit) {\n            this.updateTrack();\n        }\n    }\n\n    /**\n     * An @Input property that sets the duration visibility of thumbs labels. The default value is 750 milliseconds.\n     * ```html\n     * <igx-slider #slider [thumbLabelVisibilityDuration]=\"3000\" [(ngModel)]=\"task.percentCompleted\" [step]=\"5\">\n     * ```\n     */\n    @Input()\n    public thumbLabelVisibilityDuration = 750;\n\n\n    /**\n     * Enables `labelView`, by accepting a collection of primitive values with more than one element.\n     * Each element will be equally spread over the slider and it will serve as a thumb label.\n     * Once the property is set, it will precendence over {@link maxValue}, {@link minValue}, {@link step}.\n     * This means that the manipulation for those properties won't be allowed.\n     */\n    @Input()\n    public get labels() {\n        return this._labels;\n    }\n\n    public set labels(labels: Array<number|string|boolean|null|undefined>) {\n        this._labels = labels;\n\n        this._pMax = this.valueToFraction(this.upperBound, 0, 1);\n        this._pMin = this.valueToFraction(this.lowerBound, 0, 1);\n\n        this.positionHandlersAndUpdateTrack();\n\n        if (this._hasViewInit) {\n            this.stepDistance = this.calculateStepDistance();\n            this.setTickInterval();\n        }\n    }\n\n    /**\n     * Returns the template context corresponding\n     * to {@link IgxThumbFromTemplateDirective} and {@link IgxThumbToTemplateDirective} templates.\n     *\n     * ```typescript\n     * return {\n     *  $implicit // returns the value of the label,\n     *  labels // returns the labels collection the user has passed.\n     * }\n     * ```\n     */\n    public get context(): any {\n        return {\n            $implicit: this.value,\n            labels: this.labels\n        };\n    }\n\n    /**\n     * An @Input property that sets the incremental/decremental step of the value when dragging the thumb.\n     * The default step is 1, and step should not be less or equal than 0.\n     * ```html\n     * <igx-slider #slider [(ngModel)]=\"task.percentCompleted\" [step]=\"5\">\n     * ```\n     */\n    @Input()\n    public set step(step: number) {\n        this._step = step;\n\n        if (this._hasViewInit) {\n            this.stepDistance = this.calculateStepDistance();\n            this.normalizeByStep(this.value);\n            this.setTickInterval();\n        }\n    }\n\n    /**\n     * Returns the incremental/decremental dragging step of the {@link IgxSliderComponent}.\n     * ```typescript\n     * @ViewChild(\"slider2\")\n     * public slider: IgxSliderComponent;\n     * ngAfterViewInit(){\n     *     let step = this.slider.step;\n     * }\n     * ```\n     */\n    public get step() {\n        return this.labelsViewEnabled ? 1 : this._step;\n    }\n\n    /**\n     * Returns if the {@link IgxSliderComponent} is disabled.\n     * ```typescript\n     * @ViewChild(\"slider2\")\n     * public slider: IgxSliderComponent;\n     * ngAfterViewInit(){\n     *     let isDisabled = this.slider.disabled;\n     * }\n     * ```\n     */\n    @Input()\n    public get disabled(): boolean {\n        return this._disabled;\n    }\n\n    /**\n     * An @Input property that disables or enables UI interaction.\n     * ```html\n     * <igx-slider #slider [disabled]=\"'true'\" [(ngModel)]=\"task.percentCompleted\" [step]=\"5\" [lowerBound]=\"20\">\n     * ```\n     */\n    public set disabled(disable: boolean) {\n        this._disabled = disable;\n\n        if (this._hasViewInit) {\n            this.changeThumbFocusableState(disable);\n        }\n    }\n\n    /**\n     * Returns if the {@link IgxSliderComponent} is set as continuous.\n     * ```typescript\n     * @ViewChild(\"slider2\")\n     * public slider: IgxSliderComponent;\n     * ngAfterViewInit(){\n     *     let continuous = this.slider.continuous;\n     * }\n     * ```\n     */\n    @Input()\n    public get continuous(): boolean {\n        return this._continuous;\n    }\n\n    /**\n     * An @Input property that marks the {@link IgxSliderComponent} as continuous.\n     * By default is considered that the {@link IgxSliderComponent} is discrete.\n     * Discrete {@link IgxSliderComponent} does not have ticks and does not show bubble labels for values.\n     * ```html\n     * <igx-slider #slider [continuous]=\"'true'\" [(ngModel)]=\"task.percentCompleted\" [step]=\"5\" [lowerBound]=\"20\">\n     * ```\n     */\n    public set continuous(continuous: boolean) {\n        this._continuous = continuous;\n        if (this._hasViewInit) {\n            this.setTickInterval();\n        }\n    }\n\n    /**\n     * Returns the minimal value of the `IgxSliderComponent`.\n     * ```typescript\n     *  @ViewChild(\"slider2\")\n     * public slider: IgxSliderComponent;\n     * ngAfterViewInit(){\n     *     let sliderMin = this.slider.minValue;\n     * }\n     * ```\n     */\n    public get minValue(): number {\n        if (this.labelsViewEnabled) {\n            return 0;\n        }\n\n        return this._minValue;\n    }\n\n    /**\n     * Sets the minimal value for the `IgxSliderComponent`.\n     * The default minimal value is 0.\n     * ```html\n     * <igx-slider [type]=\"sliderType\" [minValue]=\"56\" [maxValue]=\"100\">\n     * ```\n     */\n    @Input()\n    public set minValue(value: number) {\n        if (value >= this.maxValue) {\n            return;\n        } else {\n            this._minValue = value;\n        }\n\n        if (value > this.upperBound) {\n            this.updateUpperBoundAndMaxTravelZone();\n            this.lowerBound = value;\n        }\n\n        // Refresh min travel zone limit.\n        this._pMin = 0;\n        // Recalculate step distance.\n        this.positionHandlersAndUpdateTrack();\n        if (this._hasViewInit) {\n            this.stepDistance = this.calculateStepDistance();\n            this.setTickInterval();\n        }\n    }\n\n    /**\n     * Returns the maximum value for the {@link IgxSliderComponent}.\n     * ```typescript\n     * @ViewChild(\"slider\")\n     * public slider: IgxSliderComponent;\n     * ngAfterViewInit(){\n     *     let sliderMax = this.slider.maxValue;\n     * }\n     *  ```\n     */\n    public get maxValue(): number {\n        return this.labelsViewEnabled ?\n            this.labels.length - 1 :\n            this._maxValue;\n    }\n\n    /**\n     * Sets the maximal value for the `IgxSliderComponent`.\n     * The default maximum value is 100.\n     * ```html\n     * <igx-slider [type]=\"sliderType\" [minValue]=\"56\" [maxValue]=\"256\">\n     * ```\n     */\n    @Input()\n    public set maxValue(value: number) {\n        if (value <= this._minValue) {\n            return;\n        } else {\n            this._maxValue = value;\n        }\n\n        if (value < this.lowerBound) {\n            this.updateLowerBoundAndMinTravelZone();\n            this.upperBound = value;\n        }\n\n        // refresh max travel zone limits.\n        this._pMax = 1;\n        // recalculate step distance.\n        this.positionHandlersAndUpdateTrack();\n        if (this._hasViewInit) {\n            this.stepDistance = this.calculateStepDistance();\n            this.setTickInterval();\n        }\n    }\n\n    /**\n     * Returns the lower boundary of the `IgxSliderComponent`.\n     * ```typescript\n     * @ViewChild(\"slider\")\n     * public slider: IgxSliderComponent;\n     * ngAfterViewInit(){\n     *     let sliderLowBound = this.slider.lowerBound;\n     * }\n     * ```\n     */\n    public get lowerBound(): number {\n        if (!Number.isNaN(this._lowerBound) && this._lowerBound !== undefined) {\n            return this.valueInRange(this._lowerBound, this.minValue, this.maxValue);\n        }\n\n        return this.minValue;\n    }\n\n    /**\n     * Sets the lower boundary of the `IgxSliderComponent`.\n     * If not set is the same as min value.\n     * ```html\n     * <igx-slider [step]=\"5\" [lowerBound]=\"20\">\n     * ```\n     */\n    @Input()\n    public set lowerBound(value: number) {\n        if (value >= this.upperBound || (this.labelsViewEnabled && value < 0)) {\n            return;\n        }\n\n        this._lowerBound = this.valueInRange(value, this.minValue, this.maxValue);\n\n        // Refresh min travel zone.\n        this._pMin = this.valueToFraction(this._lowerBound, 0, 1);\n        this.positionHandlersAndUpdateTrack();\n    }\n\n    /**\n     * Returns the upper boundary of the `IgxSliderComponent`.\n     * ```typescript\n     * @ViewChild(\"slider\")\n     * public slider: IgxSliderComponent;\n     * ngAfterViewInit(){\n     *    let sliderUpBound = this.slider.upperBound;\n     * }\n     * ```\n     */\n    public get upperBound(): number {\n        if (!Number.isNaN(this._upperBound) && this._upperBound !== undefined) {\n            return this.valueInRange(this._upperBound, this.minValue, this.maxValue);\n        }\n\n        return this.maxValue;\n    }\n\n    /**\n     * Sets the upper boundary of the `IgxSliderComponent`.\n     * If not set is the same as max value.\n     * ```html\n     * <igx-slider [step]=\"5\" [upperBound]=\"20\">\n     * ```\n     */\n    @Input()\n    public set upperBound(value: number) {\n        if (value <= this.lowerBound || (this.labelsViewEnabled && value > this.labels.length - 1)) {\n            return;\n        }\n\n        this._upperBound = this.valueInRange(value, this.minValue, this.maxValue);\n        // Refresh time travel zone.\n        this._pMax = this.valueToFraction(this._upperBound, 0, 1);\n        this.positionHandlersAndUpdateTrack();\n    }\n\n    /**\n     * Returns the slider value. If the slider is of type {@link IgxSliderType.SLIDER} the returned value is number.\n     * If the slider type is {@link IgxSliderType.RANGE}.\n     * The returned value represents an object of {@link lowerValue} and {@link upperValue}.\n     * ```typescript\n     * @ViewChild(\"slider2\")\n     * public slider: IgxSliderComponent;\n     * public sliderValue(event){\n     *     let sliderVal = this.slider.value;\n     * }\n     * ```\n     */\n    public get value(): number | IRangeSliderValue {\n        if (this.isRange) {\n            return {\n                lower: this.valueInRange(this.lowerValue, this.lowerBound, this.upperBound),\n                upper: this.valueInRange(this.upperValue, this.lowerBound, this.upperBound)\n            };\n        } else {\n            return this.valueInRange(this.upperValue, this.lowerBound, this.upperBound);\n        }\n    }\n\n    /**\n     * Sets the slider value.\n     * If the slider is of type {@link IgxSliderType.SLIDER}.\n     * The argument is number. By default the {@link value} gets the {@link lowerBound}.\n     * If the slider type is {@link IgxSliderType.RANGE} the argument\n     * represents an object of {@link lowerValue} and {@link upperValue} properties.\n     * By default the object is associated with the {@link lowerBound} and {@link upperBound} property values.\n     * ```typescript\n     * rangeValue = {\n     *   lower: 30,\n     *   upper: 60\n     * };\n     * ```\n     * ```html\n     * <igx-slider [type]=\"sliderType\" [(ngModel)]=\"rangeValue\" [minValue]=\"56\" [maxValue]=\"256\">\n     * ```\n     */\n    @Input()\n    public set value(value: number | IRangeSliderValue) {\n        if (this._hasViewInit) {\n            this.setValue(value);\n            this.positionHandlersAndUpdateTrack();\n        } else {\n            this._value = value;\n        }\n\n        this._onChangeCallback(value);\n    }\n\n    /**\n     * Returns the number of the presented primary ticks.\n     * ```typescript\n     * const primaryTicks = this.slider.primaryTicks;\n     * ```\n     */\n    @Input()\n    public get primaryTicks() {\n        if (this.labelsViewEnabled) {\n            return this._primaryTicks = this.labels.length;\n        }\n        return this._primaryTicks;\n    }\n\n    /**\n     * Sets the number of primary ticks. If {@link @labels} is enabled, this property won't function.\n     * Insted enable ticks by {@link showTicks} property.\n     * ```typescript\n     * this.slider.primaryTicks = 5;\n     * ```\n     */\n    public set primaryTicks(val: number) {\n        if (val <= 1) {\n            return;\n        }\n\n        this._primaryTicks = val;\n    }\n\n    /**\n     * Returns the number of the presented secondary ticks.\n     * ```typescript\n     * const secondaryTicks = this.slider.secondaryTicks;\n     * ```\n     */\n    @Input()\n    public get secondaryTicks() {\n        return this._secondaryTicks;\n    }\n\n    /**\n     * Sets the number of secondary ticks. The property functions even when {@link labels} is enabled,\n     * but all secondary ticks won't present any tick labels.\n     * ```typescript\n     * this.slider.secondaryTicks = 5;\n     * ```\n     */\n    public set secondaryTicks(val: number) {\n        if (val < 1 ) {\n            return;\n        }\n\n        this._secondaryTicks = val;\n    }\n\n    /**\n     * Show/hide slider ticks\n     * ```html\n     * <igx-slier [showTicks]=\"true\" [primaryTicks]=\"5\"></igx-slier>\n     * ```\n     */\n    @Input()\n    public showTicks = false;\n\n    /**\n     * show/hide primary tick labels\n     * ```html\n     * <igx-slider [primaryTicks]=\"5\" [primaryTickLabels]=\"false\"></igx-slider>\n     * ```\n     */\n    @Input()\n    public primaryTickLabels = true;\n\n    /**\n     * show/hide secondary tick labels\n     * ```html\n     * <igx-slider [secondaryTicks]=\"5\" [secondaryTickLabels]=\"false\"></igx-slider>\n     * ```\n     */\n    @Input()\n    public secondaryTickLabels = true;\n\n    /**\n     * Changes ticks orientation:\n     * bottom - The default orienation, below the slider track.\n     * top - Above the slider track\n     * mirror - combines top and bottom orientation.\n     * ```html\n     * <igx-slider [primaryTicks]=\"5\" [ticksOrientation]=\"ticksOrientation\"></igx-slider>\n     * ```\n     */\n    @Input()\n    public ticksOrientation: TicksOrientation = TicksOrientation.Bottom;\n\n    /**\n     * Changes tick labels rotation:\n     * horizontal - The default rotation\n     * toptobottom - Rotates tick labels vertically to 90deg\n     * bottomtotop - Rotate tick labels vertically to -90deg\n     * ```html\n     * <igx-slider [primaryTicks]=\"5\" [secondaryTicks]=\"3\" [tickLabelsOrientation]=\"tickLabelsOrientaiton\"></igx-slider>\n     * ```\n     */\n    @Input()\n    public tickLabelsOrientation = TickLabelsOrientation.Horizontal;\n\n    /**\n     * @hidden\n     */\n    public get deactivateThumbLabel() {\n        return ((this.primaryTicks && this.primaryTickLabels) || (this.secondaryTicks && this.secondaryTickLabels)) &&\n            (this.ticksOrientation === TicksOrientation.Top || this.ticksOrientation === TicksOrientation.Mirror);\n    }\n\n    /**\n     * This event is emitted every time the value is changed.\n     * ```typescript\n     * public change(event){\n     *    alert(\"The value has been changed!\");\n     * }\n     * ```\n     * ```html\n     * <igx-slider (onValueChange)=\"change($event)\" #slider [(ngModel)]=\"task.percentCompleted\" [step]=\"5\">\n     * ```\n     */\n    @Output()\n    public onValueChange = new EventEmitter<ISliderValueChangeEventArgs>();\n\n    /**\n     * This event is emitted at the end of every slide interaction.\n     * ```typescript\n     * public change(event){\n     *    alert(\"The value has been changed!\");\n     * }\n     * ```\n     * ```html\n     * <igx-slider (onValueChanged)=\"change($event)\" #slider [(ngModel)]=\"task.percentCompleted\" [step]=\"5\">\n     * ```\n     */\n    @Output()\n    public onValueChanged = new EventEmitter<number | IRangeSliderValue>();\n\n\n    constructor(\n        private renderer: Renderer2,\n        private _el: ElementRef,\n        private _cdr: ChangeDetectorRef,\n        private _ngZone: NgZone,\n        private _dir: IgxDirectionality) { }\n\n    /**\n     * @hidden\n     */\n    @HostListener('pointerdown', ['$event'])\n    public onPointerDown($event: PointerEvent) {\n        this.findClosestThumb($event);\n\n        if (!this.thumbTo.isActive && this.thumbFrom === undefined) {\n            return;\n        }\n\n        const activeThumb = this.thumbTo.isActive ? this.thumbTo : this.thumbFrom;\n        activeThumb.nativeElement.setPointerCapture($event.pointerId);\n        this.showSliderIndicators();\n\n        $event.preventDefault();\n    }\n\n\n    /**\n     * @hidden\n     */\n    @HostListener('pointerup', ['$event'])\n    public onPointerUp($event: PointerEvent) {\n        if (!this.thumbTo.isActive && this.thumbFrom === undefined) {\n            return;\n        }\n\n        const activeThumb = this.thumbTo.isActive ? this.thumbTo : this.thumbTo;\n        activeThumb.nativeElement.releasePointerCapture($event.pointerId);\n\n        this.hideSliderIndicators();\n        this.onValueChanged.emit(this.value);\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('focus')\n    public onFocus() {\n        this.toggleSliderIndicators();\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('pan', ['$event'])\n    public onPanListener($event) {\n        this.update($event.srcEvent.clientX);\n    }\n\n    /**\n     * Returns whether the `IgxSliderComponent` type is RANGE.\n     * ```typescript\n     *  @ViewChild(\"slider\")\n     * public slider: IgxSliderComponent;\n     * ngAfterViewInit(){\n     *     let sliderRange = this.slider.isRange;\n     * }\n     * ```\n     */\n    public get isRange(): boolean {\n        return this.type === IgxSliderType.RANGE;\n    }\n\n    /**\n     * Returns the lower value of the `IgxSliderComponent`.\n     * ```typescript\n     * @ViewChild(\"slider\")\n     * public slider: IgxSliderComponent;\n     * public lowValue(event){\n     *    let sliderLowValue = this.slider.lowerValue;\n     * }\n     * ```\n     */\n    public get lowerValue(): number {\n        if (!Number.isNaN(this._lowerValue) && this._lowerValue !== undefined && this._lowerValue >= this.lowerBound) {\n            return this._lowerValue;\n        }\n\n        return this.lowerBound;\n    }\n\n    /**\n     * Sets the lower value of the `IgxSliderComponent`.\n     * ```typescript\n     *  @ViewChild(\"slider2\")\n     * public slider: IgxSliderComponent;\n     * public lowValue(event){\n     *     this.slider.lowerValue = 120;\n     * }\n     * ```\n     */\n    public set lowerValue(value: number) {\n        value = this.valueInRange(value, this.lowerBound, this.upperBound);\n        this._lowerValue = value;\n\n    }\n\n    /**\n     * Returns the upper value of the `IgxSliderComponent`.\n     * ```typescript\n     *  @ViewChild(\"slider2\")\n     * public slider: IgxSliderComponent;\n     * public upperValue(event){\n     *     let upperValue = this.slider.upperValue;\n     * }\n     * ```\n     */\n    public get upperValue() {\n        if (!Number.isNaN(this._upperValue) && this._upperValue !== undefined && this._upperValue <= this.upperBound) {\n            return this._upperValue;\n        }\n\n        return this.upperBound;\n    }\n\n    /**\n     * Sets the upper value of the `IgxSliderComponent`.\n     * ```typescript\n     *  @ViewChild(\"slider2\")\n     * public slider: IgxSliderComponent;\n     * public upperValue(event){\n     *     this.slider.upperValue = 120;\n     * }\n     * ```\n     */\n    public set upperValue(value: number) {\n        value = this.valueInRange(value, this.lowerBound, this.upperBound);\n        this._upperValue = value;\n    }\n\n    /**\n     * Returns the value corresponding the lower label.\n     * ```typescript\n     * @ViewChild(\"slider\")\n     * public slider: IgxSliderComponent;\n     * let label = this.slider.lowerLabel;\n     * ```\n     */\n    public get lowerLabel() {\n        return this.labelsViewEnabled ?\n            this.labels[this.lowerValue] :\n            this.lowerValue;\n    }\n\n    /**\n     * Returns the value corresponding the upper label.\n     * ```typescript\n     * @ViewChild(\"slider\")\n     * public slider: IgxSliderComponent;\n     * let label = this.slider.upperLabel;\n     * ```\n     */\n    public get upperLabel() {\n        return this.labelsViewEnabled ?\n            this.labels[this.upperValue] :\n            this.upperValue;\n    }\n\n    /**\n     * Returns if label view is enabled.\n     * If the {@link labels} is set, the view is automatically activated.\n     * ```typescript\n     * @ViewChild(\"slider\")\n     * public slider: IgxSliderComponent;\n     * let labelView = this.slider.labelsViewEnabled;\n     * ```\n     */\n    public get labelsViewEnabled(): boolean {\n        return !!(this.labels && this.labels.length > 1);\n    }\n\n    /**\n     * @hidden\n     */\n    public get showTopTicks() {\n        return this.ticksOrientation === TicksOrientation.Top ||\n            this.ticksOrientation === TicksOrientation.Mirror;\n    }\n\n    /**\n     * @hidden\n     */\n    public get showBottomTicks() {\n        return this.ticksOrientation === TicksOrientation.Bottom ||\n            this.ticksOrientation === TicksOrientation.Mirror;\n    }\n\n    /**\n     * @hidden\n     */\n    public ngOnChanges(changes) {\n        if (changes.minValue && changes.maxValue &&\n                changes.minValue.currentValue < changes.maxValue.currentValue) {\n            this._maxValue = changes.maxValue.currentValue;\n            this._minValue = changes.minValue.currentValue;\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public ngOnInit() {\n        this.sliderSetup();\n\n        // Set track travel zone\n        this._pMin = this.valueToFraction(this.lowerBound) || 0;\n        this._pMax = this.valueToFraction(this.upperBound) || 1;\n    }\n\n    public ngAfterContentInit() {\n        this.setValue(this._value);\n    }\n\n    /**\n     * @hidden\n     */\n    public ngAfterViewInit() {\n        this._hasViewInit = true;\n        this.stepDistance = this.calculateStepDistance();\n        this.positionHandlersAndUpdateTrack();\n        this.setTickInterval();\n        this.changeThumbFocusableState(this.disabled);\n\n        this.subscribeTo(this.thumbFrom, this.thumbChanged.bind(this));\n        this.subscribeTo(this.thumbTo, this.thumbChanged.bind(this));\n\n        this.thumbs.changes.pipe(takeUntil(this._destroyer$)).subscribe(change => {\n            const thumbFrom = change.find((thumb: IgxSliderThumbComponent) => thumb.type === SliderHandle.FROM);\n            this.positionHandler(thumbFrom, null, this.lowerValue);\n            this.subscribeTo(thumbFrom, this.thumbChanged.bind(this));\n            this.changeThumbFocusableState(this.disabled);\n        });\n\n        this.labelRefs.changes.pipe(takeUntil(this._destroyer$)).subscribe(change => {\n            const labelFrom = this.labelRefs.find((label: IgxThumbLabelComponent) => label.type === SliderHandle.FROM);\n            this.positionHandler(null, labelFrom, this.lowerValue);\n        });\n\n        this._ngZone.runOutsideAngular(() => {\n            resizeObservable(this._el.nativeElement).pipe(\n                throttleTime(40),\n                takeUntil(this._destroyer$)).subscribe(() => this._ngZone.run( () => {\n                    this.stepDistance = this.calculateStepDistance();\n                }));\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    public ngOnDestroy() {\n        this._destroyer$.next(true);\n        this._destroyer$.complete();\n\n        this._indicatorsDestroyer$.next(true);\n        this._indicatorsDestroyer$.complete();\n    }\n\n    /**\n     * @hidden\n     */\n    public writeValue(value: IRangeSliderValue | number): void {\n        if (!value) {\n            return;\n        }\n\n        this.normalizeByStep(value);\n    }\n\n    /**\n     * @hidden\n     */\n    public registerOnChange(fn: any): void {\n        this._onChangeCallback = fn;\n    }\n\n    /**\n     * @hidden\n     */\n    public registerOnTouched(fn: any): void {\n        this._onTouchedCallback = fn;\n    }\n\n    /** @hidden */\n     public getEditElement() {\n        return this.isRange ? this.thumbFrom.nativeElement : this.thumbTo.nativeElement;\n    }\n\n    /**\n     *\n     * @hidden\n     */\n    public update(mouseX) {\n        if (this.disabled) {\n            return;\n        }\n\n        // Update To/From Values\n        this.onPan.next(mouseX);\n\n        // Finally do positionHandlersAndUpdateTrack the DOM\n        // based on data values\n        this.positionHandlersAndUpdateTrack();\n        this._onTouchedCallback();\n    }\n\n    /**\n     * @hidden\n     */\n    public thumbChanged(value: number, thumbType: number) {\n        const oldValue = this.value;\n\n        let newVal: IRangeSliderValue;\n        if (this.isRange) {\n            if (thumbType === SliderHandle.FROM) {\n                newVal = {\n                    lower: (this.value as IRangeSliderValue).lower + value,\n                    upper: (this.value as IRangeSliderValue).upper\n                };\n            } else {\n                newVal = {\n                    lower: (this.value as IRangeSliderValue).lower,\n                    upper: (this.value as IRangeSliderValue).upper + value\n                };\n            }\n\n            // Swap the thumbs if a collision appears.\n            if (newVal.lower >= newVal.upper) {\n                this.value = this.swapThumb(newVal);\n            } else {\n                this.value = newVal;\n            }\n\n        } else {\n            this.value = this.value as number + value;\n        }\n\n        if (this.hasValueChanged(oldValue)) {\n            this.emitValueChanged(oldValue);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public onThumbChange() {\n        this.toggleSliderIndicators();\n    }\n\n    /**\n     * @hidden\n     */\n    public onHoverChange(state: boolean) {\n        return state ? this.showSliderIndicators() : this.hideSliderIndicators();\n    }\n\n\n\n    private swapThumb(value: IRangeSliderValue) {\n        if (this.thumbFrom.isActive) {\n            value.upper = this.upperValue;\n            value.lower = this.upperValue;\n        } else {\n            value.upper = this.lowerValue;\n            value.lower = this.lowerValue;\n        }\n\n        this.toggleThumb();\n        return value;\n    }\n\n    private findClosestThumb(event: PointerEvent) {\n        if (this.isRange) {\n            this.closestHandle(event);\n        } else {\n            this.thumbTo.nativeElement.focus();\n        }\n\n        this.update(event.clientX);\n    }\n\n    private updateLowerBoundAndMinTravelZone() {\n        this.lowerBound = this.minValue;\n        this._pMin = 0;\n    }\n\n    private updateUpperBoundAndMaxTravelZone() {\n        this.upperBound = this.maxValue;\n        this._pMax = 1;\n    }\n\n    private sliderSetup() {\n        /**\n         * if {@link SliderType.SLIDER} than the initial value shold be the lowest one.\n         */\n        if (!this.isRange && this._upperValue === undefined) {\n            this._upperValue = this.lowerBound;\n        }\n    }\n\n    private calculateStepDistance() {\n        return this._el.nativeElement.getBoundingClientRect().width / (this.maxValue - this.minValue) * this.step;\n    }\n\n    private toggleThumb() {\n        return this.thumbFrom.isActive ?\n            this.thumbTo.nativeElement.focus() :\n            this.thumbFrom.nativeElement.focus();\n    }\n\n    private valueInRange(value, min = 0, max = 100) {\n        return Math.max(Math.min(value, max), min);\n    }\n\n    private generateTickMarks(color: string, interval: number) {\n        return interval !== null ? `repeating-linear-gradient(\n            ${'to left'},\n            ${color},\n            ${color} 1.5px,\n            transparent 1.5px,\n            transparent ${interval}%\n        ), repeating-linear-gradient(\n            ${'to right'},\n            ${color},\n            ${color} 1.5px,\n            transparent 1.5px,\n            transparent ${interval}%\n        )` : interval;\n    }\n\n    private positionHandler(thumbHandle: ElementRef, labelHandle: ElementRef, position: number) {\n        const percent = `${this.valueToFraction(position) * 100}%`;\n        const dir = this._dir.rtl ? 'right' : 'left';\n\n        if (thumbHandle) {\n            thumbHandle.nativeElement.style[dir] = percent;\n        }\n\n        if (labelHandle) {\n            labelHandle.nativeElement.style[dir] = percent;\n        }\n    }\n\n    private positionHandlersAndUpdateTrack() {\n        if (!this.isRange) {\n            this.positionHandler(this.thumbTo, this.labelTo, this.value as number);\n        } else {\n            this.positionHandler(this.thumbTo, this.labelTo, (this.value as IRangeSliderValue).upper);\n            this.positionHandler(this.thumbFrom, this.labelFrom, (this.value as IRangeSliderValue).lower);\n        }\n\n        if (this._hasViewInit) {\n            this.updateTrack();\n        }\n    }\n\n    private closestHandle(event: PointerEvent) {\n        const fromOffset = this.thumbFrom.nativeElement.offsetLeft + this.thumbFrom.nativeElement.offsetWidth / 2;\n        const toOffset = this.thumbTo.nativeElement.offsetLeft + this.thumbTo.nativeElement.offsetWidth / 2;\n        const xPointer = event.clientX - this._el.nativeElement.getBoundingClientRect().left;\n        const match = this.closestTo(xPointer, [fromOffset, toOffset]);\n\n        if (fromOffset === toOffset && toOffset < xPointer) {\n            this.thumbTo.nativeElement.focus();\n        } else if (fromOffset === toOffset && toOffset > xPointer ) {\n            this.thumbFrom.nativeElement.focus();\n        } else if (match === fromOffset) {\n            this.thumbFrom.nativeElement.focus();\n        } else {\n            this.thumbTo.nativeElement.focus();\n        }\n    }\n\n    private setTickInterval() {\n        let interval;\n        const trackProgress = 100;\n        if (this.labelsViewEnabled) {\n            // Calc ticks depending on the labels length;\n            interval = ((trackProgress / (this.labels.length - 1) * 10)) / 10;\n        } else {\n            const trackRange = this.maxValue - this.minValue;\n            interval = this.step > 1 ?\n                (trackProgress / ((trackRange / this.step)) * 10) / 10\n                : null;\n        }\n\n        const renderCallbackExecution = !this.continuous ? this.generateTickMarks('white', interval) : null;\n        this.renderer.setStyle(this.ticks.nativeElement, 'background', renderCallbackExecution);\n    }\n\n    private showSliderIndicators() {\n        if (this.disabled) {\n            return;\n        }\n\n        if (this._indicatorsTimer) {\n            this._indicatorsDestroyer$.next(true);\n            this._indicatorsTimer = null;\n        }\n\n        this.thumbTo.showThumbIndicators();\n        this.labelTo.active = true;\n        if (this.thumbFrom) {\n            this.thumbFrom.showThumbIndicators();\n        }\n\n        if (this.labelFrom) {\n            this.labelFrom.active = true;\n        }\n\n    }\n\n    private hideSliderIndicators() {\n        if (this.disabled) {\n            return;\n        }\n\n        this._indicatorsTimer = timer(this.thumbLabelVisibilityDuration);\n        this._indicatorsTimer.pipe(takeUntil(this._indicatorsDestroyer$)).subscribe(() => {\n            this.thumbTo.hideThumbIndicators();\n            this.labelTo.active = false;\n            if (this.thumbFrom) {\n                this.thumbFrom.hideThumbIndicators();\n            }\n\n            if (this.labelFrom) {\n                this.labelFrom.active = false;\n            }\n        });\n    }\n\n    private toggleSliderIndicators() {\n        this.showSliderIndicators();\n        this.hideSliderIndicators();\n    }\n\n    private changeThumbFocusableState(state: boolean) {\n        const value = state ? -1 : 1;\n\n        if (this.isRange) {\n            this.thumbFrom.tabindex = value;\n        }\n\n        this.thumbTo.tabindex = value;\n\n        this._cdr.detectChanges();\n    }\n\n    private closestTo(goal: number, positions: number[]): number {\n        return positions.reduce((previous, current) => {\n            return (Math.abs(goal - current) < Math.abs(goal - previous) ? current : previous);\n        });\n    }\n\n    private valueToFraction(value: number, pMin = this._pMin, pMax = this._pMax) {\n        return this.valueInRange((value - this.minValue) / (this.maxValue - this.minValue), pMin, pMax);\n    }\n\n    /**\n     * @hidden\n     * Normalizе the value when two-way data bind is used and {@link this.step} is set.\n     * @param value\n     */\n    private normalizeByStep(value: IRangeSliderValue | number) {\n        if (this.isRange) {\n            this.value =  {\n                lower: (value as IRangeSliderValue).lower - ((value as IRangeSliderValue).lower % this.step),\n                upper: (value as IRangeSliderValue).upper - ((value as IRangeSliderValue).upper % this.step)\n            };\n        } else {\n            this.value = (value as number) - ((value as number) % this.step);\n        }\n\n        this._cdr.detectChanges();\n    }\n\n    private updateTrack() {\n        const fromPosition = this.valueToFraction(this.lowerValue);\n        const toPosition = this.valueToFraction(this.upperValue);\n        const positionGap = toPosition - fromPosition;\n\n        let trackLeftIndention = fromPosition;\n        if (this.isRange) {\n            if (positionGap) {\n                trackLeftIndention = Math.round((1 / positionGap * fromPosition) * 100);\n            }\n\n            trackLeftIndention = this._dir.rtl ? -trackLeftIndention : trackLeftIndention;\n            this.renderer.setStyle(this.trackRef.nativeElement, 'transform', `scaleX(${positionGap}) translateX(${trackLeftIndention}%)`);\n        } else {\n            this.renderer.setStyle(this.trackRef.nativeElement, 'transform', `scaleX(${toPosition})`);\n        }\n    }\n\n    private validateInitialValue(value: IRangeSliderValue) {\n        if (value.lower < this.lowerBound && value.upper < this.lowerBound) {\n            value.upper = this.lowerBound;\n            value.lower = this.lowerBound;\n        }\n\n        if (value.lower > this.upperBound && value.upper > this.upperBound) {\n            value.upper = this.upperBound;\n            value.lower = this.upperBound;\n        }\n\n        if (value.upper < value.lower) {\n            value.upper = this.upperValue;\n            value.lower = this.lowerValue;\n        }\n\n        return value;\n    }\n\n    private subscribeTo(thumb: IgxSliderThumbComponent, callback: (a: number, b: number) => void) {\n        if (!thumb) {\n            return;\n        }\n\n        thumb.onThumbValueChange\n            .pipe(takeUntil(this.unsubscriber(thumb)))\n            .subscribe(value => callback(value, thumb.type));\n    }\n\n    private unsubscriber(thumb: IgxSliderThumbComponent) {\n        return merge(this._destroyer$, thumb.destroy);\n    }\n\n    private hasValueChanged(oldValue) {\n        const isSliderWithDifferentValue: boolean = !this.isRange && oldValue !== this.value;\n        const isRangeWithOneDifferentValue: boolean = this.isRange &&\n            ((oldValue as IRangeSliderValue).lower !== (this.value as IRangeSliderValue).lower ||\n                (oldValue as IRangeSliderValue).upper !== (this.value as IRangeSliderValue).upper);\n\n        return isSliderWithDifferentValue || isRangeWithOneDifferentValue;\n    }\n\n    public setValue(value: number | IRangeSliderValue) {\n        if (!this.isRange) {\n            this.upperValue = value as number - (value as number % this.step);\n        } else {\n            value = this.validateInitialValue(value as IRangeSliderValue);\n            this.upperValue = (value as IRangeSliderValue).upper;\n            this.lowerValue = (value as IRangeSliderValue).lower;\n        }\n    }\n\n    private emitValueChanged(oldValue: number | IRangeSliderValue) {\n        this.onValueChange.emit({ oldValue, value: this.value });\n    }\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [\n        IgxSliderComponent,\n        IgxThumbFromTemplateDirective,\n        IgxThumbToTemplateDirective,\n        IgxTickLabelTemplateDirective,\n        IgxSliderThumbComponent,\n        IgxThumbLabelComponent,\n        IgxTicksComponent,\n        IgxTickLabelsPipe],\n    exports: [\n        IgxSliderComponent,\n        IgxThumbFromTemplateDirective,\n        IgxThumbToTemplateDirective,\n        IgxTickLabelTemplateDirective,\n        IgxSliderThumbComponent,\n        IgxThumbLabelComponent,\n        IgxTicksComponent],\n    imports: [CommonModule, FormsModule]\n})\nexport class IgxSliderModule {\n}\n","import {\n    AnimationEvent,\n    transition,\n    trigger,\n    useAnimation\n} from '@angular/animations';\nimport { CommonModule } from '@angular/common';\nimport {\n    Component,\n    EventEmitter,\n    HostBinding,\n    Input,\n    NgModule,\n    NgZone,\n    Output\n} from '@angular/core';\nimport { fadeIn, fadeOut, slideInBottom, slideOutBottom } from '../animations/main';\n\nlet NEXT_ID = 0;\n/**\n * **Ignite UI for Angular Snackbar** -\n * [Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/snackbar.html)\n *\n * The Ignite UI Snack Bar provides feedback about an operation with a single-line message, which can\n * include a link to an action such as Undo.\n *\n * Example:\n * ```html\n * <button (click)=\"snackbar.show()\">Send message</button>\n * <div>\n *   <igx-snackbar #snackbar message=\"Message sent\">\n *   </igx-snackbar>\n * </div>\n * ```\n */\n@Component({\n    animations: [\n        trigger('slideInOut', [\n            transition('void => *', [\n                useAnimation(slideInBottom, {\n                    params: {\n                        duration: '.35s',\n                        easing: 'cubic-bezier(0.0, 0.0, 0.2, 1)',\n                        fromPosition: 'translateY(100%)',\n                        toPosition: 'translateY(0)'\n                    }\n                })\n            ]),\n            transition('* => void', [\n                useAnimation(slideOutBottom, {\n                    params: {\n                        duration: '.2s',\n                        easing: 'cubic-bezier(0.4, 0.0, 1, 1)',\n                        fromPosition: 'translateY(0)',\n                        toOpacity: 1,\n                        toPosition: 'translateY(100%)'\n                    }\n                })\n            ])\n        ]),\n        trigger('fadeInOut', [\n            transition('void => *', [\n                useAnimation(fadeIn, {\n                    params: {\n                        duration: '.35s',\n                        easing: 'ease-out'\n                    }\n                })\n            ]),\n            transition('* => void', [\n                useAnimation(fadeOut, {\n                    params: {\n                        duration: '.2s',\n                        easing: 'ease-out'\n                    }\n                })\n            ])\n        ])\n    ],\n    selector: 'igx-snackbar',\n    templateUrl: 'snackbar.component.html',\n    styles: [`\n        :host {\n            display: block;\n        }\n    `]\n})\nexport class IgxSnackbarComponent {\n\n    /**\n     * Sets/gets the `id` of the snackbar.\n     * If not set, the `id` of the first snackbar component  will be `\"igx-snackbar-0\"`;\n     * ```html\n     * <igx-snackbar id = \"Snackbar1\"></igx-snackbar>\n     * ```\n     * ```typescript\n     * let snackbarId = this.snackbar.id;\n     * ```\n     * @memberof IgxSnackbarComponent\n     */\n    @HostBinding('attr.id')\n    @Input()\n    public id = `igx-snackbar-${NEXT_ID++}`;\n    /**\n     * Sets/gets the `message` attribute.\n     * ```html\n     * <igx-snackbar [message] = \"'Snackbar Component'\"></igx-snackbar>\n     * ```\n     * ```typescript\n     * let message =  this.snackbar.message;\n     * ```\n     */\n    @Input() public message: string;\n\n    /**\n     * Enables/Disables the visibility of the snackbar.\n     * If not set, the `isVisible` attribute will have value `false`.\n     * ```html\n     * <igx-snackbar [isVisible] = \"true\"></igx-snackbar>\n     * ```\n     * ```typescript\n     * let isVisible =  this.snackbar.isVisible;\n     * ```\n     */\n    @Input() public isVisible = false;\n\n    /**\n     * Sets/gets if the snackbar will be automatically hidden after the `displayTime` is over.\n     * Default value is `true`.\n     * ```html\n     * <igx-snackbar [autoHide] = \"false\"></igx-snackbar>\n     * ```\n     * ```typescript\n     * let autoHide =  this.snackbar.autoHide;\n     * ```\n     */\n    @Input() public autoHide = true;\n\n    /**\n     * Sets/gets the duration of time(in milliseconds) in which the snackbar will be visible after it is being shown.\n     * Default value is 4000.\n     * ```html\n     * <igx-snackbar [displayTime] = \"2000\"></igx-snackbar>\n     * ```\n     * ```typescript\n     * let displayTime = this.snackbar.displayTime;\n     * ```\n     */\n    @Input() public displayTime = 4000;\n\n    /**\n     * Sets/gets the `actionText` attribute.\n     * ```html\n     * <igx-snackbar [actionText] = \"'Action Text'\"></igx-snackbar>\n     * ```\n     */\n    @Input() public actionText?: string;\n\n    /**\n     * An event that will be emitted when the action is executed.\n     * Provides reference to the `IgxSnackbarComponent` as an argument.\n     * ```html\n     * <igx-snackbar (onAction) = \"onAction($event)\"></igx-snackbar>\n     * ```\n     */\n    @Output() public onAction = new EventEmitter<IgxSnackbarComponent>();\n\n    /**\n     * An event that will be emitted when the snackbar animation starts.\n     * Provides reference to the `AnimationEvent` interface as an argument.\n     * ```html\n     * <igx-snackbar (animationStarted) = \"animationStarted($event)\"></igx-snackbar>\n     * ```\n     */\n    @Output() public animationStarted = new EventEmitter<AnimationEvent>();\n\n    /**\n     * An event that will be emitted when the snackbar animation ends.\n     * Provides reference to the `AnimationEvent` interface as an argument.\n     * ```html\n     * <igx-snackbar (animationDone) = \"animationDone($event)\"></igx-snackbar>\n     * ```\n     */\n    @Output() public animationDone = new EventEmitter<AnimationEvent>();\n    /**\n     * @hidden\n     */\n    private timeoutId;\n\n    constructor(private zone: NgZone) { }\n\n    /**\n     * Shows the snackbar and hides it after the `displayTime` is over if `autoHide` is set to `true`.\n     * ```typescript\n     * this.snackbar.show();\n     * ```\n     */\n    public show(): void {\n        clearTimeout(this.timeoutId);\n        setTimeout(this.timeoutId);\n        this.isVisible = true;\n\n        if (this.autoHide) {\n            this.timeoutId = setTimeout(() => {\n                this.hide();\n            }, this.displayTime);\n        }\n    }\n\n    /**\n     * Hides the snackbar.\n     * ```typescript\n     * this.snackbar.hide();\n     * ```\n     */\n    public hide(): void {\n        this.isVisible = false;\n        clearTimeout(this.timeoutId);\n    }\n    /**\n     * @hidden\n     */\n    public triggerAction(): void {\n        this.onAction.emit(this);\n    }\n    /**\n     * @hidden\n     * @memberof IgxSnackbarComponent\n     */\n    public snackbarAnimationStarted(evt: AnimationEvent): void {\n        if (evt.fromState === 'void') {\n            this.animationStarted.emit(evt);\n        }\n    }\n    /**\n     * @hidden\n     * @memberof IgxSnackbarComponent\n     */\n    public snackbarAnimationDone(evt: AnimationEvent): void {\n        if (evt.fromState === 'show') {\n            this.animationDone.emit(evt);\n        }\n    }\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [IgxSnackbarComponent],\n    exports: [IgxSnackbarComponent],\n    imports: [CommonModule]\n})\nexport class IgxSnackbarModule { }\n","import {\n    Component,\n    Directive,\n    EventEmitter,\n    forwardRef,\n    HostBinding,\n    Input,\n    NgModule,\n    Output,\n    Provider,\n    ViewChild,\n    ElementRef\n} from '@angular/core';\nimport { CheckboxRequiredValidator, ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IgxRippleModule } from '../directives/ripple/ripple.directive';\nimport { isIE, IBaseEventArgs } from '../core/utils';\nimport { EditorProvider } from '../core/edit-provider';\n\nexport enum SwitchLabelPosition {\n    BEFORE = 'before',\n    AFTER = 'after'\n}\n\nexport interface IChangeSwitchEventArgs extends IBaseEventArgs {\n    checked: boolean;\n    switch: IgxSwitchComponent;\n}\n\nconst noop = () => { };\nlet nextId = 0;\n/**\n *\n * The Switch component is a binary choice selection component.\n *\n * @igxModule IgxSwitchModule\n *\n * @igxTheme igx-switch-theme, igx-tooltip-theme\n *\n * @igxKeywords switch, states, tooltip\n *\n * @igxGroup Data Entry & Display\n *\n * @remarks\n *\n * The Ignite UI Switch lets the user toggle between on/off or true/false states.\n *\n * @example\n * ```html\n * <igx-switch [checked]=\"true\">\n *   Simple switch\n * </igx-switch>\n * ```\n */\n@Component({\n    providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: IgxSwitchComponent, multi: true }],\n    selector: 'igx-switch',\n    templateUrl: 'switch.component.html'\n})\nexport class IgxSwitchComponent implements ControlValueAccessor, EditorProvider {\n    /**\n     * @hidden\n     * @internal\n     */\n    protected _value: any;\n    /**\n     * Returns a reference to the native checkbox element.\n     *\n     * @example\n     * ```typescript\n     * let checkboxElement =  this.switch.nativeCheckbox;\n     * ```\n     */\n    @ViewChild('checkbox', { static: true }) public nativeCheckbox: ElementRef;\n    /**\n     * Returns reference to the native label element.\n     *\n     * @example\n     * ```typescript\n     * let labelElement =  this.switch.nativeLabel;\n     * ```\n     */\n    @ViewChild('label', { static: true }) public nativeLabel;\n    /**\n     * Returns reference to the label placeholder element.\n     *\n     * @example\n     * ```typescript\n     * let labelPlaceholder = this.switch.placeholderLabel;\n     * ```\n     */\n    @ViewChild('placeholderLabel', { static: true }) public placeholderLabel;\n\n    /**\n     * Sets/gets the `id` of the switch component.\n     * If not set, the `id` of the first switch component will be `\"igx-switch-0\"`.\n     *\n     * @example\n     * ```html\n     * <igx-switch id=\"my-first-switch\"></igx-switch>\n     * ```\n     */\n    @HostBinding('attr.id')\n    @Input() public id = `igx-switch-${nextId++}`;\n    /**\n     * Sets/gets the id of the `label` element of the switch component.\n     * If not set, the label of the first switch component will have value `\"igx-switch-0-label\"`.\n     *\n     * @example\n     * ```html\n     * <igx-switch labelId=\"Label1\"></igx-switch>\n     * ```\n     */\n    @Input() public labelId = `${this.id}-label`;\n    /**\n     * Sets/gets the `value` attribute of the switch component.\n     *\n     * @example\n     * ```html\n     * <igx-switch [value]=\"switchValue\"></igx-switch>\n     * ```\n     */\n    @Input() public value: any;\n    /**\n     * Sets/gets the `name` attribute of the switch component.\n     *\n     * @example\n     * ```html\n     * <igx-switch name=\"Switch1\"></igx-switch>\n     * ```\n     */\n    @Input() public name: string;\n    /**\n     * Sets/gets the value of the `tabindex` attribute.\n     *\n     * @example\n     * ```html\n     * <igx-switch [tabindex]=\"1\"></igx-switch>\n     * ```\n     */\n    @Input() public tabindex: number = null;\n    /**\n     * Sets/gets the position of the `label` in the switch component.\n     * If not set, `labelPosition` will have value `\"after\"`.\n     *\n     * @example\n     * ```html\n     * <igx-switch labelPosition=\"before\"></igx-switch>\n     * ```\n     */\n    @Input() public labelPosition: SwitchLabelPosition | string = 'after';\n    /**\n     * Enables/Disables the ripple effect\n     * If not set, `disableRipple` will have value `false`.\n     *\n     * @example\n     * ```html\n     * <igx-switch [disableRipple]=\"true\"></igx-switch>\n     * ```\n     */\n    @Input() public disableRipple = false;\n    /**\n     * Sets/gets whether switch is required.\n     * If not set, `required` will have value `false`.\n     *\n     * @example\n     * ```html\n     * <igx-switch [required]=\"true\"></igx-switch>\n     * ```\n     */\n    @Input() public required = false;\n    /**\n     * Sets/gets the `aria-labelledBy` attribute.\n     * If not set, the  value of `aria-labelledBy` will be equal to the value of `labelId` attribute.\n     *\n     * @example\n     * ```html\n     * <igx-switch aria-labelledby = \"Label1\"></igx-switch>\n     * ```\n     */\n    @Input('aria-labelledby')\n    public ariaLabelledBy = this.labelId;\n    /**\n     * Sets/gets the value of the `aria-label` attribute.\n     *\n     * @example\n     * ```html\n     * <igx-switch aria-label=\"Label1\"></igx-switch>\n     * ```\n     */\n    @Input('aria-label')\n    public ariaLabel: string | null = null;\n    /**\n     * An event that is emitted after the switch state is changed.\n     * Provides references to the `IgxSwitchComponent` and the `checked` property as event arguments.\n     */\n    @Output()\n    readonly change: EventEmitter<IChangeSwitchEventArgs> = new EventEmitter<IChangeSwitchEventArgs>();\n    /**\n     * @hidden\n     * @internal\n     */\n    private _onTouchedCallback: () => void = noop;\n    /**\n     * @hidden\n     * @internal\n     */\n    private _onChangeCallback: (_: any) => void = noop;\n    /**\n     * Returns the class of the switch component.\n     *\n     * @example\n     * ```typescript\n     * let switchClass = this.switch.cssClass;\n     * ```\n     */\n    @HostBinding('class.igx-switch')\n    public cssClass = 'igx-switch';\n    /**\n     * Sets/gets whether the switch is on or off.\n     * Default value is 'false'.\n     *\n     * @example\n     * ```html\n     *  <igx-switch [checked]=\"true\"></igx-switch>\n     * ```\n     */\n    @HostBinding('class.igx-switch--checked')\n    @Input() public checked = false;\n    /**\n     * Sets/gets the `disabled` attribute.\n     * Default value is `false`.\n     *\n     * @example\n     * ```html\n     * <igx-switch [disabled]=\"true\"><igx-switch>\n     * ```\n     */\n    @HostBinding('class.igx-switch--disabled')\n    @Input() public disabled = false;\n    /**\n     * Sets/gets whether the switch component is on focus.\n     * Default value is `false`.\n     *\n     * @example\n     * ```typescript\n     * this.switch.focused = true;\n     * ```\n     */\n    @HostBinding('class.igx-switch--focused')\n    public focused = false;\n    /**\n     * @hidden\n     * @internal\n     */\n    public inputId = `${this.id}-input`;\n    /**\n     * Toggles the checked state of the switch.\n     *\n     * @example\n     * ```typescript\n     * this.switch.toggle();\n     * ```\n     */\n    public toggle() {\n        if (this.disabled) {\n            return;\n        }\n\n        this.checked = !this.checked;\n        this.focused = false;\n        this.change.emit({ checked: this.checked, switch: this });\n        this._onChangeCallback(this.checked);\n    }\n    /**\n     * @hidden\n     * @internal\n     */\n    public _onSwitchChange(event) {\n        event.stopPropagation();\n    }\n    /**\n     * @hidden\n     * @internal\n     */\n    public _onSwitchClick(event) {\n        event.stopPropagation();\n        this.toggle();\n\n        if (isIE()) {\n            this.nativeCheckbox.nativeElement.blur();\n        }\n    }\n    /**\n     * @hidden\n     * @internal\n     */\n    public _onLabelClick(event) {\n        this.toggle();\n    }\n    /**\n     * @hidden\n     * @internal\n     */\n    public onFocus(event) {\n        this.focused = true;\n    }\n    /**\n     * @hidden\n     * @internal\n     */\n    public onBlur(event) {\n        this.focused = false;\n        this._onTouchedCallback();\n    }\n    /**\n     * @hidden\n     * @internal\n     */\n    public writeValue(value) {\n        this._value = value;\n        this.checked = !!this._value;\n    }\n    /**\n     * @hidden\n     * @internal\n     */\n    public getEditElement() {\n        return this.nativeCheckbox.nativeElement;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public get labelClass(): string {\n        switch (this.labelPosition) {\n            case SwitchLabelPosition.BEFORE:\n                return `${this.cssClass}__label--before`;\n            case SwitchLabelPosition.AFTER:\n            default:\n                return `${this.cssClass}__label`;\n        }\n    }\n    /**\n     * @hidden\n     * @internal\n     */\n    public registerOnChange(fn: (_: any) => void) { this._onChangeCallback = fn; }\n    /**\n     * @hidden\n     * @internal\n     */\n    public registerOnTouched(fn: () => void) { this._onTouchedCallback = fn; }\n}\n\nexport const IGX_SWITCH_REQUIRED_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => IgxSwitchRequiredDirective),\n    multi: true\n};\n\n/* tslint:disable directive-selector */\n@Directive({\n    selector: `igx-switch[required][formControlName],\n    igx-switch[required][formControl],\n    igx-switch[required][ngModel]`,\n    providers: [IGX_SWITCH_REQUIRED_VALIDATOR]\n})\nexport class IgxSwitchRequiredDirective extends CheckboxRequiredValidator { }\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [IgxSwitchComponent, IgxSwitchRequiredDirective],\n    exports: [IgxSwitchComponent, IgxSwitchRequiredDirective],\n    imports: [IgxRippleModule]\n})\nexport class IgxSwitchModule { }\n","import { CommonModule } from '@angular/common';\nimport {\n    AfterContentInit,\n    AfterViewInit,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    HostBinding,\n    HostListener,\n    Input,\n    NgModule,\n    Output,\n    QueryList,\n    TemplateRef,\n    ViewChild,\n    ViewChildren,\n    OnDestroy\n} from '@angular/core';\nimport { IgxBadgeModule } from '../badge/badge.component';\nimport { IgxIconModule } from '../icon/public_api';\nimport { IBaseEventArgs } from '../core/utils';\nimport { Subscription } from 'rxjs';\n\nexport interface ISelectTabEventArgs extends IBaseEventArgs {\n    tab: IgxTabComponent;\n    panel: IgxTabPanelComponent;\n}\n\nlet NEXT_ID = 0;\n\n@Directive({\n    selector: '[igxTab]'\n})\nexport class IgxTabTemplateDirective {\n\n    constructor(public template: TemplateRef<any>) {\n    }\n}\n/**\n * **Ignite UI for Angular Tab Bar** -\n * [Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/tabbar.html)\n *\n * The Ignite UI Tab Bar enables the user to navigate among a number of content panels displayed in a single view.\n *\n * Example:\n * ```html\n * <igx-bottom-nav>\n *   <igx-tab-panel label=\"Tab 1\">Tab 1 Content</igx-tab-panel>\n *   <igx-tab-panel label=\"Tab 2\">Tab 2 Content</igx-tab-panel>\n *   <igx-tab-panel label=\"Tab 3\">Tab 3 Content</igx-tab-panel>\n * </igx-bottom-nav>\n * ```\n */\n@Component({\n    selector: 'igx-bottom-nav',\n    templateUrl: 'tab-bar-content.component.html',\n    styles: [`\n        :host {\n            display: block;\n        }\n    `]\n})\nexport class IgxBottomNavComponent implements AfterViewInit, OnDestroy {\n    private _currentBottomNavId = NEXT_ID++;\n    private _panelsChanges$: Subscription;\n\n    /**\n     * Gets the `IgxTabComponent` elements in the tab bar component created based on the provided panels.\n     * ```typescript\n     * let tabs: QueryList<IgxTabComponent> =  this.tabBar.viewTabs;\n     * ```\n     * @memberof IgxBottomNavComponent\n     */\n    @ViewChildren(forwardRef(() => IgxTabComponent))\n    public viewTabs: QueryList<IgxTabComponent>;\n\n    /**\n     * Gets the `IgxTabComponent` elements in the tab bar component defined as content child.\n     * ```typescript\n     * let tabs: QueryList<IgxTabComponent> =  this.tabBar.contentTabs;\n     * ```\n     * @memberof IgxBottomNavComponent\n     */\n    @ContentChildren(forwardRef(() => IgxTabComponent))\n    public contentTabs: QueryList<IgxTabComponent>;\n\n    /**\n     * Gets the `IgxTabComponent` elements for this bottom navigation component.\n     * First try to get them as content children if not available get them as view children.\n     * ```typescript\n     * let tabs: QueryList<IgxTabComponent> =  this.tabBar.tabs;\n     * ```\n     * @memberof IgxBottomNavComponent\n     */\n    public get tabs(): QueryList<IgxTabComponent> {\n        return this.hasContentTabs ? this.contentTabs : this.viewTabs;\n    }\n\n    /**\n     * Gets the `IgxTabPanelComponent` elements in the tab bar component.\n     * ```typescript\n     * let tabPanels: QueryList<IgxTabPanelComponent> = this.tabBar.panels;\n     * ```\n     * @memberof IgxBottomNavComponent\n     */\n    @ContentChildren(forwardRef(() => IgxTabPanelComponent))\n    public panels: QueryList<IgxTabPanelComponent>;\n\n    /**\n     * Sets/gets the `id` of the tab bar.\n     * If not set, the `id` of the first tab bar component will be `\"igx-bottom-nav-0\"`.\n     * ```html\n     * <igx-bottom-nav id = \"my-first-tab-bar\"></igx-bottom-nav>\n     * ```\n     * ```typescript\n     * let tabBarId =  this.tabBar.id;\n     * ```\n     * @memberof IgxBottomNavComponent\n     */\n    @HostBinding('attr.id')\n    @Input()\n    public id = `igx-bottom-nav-${this._currentBottomNavId}`;\n\n    /**\n     * Emits an event when a new tab is selected.\n     * Provides references to the `IgxTabComponent` and `IgxTabPanelComponent` as event arguments.\n     * ```html\n     * <igx-bottom-nav (onTableSelected) = \"onTabSelected($event)\"><igx-bottom-nav>\n     * ```\n     * @memberof IgxBottomNavComponent\n     */\n    @Output() public onTabSelected = new EventEmitter<ISelectTabEventArgs>();\n\n    /**\n     * Emits an event when a tab is deselected.\n     * Provides references to the `IgxTabComponent` and `IgxTabPanelComponent` as event arguments.\n     * ```html\n     * <igx-bottom-nav (onTabDeselected) = \"onTabDeselected($event)\"><igx-bottom-nav>\n     * ```\n     * @memberof IgxBottomNavComponent\n     */\n    @Output() public onTabDeselected = new EventEmitter<ISelectTabEventArgs>();\n\n    /**\n     * Gets the `index` of selected tab/panel in the respective collection.\n     * ```typescript\n     * let index =  this.tabBar.selectedIndex;\n     * ```\n     * @memberof IgxBottomNavComponent\n     */\n    public selectedIndex = -1;\n\n    /**\n     * Gets the `itemStyle` of the tab bar.\n     * ```typescript\n     * let itemStyle =  this.tabBar.itemStyle;\n     * ```\n     * @memberof IgxBottomNavComponent\n     */\n    public get itemStyle(): string {\n        return this._itemStyle;\n    }\n\n    /**\n     * @hidden\n     */\n    public get hasContentTabs(): boolean {\n        return (this.contentTabs && this.contentTabs.length > 0);\n    }\n\n    /**\n     * @hidden\n     */\n    private _itemStyle = 'igx-bottom-nav';\n\n    /**\n     * Gets the selected tab in the tab bar.\n     * ```typescript\n     * let tab =  this.tabBar.selectedTab;\n     * ```\n     * @memberof IgxBottomNavComponent\n     */\n    get selectedTab(): IgxTabComponent {\n        if (this.tabs && this.selectedIndex !== undefined) {\n            return this.tabs.toArray()[this.selectedIndex];\n        }\n    }\n\n    constructor(private _element: ElementRef) {\n    }\n\n    /**\n     * @hidden\n     */\n    public ngAfterViewInit() {\n        this.setPanelsAttributes();\n        this._panelsChanges$ = this.panels.changes.subscribe(() => {\n            this.setPanelsAttributes();\n        });\n\n        // initial selection\n        setTimeout(() => {\n            if (this.selectedIndex === -1) {\n                const selectablePanels = this.panels.filter((p) => !p.disabled);\n                const panel = selectablePanels[0];\n                if (panel) {\n                    panel.select();\n                }\n            }\n        }, 0);\n    }\n\n    /**\n     * @hidden\n     */\n    public ngOnDestroy(): void {\n        if (this._panelsChanges$) {\n            this._panelsChanges$.unsubscribe();\n        }\n    }\n\n    private setPanelsAttributes() {\n        const panelsArray = Array.from(this.panels);\n        for (let index = 0; index < this.panels.length; index++) {\n            const tabPanels = panelsArray[index] as IgxTabPanelComponent;\n            tabPanels.nativeElement.setAttribute('id', this.getTabPanelId(index));\n            tabPanels.nativeElement.setAttribute('aria-labelledby', this.getTabId(index));\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('onTabSelected', ['$event'])\n    public _selectedPanelHandler(args) {\n        if (this.hasContentTabs) {\n            this.selectedIndex = args.tab.index;\n            this.contentTabs.forEach((t) => {\n                if (t !== args.tab) {\n                    this._deselectTab(t);\n                }\n            });\n        } else {\n            if (args.panel) {\n                this.selectedIndex = args.panel.index;\n                this.panels.forEach((p) => {\n                    if (p.index !== this.selectedIndex) {\n                        this._deselectPanel(p);\n                    }\n                });\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    private _deselectPanel(panel: IgxTabPanelComponent) {\n        // Cannot deselect the selected tab - this will mean that there will be not selected tab left\n        if (panel.disabled || this.selectedTab.index === panel.index) {\n            return;\n        }\n\n        panel.isSelected = false;\n        this.onTabDeselected.emit({ tab: this.tabs[panel.index], panel });\n    }\n\n    private _deselectTab(aTab: IgxTabComponent) {\n        aTab.isSelected = false;\n        this.onTabDeselected.emit({ tab: aTab, panel: null });\n    }\n\n    /**\n     * @hidden\n     */\n    public getTabId(index: number): string {\n        return `igx-tab-${this._currentBottomNavId}-${index}`;\n    }\n\n    /**\n     * @hidden\n     */\n    public getTabPanelId(index: number): string {\n        return `igx-tab-panel-${this._currentBottomNavId}-${index}`;\n    }\n}\n\n// ================================= IgxTabPanelComponent ======================================\n\n@Component({\n    selector: 'igx-tab-panel',\n    templateUrl: 'tab-panel.component.html'\n})\nexport class IgxTabPanelComponent implements AfterContentInit {\n\n    /**\n     * @hidden\n     */\n    private _itemStyle = 'igx-tab-panel';\n\n    /**\n     * @hidden\n     */\n    private _isSelected = false;\n\n    /**\n     * Sets/gets the `label` of the tab panel.\n     * ```html\n     * <igx-tab-panel [label] = \"'Tab panel label'\"><igx-tab-panel>\n     * ```\n     * ```typescript\n     * let tabPanelLabel = this.tabPanel.label;\n     * ```\n     * @memberof IgxTabPanelComponent\n     */\n    @Input() public label: string;\n\n    /**\n     * Sets/gets  the `icon` of the tab panel.\n     * ```html\n     * <igx-tab-panel [icon] = \"panel_icon\"><igx-tab-panel>\n     * ```\n     * ```typescript\n     * let tabPanelIcon =  this.tabPanel.icon;\n     * ```\n     * @memberof IgxTabPanelComponent\n     */\n    @Input() public icon: string;\n\n    /**\n     * Sets/gets whether the tab panel is disabled.\n     * ```html\n     * <igx-tab-panel [disabled] = \"true\"><igx-tab-panel>\n     * ```\n     * ```typescript\n     * let isDisabled = this.tabPanel.disabled;\n     * ```\n     * @memberof IgxTabPanelComponent\n     */\n    @Input() public disabled: boolean;\n\n    /**\n     * Gets the role of the tab panel.\n     * ```typescript\n     * let tabPanelRole = this.tabPanel.role;\n     * ```\n     * @memberof IgxTabPanelComponent\n     */\n    @HostBinding('attr.role') public role = 'tabpanel';\n\n    /**\n     * Gets whether a tab panel will have `igx-bottom-nav__panel` class.\n     * ```typescript\n     * let styleClass = this.tabPanel.styleClass;\n     * ```\n     * @memberof IgxTabPanelComponent\n     */\n    @HostBinding('class.igx-bottom-nav__panel')\n    get styleClass(): boolean {\n        return (!this.isSelected);\n    }\n\n    /**\n     * Sets/gets whether a tab panel is selected.\n     * ```typescript\n     * this.tabPanel.isSelected = true;\n     * ```\n     * ```typescript\n     * let isSelected =  this.tabPanel.isSelected;\n     * ```\n     * @memberof IgxTabPanelComponent\n     */\n    @HostBinding('class.igx-bottom-nav__panel--selected')\n    public get isSelected(): boolean {\n        return this._isSelected;\n    }\n    public set isSelected(newValue: boolean) {\n        if (this._isSelected !== newValue) {\n            if (newValue) {\n                this.select();\n            } else {\n                this._isSelected = newValue;\n            }\n        }\n    }\n\n    /**\n     * Gets the `itemStyle` of the tab panel.\n     * ```typescript\n     * let itemStyle = this.tabPanel.itemStyle;\n     * ```\n     * @memberof IgxTabPanelComponent\n     */\n    public get itemStyle(): string {\n        return this._itemStyle;\n    }\n\n    /**\n     * Returns the native element of the tab-panel component\n     * ```typescript\n     *  const mytabPanelElement: HTMLElement = tabPanel.nativeElement;\n     * ```\n     */\n    public get nativeElement() {\n        return this._element.nativeElement;\n    }\n\n    /**\n     * Gets the tab associated with the panel.\n     * ```typescript\n     * let tab = this.tabPanel.relatedTab;\n     * ```\n     * @memberof IgxTabPanelComponent\n     */\n    get relatedTab(): IgxTabComponent {\n        if (this._tabBar.tabs) {\n            return this._tabBar.tabs.toArray()[this.index];\n        }\n    }\n\n    /**\n     * Gets the changes and updates accordingly applied to the tab/panel.\n     *\n     * @memberof IgxTabComponent\n     */\n    get changesCount(): number {\n        return this.relatedTab ? this.relatedTab.changesCount : 0;\n    }\n\n    /**\n     * Gets the index of a panel in the panels collection.\n     * ```typescript\n     * let panelIndex =  this.tabPanel.index\n     * ```\n     * @memberof IgxTabPanelComponent\n     */\n    get index() {\n        if (this._tabBar.panels) {\n            return this._tabBar.panels.toArray().indexOf(this);\n        }\n    }\n\n    /**\n     * Gets the tab template.\n     * ```typescript\n     * let tabTemplate = this.tabPanel.customTabTemplate\n     * ```\n     * @memberof IgxTabPanelComponent\n     */\n    get customTabTemplate(): TemplateRef<any> {\n        return this._tabTemplate;\n    }\n\n    /**\n     * Sets the tab template.\n     * ```typescript\n     * this.tabPanel.customTabTemplate(tabTemplate);\n     * ```\n     * @memberof IgxTabPanelComponent\n     */\n    set customTabTemplate(template: TemplateRef<any>) {\n        this._tabTemplate = template;\n    }\n\n    /**\n     * @hidden\n     */\n    private _tabTemplate: TemplateRef<any>;\n\n    /**\n     * @hidden\n     */\n    @ContentChild(IgxTabTemplateDirective, { read: IgxTabTemplateDirective })\n    protected tabTemplate: IgxTabTemplateDirective;\n\n    constructor(private _tabBar: IgxBottomNavComponent, private _element: ElementRef) {\n    }\n\n    /**\n     * @hidden\n     */\n    public ngAfterContentInit(): void {\n        if (this.tabTemplate) {\n            this._tabTemplate = this.tabTemplate.template;\n        }\n    }\n\n\n    /**\n     * Selects the current tab and the tab panel.\n     * ```typescript\n     * this.tabPanel.select();\n     * ```\n     * @memberof IgxTabPanelComponent\n     */\n    public select() {\n        if (this.disabled || this._tabBar.selectedIndex === this.index) {\n            return;\n        }\n\n        this._isSelected = true;\n        this._tabBar.onTabSelected.emit({ tab: this._tabBar.tabs.toArray()[this.index], panel: this });\n    }\n}\n\n// ======================================= IgxTabComponent ==========================================\n\n@Component({\n    selector: 'igx-tab',\n    templateUrl: 'tab.component.html'\n})\nexport class IgxTabComponent {\n    /**\n     * Gets the `role` attribute.\n     * ```typescript\n     * let tabRole = this.tab.role;\n     * ```\n     * @memberof IgxTabComponent\n     */\n    @HostBinding('attr.role')\n    public role = 'tab';\n\n    /**\n     * @hidden @internal\n     */\n    @HostBinding('attr.aria-label')\n    public ariaLabel = this.label;\n\n    /**\n     * @hidden @internal\n     */\n    @HostBinding('attr.aria-disabled')\n    public ariaDisabled = this.disabled;\n\n    /**\n     * @hidden @internal\n     */\n    @HostBinding('attr.aria-selected')\n    public ariaSelected = this.isSelected;\n\n\n    /**\n     * Gets the panel associated with the tab.\n     * ```typescript\n     * let tabPanel =  this.tab.relatedPanel;\n     * ```\n     * @memberof IgxTabComponent\n     */\n    @Input()\n    public relatedPanel: IgxTabPanelComponent;\n\n    /**\n     * @hidden\n     */\n    private _label: string;\n\n    /**\n     * Sets/gets the `label` of the tab panel.\n     * ```html\n     * <igx-tab [label] = \"'Tab label'\"><igx-tab>\n     * ```\n     * ```typescript\n     * let tabLabel = this.tab.label;\n     * ```\n     * @memberof IgxTabComponent\n     */\n    @Input()\n    public get label(): string {\n        return this.relatedPanel ? this.relatedPanel.label : this._label;\n    }\n    public set label(newValue: string) {\n        if (this.relatedPanel) {\n            this.relatedPanel.label = newValue;\n        }\n        this._label = newValue;\n    }\n\n    /**\n     * @hidden\n     */\n    private _icon: string;\n\n    /**\n     * Sets/gets  the `icon` of the tab panel.\n     * ```html\n     * <igx-tab [icon] = \"tab_icon\"><igx-tab>\n     * ```\n     * ```typescript\n     * let tabIcon =  this.tab.icon;\n     * ```\n     * @memberof IgxTabComponent\n     */\n    @Input()\n    public get icon(): string {\n        return this.relatedPanel ? this.relatedPanel.icon : this._icon;\n    }\n    public set icon(newValue: string) {\n        if (this.relatedPanel) {\n            this.relatedPanel.icon = newValue;\n        }\n        this._icon = newValue;\n    }\n\n    /**\n     * @hidden\n     */\n    private _changesCount = 0; // changes and updates accordingly applied to the tab.\n\n    /**\n     * Gets the changes and updates accordingly applied to the tab.\n     *\n     * @memberof IgxTabComponent\n     */\n    get changesCount(): number {\n        return this._changesCount;\n    }\n\n    private _disabled = false;\n\n    /**\n     * Gets whether the tab is disabled.\n     * ```typescript\n     * let isDisabled = this.tab.disabled;\n     * ```\n     * @memberof IgxTabComponent\n     */\n    @Input()\n    get disabled(): boolean {\n        return this.relatedPanel ? this.relatedPanel.disabled : this._disabled;\n    }\n    set disabled(newValue: boolean) {\n        if (this.relatedPanel) {\n            this.relatedPanel.disabled = newValue;\n        } else {\n            this._disabled = newValue;\n        }\n    }\n\n    public _selected = false;\n\n    /**\n     * Gets whether the tab is selected.\n     * ```typescript\n     * let isSelected  = this.tab.isSelected;\n     * ```\n     * @memberof IgxTabComponent\n     */\n    @Input()\n    set isSelected(newValue: boolean) {\n        if (this.relatedPanel) {\n            this.relatedPanel.isSelected = newValue;\n        } else if (this._selected !== newValue) {\n            this._selected = newValue;\n            if (this._selected) {\n                this._tabBar.onTabSelected.emit({ tab: this, panel: null });\n            }\n        }\n    }\n    get isSelected(): boolean {\n        return this.relatedPanel ? this.relatedPanel.isSelected : this._selected;\n    }\n\n    /**\n     * @hidden @internal\n     * Set to true when the tab is automatically generated from the IgxBottomNavComponent when tab panels are defined.\n     */\n    @Input()\n    public autoGenerated: boolean;\n\n    @HostBinding('class.igx-bottom-nav__menu-item--selected')\n    public get cssClassSelected(): boolean {\n        return this.isSelected;\n    }\n\n    @HostBinding('class.igx-bottom-nav__menu-item--disabled')\n    public get cssClassDisabled(): boolean {\n        return this.disabled;\n    }\n\n    @HostBinding('class.igx-bottom-nav__menu-item')\n    public get cssClass(): boolean {\n        return (!this.disabled && !this.isSelected);\n    }\n\n    /**\n     * Gets the `index` of the tab.\n     * ```typescript\n     * let tabIndex = this.tab.index;\n     * ```\n     * @memberof IgxTabComponent\n     */\n    public get index(): number {\n        if (this._tabBar.tabs) {\n            return this._tabBar.tabs.toArray().indexOf(this);\n        }\n    }\n\n    /** @hidden */\n    @ViewChild('defaultTabTemplate', { read: TemplateRef, static: true })\n    protected defaultTabTemplate: TemplateRef<any>;\n\n    /** @hidden */\n    @ContentChild(IgxTabTemplateDirective, { read: IgxTabTemplateDirective })\n    protected customTabTemplateDir: IgxTabTemplateDirective;\n\n    /**\n     * Returns the `template` for this IgxTabComponent.\n     * ```typescript\n     * let tabItemTemplate = this.tabItem.template;\n     * ```\n     * @memberof IgxTabComponent\n     */\n    public get template(): TemplateRef<any> {\n        if (this.relatedPanel && this.relatedPanel.customTabTemplate) {\n            return this.relatedPanel.customTabTemplate;\n        }\n        if (this.customTabTemplateDir) {\n            return this.customTabTemplateDir.template;\n        }\n        return this.defaultTabTemplate;\n    }\n\n    /**\n     * Returns the `context` object for the template of this `IgxTabComponent`.\n     * ```typescript\n     * let tabItemContext = this.tabItem.context;\n     * ```\n     */\n    public get context(): any {\n        return this.relatedPanel ? this.relatedPanel : this;\n    }\n\n    constructor(private _tabBar: IgxBottomNavComponent, private _element: ElementRef) {\n    }\n\n    /**\n     * Selects the current tab and the associated panel.\n     * ```typescript\n     * this.tab.select();\n     * ```\n     * @memberof IgxTabComponent\n     */\n    public select() {\n        if (this.relatedPanel) {\n            this.relatedPanel.select();\n        } else {\n            this._selected = true;\n            this._tabBar.onTabSelected.emit({ tab: this, panel: null });\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('click')\n    public onClick() {\n        if (this.autoGenerated) {\n            this.select();\n        }\n    }\n\n    public elementRef(): ElementRef {\n        return this._element;\n    }\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [IgxBottomNavComponent, IgxTabPanelComponent, IgxTabComponent, IgxTabTemplateDirective],\n    exports: [IgxBottomNavComponent, IgxTabPanelComponent, IgxTabComponent, IgxTabTemplateDirective],\n    imports: [CommonModule, IgxBadgeModule, IgxIconModule]\n})\nexport class IgxBottomNavModule {\n}\n","import { ElementRef, QueryList, EventEmitter } from '@angular/core';\n\n/** @hidden */\nexport abstract class IgxTabsBase {\n    selectedIndicator: ElementRef<any>;\n    tabs: QueryList<IgxTabItemBase>;\n    groups: QueryList<IgxTabsGroupBase>;\n    offset: number;\n    selectedIndex: number;\n    viewPort: ElementRef;\n    contentsContainer: ElementRef;\n    tabsContainer: ElementRef;\n    itemsContainer: ElementRef;\n    headerContainer: ElementRef;\n    onTabItemSelected: EventEmitter<{}>; // TODO: Define event arg interface!\n    hasContentTabs: boolean;\n    scrollElement(element: any, scrollRight: boolean) {}\n    performSelectionChange(newTab: IgxTabItemBase) {}\n    transformContentAnimation(tab: IgxTabItemBase, duration: number) {}\n    transformIndicatorAnimation(element: HTMLElement, duration?: number) {}\n}\n\n/** @hidden */\nexport abstract class IgxTabItemBase {\n    nativeTabItem: ElementRef;\n    get index(): number { return 0; }\n    select(): void {}\n    setSelectedInternal(newValue: boolean) {}\n}\n\n/** @hidden */\nexport abstract class IgxTabsGroupBase {\n    select(): void {}\n    setSelectedInternal(newValue: boolean) {}\n}\n","import {\n    Directive,\n    HostBinding,\n    TemplateRef\n} from '@angular/core';\nimport { IgxTabsBase } from './tabs.common';\n\nenum ButtonStyle {\n    VISIBLE = 'visible',\n    HIDDEN = 'hidden',\n    NOT_DISPLAYED = 'not_displayed'\n}\n\n@Directive({\n    selector: '[igxRightButtonStyle]'\n})\n\nexport class IgxRightButtonStyleDirective {\n    constructor(public tabs: IgxTabsBase) {\n    }\n\n    @HostBinding('class.igx-tabs__header-button')\n    get visibleCSS(): boolean {\n        return (this.getRightButtonStyle() === ButtonStyle.VISIBLE) ? true : false;\n    }\n\n    @HostBinding('class.igx-tabs__header-button--hidden')\n    get hiddenCSS(): boolean {\n        return (this.getRightButtonStyle() === ButtonStyle.HIDDEN) ? true : false;\n    }\n\n    @HostBinding('class.igx-tabs__header-button--none')\n    get notDisplayedCSS(): boolean {\n        return (this.getRightButtonStyle() === ButtonStyle.NOT_DISPLAYED) ? true : false;\n    }\n\n    private getRightButtonStyle(): string {\n        const viewPortWidth = this.tabs.viewPort.nativeElement.offsetWidth;\n\n        // We use this hacky way to get the width of the itemsContainer,\n        // because there is inconsistency in IE we cannot use offsetWidth or scrollOffset.\n        const itemsContainerChildrenCount = this.tabs.itemsContainer.nativeElement.children.length;\n        let itemsContainerWidth = 0;\n        if (itemsContainerChildrenCount > 1) {\n            const lastTab = this.tabs.itemsContainer.nativeElement.children[itemsContainerChildrenCount - 2];\n            itemsContainerWidth = lastTab.offsetLeft + lastTab.offsetWidth;\n        }\n        const headerContainerWidth = this.tabs.headerContainer.nativeElement.offsetWidth;\n        const offset = this.tabs.offset;\n        const total = offset + viewPortWidth;\n\n        // Fix for IE 11, a difference is accumulated from the widths calculations.\n        if (itemsContainerWidth - headerContainerWidth <= 1 && offset === 0) {\n            return ButtonStyle.NOT_DISPLAYED;\n        }\n\n        if (itemsContainerWidth > total) {\n            return ButtonStyle.VISIBLE;\n        } else {\n            return ButtonStyle.HIDDEN;\n        }\n    }\n}\n\n@Directive({\n    selector: '[igxLeftButtonStyle]'\n})\n\nexport class IgxLeftButtonStyleDirective {\n    constructor(public tabs: IgxTabsBase) {\n    }\n\n    @HostBinding('class.igx-tabs__header-button')\n    get visibleCSS(): boolean {\n        return (this.getLeftButtonStyle() === ButtonStyle.VISIBLE) ? true : false;\n    }\n\n    @HostBinding('class.igx-tabs__header-button--hidden')\n    get hiddenCSS(): boolean {\n        return (this.getLeftButtonStyle() === ButtonStyle.HIDDEN) ? true : false;\n    }\n\n    @HostBinding('class.igx-tabs__header-button--none')\n    get notDisplayedCSS(): boolean {\n        return (this.getLeftButtonStyle() === ButtonStyle.NOT_DISPLAYED) ? true : false;\n    }\n\n    private getLeftButtonStyle(): string {\n        // We use this hacky way to get the width of the itemsContainer,\n        // because there is inconsistency in IE we cannot use offsetWidth or scrollOffset.\n        const itemsContainerChildrenCount = this.tabs.itemsContainer.nativeElement.children.length;\n        let itemsContainerWidth = 0;\n        if (itemsContainerChildrenCount > 1) {\n            const lastTab = this.tabs.itemsContainer.nativeElement.children[itemsContainerChildrenCount - 2];\n            itemsContainerWidth = lastTab.offsetLeft + lastTab.offsetWidth;\n        }\n        const headerContainerWidth = this.tabs.headerContainer.nativeElement.offsetWidth;\n        const offset = this.tabs.offset;\n        if (offset === 0) {\n            // Fix for IE 11, a difference is accumulated from the widths calculations.\n            if (itemsContainerWidth - headerContainerWidth <= 1) {\n                return ButtonStyle.NOT_DISPLAYED;\n            }\n            return ButtonStyle.HIDDEN;\n        } else {\n            return ButtonStyle.VISIBLE;\n        }\n    }\n}\n\n@Directive({\n    selector: '[igxTab]'\n})\nexport class IgxTabItemTemplateDirective {\n\n    constructor(public template: TemplateRef<any>) {\n    }\n}\n","import {\n    Component,\n    ContentChild,\n    ElementRef,\n    HostBinding,\n    HostListener,\n    Input,\n    TemplateRef,\n    ViewChild,\n    NgZone,\n    AfterViewInit,\n    OnDestroy\n} from '@angular/core';\nimport { KEYS } from '../core/utils';\nimport { IgxTabsGroupComponent } from './tabs-group.component';\nimport { IgxTabItemBase, IgxTabsBase } from './tabs.common';\nimport { IgxTabItemTemplateDirective } from './tabs.directives';\nimport ResizeObserver from 'resize-observer-polyfill';\n\n@Component({\n    selector: 'igx-tab-item',\n    templateUrl: 'tab-item.component.html'\n})\n\nexport class IgxTabItemComponent extends IgxTabItemBase implements AfterViewInit, OnDestroy {\n    /**\n     * Gets the group associated with the tab.\n     * ```html\n     * const relatedGroup = this.tabbar.tabs.toArray()[1].relatedGroup;\n     * ```\n     */\n    @Input()\n    public relatedGroup: IgxTabsGroupComponent;\n\n    /** @hidden */\n    private _icon: string;\n\n    /**\n     * An @Input property that sets the value of the `icon`.\n     * The value should be valid icon name from {@link https://material.io/tools/icons/?style=baseline}.\n     * ```html\n     * <igx-tab-item label=\"Tab 1\" icon=\"home\">\n     * ```\n     */\n    @Input()\n    public get icon(): string {\n        return this.relatedGroup ? this.relatedGroup.icon : this._icon;\n    }\n    public set icon(newValue: string) {\n        if (this.relatedGroup) {\n            this.relatedGroup.icon = newValue;\n        }\n        this._icon = newValue;\n    }\n\n    /** @hidden */\n    private _label: string;\n\n    /**\n     * An @Input property that sets the value of the `label`.\n     * ```html\n     * <igx-tabs-item label=\"Tab 2\" icon=\"folder\">\n     * ```\n     */\n    @Input()\n    public get label(): string {\n        return this.relatedGroup ? this.relatedGroup.label : this._label;\n    }\n    public set label(newValue: string) {\n        if (this.relatedGroup) {\n            this.relatedGroup.label = newValue;\n        }\n        this._label = newValue;\n    }\n\n    /**\n     * @hidden @internal\n     * Set to true when the tab item is automatically generated from the IgxTabsComponent when tab groups are defined.\n     */\n    @Input()\n    public autoGenerated: boolean;\n\n    /** @hidden */\n    @ViewChild('defaultTabTemplate', { read: TemplateRef, static: true })\n    protected defaultTabTemplate: TemplateRef<any>;\n\n    /** @hidden */\n    @ContentChild(IgxTabItemTemplateDirective, { read: IgxTabItemTemplateDirective })\n    protected customTabTemplateDir: IgxTabItemTemplateDirective;\n\n    private _nativeTabItem: ElementRef;\n    private _changesCount = 0; // changes and updates accordingly applied to the tab.\n    private _isSelected = false;\n    private _disabled = false;\n    private _resizeObserver: ResizeObserver;\n\n    constructor(private _tabs: IgxTabsBase, private _element: ElementRef, private _ngZone: NgZone) {\n        super();\n        this._nativeTabItem = _element;\n    }\n\n    @HostBinding('class.igx-tabs__header-menu-item--selected')\n    public get provideCssClassSelected(): boolean {\n        return this.isSelected;\n    }\n\n    @HostBinding('class.igx-tabs__header-menu-item--disabled')\n    public get provideCssClassDisabled(): boolean {\n        return this.disabled;\n    }\n\n    @HostBinding('class.igx-tabs__header-menu-item')\n    public get provideCssClass(): boolean {\n        return (!this.disabled && !this.isSelected);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    @HostBinding('attr.role')\n    public role = 'tab';\n\n    /**\n     * @hidden @internal\n     */\n    @HostBinding('attr.tabindex')\n    public tabindex = -1;\n\n    /**\n     * @hidden @internal\n     */\n    @HostBinding('attr.aria-label')\n    public ariaLabel = this.label;\n\n    /**\n     * @hidden @internal\n     */\n    @HostBinding('attr.aria-disabled')\n    public ariaDisabled = this.disabled;\n\n    /**\n     * @hidden @internal\n     */\n    @HostBinding('attr.aria-selected')\n    public ariaSelected = this.isSelected;\n\n    ngAfterViewInit(): void {\n        this._ngZone.runOutsideAngular(() => {\n            this._resizeObserver = new ResizeObserver(() => {\n                this._tabs.transformIndicatorAnimation(this._nativeTabItem.nativeElement, 0);\n            });\n        });\n    }\n\n    ngOnDestroy(): void {\n        this._ngZone.runOutsideAngular(() => {\n            this._resizeObserver.disconnect();\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('click', ['$event'])\n    public onClick(event) {\n        if (this.autoGenerated) {\n            this.select();\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('keydown', ['$event'])\n    public onKeydown(event: KeyboardEvent) {\n        const tabsArray = this._tabs.tabs.toArray();\n        const startIndex = tabsArray.indexOf(this);\n        let finalIndex = -1;\n        let currentIndex = startIndex;\n\n        switch (event.key) {\n            case KEYS.RIGHT_ARROW:\n            case KEYS.RIGHT_ARROW_IE:\n                do {\n                    currentIndex++;\n                    if (currentIndex === tabsArray.length) {\n                        currentIndex = -1;\n                        continue;\n                    } else if ((tabsArray[currentIndex] as IgxTabItemComponent).disabled === false) {\n                        finalIndex = currentIndex;\n                        break;\n                    }\n                }\n                while (currentIndex !== startIndex);\n                break;\n            case KEYS.LEFT_ARROW:\n            case KEYS.LEFT_ARROW_IE:\n                do {\n                    currentIndex--;\n                    if (currentIndex === -1) {\n                        currentIndex = tabsArray.length;\n                        continue;\n                    } else if ((tabsArray[currentIndex] as IgxTabItemComponent).disabled === false) {\n                        finalIndex = currentIndex;\n                        break;\n                    }\n                }\n                while (currentIndex !== startIndex);\n                break;\n            case KEYS.HOME:\n                event.preventDefault();\n                finalIndex = tabsArray.find(t => (t as IgxTabItemComponent).disabled === false).index;\n                break;\n            case KEYS.END:\n                event.preventDefault();\n                finalIndex = tabsArray.slice().reverse().find(t => (t as IgxTabItemComponent).disabled === false).index;\n                break;\n            case KEYS.ENTER:\n                if (!this.autoGenerated) {\n                    this.nativeTabItem.nativeElement.click();\n                }\n                break;\n            case KEYS.SPACE:\n            case KEYS.SPACE_IE:\n                event.preventDefault();\n                if (!this.autoGenerated) {\n                    this.nativeTabItem.nativeElement.click();\n                }\n                break;\n            default:\n                break;\n        }\n\n        if (finalIndex > -1) {\n            const tab = tabsArray[finalIndex];\n            tab.nativeTabItem.nativeElement.focus();\n\n            if (this.autoGenerated) {\n                tab.select();\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    get changesCount(): number {\n        return this._changesCount;\n    }\n\n    /**\n     * @hidden\n     */\n    get nativeTabItem(): ElementRef {\n        return this._nativeTabItem;\n    }\n\n    /**\n     * \tGets whether the tab is disabled.\n     * ```\n     * const disabledItem = this.myTabComponent.tabs.first.disabled;\n     * ```\n     */\n    @Input()\n    get disabled(): boolean {\n        return this.relatedGroup ? this.relatedGroup.disabled : this._disabled;\n    }\n    set disabled(newValue: boolean) {\n        if (this.relatedGroup) {\n            this.relatedGroup.disabled = newValue;\n        } else {\n            this._disabled = newValue;\n        }\n    }\n\n    /**\n     * Gets whether the tab is selected.\n     * ```typescript\n     * const selectedItem = this.myTabComponent.tabs.first.isSelected;\n     * ```\n     */\n    @Input()\n    get isSelected(): boolean {\n        return this.relatedGroup ? this.relatedGroup.isSelected : this._isSelected;\n    }\n    set isSelected(newValue: boolean) {\n        if (!this.disabled && this.isSelected !== newValue) {\n            this._tabs.performSelectionChange(newValue ? this : null);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public select(): void {\n        if (!this.disabled && !this.isSelected) {\n            this._tabs.performSelectionChange(this);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    get index(): number {\n        if (this._tabs.tabs) {\n            return this._tabs.tabs.toArray().indexOf(this);\n        }\n        return -1;\n    }\n\n    /**\n     * @hidden\n     */\n    public setSelectedInternal(newValue: boolean) {\n        this._isSelected = newValue;\n        this._ngZone.runOutsideAngular(() => {\n            if (this._resizeObserver) {\n                if (this._isSelected) {\n                    this._resizeObserver.observe(this._element.nativeElement);\n                } else {\n                    this._resizeObserver.disconnect();\n                }\n            }\n        });\n        this.tabindex = newValue ? 0 : -1;\n    }\n\n    /**\n     * @hidden\n     */\n    public get template(): TemplateRef<any> {\n        if (this.relatedGroup && this.relatedGroup.customTabTemplate) {\n            return this.relatedGroup.customTabTemplate;\n        }\n        if (this.customTabTemplateDir) {\n            return this.customTabTemplateDir.template;\n        }\n        return this.defaultTabTemplate;\n    }\n\n    /**\n     * @hidden\n     */\n    public get context(): any {\n        return this.relatedGroup ? this.relatedGroup : this;\n    }\n}\n","import {\n    AfterContentInit,\n    Component,\n    ContentChild,\n    ElementRef,\n    HostBinding,\n    Input,\n    TemplateRef,\n} from '@angular/core';\n\nimport { IgxTabItemComponent } from './tab-item.component';\nimport { IgxTabItemTemplateDirective } from './tabs.directives';\nimport { IgxTabsBase, IgxTabsGroupBase } from './tabs.common';\n\n@Component({\n    selector: 'igx-tabs-group',\n    templateUrl: 'tabs-group.component.html'\n})\n\nexport class IgxTabsGroupComponent extends IgxTabsGroupBase implements AfterContentInit {\n    /**\n     * An @Input property that allows you to enable/disable the `IgxTabGroupComponent`.\n     * ```html\n     * <igx-tabs-group label=\"Tab 2  Lorem ipsum dolor sit\" icon=\"home\" [disabled]=\"true\">\n     * ```\n     */\n    @Input()\n    public disabled = false;\n\n    /**\n     * An @Input property that sets the value of the `icon`.\n     * The value should be valid icon name from {@link https://material.io/tools/icons/?style=baseline}.\n     * ```html\n     * <igx-tabs-group label=\"Tab 1\" icon=\"home\">\n     * ```\n     */\n    @Input()\n    public icon: string;\n\n    /**\n     * An @Input property that sets the value of the `label`.\n     * ```html\n     * <igx-tabs-group label=\"Tab 1\" icon=\"folder\">\n     * ```\n     */\n    @Input()\n    public label: string;\n\n    /**\n     * Sets/gets whether a tab group is selected.\n     * ```typescript\n     * this.tabGroup.isSelected = true;\n     * ```\n     * ```typescript\n     * let isSelected = this.tabGroup.isSelected;\n     * ```\n     * @memberof IgxTabsGroupComponent\n     */\n    public get isSelected(): boolean {\n        return this._isSelected;\n    }\n    public set isSelected(newValue: boolean) {\n        if (!this.disabled && this.isSelected !== newValue) {\n            this._tabs.performSelectionChange(newValue ? this.relatedTab : null);\n        }\n    }\n\n    /**\n     * Returns the native element of the tabs-group component\n     * ```typescript\n     *  const mytabsGroupElement: HTMLElement = tabsGroup.nativeElement;\n     * ```\n     */\n    public get nativeElement() {\n        return this._element.nativeElement;\n    }\n\n    /**\n     * @hidden\n     */\n    @ContentChild(IgxTabItemTemplateDirective, { read: IgxTabItemTemplateDirective })\n    protected tabTemplate: IgxTabItemTemplateDirective;\n\n    private _tabTemplate: TemplateRef<any>;\n    private _isSelected = false;\n\n    constructor(private _tabs: IgxTabsBase, private _element: ElementRef) {\n        super();\n    }\n\n    /**\n     * @hidden\n     */\n    @HostBinding('attr.role')\n    public role = 'tabpanel';\n\n\n    /**\n     * @hidden\n     */\n    @HostBinding('class.igx-tabs__group')\n    public styleClass = true;\n\n    /**\n     * An accessor that returns the `IgxTabItemComponent` component.\n     * ```typescript\n     * @ViewChild(\"MyTabsGroup\")\n     * public tab: IgxTabsGroupComponent;\n     * ngAfterViewInIt(){\n     *    let tabComponent = this.tab.relatedTab;\n     * }\n     * ```\n     */\n    get relatedTab(): IgxTabItemComponent {\n        if (this._tabs.tabs) {\n            return this._tabs.tabs.toArray()[this.index] as IgxTabItemComponent;\n        }\n    }\n\n    /**\n     * An accessor that returns the value of the index of the `IgxTabsGroupComponent`.\n     * ```typescript\n     * @ViewChild(\"MyTabsGroup\")\n     * public tab: IgxTabsGroupComponent;\n     * ngAfterViewInIt(){\n     *    let tabIndex = this.tab.index;\n     * }\n     * ```\n     */\n    get index(): number {\n        if (this._tabs.groups) {\n            return this._tabs.groups.toArray().indexOf(this);\n        }\n        return -1;\n    }\n\n    /**\n     * @hidden\n     */\n    get customTabTemplate(): TemplateRef<any> {\n        return this._tabTemplate;\n    }\n\n    /**\n     * @hidden\n     */\n    set customTabTemplate(template: TemplateRef<any>) {\n        this._tabTemplate = template;\n    }\n\n    /**\n     * @hidden\n     */\n    public ngAfterContentInit(): void {\n        if (this.tabTemplate) {\n            this._tabTemplate = this.tabTemplate.template;\n        }\n    }\n\n    /**\n     * A method that sets the focus on a tab.\n     * @memberof {@link IgxTabsGroupComponent}\n     * ```typescript\n     *  @ViewChild(\"MyChild\")\n     * public tab : IgxTabsGroupComponent;\n     * ngAfterViewInit(){\n     *     this.tab.select();\n     * }\n     * ```\n     */\n    public select(): void {\n        if (!this.disabled && !this.isSelected) {\n            this._tabs.performSelectionChange(this.relatedTab);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public setSelectedInternal(newValue: boolean) {\n        this._isSelected = newValue;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n    AfterViewInit,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    HostBinding,\n    Input,\n    NgModule,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewChildren,\n    OnDestroy,\n    NgZone\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { IgxBadgeModule } from '../badge/badge.component';\nimport { IgxRippleModule } from '../directives/ripple/ripple.directive';\nimport { IgxIconModule } from '../icon/public_api';\nimport { IgxTabItemComponent } from './tab-item.component';\nimport { IgxTabsGroupComponent } from './tabs-group.component';\nimport { IgxLeftButtonStyleDirective, IgxRightButtonStyleDirective, IgxTabItemTemplateDirective } from './tabs.directives';\nimport { IgxTabsBase, IgxTabItemBase } from './tabs.common';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport { PlatformUtil } from '../core/utils';\n\nexport enum IgxTabsType {\n    FIXED = 'fixed',\n    CONTENTFIT = 'contentfit'\n}\n\nlet NEXT_TABS_ID = 0;\n\n@Component({\n    selector: 'igx-tabs',\n    templateUrl: 'tabs.component.html',\n    providers: [{ provide: IgxTabsBase, useExisting: IgxTabsComponent }]\n})\n\nexport class IgxTabsComponent implements IgxTabsBase, AfterViewInit, OnDestroy {\n    private _currentTabsId = NEXT_TABS_ID++;\n\n    /**\n     * Provides an observable collection of all `IgxTabsGroupComponent`s.\n     * ```typescript\n     * const groupItems = this.myTabComponent.groups;\n     * ```\n     */\n    @ContentChildren(forwardRef(() => IgxTabsGroupComponent))\n    public groups: QueryList<IgxTabsGroupComponent>;\n\n    /**\n     * Provides an observable collection of all `IgxTabItemComponent`s defined in the page.\n     * ```typescript\n     * const tabItems = this.myTabComponent.contentTabs;\n     * ```\n     */\n    @ContentChildren(forwardRef(() => IgxTabItemComponent))\n    public contentTabs: QueryList<IgxTabItemComponent>;\n\n    /**\n     * An @Input property that sets the value of the `selectedIndex`.\n     * Default value is 0.\n     * ```html\n     * <igx-tabs selectedIndex=\"1\">\n     * ```\n     *\n     * Two-way data binding.\n     * ```html\n     * <igx-tabs [(selectedIndex)]=\"model.selectedIndex\">\n     * ```\n     */\n    @Input()\n    public get selectedIndex(): number {\n        return this._selectedIndex;\n    }\n\n    public set selectedIndex(index: number) {\n        const newIndex = typeof index !== 'number' ? parseInt(index, 10) : index;\n        if (this._selectedIndex !== newIndex) {\n            if (this.tabs && this.tabs.length > 0) {\n                const newTab = this.tabs.toArray()[newIndex];\n                if (newTab) {\n                   this.performSelectionChange(newTab);\n                }\n            } else {\n                this._selectedIndex = newIndex;\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    @Output()\n    public selectedIndexChange = new EventEmitter<number>();\n\n    /**\n     * Defines the tab header sizing mode. You can choose between `contentfit` or `fixed`.\n     * By default the header sizing mode is `contentfit`.\n     * ```html\n     * <igx-tabs type=\"fixed\">\n     *     <igx-tabs-group label=\"HOME\">Home</igx-tabs-group>\n     * </igx-tabs>\n     * ```\n     */\n    @Input('type')\n    public type: string | IgxTabsType = 'contentfit';\n\n    /**\n     * Sets/gets the `id` of the tabs.\n     *\n     * @remarks\n     * If not set, the `id` will have value `\"igx-tabs-0\"`.\n     *\n     * @example\n     * ```html\n     * <igx-tabs id=\"my-first-tabs\"></igx-tabs>\n     * ```\n     * @memberof IgxTabsComponent\n     */\n    @HostBinding('attr.id')\n    @Input()\n    public id = `igx-tabs-${this._currentTabsId}`;\n\n    /**\n     * @hidden\n     */\n    @Input()\n    public class = '';\n\n    /**\n     * Emitted when a tab item is deselected.\n     * ```html\n     * <igx-tabs (onTabItemDeselected)=\"itemDeselected($event)\">\n     *      <igx-tabs-group label=\"Tab 1\">This is Tab 1 content.</igx-tabs-group>\n     *      <igx-tabs-group label=\"Tab 2\">This is Tab 2 content.</igx-tabs-group>\n     * </igx-tabs>\n     * ```\n     * ```typescript\n     * itemDeselected(e){\n     *      const tabGroup = e.group;\n     *      const tabItem = e.tab;\n     * }\n     * ```\n     */\n    @Output()\n    public onTabItemDeselected = new EventEmitter();\n\n    /**\n     * Emitted when a tab item is selected.\n     * ```html\n     * <igx-tabs (onTabItemSelected)=\"itemSelected($event)\">\n     *      <igx-tabs-group label=\"Tab 1\">This is Tab 1 content.</igx-tabs-group>\n     *      <igx-tabs-group label=\"Tab 2\">This is Tab 2 content.</igx-tabs-group>\n     * </igx-tabs>\n     * ```\n     * ```typescript\n     * itemSelected(e){\n     *      const tabGroup = e.group;\n     *      const tabItem = e.tab;\n     * }\n     * ```\n     */\n    @Output()\n    public onTabItemSelected = new EventEmitter();\n\n    /**\n     * @hidden\n     */\n    @ViewChild('contentsContainer', { static: true })\n    public contentsContainer: ElementRef;\n\n    /**\n     * @hidden\n     */\n    @ViewChild('headerContainer', { static: true })\n    public headerContainer: ElementRef;\n\n    /**\n     * @hidden\n     */\n    @ViewChild('itemsContainer', { static: true })\n    public itemsContainer: ElementRef;\n\n    /**\n     * @hidden\n     */\n    @ViewChild('selectedIndicator')\n    public selectedIndicator: ElementRef;\n\n    /**\n     * @hidden\n     */\n    @ViewChild('tabsContainer', { static: true })\n    public tabsContainer: ElementRef;\n\n    /**\n     * @hidden\n     */\n    @ViewChild('viewPort', { static: true })\n    public viewPort: ElementRef;\n\n    /**\n     * Provides an observable collection of all `IgxTabItemComponent`s.\n     * ```typescript\n     * const tabItems = this.myTabComponent.viewTabs;\n     * ```\n     */\n    @ViewChildren(forwardRef(() => IgxTabItemComponent))\n    public viewTabs: QueryList<IgxTabItemComponent>;\n\n    /**\n     * Provides an observable collection of all `IgxTabItemComponent`s.\n     * First try to get them as content children if not available get them as view children.\n     * ```typescript\n     * const tabItems = this.myTabComponent.tabs;\n     * ```\n     */\n    public get tabs(): QueryList<IgxTabItemComponent> {\n        if (this.hasContentTabs) {\n            return this.contentTabs;\n        }\n        return this.viewTabs;\n    }\n\n    /**\n     * @hidden\n     */\n    public get hasContentTabs(): boolean {\n        return (this.contentTabs && this.contentTabs.length > 0);\n    }\n\n    /**\n     * @hidden\n     */\n    public calculatedWidth: number;\n\n    /**\n     * @hidden\n     */\n    public visibleItemsWidth: number;\n\n    /**\n     * @hidden\n     */\n    public offset = 0;\n\n    private _groupChanges$: Subscription;\n    private _selectedIndex = -1;\n    private _resizeObserver: ResizeObserver;\n\n    /**\n     * @hidden\n     */\n    @HostBinding('attr.class')\n    public get cssClass() {\n        const defaultStyle = `igx-tabs`;\n        const fixedStyle = `igx-tabs--fixed`;\n        const iconStyle = `igx-tabs--icons`;\n        const iconLabelFoundInGroups = this.groups.find((group) => group.icon != null && group.label != null);\n        const iconLabelFoundInTabs = this.contentTabs.find((tab) => tab.icon != null && tab.label != null);\n        let css: string;\n        switch (IgxTabsType[this.type.toUpperCase()]) {\n            case IgxTabsType.FIXED: {\n                css = fixedStyle;\n                break;\n            }\n            default: {\n                css = defaultStyle;\n                break;\n            }\n        }\n\n        // Layout fix for items with icons\n        if (iconLabelFoundInGroups !== undefined || iconLabelFoundInTabs !== undefined) {\n            css = `${css} ${iconStyle}`;\n        }\n\n        return `${css} ${this.class}`;\n    }\n\n    /**\n     * @hidden\n     */\n    public scrollLeft(event): void {\n        this.scroll(false);\n    }\n\n    /**\n     * @hidden\n     */\n    public scrollRight(event): void {\n        this.scroll(true);\n    }\n\n    /**\n     * @hidden\n     */\n    public scrollElement(element: any, scrollRight: boolean): void {\n        const viewPortWidth = this.viewPort.nativeElement.offsetWidth;\n\n        this.offset = (scrollRight) ? element.offsetWidth + element.offsetLeft - viewPortWidth : element.offsetLeft;\n        this.itemsContainer.nativeElement.style.transform = `translate(${-this.offset}px)`;\n    }\n\n    /**\n     * Gets the selected `IgxTabItemComponent`.\n     * ```\n     * const selectedItem = this.myTabComponent.selectedTabItem;\n     * ```\n     */\n    get selectedTabItem(): IgxTabItemComponent {\n        if (this.tabs && this.selectedIndex !== undefined) {\n            return this.tabs.toArray()[this.selectedIndex];\n        }\n    }\n\n    constructor(private _element: ElementRef, private _ngZone: NgZone, private platformUtil: PlatformUtil) { }\n\n    /**\n     * @hidden\n     */\n    public ngAfterViewInit() {\n        if (this._selectedIndex === -1) {\n            this.tabs.forEach((t) => {\n                if (t.isSelected) {\n                    this._selectedIndex = t.index;\n                }\n            });\n        }\n\n        if (!this.hasContentTabs && (this.selectedIndex < 0 || this.selectedIndex >= this.groups.length)) {\n            this._selectedIndex = 0;\n        }\n\n        if (this.platformUtil.isBrowser) {\n            requestAnimationFrame(() => {\n                const newTab = this.tabs.toArray()[this._selectedIndex];\n                if (newTab) {\n                    this.performSelection(newTab);\n                } else {\n                    this.hideIndicator();\n                }\n            });\n            this._ngZone.runOutsideAngular(() => {\n                this._resizeObserver = new ResizeObserver(() => {\n                    if (!this.hasContentTabs && this._selectedIndex >= 0 && this._selectedIndex < this.tabs.length) {\n                        const newTab = this.tabs.toArray()[this._selectedIndex];\n                        this.transformContentAnimation(newTab, 0);\n                    }\n                });\n\n                this._resizeObserver.observe(this.tabsContainer.nativeElement);\n            });\n        }\n\n        this.setGroupsAttributes();\n        this._groupChanges$ = this.groups.changes.subscribe(() => {\n            this.setGroupsAttributes();\n            this.resetSelectionOnCollectionChanged();\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    public ngOnDestroy(): void {\n        if (this._groupChanges$) {\n            this._groupChanges$.unsubscribe();\n        }\n        if (this._resizeObserver) {\n            this._ngZone.runOutsideAngular(() => {\n                this._resizeObserver.disconnect();\n            });\n        }\n    }\n\n    private setGroupsAttributes() {\n        const groupsArray = Array.from(this.groups);\n        for (let index = 0; index < this.groups.length; index++) {\n            const tabsGroup = groupsArray[index] as IgxTabsGroupComponent;\n            tabsGroup.nativeElement.setAttribute('id', this.getTabsGroupId(index));\n            tabsGroup.nativeElement.setAttribute('aria-labelledby', this.getTabItemId(index));\n        }\n    }\n\n    private resetSelectionOnCollectionChanged(): void {\n        requestAnimationFrame(() => {\n            const currentTab = this.tabs.toArray()[this.selectedIndex];\n            if (currentTab) {\n                this.performSelectionChange(currentTab);\n            } else if (this.selectedIndex >= this.tabs.length) {\n                this.performSelectionChange(this.tabs.last);\n            } else {\n                this.hideIndicator();\n            }\n        });\n    }\n\n    private scroll(scrollRight: boolean): void {\n        const tabsArray = this.tabs.toArray();\n        for (const tab of tabsArray) {\n            const element = tab.nativeTabItem.nativeElement;\n            if (scrollRight) {\n                if (element.offsetWidth + element.offsetLeft > this.viewPort.nativeElement.offsetWidth + this.offset) {\n                    this.scrollElement(element, scrollRight);\n                    break;\n                }\n            } else {\n                if (element.offsetWidth + element.offsetLeft >= this.offset) {\n                    this.scrollElement(element, scrollRight);\n                    break;\n                }\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public performSelectionChange(newTab: IgxTabItemBase): void {\n        const oldTab = this.selectedTabItem;\n        if (oldTab) {\n            this.performDeselection(oldTab);\n        }\n        if (newTab) {\n            this.performSelection(newTab);\n        } else {\n            // if there is no new selected tab hide the selection indicator\n            this.hideIndicator();\n        }\n        this.selectedIndexChange.emit(this._selectedIndex);\n    }\n\n    private performDeselection(oldTab: IgxTabItemBase): void {\n        oldTab.setSelectedInternal(false);\n        const oldTabRelatedGroup = this.groups.toArray()[oldTab.index];\n        if (oldTabRelatedGroup) {\n            oldTabRelatedGroup.setSelectedInternal(false);\n        }\n        this._selectedIndex = -1;\n        this.onTabItemDeselected.emit({ tab: oldTab, group: oldTabRelatedGroup });\n    }\n\n    private performSelection(newTab: IgxTabItemBase): void {\n        newTab.setSelectedInternal(true);\n        this._selectedIndex = newTab.index;\n\n        let newTabRelatedGroup = null;\n        if (!this.hasContentTabs && this.groups) {\n            newTabRelatedGroup = this.groups.toArray()[newTab.index];\n            if (newTabRelatedGroup) {\n                newTabRelatedGroup.setSelectedInternal(true);\n            }\n        }\n\n        this.onTabItemSelected.emit({ tab: newTab, group: newTabRelatedGroup });\n\n        requestAnimationFrame(() => {\n            // bring the new selected tab into view if it is not\n            this.bringNewTabIntoView(newTab);\n            // animate the new selection indicator\n            this.transformIndicatorAnimation(newTab.nativeTabItem.nativeElement);\n            // animate the new tab's group content\n            if (!this.hasContentTabs) {\n                this.transformContentAnimation(newTab, 0.2);\n            }\n        });\n    }\n\n    private bringNewTabIntoView(newTab: IgxTabItemBase): void {\n        const tabNativeElement = newTab.nativeTabItem.nativeElement;\n\n        // Scroll left if there is need\n        if (tabNativeElement.offsetLeft < this.offset) {\n            this.scrollElement(tabNativeElement, false);\n        }\n\n        // Scroll right if there is need\n        const viewPortOffsetWidth = this.viewPort.nativeElement.offsetWidth;\n        const delta = (tabNativeElement.offsetLeft + tabNativeElement.offsetWidth) - (viewPortOffsetWidth + this.offset);\n\n        // Fix for IE 11, a difference is accumulated from the widths calculations\n        if (delta > 1) {\n            this.scrollElement(tabNativeElement, true);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public getTabItemId(index: number): string {\n        return `igx-tab-item-${this._currentTabsId}-${index}`;\n    }\n\n    /**\n     * @hidden\n     */\n    public getTabsGroupId(index: number): string {\n        return `igx-tabs-group-${this._currentTabsId}-${index}`;\n    }\n\n    /**\n     * @hidden\n     */\n    // animation for the new panel/group (not needed for tab only mode)\n    public transformContentAnimation(tab: IgxTabItemBase, duration: number): void {\n        const contentOffset = this.tabsContainer.nativeElement.offsetWidth * tab.index;\n        this.contentsContainer.nativeElement.style.transitionDuration = duration > 0 ? `${duration}s` : 'initial';\n        this.contentsContainer.nativeElement.style.transform = `translate(${-contentOffset}px)`;\n    }\n\n    /**\n     * @hidden\n     */\n    public transformIndicatorAnimation(element: HTMLElement, duration = 0.3): void {\n        if (this.selectedIndicator) {\n            this.selectedIndicator.nativeElement.style.visibility = 'visible';\n            this.selectedIndicator.nativeElement.style.transitionDuration = duration > 0 ? `${duration}s` : 'initial';\n            this.selectedIndicator.nativeElement.style.width = `${element.offsetWidth}px`;\n            this.selectedIndicator.nativeElement.style.transform = `translate(${element.offsetLeft}px)`;\n        }\n    }\n\n    public hideIndicator(): void {\n        if (this.selectedIndicator) {\n            this.selectedIndicator.nativeElement.style.visibility = 'hidden';\n        }\n    }\n\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [IgxTabsComponent,\n        IgxTabsGroupComponent,\n        IgxTabItemComponent,\n        IgxTabItemTemplateDirective,\n        IgxRightButtonStyleDirective,\n        IgxLeftButtonStyleDirective],\n    exports: [IgxTabsComponent,\n        IgxTabsGroupComponent,\n        IgxTabItemComponent,\n        IgxTabItemTemplateDirective,\n        IgxRightButtonStyleDirective,\n        IgxLeftButtonStyleDirective],\n    imports: [CommonModule, IgxBadgeModule, IgxIconModule, IgxRippleModule]\n})\n\nexport class IgxTabsModule {\n}\n","import { ElementRef } from '@angular/core';\nimport { InteractionMode } from '../core/enums';\n\n/** @hidden */\nexport const IGX_TIME_PICKER_COMPONENT = 'IgxTimePickerComponentToken';\n\n/** @hidden */\nexport interface IgxTimePickerBase {\n    hourList: ElementRef;\n    minuteList: ElementRef;\n    secondsList: ElementRef;\n    ampmList: ElementRef;\n    selectedHour: string;\n    selectedMinute: string;\n    selectedSeconds: string;\n    selectedAmPm: string;\n    format: string;\n    promptChar: string;\n    cleared: boolean;\n    mode: InteractionMode;\n    showHoursList: boolean;\n    showMinutesList: boolean;\n    showSecondsList: boolean;\n    showAmPmList: boolean;\n    nextHour();\n    prevHour();\n    nextMinute();\n    prevMinute();\n    nextSeconds();\n    prevSeconds();\n    nextAmPm();\n    prevAmPm();\n    okButtonClick(): boolean;\n    cancelButtonClick(): void;\n    scrollHourIntoView(item: string): void;\n    scrollMinuteIntoView(item: string): void;\n    scrollSecondsIntoView(item: string): void;\n    scrollAmPmIntoView(item: string): void;\n    close(): void;\n    parseMask(preserveAmPm?: boolean): string;\n}\n\n","/**\n * This file contains all the directives used by the @link IgxTimePickerComponent.\n * You should generally not use them directly.\n * @preferred\n */\nimport {\n    Directive,\n    ElementRef,\n    HostBinding,\n    HostListener,\n    Inject,\n    Input,\n    TemplateRef\n} from '@angular/core';\nimport { IGX_TIME_PICKER_COMPONENT, IgxTimePickerBase } from './time-picker.common';\nimport { InteractionMode } from '../core/enums';\n\n/** @hidden */\n@Directive({\n    selector: '[igxItemList]'\n})\nexport class IgxItemListDirective {\n\n    @Input('igxItemList')\n    public type: string;\n\n    public isActive: boolean;\n\n    constructor(\n        @Inject(IGX_TIME_PICKER_COMPONENT) public timePicker: IgxTimePickerBase,\n        private elementRef: ElementRef\n    ) { }\n\n    @HostBinding('attr.tabindex')\n    public tabindex = 0;\n\n    @HostBinding('class.igx-time-picker__column')\n    get defaultCSS(): boolean {\n        return true;\n    }\n\n    @HostBinding('class.igx-time-picker__hourList')\n    get hourCSS(): boolean {\n        return this.type === 'hourList';\n    }\n\n    @HostBinding('class.igx-time-picker__minuteList')\n    get minuteCSS(): boolean {\n        return this.type === 'minuteList';\n    }\n\n    @HostBinding('class.igx-time-picker__secondsList')\n    get secondsCSS(): boolean {\n        return this.type === 'secondsList';\n    }\n\n    @HostBinding('class.igx-time-picker__ampmList')\n    get ampmCSS(): boolean {\n        return this.type === 'ampmList';\n    }\n\n    @HostListener('focus')\n    public onFocus() {\n        this.isActive = true;\n    }\n\n    @HostListener('blur')\n    public onBlur() {\n        this.isActive = false;\n    }\n\n    private nextItem(): void {\n        switch (this.type) {\n            case 'hourList': {\n                this.timePicker.nextHour();\n                break;\n            }\n            case 'minuteList': {\n                this.timePicker.nextMinute();\n                break;\n            }\n            case 'secondsList': {\n                this.timePicker.nextSeconds();\n                break;\n            }\n            case 'ampmList': {\n                this.timePicker.nextAmPm();\n                break;\n            }\n        }\n    }\n\n    private prevItem(): void {\n        switch (this.type) {\n            case 'hourList': {\n                this.timePicker.prevHour();\n                break;\n            }\n            case 'minuteList': {\n                this.timePicker.prevMinute();\n                break;\n            }\n            case 'secondsList': {\n                this.timePicker.prevSeconds();\n                break;\n            }\n            case 'ampmList': {\n                this.timePicker.prevAmPm();\n                break;\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('keydown.arrowdown', ['$event'])\n    public onKeydownArrowDown(event: KeyboardEvent) {\n        event.preventDefault();\n\n        this.nextItem();\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('keydown.arrowup', ['$event'])\n    public onKeydownArrowUp(event: KeyboardEvent) {\n        event.preventDefault();\n\n        this.prevItem();\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('keydown.arrowright', ['$event'])\n    public onKeydownArrowRight(event: KeyboardEvent) {\n        event.preventDefault();\n\n        const listName = (event.target as HTMLElement).className;\n\n        if (listName.indexOf('hourList') !== -1 && this.timePicker.minuteList) {\n            this.timePicker.minuteList.nativeElement.focus();\n        } else if ((listName.indexOf('hourList') !== -1 || listName.indexOf('minuteList') !== -1) && this.timePicker.secondsList) {\n            this.timePicker.secondsList.nativeElement.focus();\n        } else if ((listName.indexOf('hourList') !== -1 || listName.indexOf('minuteList') !== -1 ||\n            listName.indexOf('secondsList') !== -1) && this.timePicker.ampmList) {\n            this.timePicker.ampmList.nativeElement.focus();\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('keydown.arrowleft', ['$event'])\n    public onKeydownArrowLeft(event: KeyboardEvent) {\n        event.preventDefault();\n        const listName = (event.target as HTMLElement).className;\n\n        if (listName.indexOf('ampmList') !== -1 && this.timePicker.secondsList) {\n            this.timePicker.secondsList.nativeElement.focus();\n        } else if (listName.indexOf('secondsList') !== -1 && this.timePicker.secondsList\n            && listName.indexOf('minutesList') && this.timePicker.minuteList) {\n            this.timePicker.minuteList.nativeElement.focus();\n        } else if (listName.indexOf('ampmList') !== -1 && this.timePicker.minuteList) {\n            this.timePicker.minuteList.nativeElement.focus();\n        } else if ((listName.indexOf('ampmList') !== -1 || listName.indexOf('secondsList') !== -1 ||\n            listName.indexOf('minuteList') !== -1) && this.timePicker.hourList) {\n            this.timePicker.hourList.nativeElement.focus();\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('keydown.enter', ['$event'])\n    public onKeydownEnter(event: KeyboardEvent) {\n        event.preventDefault();\n\n        if (this.timePicker.mode === InteractionMode.DropDown) {\n            this.timePicker.close();\n            return;\n        }\n        this.timePicker.okButtonClick();\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('keydown.escape', ['$event'])\n    public onKeydownEscape(event: KeyboardEvent) {\n        event.preventDefault();\n\n        this.timePicker.cancelButtonClick();\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('mouseover')\n    public onHover() {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('wheel', ['$event'])\n    public onScroll(event) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (event.deltaY > 0) {\n            this.nextItem();\n        } else if (event.deltaY < 0) {\n            this.prevItem();\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('panmove', ['$event'])\n    public onPanMove(event) {\n        if (event.deltaY < 0) {\n            this.nextItem();\n        } else if (event.deltaY > 0) {\n            this.prevItem();\n        }\n    }\n}\n\n/**\n * @hidden\n */\n@Directive({\n    selector: '[igxHourItem]'\n})\nexport class IgxHourItemDirective {\n\n    @Input('igxHourItem')\n    public value: string;\n\n    @HostBinding('class.igx-time-picker__item')\n    get defaultCSS(): boolean {\n        return true;\n    }\n\n    @HostBinding('class.igx-time-picker__item--selected')\n    get selectedCSS(): boolean {\n        return this.isSelectedHour;\n    }\n\n    @HostBinding('class.igx-time-picker__item--active')\n    get activeCSS(): boolean {\n        return this.isSelectedHour && this.itemList.isActive;\n    }\n\n    get isSelectedHour(): boolean {\n        return this.timePicker.selectedHour === this.value;\n    }\n\n    constructor(@Inject(IGX_TIME_PICKER_COMPONENT)\n    public timePicker: IgxTimePickerBase,\n        private itemList: IgxItemListDirective) { }\n\n    @HostListener('click', ['value'])\n    public onClick(item) {\n        if (item !== '') {\n            this.timePicker.scrollHourIntoView(item);\n        }\n    }\n}\n\n/**\n * @hidden\n */\n@Directive({\n    selector: '[igxMinuteItem]'\n})\nexport class IgxMinuteItemDirective {\n\n    @Input('igxMinuteItem')\n    public value: string;\n\n    @HostBinding('class.igx-time-picker__item')\n    get defaultCSS(): boolean {\n        return true;\n    }\n\n    @HostBinding('class.igx-time-picker__item--selected')\n    get selectedCSS(): boolean {\n        return this.isSelectedMinute;\n    }\n\n    @HostBinding('class.igx-time-picker__item--active')\n    get activeCSS(): boolean {\n        return this.isSelectedMinute && this.itemList.isActive;\n    }\n\n    get isSelectedMinute(): boolean {\n        return this.timePicker.selectedMinute === this.value;\n    }\n\n    constructor(@Inject(IGX_TIME_PICKER_COMPONENT)\n    public timePicker: IgxTimePickerBase,\n        private itemList: IgxItemListDirective) { }\n\n    @HostListener('click', ['value'])\n    public onClick(item) {\n        if (item !== '') {\n            this.timePicker.scrollMinuteIntoView(item);\n        }\n    }\n}\n\n/**\n * @hidden\n */\n@Directive({\n    selector: '[igxSecondsItem]'\n})\nexport class IgxSecondsItemDirective {\n\n    @Input('igxSecondsItem')\n    public value: string;\n\n    @HostBinding('class.igx-time-picker__item')\n    get defaultCSS(): boolean {\n        return true;\n    }\n\n    @HostBinding('class.igx-time-picker__item--selected')\n    get selectedCSS(): boolean {\n        return this.isSelectedSeconds;\n    }\n\n    @HostBinding('class.igx-time-picker__item--active')\n    get activeCSS(): boolean {\n        return this.isSelectedSeconds && this.itemList.isActive;\n    }\n\n    get isSelectedSeconds(): boolean {\n        return this.timePicker.selectedSeconds === this.value;\n    }\n\n    constructor(@Inject(IGX_TIME_PICKER_COMPONENT)\n    public timePicker: IgxTimePickerBase,\n        private itemList: IgxItemListDirective) { }\n\n    @HostListener('click', ['value'])\n    public onClick(item) {\n        if (item !== '') {\n            this.timePicker.scrollSecondsIntoView(item);\n        }\n    }\n}\n\n/**\n * @hidden\n */\n@Directive({\n    selector: '[igxAmPmItem]'\n})\nexport class IgxAmPmItemDirective {\n\n    @Input('igxAmPmItem')\n    public value: string;\n\n    @HostBinding('class.igx-time-picker__item')\n    get defaultCSS(): boolean {\n        return true;\n    }\n\n    @HostBinding('class.igx-time-picker__item--selected')\n    get selectedCSS(): boolean {\n        return this.isSelectedAmPm;\n    }\n\n    @HostBinding('class.igx-time-picker__item--active')\n    get activeCSS(): boolean {\n        return this.isSelectedAmPm && this.itemList.isActive;\n    }\n\n    get isSelectedAmPm(): boolean {\n        return this.timePicker.selectedAmPm === this.value;\n    }\n\n    constructor(@Inject(IGX_TIME_PICKER_COMPONENT)\n    public timePicker: IgxTimePickerBase,\n        private itemList: IgxItemListDirective) { }\n\n    @HostListener('click', ['value'])\n    public onClick(item) {\n        if (item !== '') {\n            this.timePicker.scrollAmPmIntoView(item);\n        }\n    }\n}\n\n/**\n * This directive should be used to mark which ng-template will be used from IgxTimePicker when re-templating its input group.\n */\n@Directive({\n    selector: '[igxTimePickerTemplate]'\n})\nexport class IgxTimePickerTemplateDirective {\n    constructor(public template: TemplateRef<any>) { }\n}\n\n/**\n * This directive can be used to add custom action buttons to the dropdownb/dialog.\n */\n@Directive({\n    selector: '[igxTimePickerActions]'\n})\nexport class IgxTimePickerActionsDirective {\n    constructor(public template: TemplateRef<any>) { }\n}\n","import { Pipe, PipeTransform, Inject } from '@angular/core';\nimport { IGX_TIME_PICKER_COMPONENT, IgxTimePickerBase } from './time-picker.common';\n\n\n/**\n * Formats `IgxTimePickerComponent` display value according to the `format` property,\n * when the input element loses focus.\n */\n@Pipe({ name: 'displayFormat' })\nexport class TimeDisplayFormatPipe implements PipeTransform {\n    constructor(@Inject(IGX_TIME_PICKER_COMPONENT) private timePicker: IgxTimePickerBase) { }\n\n    transform(value: any): string {\n        let hour, minutes, seconds, amPM;\n\n        const maskAmPM = this.timePicker.parseMask();\n        const mask = this.timePicker.parseMask(false);\n        if (!value || value === mask || value === maskAmPM) {\n            return '';\n        }\n\n        const sections = value.split(/[\\s:]+/);\n\n        if (this.timePicker.showHoursList) {\n            hour = sections[0];\n        }\n\n        if (this.timePicker.showMinutesList) {\n            minutes = this.timePicker.showHoursList ? sections[1] : sections[0];\n        }\n\n        if (this.timePicker.showSecondsList) {\n            seconds = sections[sections.length - (this.timePicker.showAmPmList ? 2 : 1)];\n        }\n\n        if (this.timePicker.showAmPmList) {\n            amPM = sections[sections.length - 1];\n        }\n\n        const format = this.timePicker.format;\n        const prompt = this.timePicker.promptChar;\n        const regExp = new RegExp(this.timePicker.promptChar, 'g');\n\n        if (format.indexOf('hh') !== -1 || format.indexOf('HH') !== -1 && hour.indexOf(prompt) !== -1) {\n            hour = hour === prompt + prompt ? '00' : hour.replace(regExp, '0');\n        }\n\n        if (format.indexOf('mm') !== -1 && minutes.indexOf(prompt) !== -1) {\n            minutes = minutes === prompt + prompt ? '00' : minutes.replace(regExp, '0');\n        }\n\n        if (format.indexOf('ss') !== -1 && seconds.indexOf(prompt) !== -1) {\n            seconds = seconds === prompt + prompt ? '00' : seconds.replace(regExp, '0');\n        }\n\n        if (format.indexOf('hh') === -1 && format.indexOf('HH') === -1 && hour !== undefined) {\n            hour = hour.indexOf(prompt) !== -1 ? hour.replace(regExp, '') : hour;\n            const hourVal = parseInt(hour, 10);\n            hour = !hourVal ? '0' : hourVal < 10 && hourVal !== 0 ? hour.replace('0', '') : hour;\n        }\n\n        if (format.indexOf('mm') === -1 && minutes !== undefined) {\n            minutes = minutes.indexOf(prompt) !== -1 ? minutes.replace(regExp, '') : minutes;\n            const minutesVal = parseInt(minutes, 10);\n            minutes = !minutesVal ? '0' : minutesVal < 10 && minutesVal !== 0 ? minutes.replace('0', '') : minutes;\n        }\n\n        if (format.indexOf('ss') === -1 && seconds !== undefined) {\n            seconds = seconds.indexOf(prompt) !== -1 ? seconds.replace(regExp, '') : seconds;\n            const secondsVal = parseInt(seconds, 10);\n            seconds = !secondsVal ? '0' : secondsVal < 10 && secondsVal !== 0 ? seconds.replace('0', '') : seconds;\n        }\n\n        if (format.indexOf('tt') !== -1 && (amPM !== 'AM' || amPM !== 'PM')) {\n            amPM = amPM.indexOf('p') !== -1 || amPM.indexOf('P') !== -1 ? 'PM' : 'AM';\n        }\n\n        let result = `${hour}:${minutes}:${seconds}`;\n        if (!hour) {\n            // remove the hours\n            result = result.slice(result.indexOf(':') + 1);\n        }\n        if (!minutes) {\n            if (hour) {\n                // get the hours and seconds and concat them\n                result = result.slice(0, result.indexOf(':')) +\n                    result.slice(result.lastIndexOf(':'), result.length);\n            } else {\n                // remove the minutes\n                result = result.slice(result.indexOf(':') + 1);\n            }\n        }\n        if (!seconds) {\n            // remove the seconds\n            result = result.slice(0, result.lastIndexOf(':'));\n        }\n\n        return amPM ? `${result} ${amPM}` : result;\n    }\n}\n\n/**\n * Formats `IgxTimePickerComponent` display value according to the `format` property,\n * when the input element gets focus.\n */\n@Pipe({ name: 'inputFormat' })\nexport class TimeInputFormatPipe implements PipeTransform {\n    constructor(@Inject(IGX_TIME_PICKER_COMPONENT) private timePicker: IgxTimePickerBase) { }\n\n    transform(value: any): string {\n        const prompt = this.timePicker.promptChar;\n        const regExp = new RegExp(prompt, 'g');\n\n        let mask, hour, minutes, seconds, amPM;\n\n        if (this.timePicker.cleared) {\n            this.timePicker.cleared = false;\n            mask = this.timePicker.parseMask(false);\n        } else {\n            mask = this.timePicker.parseMask();\n        }\n\n        // TODO: Pending refactoring.\n        value = (this.timePicker as any).displayValue;\n        if (!value || value === mask) {\n            return mask;\n        }\n\n        const sections = value.split(/[\\s:]+/);\n\n        if (this.timePicker.showHoursList) {\n            hour = sections[0];\n            hour = hour.replace(regExp, '');\n\n            const leadZeroHour = (parseInt(hour, 10) < 10 && !hour.startsWith('0')) || hour === '0';\n            hour = leadZeroHour ? '0' + hour : hour;\n        }\n\n        if (this.timePicker.showMinutesList) {\n            minutes = this.timePicker.showHoursList ? sections[1] : sections[0];\n            minutes = minutes.replace(regExp, '');\n\n            const leadZeroMinutes = (parseInt(minutes, 10) < 10 && !minutes.startsWith('0')) || minutes === '0';\n            minutes = leadZeroMinutes ? '0' + minutes : minutes;\n        }\n\n        if (this.timePicker.showSecondsList) {\n            seconds = sections[sections.length - (this.timePicker.showAmPmList ? 2 : 1)];\n            seconds = seconds.replace(regExp, '');\n\n            const leadZeroSeconds = (parseInt(seconds, 10) < 10 && !seconds.startsWith('0')) || seconds === '0';\n            seconds = leadZeroSeconds ? '0' + seconds : seconds;\n        }\n\n        if (this.timePicker.showAmPmList) {\n            amPM = sections[sections.length - 1];\n        }\n\n        let result = `${hour}:${minutes}:${seconds}`;\n        if (!hour) {\n            // remove the hours\n            result = result.slice(result.indexOf(':') + 1);\n        }\n        if (!minutes) {\n            if (hour) {\n                // get the hours and seconds and concat them\n                result = result.slice(0, result.indexOf(':')) +\n                    result.slice(result.lastIndexOf(':'), result.length);\n            } else {\n                // remove the minutes\n                result = result.slice(result.indexOf(':') + 1);\n            }\n        }\n        if (!seconds) {\n            // remove the seconds\n            result = result.slice(0, result.lastIndexOf(':'));\n        }\n\n        return amPM ? `${result} ${amPM}` : result;\n    }\n}\n","import {\n    CommonModule\n} from '@angular/common';\nimport {\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    HostListener,\n    Input,\n    NgModule,\n    OnDestroy,\n    OnInit,\n    Output,\n    TemplateRef,\n    ViewChild,\n    ContentChild,\n    Injectable,\n    AfterViewInit,\n    Injector,\n    ChangeDetectorRef,\n    AfterViewChecked\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NgControl, AbstractControl } from '@angular/forms';\nimport { HAMMER_GESTURE_CONFIG, HammerGestureConfig } from '@angular/platform-browser';\nimport { IgxIconModule } from '../icon/public_api';\nimport { IgxInputGroupModule, IgxInputGroupComponent } from '../input-group/input-group.component';\nimport { IgxInputDirective, IgxInputState } from '../directives/input/input.directive';\nimport {\n    IgxAmPmItemDirective,\n    IgxHourItemDirective,\n    IgxMinuteItemDirective,\n    IgxSecondsItemDirective,\n    IgxItemListDirective,\n    IgxTimePickerTemplateDirective,\n    IgxTimePickerActionsDirective\n} from './time-picker.directives';\nimport { Subject, fromEvent, interval, animationFrameScheduler, Subscription } from 'rxjs';\nimport { EditorProvider } from '../core/edit-provider';\nimport { IgxTimePickerBase, IGX_TIME_PICKER_COMPONENT } from './time-picker.common';\nimport { AbsoluteScrollStrategy } from '../services/overlay/scroll';\nimport { AutoPositionStrategy } from '../services/overlay/position';\nimport { OverlaySettings } from '../services/overlay/utilities';\nimport { takeUntil, throttle } from 'rxjs/operators';\nimport { IgxButtonModule } from '../directives/button/button.directive';\nimport { IgxMaskModule } from '../directives/mask/mask.directive';\nimport { IgxOverlayOutletDirective, IgxToggleModule, IgxToggleDirective } from '../directives/toggle/toggle.directive';\nimport { TimeDisplayFormatPipe, TimeInputFormatPipe } from './time-picker.pipes';\nimport { ITimePickerResourceStrings } from '../core/i18n/time-picker-resources';\nimport { CurrentResourceStrings } from '../core/i18n/resources';\nimport { KEYS, CancelableBrowserEventArgs, IBaseEventArgs } from '../core/utils';\nimport { InteractionMode } from '../core/enums';\n\nlet NEXT_ID = 0;\nconst ITEMS_COUNT = 7;\n\n@Injectable()\nexport class TimePickerHammerConfig extends HammerGestureConfig {\n    public overrides = {\n        pan: { direction: Hammer.DIRECTION_VERTICAL, threshold: 1 }\n    };\n}\n\nexport interface IgxTimePickerValueChangedEventArgs extends IBaseEventArgs {\n    oldValue: Date;\n    newValue: Date;\n}\n\nexport interface IgxTimePickerValidationFailedEventArgs extends IBaseEventArgs {\n    timePicker: IgxTimePickerComponent;\n    currentValue: Date;\n    setThroughUI: boolean;\n}\n\nconst noop = () => { };\n\n@Component({\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: IgxTimePickerComponent,\n            multi: true\n        },\n        {\n            provide: HAMMER_GESTURE_CONFIG,\n            useClass: TimePickerHammerConfig\n        },\n        {\n            provide: IGX_TIME_PICKER_COMPONENT,\n            useExisting: IgxTimePickerComponent\n        }\n    ],\n    selector: 'igx-time-picker',\n    templateUrl: 'time-picker.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ]\n})\nexport class IgxTimePickerComponent implements\n    IgxTimePickerBase,\n    ControlValueAccessor,\n    EditorProvider,\n    OnInit,\n    OnDestroy,\n    AfterViewInit,\n    AfterViewChecked {\n\n    /**\n     * An @Input property that sets the value of the `id` attribute.\n     * ```html\n     * <igx-time-picker [id]=\"'igx-time-picker-5'\" format=\"h:mm tt\" ></igx-time-picker>\n     * ```\n     */\n    @HostBinding('attr.id')\n    @Input()\n    public id = `igx-time-picker-${NEXT_ID++}`;\n\n    /**\n     * An accessor that allows you to set a time using the `value` input.\n     * ```html\n     * public date: Date = new Date(Date.now());\n     *  //...\n     * <igx-time-picker [value]=\"date\" format=\"h:mm tt\"></igx-time-picker>\n     * ```\n     */\n    @Input()\n    set value(value: Date) {\n        if (this._isValueValid(value)) {\n            const oldVal = this._value;\n\n            this._value = value;\n            this._onChangeCallback(value);\n\n            const dispVal = this._formatTime(this.value, this.format);\n            if (this.mode === InteractionMode.DropDown && this._displayValue !== dispVal) {\n                this.displayValue = dispVal;\n            }\n\n            const args: IgxTimePickerValueChangedEventArgs = {\n                oldValue: oldVal,\n                newValue: value\n            };\n            this.onValueChanged.emit(args);\n        } else {\n            const args: IgxTimePickerValidationFailedEventArgs = {\n                timePicker: this,\n                currentValue: value,\n                setThroughUI: false\n            };\n            this.onValidationFailed.emit(args);\n        }\n    }\n\n    /**\n     * An accessor that returns the value of `igx-time-picker` component.\n     * ```html\n     * @ViewChild(\"MyPick\")\n     * public pick: IgxTimePickerComponent;\n     * ngAfterViewInit(){\n     *    let pickSelect = this.pick.value;\n     * }\n     * ```\n     */\n    get value(): Date {\n        return this._value;\n    }\n\n    /**\n     * An @Input property that allows you to disable the `igx-time-picker` component. By default `disabled` is set to false.\n     * ```html\n     * <igx-time-picker [disabled]=\"'true'\" [vertical]=\"true\" format=\"h:mm tt\" ></igx-time-picker>\n     * ```\n     */\n    @Input()\n    public disabled = false;\n\n    /**\n     * An accessor that sets the resource strings.\n     * By default it uses EN resources.\n     */\n    @Input()\n    set resourceStrings(value: ITimePickerResourceStrings) {\n        this._resourceStrings = Object.assign({}, this._resourceStrings, value);\n    }\n\n    /**\n     * An accessor that returns the resource strings.\n     */\n    get resourceStrings(): ITimePickerResourceStrings {\n        return this._resourceStrings;\n    }\n\n    /**\n     * An @Input property that renders OK button with custom text. By default `okButtonLabel` is set to OK.\n     * ```html\n     * <igx-time-picker okButtonLabel='SET' [value]=\"date\" format=\"h:mm tt\"></igx-time-picker>\n     * ```\n     */\n    @Input()\n    set okButtonLabel(value: string) {\n        this._okButtonLabel = value;\n    }\n\n    /**\n     * An accessor that returns the label of ok button.\n     */\n    get okButtonLabel(): string {\n        if (this._okButtonLabel === null) {\n            return this.resourceStrings.igx_time_picker_ok;\n        }\n        return this._okButtonLabel;\n    }\n\n    /**\n     * An @Input property that renders cancel button with custom text.\n     * By default `cancelButtonLabel` is set to Cancel.\n     * ```html\n     * <igx-time-picker cancelButtonLabel='Exit' [value]=\"date\" format=\"h:mm tt\"></igx-time-picker>\n     * ```\n     */\n    @Input()\n    set cancelButtonLabel(value: string) {\n        this._cancelButtonLabel = value;\n    }\n\n    /**\n     * An accessor that returns the label of cancel button.\n     */\n    get cancelButtonLabel(): string {\n        if (this._cancelButtonLabel === null) {\n            return this.resourceStrings.igx_time_picker_cancel;\n        }\n        return this._cancelButtonLabel;\n    }\n\n    /**\n     * An @Input property that gets/sets the delta by which hour and minute items would be changed <br>\n     * when the user presses the Up/Down keys.\n     * By default `itemsDelta` is set to `{hours: 1, minutes: 1, seconds: 1}`\n     * ```html\n     * <igx-time-picker [itemsDelta]=\"{hours:3, minutes:5, seconds:10}\" id=\"time-picker\"></igx-time-picker>\n     * ```\n     */\n    @Input()\n    set itemsDelta(value) {\n        this._itemsDelta = { hours: 1, minutes: 1, seconds: 1, ...value };\n    }\n\n    get itemsDelta(): { hours: number, minutes: number, seconds: number } {\n        return this._itemsDelta;\n    }\n\n    /**\n     * An @Input property that allows you to set the `minValue` to limit the user input.\n     * ```html\n     * public min: string = \"09:00\";\n     *  //..\n     * <igx-time-picker format=\"HH:mm\" [vertical]=\"true\" [minValue]=\"min\"></igx-time-picker>\n     * ```\n     */\n    @Input()\n    public minValue: string;\n\n    /**\n     * An @Input property that allows you to set the `maxValue` to limit the user input.\n     * ```html\n     * public max: string = \"18:00\";\n     *  //..\n     * <igx-time-picker format=\"HH:mm\" [vertical]=\"true\" [maxValue]=\"max\"></igx-time-picker>\n     * ```\n     */\n    @Input()\n    public maxValue: string;\n\n    /**\n     * An @Input property that determines the spin behavior. By default `isSpinLoop` is set to true.\n     * The seconds, minutes and hour spinning will wrap around by default.\n     * ```html\n     * <igx-time-picker [isSpinLoop]=\"false\" id=\"time-picker\"></igx-time-picker>\n     * ```\n     */\n    @Input()\n    public isSpinLoop = true;\n\n    /**\n     * An @Input property that Gets/Sets the orientation of the `igxTimePicker`. By default `vertical` is set to false.\n     * ```html\n     * <igx-time-picker [vertical]=\"true\" id=\"time-picker\"></igx-time-picker>\n     * ```\n     */\n    @Input()\n    public vertical = false;\n\n    /**\n     * An @Input property that Gets/Sets format of time while `igxTimePicker` does not have focus. <br>\n     * By default `format` is set to hh:mm tt. <br>\n     * List of time-flags: <br>\n     * `h` : hours field in 12-hours format without leading zero <br>\n     * `hh` : hours field in 12-hours format with leading zero <br>\n     * `H` : hours field in 24-hours format without leading zero <br>\n     * `HH` : hours field in 24-hours format with leading zero <br>\n     * `m` : minutes field without leading zero <br>\n     * `mm` : minutes field with leading zero <br>\n     * `s` : seconds field without leading zero <br>\n     * `ss` : seconds field with leading zero <br>\n     * `tt` : 2 character string which represents AM/PM field <br>\n     * ```html\n     * <igx-time-picker format=\"HH:m\" id=\"time-picker\"></igx-time-picker>\n     * ```\n     */\n    @Input()\n    get format() {\n        return this._format || 'hh:mm tt';\n    }\n\n    set format(formatValue: string) {\n        this._format = formatValue;\n        this.mask = this._format.indexOf('tt') !== -1 ? '00:00:00 LL' : '00:00:00';\n\n        if (!this.showHoursList || !this.showMinutesList) {\n            this.trimMask();\n        }\n\n        if (!this.showSecondsList) {\n            this.trimMask();\n        }\n\n        if (this.displayValue) {\n            this.displayValue = this._formatTime(this.value, this._format);\n        }\n\n        this.determineCursorPos();\n    }\n\n    /**\n     * Sets the character used to prompt the user for input.\n     * Default value is \"'-'\".\n     * ```html\n     * <igx-time-picker [promptChar] = \"'_'\">\n     * ```\n     * @memberof IgxTimePickerComponent\n     */\n    @Input()\n    public promptChar = '-';\n\n    /**\n     * An @Input property that allows you to switch the interaction mode between\n     * a dialog picker or dropdown with editable masked input.\n     * Deafult is dialog picker.\n     * ```html\n     * public mode = InteractionMode.DROPDOWN;\n     *  //..\n     * <igx-time-picker [mode]=\"mode\"></igx-time-picker>\n     * ```\n     * @memberof IgxTimePickerComponent\n     */\n    @Input()\n    public mode = InteractionMode.Dialog;\n\n    /**\n     * Determines the container the popup element should be attached to.\n     *\n     * ```html\n     * <div igxOverlayOutlet #outlet=\"overlay-outlet\"></div>\n     * //..\n     * <igx-time-picker [outlet]=\"outlet\"></igx-time-picker>\n     * //..\n     * ```\n     * Where `outlet` is an instance of `IgxOverlayOutletDirective` or an `ElementRef`.\n     */\n    @Input()\n    public outlet: IgxOverlayOutletDirective | ElementRef;\n\n    /**\n     * An @Input property that allows you to modify overlay positioning, interaction and scroll behavior.\n     * ```typescript\n     * const settings: OverlaySettings = {\n     *      closeOnOutsideClick: true,\n     *      modal: false\n     *  }\n     * ```\n     * ---\n     * ```html\n     * <igx-time-picker [overlaySettings]=\"settings\"></igx-time-picker>\n     * ```\n     * @memberof IgxTimePickerComponent\n     */\n    @Input()\n    public set overlaySettings(value: OverlaySettings) {\n        this._overlaySettings = value;\n    }\n\n    public get overlaySettings(): OverlaySettings {\n        return this._overlaySettings ? this._overlaySettings :\n            (this.mode === InteractionMode.Dialog ? this._dialogOverlaySettings : this._dropDownOverlaySettings);\n    }\n\n    /**\n     * Emitted when selection is made. The event contains the selected value. Returns {`oldValue`: `Date`, `newValue`: `Date`}.\n     * ```typescript\n     *  @ViewChild(\"toast\")\n     * private toast: IgxToastComponent;\n     * public onValueChanged(timepicker){\n     *     this.toast.show()\n     * }\n     *  //...\n     *  ```\n     *  ```html\n     * <igx-time-picker (onValueChanged)=\"onValueChanged($event)\"></igx-time-picker>\n     * <igx-toast #toast message=\"The value has been changed!\"></igx-toast>\n     * ```\n     */\n    @Output()\n    public onValueChanged = new EventEmitter<IgxTimePickerValueChangedEventArgs>();\n\n    /**\n     * Emitted when an invalid value is being set. Returns {`timePicker`: `any`, `currentValue`: `Date`, `setThroughUI`: `boolean`}\n     * ```typescript\n     * public min: string = \"09:00\";\n     * public max: string = \"18:00\";\n     *  @ViewChild(\"toast\")\n     * private toast: IgxToastComponent;\n     * public onValidationFailed(timepicker){\n     *     this.toast.show();\n     * }\n     *  //...\n     *  ```\n     *  ```html\n     * <igx-time-picker [minValue]=\"min\" [maxValue]=\"max\" (onValidationFailed)=\"onValidationFailed($event)\"></igx-time-picker>\n     * <igx-toast #toast message=\"Value must be between 09:00 and 18:00!\"></igx-toast>\n     * ```\n     */\n    @Output()\n    public onValidationFailed = new EventEmitter<IgxTimePickerValidationFailedEventArgs>();\n\n    /**\n     * Emitted when a timePicker is opened.\n     */\n    @Output()\n    public onOpened = new EventEmitter<IgxTimePickerComponent>();\n\n    /**\n     * Emitted when a timePicker is closed.\n     */\n    @Output()\n    public onClosed = new EventEmitter<IgxTimePickerComponent>();\n\n    /**\n     * Emitted when a timePicker is being closed.\n     */\n    @Output()\n    public onClosing = new EventEmitter<CancelableBrowserEventArgs & IBaseEventArgs>();\n\n    /**\n     * @hidden\n     */\n    @ViewChild('hourList')\n    public hourList: ElementRef;\n\n    /**\n     * @hidden\n     */\n    @ViewChild('minuteList')\n    public minuteList: ElementRef;\n\n    /**\n     * @hidden\n     */\n    @ViewChild('secondsList')\n    public secondsList: ElementRef;\n\n    /**\n     * @hidden\n     */\n    @ViewChild('ampmList')\n    public ampmList: ElementRef;\n\n    /*\n     * @hidden\n     */\n    @ViewChild('defaultTimePickerTemplate', { read: TemplateRef, static: true })\n    protected defaultTimePickerTemplate: TemplateRef<any>;\n\n    @ViewChild('dropdownInputTemplate', { read: TemplateRef, static: true })\n    private dropdownInputTemplate: TemplateRef<any>;\n\n    /**\n     * @hidden\n     */\n    @ContentChild(IgxTimePickerTemplateDirective, { read: IgxTimePickerTemplateDirective })\n    protected timePickerTemplateDirective: IgxTimePickerTemplateDirective;\n\n    /**\n     * @hidden\n     */\n    @ContentChild(IgxTimePickerActionsDirective, { read: IgxTimePickerActionsDirective })\n    public timePickerActionsDirective: IgxTimePickerActionsDirective;\n\n    /**\n     * @hidden\n     */\n    @ViewChild(IgxToggleDirective, { static: true })\n    public toggleRef: IgxToggleDirective;\n\n    @ViewChild(IgxInputDirective, { read: ElementRef })\n    private _inputElementRef: ElementRef;\n\n    @ViewChild(IgxInputDirective, { read: IgxInputDirective})\n    private _inputDirective: IgxInputDirective;\n\n    @ContentChild(IgxInputDirective, { read: IgxInputDirective})\n    private _inputDirectiveUserTemplate: IgxInputDirective;\n\n    @ViewChild(IgxInputGroupComponent, { read: IgxInputGroupComponent })\n    private _inputGroup: IgxInputGroupComponent;\n\n    private _overlaySettings: OverlaySettings;\n\n    /**\n     * @hidden\n     */\n    public _hourItems = [];\n\n    /**\n     * @hidden\n     */\n    public _minuteItems = [];\n\n    /**\n     * @hidden\n     */\n    public _secondsItems = [];\n\n    /**\n     * @hidden\n     */\n    public _ampmItems = [];\n\n    /**\n     * @hidden\n     */\n    public cleared = false;\n\n    /**\n     * @hidden\n     */\n    public isNotEmpty = false;\n\n    /**\n     * @hidden\n     */\n    public displayFormat = new TimeDisplayFormatPipe(this);\n\n    /**\n     * @hidden\n     */\n    public inputFormat = new TimeInputFormatPipe(this);\n\n    /**\n     * @hidden\n     */\n    public selectedHour: string;\n\n    /**\n     * @hidden\n     */\n    public selectedMinute: string;\n\n    /**\n     * @hidden\n     */\n    public selectedSeconds: string;\n\n    /**\n     * @hidden\n     */\n    public selectedAmPm: string;\n\n    /** @hidden @internal */\n    private _value: Date;\n    private _resourceStrings = CurrentResourceStrings.TimePickerResStrings;\n    private _okButtonLabel = null;\n    private _cancelButtonLabel = null;\n    private _format: string;\n    private _mask: string;\n    private _displayValue: string;\n    private _itemsDelta: { hours: number, minutes: number, seconds: number } = { hours: 1, minutes: 1, seconds: 1 };\n\n    private _isHourListLoop = this.isSpinLoop;\n    private _isMinuteListLoop = this.isSpinLoop;\n    private _isSecondsListLoop = this.isSpinLoop;\n\n    private _hourView = [];\n    private _minuteView = [];\n    private _secondsView = [];\n    private _ampmView = [];\n\n    private _dateFromModel: Date;\n    private _destroy$ = new Subject<boolean>();\n    private _statusChanges$: Subscription;\n    private _dropDownOverlaySettings: OverlaySettings;\n    private _dialogOverlaySettings: OverlaySettings;\n\n    private _prevSelectedHour: string;\n    private _prevSelectedMinute: string;\n    private _prevSelectedSeconds: string;\n    private _prevSelectedAmPm: string;\n\n    private _onOpen = new EventEmitter<IgxTimePickerComponent>();\n    private _onClose = new EventEmitter<IgxTimePickerComponent>();\n\n    private _hoursPos = new Set();\n    private _minutesPos = new Set();\n    private _secondsPos = new Set();\n    private _amPmPos = new Set();\n    private _ngControl: NgControl = null;\n\n    //#region ControlValueAccessor\n\n    private _onChangeCallback: (_: Date) => void = noop;\n    private _onTouchedCallback: () => void = noop;\n\n    /** @hidden @internal */\n    public writeValue(value: Date) {\n        // use this flag to make sure that min/maxValue are checked (in _convertMinMaxValue() method)\n        // against the real value when initializing the component and value is bound via ngModel\n        this._dateFromModel = value;\n\n        this._value = value;\n\n        if (this.mode === InteractionMode.DropDown) {\n            this.displayValue = this._formatTime(this.value, this.format);\n        }\n    }\n\n    /** @hidden @internal */\n    public registerOnChange(fn: (_: Date) => void) { this._onChangeCallback = fn; }\n\n    /** @hidden @internal */\n    public registerOnTouched(fn: () => void) { this._onTouchedCallback = fn; }\n\n    /** @hidden @internal */\n    public setDisabledState(isDisabled: boolean): void { this.disabled = isDisabled; }\n\n    //#endregion\n\n    private trimMask(): void {\n        this.mask = this.mask.slice(this.mask.indexOf(':') + 1, this.mask.length);\n    }\n\n    /**\n     * @hidden\n     */\n    get mask(): string {\n        return this._mask || '00:00 LL';\n    }\n\n    set mask(val: string) {\n        this._mask = val;\n    }\n\n    /**\n     * @hidden\n     */\n    get displayValue(): string {\n        if (this._displayValue === undefined) {\n            return this._formatTime(this.value, this.format);\n        }\n        return this._displayValue;\n    }\n\n    set displayValue(value: string) {\n        this._displayValue = value;\n    }\n\n    /**\n     * Returns the current time formatted as string using the `format` option.\n     * If there is no set time the return is an empty string.\n     * ```typescript\n     * @ViewChild(\"MyChild\")\n     * private picker: IgxTimePickerComponent;\n     * ngAfterViewInit(){\n     *    let time = this.picker.displayTime;\n     * }\n     * ```\n     */\n    public get displayTime(): string {\n        if (this.value) {\n            return this._formatTime(this.value, this.format);\n        }\n        return '';\n    }\n\n    /**\n     * @hidden\n     */\n    get hourView(): string[] {\n        return this._hourView;\n    }\n\n    /**\n     * @hidden\n     */\n    get minuteView(): string[] {\n        return this._minuteView;\n    }\n\n    /**\n     * @hidden\n     */\n    get secondsView(): string[] {\n        return this._secondsView;\n    }\n\n    /**\n     * @hidden\n     */\n    get ampmView(): string[] {\n        return this._ampmView;\n    }\n\n    /**\n     * @hidden\n     */\n    get showClearButton(): boolean {\n        return (this.displayValue && this.displayValue !== this.parseMask(false)) || this.isNotEmpty;\n    }\n\n    /**\n     * @hidden\n     */\n    get showHoursList(): boolean {\n        return this.format.indexOf('h') !== - 1 || this.format.indexOf('H') !== - 1;\n    }\n\n    /**\n     * @hidden\n     */\n    get showMinutesList(): boolean {\n        return this.format.indexOf('m') !== - 1;\n    }\n\n    /**\n     * @hidden\n     */\n    get showSecondsList(): boolean {\n        return this.format.indexOf('s') !== - 1;\n    }\n\n    /**\n     * @hidden\n     */\n    get showAmPmList(): boolean {\n        return this.format.indexOf('t') !== - 1;\n    }\n\n    /**\n     * @hidden\n     */\n    get validSecondsEntries(): any[] {\n        const secondsEntries = [];\n        for (let i = 0; i < 60; i++) {\n            secondsEntries.push(i);\n        }\n        return secondsEntries;\n    }\n\n    /**\n     * @hidden\n     */\n    get validMinuteEntries(): any[] {\n        const minuteEntries = [];\n        for (let i = 0; i < 60; i++) {\n            minuteEntries.push(i);\n        }\n        return minuteEntries;\n    }\n\n    /**\n     * @hidden\n     */\n    get validHourEntries(): any[] {\n        const hourEntries = [];\n        const index = this.format.indexOf('h') !== -1 ? 13 : 24;\n        for (let i = 0; i < index; i++) {\n            hourEntries.push(i);\n        }\n        return hourEntries;\n    }\n\n    /**\n     * Gets the input group template.\n     * ```typescript\n     * let template = this.template();\n     * ```\n     * @memberof IgxTimePickerComponent\n     */\n    get template(): TemplateRef<any> {\n        if (this.timePickerTemplateDirective) {\n            return this.timePickerTemplateDirective.template;\n        }\n        return this.mode === InteractionMode.Dialog ? this.defaultTimePickerTemplate : this.dropdownInputTemplate;\n    }\n\n    /**\n     * Gets the context passed to the input group template.\n     * @memberof IgxTimePickerComponent\n     */\n    get context() {\n        return {\n            value: this.value,\n            displayTime: this.displayTime,\n            displayValue: this.displayValue,\n            openDialog: (target?: HTMLElement) => this.openDialog(target)\n        };\n    }\n\n    private get required(): boolean {\n        if (this._ngControl && this._ngControl.control && this._ngControl.control.validator) {\n            // Run the validation with empty object to check if required is enabled.\n            const error = this._ngControl.control.validator({} as AbstractControl);\n            return error && error.required;\n        }\n\n        return false;\n    }\n\n    /**\n     * @hidden\n     */\n    public ngOnInit(): void {\n        this._generateHours();\n        this._generateMinutes();\n        this._generateSeconds();\n        if (this.format.indexOf('tt') !== -1) {\n            this._generateAmPm();\n        }\n\n        this._dropDownOverlaySettings = {\n            modal: false,\n            closeOnOutsideClick: true,\n            scrollStrategy: new AbsoluteScrollStrategy(),\n            positionStrategy: new AutoPositionStrategy()\n        };\n        this._dialogOverlaySettings = {};\n        this._ngControl = this._injector.get<NgControl>(NgControl, null);\n    }\n\n    /**\n     * @hidden\n     */\n    public ngAfterViewInit(): void {\n        if (this.mode === InteractionMode.DropDown && this._inputElementRef) {\n            fromEvent(this._inputElementRef.nativeElement, 'keydown').pipe(\n                throttle(() => interval(0, animationFrameScheduler)),\n                takeUntil(this._destroy$)\n            ).subscribe((event: KeyboardEvent) => {\n                if (event.key === KEYS.UP_ARROW || event.key === KEYS.UP_ARROW_IE ||\n                    event.key === KEYS.DOWN_ARROW || event.key === KEYS.DOWN_ARROW_IE) {\n                    this.spinOnEdit(event);\n                }\n            });\n        }\n\n        if (this.toggleRef && this._inputGroup) {\n            this.toggleRef.element.style.width = this._inputGroup.element.nativeElement.getBoundingClientRect().width + 'px';\n        }\n\n        if (this.toggleRef) {\n            this.toggleRef.onClosed.pipe(takeUntil(this._destroy$)).subscribe(() => {\n                if (this.mode === InteractionMode.DropDown) {\n                    this._onDropDownClosed();\n                }\n\n                this.onClosed.emit(this);\n            });\n\n            this.toggleRef.onOpened.pipe(takeUntil(this._destroy$)).subscribe(() => {\n                this.onOpened.emit(this);\n            });\n\n            this.toggleRef.onClosing.pipe(takeUntil(this._destroy$)).subscribe((event) => {\n                this.onClosing.emit(event);\n                // If canceled in a user onClosing handler\n                if (event.cancel) {\n                    return;\n                }\n                // Do not focus the input if clicking outside in dropdown mode\n                const input = this.getEditElement();\n                if (input && !(event.event && this.mode === InteractionMode.DropDown)) {\n                    input.focus();\n                } else {\n                    this._updateValidityOnBlur();\n                }\n            });\n\n            this.determineCursorPos();\n\n            if (this._ngControl) {\n                this._statusChanges$ = this._ngControl.statusChanges.subscribe(this.onStatusChanged.bind(this));\n            }\n        }\n    }\n\n    public ngAfterViewChecked() {\n        // if one sets mode at run time this forces initialization of new igxInputGroup\n        // As a result a new igxInputDirective is initialized too. In ngAfterViewInit of\n        // the new directive isRequired of the igxInputGroup is set again. However\n        // ngAfterViewInit of the time picker is not called again and we may finish with wrong\n        // isRequired in igxInputGroup. This is why we should set it her, only when needed\n        if (this._inputGroup && this._inputGroup.isRequired !== this.required) {\n            this._inputGroup.isRequired = this.required;\n            this._cdr.detectChanges();\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public ngOnDestroy(): void {\n        this._destroy$.next(true);\n        this._destroy$.complete();\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('keydown.spacebar', ['$event'])\n    @HostListener('keydown.space', ['$event'])\n    public onKeydownSpace(event) {\n        this.openDialog(this.getInputGroupElement());\n        event.preventDefault();\n    }\n\n    /**\n     * @hidden\n     */\n    @HostListener('keydown.Alt.ArrowDown')\n    public onAltArrowDown() {\n        this.openDialog(this.getInputGroupElement());\n    }\n\n    constructor(\n        private _injector: Injector,\n        private _cdr: ChangeDetectorRef) { }\n\n    private determineCursorPos(): void {\n        this.clearCursorPos();\n        for (const char of this.format) {\n            switch (char) {\n                case 'H':\n                case 'h':\n                    this._hoursPos.size === 0 ? this._hoursPos.add(this.format.indexOf(char)) :\n                        this._hoursPos.add(this.format.lastIndexOf(char));\n                    this._hoursPos.add(this.format.lastIndexOf(char) + 1);\n                    break;\n                case 'M':\n                case 'm':\n                    this._minutesPos.size === 0 ? this._minutesPos.add(this.format.indexOf(char)) :\n                        this._minutesPos.add(this.format.lastIndexOf(char));\n                    this._minutesPos.add(this.format.lastIndexOf(char) + 1);\n                    break;\n                case 'S':\n                case 's':\n                    this._secondsPos.size === 0 ? this._secondsPos.add(this.format.indexOf(char)) :\n                        this._secondsPos.add(this.format.lastIndexOf(char));\n                    this._secondsPos.add(this.format.lastIndexOf(char) + 1);\n                    break;\n                case 'T':\n                case 't':\n                    this._amPmPos.size === 0 ? this._amPmPos.add(this.format.indexOf(char)) :\n                        this._amPmPos.add(this.format.lastIndexOf(char));\n                    this._amPmPos.add(this.format.lastIndexOf(char) + 1);\n                    break;\n            }\n        }\n    }\n\n    private clearCursorPos() {\n        this._hoursPos.forEach(v => this._hoursPos.delete(v));\n        this._minutesPos.forEach(v => this._minutesPos.delete(v));\n        this._secondsPos.forEach(v => this._secondsPos.delete(v));\n        this._amPmPos.forEach(v => this._amPmPos.delete(v));\n    }\n\n    private _scrollItemIntoView(item: string, items: any[], selectedItem: string, isListLoop: boolean, viewType: string): any {\n        let itemIntoView;\n        if (items) {\n            const index = (item === 'AM' || item === 'PM') ? items.indexOf(item) : items.indexOf(parseInt(item, 10));\n            let view;\n\n            if (index !== -1) {\n                if (isListLoop) {\n                    if (index > 0) {\n                        selectedItem = this._itemToString(items[index - 1], viewType);\n                        itemIntoView = this._nextItem(items, selectedItem, isListLoop, viewType);\n                    } else {\n                        selectedItem = this._itemToString(items[1], viewType);\n                        itemIntoView = this._prevItem(items, selectedItem, isListLoop, viewType);\n                    }\n                } else {\n                    view = items.slice(index - 3, index + 4);\n                    selectedItem = this._itemToString(items[index], viewType);\n                    itemIntoView = { selectedItem, view };\n                }\n                itemIntoView.view = this._viewToString(itemIntoView.view, viewType);\n            }\n        }\n        return itemIntoView;\n    }\n\n    private _viewToString(view: any, viewType: string): any {\n        for (let i = 0; i < view.length; i++) {\n            if (typeof (view[i]) !== 'string') {\n                view[i] = this._itemToString(view[i], viewType);\n            }\n        }\n        return view;\n    }\n\n    private _itemToString(item: any, viewType: string): string {\n        if (item === null) {\n            item = '';\n        } else if (viewType && typeof (item) !== 'string') {\n            const leadZeroHour = (item < 10 && (this.format.indexOf('hh') !== -1 || this.format.indexOf('HH') !== -1));\n            const leadZeroMinute = (item < 10 && this.format.indexOf('mm') !== -1);\n            const leadZeroSeconds = (item < 10 && this.format.indexOf('ss') !== -1);\n\n            const leadZero = {\n                hour: leadZeroHour,\n                minute: leadZeroMinute,\n                seconds: leadZeroSeconds\n            }[viewType];\n\n            item = (leadZero) ? '0' + item : `${item}`;\n        }\n        return item;\n    }\n\n    private _prevItem(items: any[], selectedItem: string, isListLoop: boolean, viewType: string): any {\n        const selectedIndex = items.indexOf(parseInt(selectedItem, 10));\n        const itemsCount = items.length;\n        let view;\n\n        if (selectedIndex === -1) {\n            view = items.slice(0, 7);\n            selectedItem = items[3];\n        } else if (isListLoop) {\n            if (selectedIndex - 4 < 0) {\n                view = items.slice(itemsCount - (4 - selectedIndex), itemsCount);\n                view = view.concat(items.slice(0, selectedIndex + 3));\n            } else if (selectedIndex + 4 > itemsCount) {\n                view = items.slice(selectedIndex - 4, itemsCount);\n                view = view.concat(items.slice(0, selectedIndex + 3 - itemsCount));\n            } else {\n                view = items.slice(selectedIndex - 4, selectedIndex + 3);\n            }\n\n            selectedItem = (selectedIndex === 0) ? items[itemsCount - 1] : items[selectedIndex - 1];\n        } else if (selectedIndex > 3) {\n            view = items.slice(selectedIndex - 4, selectedIndex + 3);\n            selectedItem = items[selectedIndex - 1];\n        } else if (selectedIndex === 3) {\n            view = items.slice(0, 7);\n        }\n        view = this._viewToString(view, viewType);\n        selectedItem = this._itemToString(selectedItem, viewType);\n        return {\n            selectedItem,\n            view\n        };\n    }\n\n    private _nextItem(items: any[], selectedItem: string, isListLoop: boolean, viewType: string): any {\n        const selectedIndex = items.indexOf(parseInt(selectedItem, 10));\n        const itemsCount = items.length;\n        let view;\n\n        if (selectedIndex === -1) {\n            view = items.slice(0, 7);\n            selectedItem = items[3];\n        } else if (isListLoop) {\n            if (selectedIndex < 2) {\n                view = items.slice(itemsCount - (2 - selectedIndex), itemsCount);\n                view = view.concat(items.slice(0, selectedIndex + 5));\n            } else if (selectedIndex + 4 >= itemsCount) {\n                view = items.slice(selectedIndex - 2, itemsCount);\n                view = view.concat(items.slice(0, selectedIndex + 5 - itemsCount));\n            } else {\n                view = items.slice(selectedIndex - 2, selectedIndex + 5);\n            }\n\n            selectedItem = (selectedIndex === itemsCount - 1) ? items[0] : items[selectedIndex + 1];\n        } else if (selectedIndex + 1 < itemsCount - 3) {\n            view = items.slice(selectedIndex - 2, selectedIndex + 5);\n            selectedItem = items[selectedIndex + 1];\n        } else if (selectedIndex === itemsCount - 4) {\n            view = items.slice(selectedIndex - 3, itemsCount);\n        }\n        view = this._viewToString(view, viewType);\n        selectedItem = this._itemToString(selectedItem, viewType);\n        return {\n            selectedItem,\n            view\n        };\n    }\n\n    private _formatTime(value: Date, format: string): string {\n        if (!value) {\n            return '';\n        } else {\n            let hour = value.getHours();\n            let formattedSeconds, formattedMinute, formattedHour;\n\n            const minute = value.getMinutes();\n            const seconds = value.getSeconds();\n            const amPM = (hour > 11) ? 'PM' : 'AM';\n\n            if (format.indexOf('h') !== -1) {\n                if (hour > 12) {\n                    hour -= 12;\n                    formattedHour = hour < 10 && format.indexOf('hh') !== -1 ? '0' + hour : `${hour}`;\n                } else if (hour === 0) {\n                    formattedHour = '12';\n                } else if (hour < 10 && format.indexOf('hh') !== -1) {\n                    formattedHour = '0' + hour;\n                } else {\n                    formattedHour = `${hour}`;\n                }\n            } else {\n                if (hour < 10 && format.indexOf('HH') !== -1) {\n                    formattedHour = '0' + hour;\n                } else {\n                    formattedHour = `${hour}`;\n                }\n            }\n\n            formattedMinute = minute < 10 && format.indexOf('mm') !== -1 ? '0' + minute : `${minute}`;\n\n            formattedSeconds = seconds < 10 && format.indexOf('ss') !== -1 ? '0' + seconds : `${seconds}`;\n\n            return format.replace('hh', formattedHour).replace('h', formattedHour)\n                .replace('HH', formattedHour).replace('H', formattedHour)\n                .replace('mm', formattedMinute).replace('m', formattedMinute)\n                .replace('ss', formattedSeconds).replace('s', formattedSeconds)\n                .replace('tt', amPM);\n        }\n    }\n\n    private _updateHourView(start: any, end: any): void {\n        this._hourView = this._viewToString(this._hourItems.slice(start, end), 'hour');\n    }\n\n    private _updateMinuteView(start: any, end: any): void {\n        this._minuteView = this._viewToString(this._minuteItems.slice(start, end), 'minute');\n    }\n\n    private _updateSecondsView(start: any, end: any): void {\n        this._secondsView = this._viewToString(this._secondsItems.slice(start, end), 'seconds');\n    }\n\n    private _updateAmPmView(start: any, end: any): void {\n        this._ampmView = this._ampmItems.slice(start, end);\n    }\n\n    private _addEmptyItems(items: string[]): void {\n        for (let i = 0; i < 3; i++) {\n            items.push(null);\n        }\n    }\n\n    private _generateHours(): void {\n        let hourItemsCount = 24;\n        if (this.format.indexOf('h') !== -1) {\n            hourItemsCount = 13;\n        }\n\n        hourItemsCount /= this.itemsDelta.hours;\n\n        let i = this.format.indexOf('H') !== -1 ? 0 : 1;\n\n        if (hourItemsCount < 7 || !this.isSpinLoop) {\n            this._addEmptyItems(this._hourItems);\n            this._isHourListLoop = false;\n        }\n\n        if (hourItemsCount > 1) {\n            for (i; i < hourItemsCount; i++) {\n                this._hourItems.push(i * this.itemsDelta.hours);\n            }\n        } else {\n            this._hourItems.push(0);\n        }\n\n        if (hourItemsCount < 7 || !this.isSpinLoop) {\n            this._addEmptyItems(this._hourItems);\n        }\n    }\n\n    private _generateMinutes(): void {\n        const minuteItemsCount = 60 / this.itemsDelta.minutes;\n\n        if (minuteItemsCount < 7 || !this.isSpinLoop) {\n            this._addEmptyItems(this._minuteItems);\n            this._isMinuteListLoop = false;\n        }\n\n        for (let i = 0; i < minuteItemsCount; i++) {\n            this._minuteItems.push(i * this.itemsDelta.minutes);\n        }\n\n        if (minuteItemsCount < 7 || !this.isSpinLoop) {\n            this._addEmptyItems(this._minuteItems);\n        }\n    }\n\n    private _generateSeconds(): void {\n        const secondsItemsCount = 60 / this.itemsDelta.seconds;\n\n        if (secondsItemsCount < 7 || !this.isSpinLoop) {\n            this._addEmptyItems(this._secondsItems);\n            this._isSecondsListLoop = false;\n        }\n\n        for (let i = 0; i < secondsItemsCount; i++) {\n            this._secondsItems.push(i * this.itemsDelta.seconds);\n        }\n\n        if (secondsItemsCount < 7 || !this.isSpinLoop) {\n            this._addEmptyItems(this._secondsItems);\n        }\n    }\n\n    private _generateAmPm(): void {\n\n        this._addEmptyItems(this._ampmItems);\n\n        this._ampmItems.push('AM');\n        this._ampmItems.push('PM');\n\n        this._addEmptyItems(this._ampmItems);\n    }\n\n    private _getSelectedTime(): Date {\n        const date = this.value ? new Date(this.value) : new Date();\n        if (this.selectedHour) {\n            date.setHours(parseInt(this.selectedHour, 10));\n        }\n        if (this.selectedMinute) {\n            date.setMinutes(parseInt(this.selectedMinute, 10));\n        }\n        if (this.selectedSeconds) {\n            date.setSeconds(parseInt(this.selectedSeconds, 10));\n        }\n        if (((this.showHoursList && this.selectedHour !== '12') || (!this.showHoursList && this.selectedHour <= '11')) &&\n            this.selectedAmPm === 'PM') {\n            date.setHours(date.getHours() + 12);\n        }\n        if (!this.showHoursList && this.selectedAmPm === 'AM' && this.selectedHour > '11') {\n            date.setHours(date.getHours() - 12);\n        }\n        if (this.selectedAmPm === 'AM' && this.selectedHour === '12') {\n            date.setHours(0);\n        }\n        return date;\n    }\n\n    private _convertMinMaxValue(value: string): Date {\n        const date = this.value ? new Date(this.value) : this._dateFromModel ? new Date(this._dateFromModel) : new Date();\n        const sections = value.split(/[\\s:]+/);\n        let hour, minutes, seconds, amPM;\n\n        date.setSeconds(0);\n\n        if (this.showHoursList) {\n            hour = sections[0];\n            date.setHours(parseInt(hour, 10));\n        }\n\n        if (this.showMinutesList) {\n            minutes = this.showHoursList ? sections[1] : sections[0];\n            date.setMinutes(parseInt(minutes, 10));\n        }\n\n        if (this.showSecondsList) {\n            seconds = sections[sections.length - (this.showAmPmList ? 2 : 1)];\n            date.setSeconds(parseInt(seconds, 10));\n        }\n\n        if (this.showAmPmList) {\n            amPM = sections[sections.length - 1];\n\n            if (((this.showHoursList && date.getHours().toString() !== '12') ||\n                (!this.showHoursList && date.getHours().toString() <= '11')) && amPM === 'PM') {\n                date.setHours(date.getHours() + 12);\n            }\n\n            if (!this.showHoursList && amPM === 'AM' && date.getHours().toString() > '11') {\n                date.setHours(date.getHours() - 12);\n            }\n\n            if (this.showHoursList && date.getHours() === 12 && amPM === 'AM') {\n                date.setHours(0);\n            }\n        }\n\n        return date;\n    }\n\n    private _isValueValid(value: Date): boolean {\n        if (this.maxValue && value > this._convertMinMaxValue(this.maxValue)) {\n            return false;\n        } else if (this.minValue && value < this._convertMinMaxValue(this.minValue)) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    private _isEntryValid(val: string): boolean {\n        let validH = true;\n        let validM = true;\n        let validS = true;\n\n        const sections = val.split(/[\\s:]+/);\n        const re = new RegExp(this.promptChar, 'g');\n\n        if (this.showHoursList) {\n            validH = this.validHourEntries.indexOf(parseInt(sections[0].replace(re, ''), 10)) !== -1;\n        }\n\n        if (this.showMinutesList) {\n            const minutes = this.showHoursList ? sections[1] : sections[0];\n            validM = this.validMinuteEntries.indexOf(parseInt(minutes.replace(re, ''), 10)) !== -1;\n        }\n\n        if (this.showSecondsList) {\n            const seconds = sections[sections.length - (this.showAmPmList ? 2 : 1)];\n            validS = this.validSecondsEntries.indexOf(parseInt(seconds.replace(re, ''), 10)) !== -1;\n        }\n\n        return validH && validM && validS;\n    }\n\n    private _getCursorPosition(): number {\n        return this._inputElementRef.nativeElement.selectionStart;\n    }\n\n    private _setCursorPosition(start: number, end: number = start): void {\n        this._inputElementRef.nativeElement.setSelectionRange(start, end);\n    }\n\n    private _updateEditableInput(): void {\n        if (this.mode === InteractionMode.DropDown) {\n            this.displayValue = this._formatTime(this._getSelectedTime(), this.format);\n        }\n    }\n\n    private _spinHours(currentVal: Date, minVal: Date, maxVal: Date, hDelta: number, sign: number): Date {\n        const oldVal = new Date(currentVal);\n\n        currentVal.setMinutes(sign * hDelta);\n        if (currentVal.getDate() !== oldVal.getDate() && this.isSpinLoop) {\n            currentVal.setDate(oldVal.getDate());\n        }\n\n        let minutes = currentVal.getMinutes();\n        if (currentVal.getTime() > maxVal.getTime()) {\n            if (this.isSpinLoop) {\n                minutes = minutes < minVal.getMinutes() ? 60 + minutes : minutes;\n                minVal.setMinutes(sign * minutes);\n                return minVal;\n            } else {\n                return oldVal;\n            }\n        } else if (currentVal.getTime() < minVal.getTime()) {\n            if (this.isSpinLoop) {\n                minutes = minutes <= maxVal.getMinutes() ? minutes : minutes - 60;\n                maxVal.setMinutes(minutes);\n                return maxVal;\n            } else {\n                return oldVal;\n            }\n        } else {\n            return currentVal;\n        }\n    }\n\n    private _spinMinutes(currentVal: Date, mDelta: number, sign: number) {\n        let minutes = currentVal.getMinutes() + (sign * mDelta);\n\n        if (minutes < 0 || minutes >= 60) {\n            minutes = this.isSpinLoop ? minutes - (sign * 60) : currentVal.getMinutes();\n        }\n\n        currentVal.setMinutes(minutes);\n        return currentVal;\n    }\n\n    private _spinSeconds(currentVal: Date, sDelta: number, sign: number) {\n        let seconds = currentVal.getSeconds() + (sign * sDelta);\n\n        if (seconds < 0 || seconds >= 60) {\n            seconds = this.isSpinLoop ? seconds - (sign * 60) : currentVal.getSeconds();\n        }\n\n        currentVal.setSeconds(seconds);\n        return currentVal;\n    }\n\n    private _initializeContainer() {\n        if (this.value) {\n            const formttedTime = this._formatTime(this.value, this.format);\n            const sections = formttedTime.split(/[\\s:]+/);\n\n            if (this.showHoursList) {\n                this.selectedHour = sections[0];\n            }\n\n            if (this.showMinutesList) {\n                this.selectedMinute = this.showHoursList ? sections[1] : sections[0];\n            }\n\n            if (this.showSecondsList) {\n                this.selectedSeconds = sections[sections.length - (this.showAmPmList ? 2 : 1)];\n            }\n\n            if (this.showAmPmList && this._ampmItems !== null) {\n                this.selectedAmPm = sections[sections.length - 1];\n            }\n        }\n\n        if (this.selectedHour === undefined) {\n            this.selectedHour = !this.showHoursList && this.value ? this.value.getHours().toString() :\n                this.showHoursList ? `${this._hourItems[3]}` : '0';\n        }\n        if (this.selectedMinute === undefined) {\n            this.selectedMinute = !this.showMinutesList && this.value ? this.value.getMinutes().toString() : '0';\n        }\n        if (this.selectedSeconds === undefined) {\n            this.selectedSeconds = !this.showSecondsList && this.value ? this.value.getSeconds().toString() : '0';\n        }\n        if (this.selectedAmPm === undefined && this._ampmItems !== null) {\n            this.selectedAmPm = this._ampmItems[3];\n        }\n\n        this._prevSelectedHour = this.selectedHour;\n        this._prevSelectedMinute = this.selectedMinute;\n        this._prevSelectedSeconds = this.selectedSeconds;\n        this._prevSelectedAmPm = this.selectedAmPm;\n\n        this._onTouchedCallback();\n\n        this._updateHourView(0, ITEMS_COUNT);\n        this._updateMinuteView(0, ITEMS_COUNT);\n        this._updateSecondsView(0, ITEMS_COUNT);\n        this._updateAmPmView(0, ITEMS_COUNT);\n\n        if (this.selectedHour) {\n            this.scrollHourIntoView(this.selectedHour);\n        }\n        if (this.selectedMinute) {\n            this.scrollMinuteIntoView(this.selectedMinute);\n        }\n        if (this.selectedSeconds) {\n            this.scrollSecondsIntoView(this.selectedSeconds);\n        }\n        if (this.selectedAmPm) {\n            this.scrollAmPmIntoView(this.selectedAmPm);\n        }\n\n        requestAnimationFrame(() => {\n            if (this.hourList) {\n                this.hourList.nativeElement.focus();\n            } else if (this.minuteList) {\n                this.minuteList.nativeElement.focus();\n            } else if (this.secondsList) {\n                this.secondsList.nativeElement.focus();\n            }\n        });\n    }\n\n    private _onDropDownClosed(): void {\n        const oldValue = this.value;\n        const newVal = this._convertMinMaxValue(this.displayValue);\n\n        if (this.displayValue === this.parseMask(false)) {\n            return;\n        }\n\n        if (this._isValueValid(newVal)) {\n            if (!this.value || oldValue.getTime() !== newVal.getTime()) {\n                this.value = newVal;\n            }\n        } else {\n            this.displayValue = this.inputFormat.transform(this._formatTime(oldValue, this.format));\n\n            const args: IgxTimePickerValidationFailedEventArgs = {\n                timePicker: this,\n                currentValue: newVal,\n                setThroughUI: true\n            };\n            this.onValidationFailed.emit(args);\n        }\n    }\n\n    protected onStatusChanged() {\n        if ((this._ngControl.control.touched || this._ngControl.control.dirty) &&\n            (this._ngControl.control.validator || this._ngControl.control.asyncValidator)) {\n            const input = this._inputDirective || this._inputDirectiveUserTemplate;\n            if (this._inputGroup.isFocused) {\n                input.valid = this._ngControl.valid ? IgxInputState.VALID : IgxInputState.INVALID;\n            } else {\n                input.valid = this._ngControl.valid ? IgxInputState.INITIAL : IgxInputState.INVALID;\n            }\n        }\n\n        if (this._inputGroup && this._inputGroup.isRequired !== this.required) {\n            this._inputGroup.isRequired = this.required;\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    getEditElement() {\n        return this._inputElementRef ? this._inputElementRef.nativeElement : null;\n    }\n\n    /**\n     * @hidden\n     */\n    public getInputGroupElement() {\n        return this._inputGroup ? this._inputGroup.element.nativeElement : null;\n    }\n\n\n    /**\n     * opens the dialog.\n     * @param target HTMLElement - the target element to use for positioning the drop down container according to\n     * ```html\n     * <igx-time-picker [value]=\"date\" mode=\"dropdown\" #retemplated>\n     *   <ng-template igxTimePickerTemplate let-openDialog=\"openDialog\"\n     *                let-displayTime=\"displayTime\">\n     *     <igx-input-group>\n     *       <input #dropDownTarget igxInput [value]=\"displayTime\" />\n     *       <igx-suffix (click)=\"openDialog(dropDownTarget)\">\n     *         <igx-icon>alarm</igx-icon>\n     *       </igx-suffix>\n     *     </igx-input-group>\n     *   </ng-template>\n     * </igx-time-picker>\n     * ```\n     */\n    public openDialog(target?: HTMLElement): void {\n        if (!this.toggleRef.collapsed) {\n            return this._onDropDownClosed();\n        }\n        const settings = this.overlaySettings;\n\n        if (target && settings && settings.positionStrategy) {\n            settings.positionStrategy.settings.target = target;\n        }\n        if (this.outlet) {\n            settings.outlet = this.outlet;\n        }\n\n        this.toggleRef.open(settings);\n        this._initializeContainer();\n    }\n\n    /**\n     * Scrolls a hour item into view.\n     * ```typescript\n     * scrhintoView(picker) {\n     * picker.scrollHourIntoView('2');\n     * }\n     *  ```\n     * ```html\n     * <igx-time-picker #picker format=\"h:mm tt\" (onOpened)=\"scrhintoView(picker)\"></igx-time-picker>\n     * ```\n     * @param item to be scrolled in view.\n     */\n    public scrollHourIntoView(item: string): void {\n        if (this.showHoursList) {\n            const hourIntoView = this._scrollItemIntoView(item, this._hourItems, this.selectedHour, this._isHourListLoop, 'hour');\n            if (hourIntoView) {\n                this._hourView = hourIntoView.view;\n                this.selectedHour = hourIntoView.selectedItem;\n                this._updateEditableInput();\n            }\n        }\n    }\n\n    /**\n     * Scrolls a minute item into view.\n     * ```typescript\n     * scrMintoView(picker) {\n     * picker.scrollMinuteIntoView('3');\n     * }\n     *  ```\n     * ```html\n     * <igx-time-picker #picker format=\"h:mm tt\" (onOpened)=\"scrMintoView(picker)\"></igx-time-picker>\n     * ```\n     * @param item to be scrolled in view.\n     */\n    public scrollMinuteIntoView(item: string): void {\n        if (this.showMinutesList) {\n            const minuteIntoView = this._scrollItemIntoView(item, this._minuteItems, this.selectedMinute, this._isMinuteListLoop, 'minute');\n            if (minuteIntoView) {\n                this._minuteView = minuteIntoView.view;\n                this.selectedMinute = minuteIntoView.selectedItem;\n                this._updateEditableInput();\n            }\n        }\n    }\n\n    /**\n     * Scrolls a seconds item into view.\n     * ```typescript\n     * scrMintoView(picker) {\n     * picker.scrollSecondsIntoView('4');\n     * }\n     *  ```\n     * ```html\n     * <igx-time-picker #picker format=\"h:mm tt\" (onOpened)=\"scrMintoView(picker)\"></igx-time-picker>\n     * ```\n     * @param item to be scrolled in view.\n     */\n    public scrollSecondsIntoView(item: string): void {\n        if (this.showSecondsList) {\n            const secondsIntoView = this._scrollItemIntoView(item,\n                this._secondsItems, this.selectedSeconds, this._isSecondsListLoop, 'seconds');\n            if (secondsIntoView) {\n                this._secondsView = secondsIntoView.view;\n                this.selectedSeconds = secondsIntoView.selectedItem;\n                this._updateEditableInput();\n            }\n        }\n    }\n\n    /**\n     * Scrolls an ampm item into view.\n     * ```typescript\n     * scrAmPmIntoView(picker) {\n     * picker.scrollAmPmIntoView('PM');\n     * }\n     *  ```\n     * ```html\n     * <igx-time-picker #picker format=\"h:mm tt\" (onOpened)=\"scrAmPmIntoView(picker)\"></igx-time-picker>\n     * ```\n     * @param item to be scrolled in view.\n     */\n    public scrollAmPmIntoView(item: string): void {\n        if (this.showAmPmList) {\n            const ampmIntoView = this._scrollItemIntoView(item, this._ampmItems, this.selectedAmPm, false, null);\n            if (ampmIntoView) {\n                this._ampmView = ampmIntoView.view;\n                this.selectedAmPm = ampmIntoView.selectedItem;\n                this._updateEditableInput();\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public nextHour() {\n        const nextHour = this._nextItem(this._hourItems, this.selectedHour, this._isHourListLoop, 'hour');\n        this._hourView = nextHour.view;\n        this.selectedHour = nextHour.selectedItem;\n\n        this._updateEditableInput();\n    }\n\n    /**\n     * @hidden\n     */\n    public prevHour() {\n        const prevHour = this._prevItem(this._hourItems, this.selectedHour, this._isHourListLoop, 'hour');\n        this._hourView = prevHour.view;\n        this.selectedHour = prevHour.selectedItem;\n\n        this._updateEditableInput();\n    }\n\n    /**\n     * @hidden\n     */\n    public nextMinute() {\n        const nextMinute = this._nextItem(this._minuteItems, this.selectedMinute, this._isMinuteListLoop, 'minute');\n        this._minuteView = nextMinute.view;\n        this.selectedMinute = nextMinute.selectedItem;\n\n        this._updateEditableInput();\n    }\n\n    /**\n     * @hidden\n     */\n    public prevMinute() {\n        const prevMinute = this._prevItem(this._minuteItems, this.selectedMinute, this._isMinuteListLoop, 'minute');\n        this._minuteView = prevMinute.view;\n        this.selectedMinute = prevMinute.selectedItem;\n\n        this._updateEditableInput();\n    }\n\n    /**\n     * @hidden\n     */\n    public nextSeconds() {\n        const nextSeconds = this._nextItem(this._secondsItems, this.selectedSeconds, this._isSecondsListLoop, 'seconds');\n        this._secondsView = nextSeconds.view;\n        this.selectedSeconds = nextSeconds.selectedItem;\n\n        this._updateEditableInput();\n    }\n\n    /**\n     * @hidden\n     */\n    public prevSeconds() {\n        const prevSeconds = this._prevItem(this._secondsItems, this.selectedSeconds, this._isSecondsListLoop, 'seconds');\n        this._secondsView = prevSeconds.view;\n        this.selectedSeconds = prevSeconds.selectedItem;\n\n        this._updateEditableInput();\n    }\n\n    /**\n     * @hidden\n     */\n    public nextAmPm() {\n        const selectedIndex = this._ampmItems.indexOf(this.selectedAmPm);\n\n        if (selectedIndex + 1 < this._ampmItems.length - 3) {\n            this._updateAmPmView(selectedIndex - 2, selectedIndex + 5);\n            this.selectedAmPm = this._ampmItems[selectedIndex + 1];\n\n            this._updateEditableInput();\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public prevAmPm() {\n        const selectedIndex = this._ampmItems.indexOf(this.selectedAmPm);\n\n        if (selectedIndex > 3) {\n            this._updateAmPmView(selectedIndex - 4, selectedIndex + 3);\n            this.selectedAmPm = this._ampmItems[selectedIndex - 1];\n\n            this._updateEditableInput();\n        }\n    }\n\n    /**\n     * If current value is valid selects it, closes the dialog and returns true, otherwise returns false.\n     * ```html\n     * <igx-dialog class=\"igx-time-picker__dialog-popup\" [rightButtonLabel]=\"okButtonLabel\" (onRightButtonSelect)=\"okButtonClick()\">\n     * //..\n     * </igx-dialog>\n     * ```\n     */\n    public okButtonClick(): boolean {\n        const time = this._getSelectedTime();\n        if (this._isValueValid(time)) {\n            this.close();\n            this.value = time;\n            return true;\n        } else {\n            const args: IgxTimePickerValidationFailedEventArgs = {\n                timePicker: this,\n                currentValue: time,\n                setThroughUI: true\n            };\n            this.onValidationFailed.emit(args);\n            return false;\n        }\n    }\n\n    /**\n     * Closes the dialog without selecting the current value.\n     * ```html\n     * <igx-dialog class=\"igx-time-picker__dialog-popup\" [leftButtonLabel]=\"cancelButtonLabel\" (onLeftButtonSelect)=\"cancelButtonClick()\">\n     * //...\n     * </igx-dialog>\n     * ```\n     */\n    public cancelButtonClick(): void {\n        if (this.mode === InteractionMode.DropDown) {\n            this.displayValue = this.value ? this._formatTime(this.value, this.format) : this.parseMask(false);\n        }\n\n        this.close();\n\n        this.selectedHour = this._prevSelectedHour;\n        this.selectedMinute = this._prevSelectedMinute;\n        this.selectedSeconds = this._prevSelectedSeconds;\n        this.selectedAmPm = this._prevSelectedAmPm;\n    }\n\n    /**\n     * Returns an array of the hours currently in view.\n     * ```html\n     *  @ViewChild(\"MyChild\")\n     * private picker: IgxTimePickerComponent;\n     * ngAfterViewInit(){\n     *     let hInView = this.picker.hoursInView;\n     * }\n     * ```\n     */\n    public hoursInView(): string[] {\n        return this._hourView.filter((hour) => hour !== '');\n    }\n\n    /**\n     * Returns an array of the minutes currently in view.\n     * ```html\n     *  @ViewChild(\"MyChild\")\n     * private picker: IgxTimePickerComponent;\n     * ngAfterViewInit(){\n     *     let minInView = this.picker.minutesInView;\n     * }\n     * ```\n     */\n    public minutesInView(): string[] {\n        return this._minuteView.filter((minute) => minute !== '');\n    }\n\n    /**\n     * Returns an array of the seconds currently in view.\n     * ```html\n     *  @ViewChild(\"MyChild\")\n     * private picker: IgxTimePickerComponent;\n     * ngAfterViewInit(){\n     *     let minInView = this.picker.secondsInView;\n     * }\n     * ```\n     */\n    public secondsInView(): string[] {\n        return this._secondsView.filter((seconds) => seconds !== '');\n    }\n\n    /**\n     * Returns an array of the AM/PM currently in view.\n     * ```html\n     *  @ViewChild(\"MyChild\")\n     * private picker: IgxTimePickerComponent;\n     * ngAfterViewInit(){\n     *     let ApInView = this.picker.ampmInView;\n     * }\n     * ```\n     */\n    public ampmInView(): string[] {\n        return this._ampmView.filter((ampm) => ampm !== '');\n    }\n\n    /**\n     * Closes the dropdown/dialog.\n     * ```html\n     * <igx-time-picker #timePicker></igx-time-picker>\n     * ```\n     * ```typescript\n     * @ViewChild('timePicker', { read: IgxTimePickerComponent }) picker: IgxTimePickerComponent;\n     * picker.close();\n     * ```\n     */\n    public close(): void {\n        this.toggleRef.close();\n    }\n\n    /**\n     * @hidden\n     */\n    public parseMask(preserveAmPm = true): string {\n        const maskWithAmPm = this.mask.replace(new RegExp('0', 'g'), this.promptChar).replace('LL', 'AM');\n        const pureMask = this.mask.replace(new RegExp('0', 'g'), this.promptChar).replace(new RegExp('L', 'g'), this.promptChar);\n\n        return preserveAmPm ? maskWithAmPm : pureMask;\n    }\n\n    /**\n     * @hidden\n     */\n    public clear(): void {\n        if (this.toggleRef.collapsed) {\n            this.cleared = true;\n            this.isNotEmpty = false;\n\n            const oldVal = new Date(this.value);\n\n            this.displayValue = '';\n            this.value.setHours(0, 0);\n\n            if (oldVal.getTime() !== this.value.getTime()) {\n                const args: IgxTimePickerValueChangedEventArgs = {\n                    oldValue: oldVal,\n                    newValue: this.value\n                };\n                this.onValueChanged.emit(args);\n            }\n        } else {\n            this.close();\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public onInput(event): void {\n        const val = event.target.value;\n        const oldVal = new Date(this.value);\n\n        this.isNotEmpty = val !== this.parseMask(false);\n\n        // handle cases where all empty positions (promts) are filled and we want to update\n        // timepicker own value property if it is a valid Date\n        if (val.indexOf(this.promptChar) === -1) {\n            if (this._isEntryValid(val)) {\n                const newVal = this._convertMinMaxValue(val);\n                if (oldVal.getTime() !== newVal.getTime()) {\n                    this.value = newVal;\n                }\n            } else {\n                const args: IgxTimePickerValidationFailedEventArgs = {\n                    timePicker: this,\n                    currentValue: val,\n                    setThroughUI: false\n                };\n                this.onValidationFailed.emit(args);\n            }\n            // handle cases where the user deletes the display value (when pressing backspace or delete)\n        } else if (!this.value || !val || val === this.parseMask(false)) {\n            this.isNotEmpty = false;\n\n            this.value.setHours(0, 0);\n            this.displayValue = val;\n\n            if (oldVal.getTime() !== this.value.getTime()) {\n                const args: IgxTimePickerValueChangedEventArgs = {\n                    oldValue: oldVal,\n                    newValue: this.value\n                };\n                this.onValueChanged.emit(args);\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public onFocus(event): void {\n        this.isNotEmpty = event.target.value !== this.parseMask(false);\n    }\n\n    /**\n     * @hidden\n     */\n    public onBlur(event): void {\n        if (this.mode === InteractionMode.DropDown) {\n            const value = event.target.value;\n\n            this.isNotEmpty = value !== '';\n            this.displayValue = value;\n\n            if (value && value !== this.parseMask()) {\n                if (this._isEntryValid(value)) {\n                    const newVal = this._convertMinMaxValue(value);\n                    if (!this.value || this.value.getTime() !== newVal.getTime()) {\n                        this.value = newVal;\n                    }\n                } else {\n                    const args: IgxTimePickerValidationFailedEventArgs = {\n                        timePicker: this,\n                        currentValue: value,\n                        setThroughUI: false\n                    };\n                    this.onValidationFailed.emit(args);\n                }\n            }\n        }\n\n        if (this.toggleRef.collapsed) {\n            this._updateValidityOnBlur();\n        }\n    }\n\n    public mouseDown(event: MouseEvent): void {\n        // if the click is not on the input but in input group\n        // e.g. on prefix or suffix, prevent default and this way prevent blur\n        if (event.target !== this.getEditElement()) {\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public spinOnEdit(event): void {\n        event.preventDefault();\n\n        let sign: number;\n        let displayVal: string;\n        const currentVal = new Date(this.value);\n        const min = this.minValue ? this._convertMinMaxValue(this.minValue) : this._convertMinMaxValue('00:00');\n        const max = this.maxValue ? this._convertMinMaxValue(this.maxValue) : this._convertMinMaxValue('24:00');\n\n        const cursor = this._getCursorPosition();\n\n        if (event.key) {\n            const key = event.key;\n            sign = key === KEYS.DOWN_ARROW || key === KEYS.DOWN_ARROW_IE ? -1 : 1;\n        }\n\n        if (event.deltaY) {\n            sign = event.deltaY < 0 ? 1 : -1;\n        }\n\n        if (!this.displayValue) {\n            this.value = min;\n            displayVal = this._formatTime(this.value, this.format);\n        } else {\n            const hDelta = this.itemsDelta.hours * 60 + (sign * this.value.getMinutes());\n            const mDelta = this.itemsDelta.minutes;\n            const sDelta = this.itemsDelta.seconds;\n\n            if (this.cursorOnHours(cursor, this.showHoursList)) {\n                this.value = this._spinHours(currentVal, min, max, hDelta, sign);\n            }\n            if (this.cursorOnMinutes(cursor, this.showHoursList, this.showMinutesList)) {\n                this.value = this._spinMinutes(currentVal, mDelta, sign);\n            }\n            if (this.cursorOnSeconds(cursor, this.showHoursList, this.showMinutesList, this.showSecondsList)) {\n                this.value = this._spinSeconds(currentVal, sDelta, sign);\n            }\n            if (this.cursorOnAmPm(cursor, this.showHoursList, this.showMinutesList, this.showSecondsList, this.showAmPmList)) {\n                const sections = this.displayValue.split(/[\\s:]+/);\n                sign = sections[sections.length - 1] === 'AM' ? 1 : -1;\n                currentVal.setHours(currentVal.getHours() + (sign * 12));\n\n                this.value = currentVal;\n            }\n\n            displayVal = this._formatTime(this.value, this.format);\n        }\n\n        // minor hack for preventing cursor jumping in IE\n        this._displayValue = this.inputFormat.transform(displayVal);\n        this._inputElementRef.nativeElement.value = this._displayValue;\n        this._setCursorPosition(cursor);\n\n        requestAnimationFrame(() => {\n            this._setCursorPosition(cursor);\n        });\n    }\n\n    private cursorOnHours(cursor: number, showHours: boolean): boolean {\n        return showHours && this._hoursPos.has(cursor);\n    }\n\n    private cursorOnMinutes(cursor: number, showHours: boolean, showMinutes: boolean): boolean {\n        return showMinutes &&\n            (showHours && this._minutesPos.has(cursor)) ||\n            (!showHours && this._minutesPos.has(cursor));\n    }\n\n    private cursorOnSeconds(cursor: number, showHours: boolean, showMinutes: boolean, showSeconds: boolean): boolean {\n        return showSeconds &&\n            (showHours && showMinutes && this._secondsPos.has(cursor)) ||\n            ((!showHours || !showMinutes) && this._secondsPos.has(cursor)) ||\n            (!showHours && !showMinutes && this._secondsPos.has(cursor));\n    }\n\n    private cursorOnAmPm(cursor: number, showHours: boolean, showMinutes: boolean,\n        showSeconds: boolean, showAmPm: boolean): boolean {\n        return showAmPm &&\n            (showHours && showMinutes && showSeconds && this._amPmPos.has(cursor)) ||\n            ((!showHours || !showMinutes || !showSeconds) && this._amPmPos.has(cursor)) ||\n            (!showHours && (!showMinutes || !showSeconds) && this._amPmPos.has(cursor));\n    }\n\n    private _updateValidityOnBlur() {\n        this._onTouchedCallback();\n        const input = this._inputDirective || this._inputDirectiveUserTemplate;\n        if (this._ngControl && !this._ngControl.valid) {\n            input.valid = IgxInputState.INVALID;\n        } else {\n            input.valid = IgxInputState.INITIAL;\n        }\n    }\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [\n        IgxTimePickerComponent,\n        IgxHourItemDirective,\n        IgxMinuteItemDirective,\n        IgxSecondsItemDirective,\n        IgxItemListDirective,\n        IgxAmPmItemDirective,\n        IgxTimePickerTemplateDirective,\n        IgxTimePickerActionsDirective,\n        TimeDisplayFormatPipe,\n        TimeInputFormatPipe\n    ],\n    exports: [\n        IgxTimePickerComponent,\n        IgxTimePickerTemplateDirective,\n        IgxTimePickerActionsDirective,\n        TimeDisplayFormatPipe,\n        TimeInputFormatPipe\n    ],\n    imports: [\n        CommonModule,\n        IgxInputGroupModule,\n        IgxIconModule,\n        IgxButtonModule,\n        IgxMaskModule,\n        IgxToggleModule\n    ],\n    providers: []\n})\nexport class IgxTimePickerModule { }\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\nimport {\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    NgModule,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output\n} from '@angular/core';\nimport { IgxNavigationService, IToggleView } from '../core/navigation';\n\nlet NEXT_ID = 0;\n\n/**\n * Enumeration for toast position\n * Can be:\n * Bottom\n * Middle\n * Top\n */\nexport enum IgxToastPosition {\n    Bottom,\n    Middle,\n    Top\n}\n\n/**\n * **Ignite UI for Angular Toast** -\n * [Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/toast.html)\n *\n * The Ignite UI Toast provides information and warning messages that are non-interactive and cannot\n * be dismissed by the user. Toasts can be displayed at the bottom, middle, or top of the page.\n *\n * Example:\n * ```html\n * <button (click)=\"toast.show()\">Show notification</button>\n * <igx-toast #toast\n *           message=\"Notification displayed\"\n *           displayTime=\"1000\">\n * </igx-toast>\n * ```\n */\n@Component({\n        animations: [\n        trigger('animate', [\n            state('visible', style({\n                opacity: 1\n            })),\n            transition('invisible => visible', animate('.20s ease')),\n            transition('visible => invisible', animate('.40s ease-out'))\n        ])\n    ],\n    selector: 'igx-toast',\n    templateUrl: 'toast.component.html',\n    styles: [`\n        :host {\n            display: block;\n        }\n    `]\n})\nexport class IgxToastComponent implements IToggleView, OnInit, OnDestroy {\n    private _isVisible = false;\n\n    /**\n     * @hidden\n     */\n    @HostBinding('@animate')\n    public animationState = 'invisible';\n\n    /**\n     * Sets/gets the `id` of the toast.\n     * If not set, the `id` will have value `\"igx-toast-0\"`.\n     * ```html\n     * <igx-toast id = \"my-first-toast\"></igx-toast>\n     * ```\n     * ```typescript\n     * let toastId = this.toast.id;\n     * ```\n     */\n    @HostBinding('attr.id')\n    @Input()\n    public id = `igx-toast-${NEXT_ID++}`;\n\n    /**\n     * Emits an event prior the toast is shown.\n     * Provides reference to the `IgxToastComponent` as event argument.\n     * ```html\n     * <igx-toast (onShowing) = \"onShowing($event)\"></igx-toast>\n     * ```\n     * @memberof IgxToastComponent\n     */\n    @Output()\n    public onShowing = new EventEmitter<IgxToastComponent>();\n\n    /**\n     * Emits an event when the toast is shown.\n     * Provides reference to the `IgxToastComponent` as event argument.\n     * ```html\n     * <igx-toast (onShown) = \"onShown($event)\"></igx-toast>\n     * ```\n     * @memberof IgxToastComponent\n     */\n    @Output()\n    public onShown = new EventEmitter<IgxToastComponent>();\n\n    /**\n     * Emits an event prior the toast is hidden.\n     * Provides reference to the `IgxToastComponent` as event argument.\n     * ```html\n     * <igx-toast (onHiding) = \"onHiding($event)\"></igx-toast>\n     * ```\n     * @memberof IgxToastComponent\n     */\n    @Output()\n    public onHiding = new EventEmitter<IgxToastComponent>();\n\n    /**\n     *  Emits an event when the toast is hidden.\n     *  Provides reference to the `IgxToastComponent` as event argument.\n     * ```html\n     * <igx-toast (onHidden) = \"onHidden($event)\"></igx-toast>\n     * ```\n     * @memberof IgxToastComponent\n     */\n    @Output()\n    public onHidden = new EventEmitter<IgxToastComponent>();\n\n    /**\n     * Sets/gets the `role` attribute.\n     * If not set, `role` will have value `\"alert\"`.\n     * ```html\n     * <igx-toast [role] = \"'notify'\"></igx-toast>\n     * ```\n     * ```typescript\n     * let toastRole = this.toast.role;\n     * ```\n     * @memberof IgxToastComponent\n     */\n    @Input()\n    public role = 'alert';\n\n    /**\n     * Sets/gets whether the toast will be hidden after the `displayTime` is over.\n     * Default value is `true`.\n     * ```html\n     * <igx-toast [autoHide] = \"false\"></igx-toast>\n     * ```\n     * ```typescript\n     * let autoHide = this.toast.autoHide;\n     * ```\n     * @memberof IgxToastComponent\n     */\n    @Input()\n    public autoHide = true;\n\n    /**\n     * Sets/gets the duration of time span(in milliseconds) which the toast will be visible\n     * after it is being shown.\n     * Default value is `4000`.\n     * ```html\n     * <igx-toast [displayTime] = \"2500\"></igx-toast>\n     * ```\n     * ```typescript\n     * let displayTime = this.toast.displayTime;\n     * ```\n     * @memberof IgxToastComponent\n     */\n    @Input()\n    public displayTime = 4000;\n\n    /**\n     * Enables/Disables the visibility of the toast.\n     * If not set, the `isVisible` attribute will have value `false`.\n     * ```html\n     * <igx-toast [isVisible] = \"true\"></igx-toast>\n     * ```\n     * ```typescript\n     * let isVisible = this.toast.isVisible;\n     * ```\n     *\n     * Two-way data binding.\n     * ```html\n     * <igx-toast [(isVisible)] = \"model.isVisible\"></igx-toast>\n     * ```\n     * @memberof IgxToastComponent\n     */\n    @Input()\n    public get isVisible() {\n        return this._isVisible;\n    }\n    public set isVisible(value) {\n        this._isVisible = value;\n        this.isVisibleChange.emit(this._isVisible);\n    }\n\n    /**\n     * @hidden\n     */\n    @Output()\n    public isVisibleChange = new EventEmitter<boolean>();\n\n    /**\n     * @hidden\n     */\n    @Input()\n    public message = '';\n\n    /**\n     * Sets/gets the position of the toast.\n     * If not set, the `position` attribute will have value `IgxToastPosition.Bottom`.\n     * ```html\n     * <igx-toast [position] = \"top\"></igx-toast>\n     * ```\n     * ```typescript\n     * let toastPosition = this.toast.position;\n     * ```\n     * @memberof IgxToastComponent\n     */\n    @Input()\n    public position: IgxToastPosition = IgxToastPosition.Bottom;\n\n    /**\n     * Gets the nativeElement of the toast.\n     * ```typescript\n     * let nativeElement = this.toast.element;\n     * ```\n     * @memberof IgxToastComponent\n     */\n    public get element() {\n        return this.elementRef.nativeElement;\n    }\n\n    /**\n     * @hidden\n     */\n    private timeoutId: number;\n\n    constructor(\n        private elementRef: ElementRef,\n        @Optional() private navService: IgxNavigationService) { }\n\n    /**\n     * Shows the toast.\n     * If `autoHide` is enabled, the toast will hide after `displayTime` is over.\n     * ```typescript\n     * this.toast.show();\n     * ```\n     * @memberof IgxToastComponent\n     */\n    public show(): void {\n        clearInterval(this.timeoutId);\n        this.onShowing.emit(this);\n        this.isVisible = true;\n        this.animationState = 'visible';\n\n        if (this.autoHide) {\n            this.timeoutId = window.setTimeout(() => {\n                this.hide();\n            }, this.displayTime);\n        }\n\n        this.onShown.emit(this);\n    }\n\n    /**\n     * Hides the toast.\n     * ```typescript\n     * this.toast.hide();\n     * ```\n     * @memberof IgxToastComponent\n     */\n    public hide(): void {\n        this.onHiding.emit(this);\n        this.isVisible = false;\n        this.onHidden.emit(this);\n        this.animationState = 'invisible';\n\n        clearInterval(this.timeoutId);\n    }\n\n    /**\n     * Wraps @show() method due @IToggleView interface implementation.\n     * @hidden\n     */\n    public open() {\n        this.show();\n    }\n\n    /**\n     * Wraps @hide() method due @IToggleView interface implementation.\n     * @hidden\n     */\n    public close() {\n        this.hide();\n    }\n\n    /**\n     * Toggles the visible state of the toast.\n     * ```typescript\n     * this.toast.toggle();\n     * ```\n     * @memberof IgxToastComponent\n     */\n    public toggle() {\n        this.isVisible ? this.close() : this.open();\n    }\n\n    /**\n     * @hidden\n     */\n    @HostBinding('class.igx-toast--top')\n    public get cssClassTop() {\n       return this.position === IgxToastPosition.Top;\n    }\n\n    /**\n     * @hidden\n     */\n    @HostBinding('class.igx-toast--middle')\n    public get cssClassMiddle() {\n       return this.position === IgxToastPosition.Middle;\n    }\n\n    /**\n     * @hidden\n     */\n    @HostBinding('class.igx-toast--bottom')\n    public get cssClassBottom() {\n       return this.position === IgxToastPosition.Bottom;\n    }\n\n    /**\n     * @hidden\n     */\n    public ngOnInit() {\n        if (this.navService && this.id) {\n            this.navService.add(this.id, this);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    public ngOnDestroy() {\n        if (this.navService && this.id) {\n            this.navService.remove(this.id);\n        }\n    }\n}\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [IgxToastComponent],\n    exports: [IgxToastComponent],\n    imports: [CommonModule]\n})\nexport class IgxToastModule { }\n","import { Component, HostBinding, Input, ElementRef, Output, EventEmitter } from '@angular/core';\n\n/**\n * Represents individual resizable/collapsible panes.\n * @igxModule IgxSplitterModule\n *\n * @igxParent IgxSplitterComponent\n *\n * @igxKeywords pane\n *\n * @igxGroup presentation\n *\n * @remarks\n *  Users can control the resize behavior via the min and max size properties.\n */\n@Component({\n    selector: 'igx-splitter-pane',\n    templateUrl: './splitter-pane.component.html'\n})\nexport class IgxSplitterPaneComponent {\n\n    private _size = 'auto';\n    private _collapsed = false;\n\n    /** @hidden @internal */\n    public owner;\n\n    /**\n     * Gets/Sets the size of the current pane.\n     *  * @example\n     * ```html\n     * <igx-splitter>\n     *  <igx-splitter-pane [size]='size'>...</igx-splitter-pane>\n     * </igx-splitter>\n     * ```\n     */\n    @Input()\n    get size() {\n        return this._size;\n    }\n\n    set size(value) {\n        this._size = value;\n        this.el.nativeElement.style.flex = this.flex;\n    }\n\n    /**\n     * Gets/Sets the minimum allowed size of the current pane.\n     * @example\n     * ```html\n     * <igx-splitter>\n     *  <igx-splitter-pane [minSize]='minSize'>...</igx-splitter-pane>\n     * </igx-splitter>\n     * ```\n     */\n    @Input()\n    public minSize!: string;\n\n    /**\n     * Gets/Set the maximum allowed size of the current pane.\n     * @example\n     * ```html\n     * <igx-splitter>\n     *  <igx-splitter-pane [maxSize]='maxSize'>...</igx-splitter-pane>\n     * </igx-splitter>\n     * ```\n     */\n    @Input()\n    public maxSize!: string;\n\n    /**\n     * Gets/Sets whether pane is resizable.\n     * @example\n     * ```html\n     * <igx-splitter>\n     *  <igx-splitter-pane [resizable]='false'>...</igx-splitter-pane>\n     * </igx-splitter>\n     * ```\n     * @remarks\n     * If pane is not resizable its related splitter bar cannot be dragged.\n     */\n    @Input()\n    public resizable = true;\n\n    /**\n     * Event fired when collapsed state of pane is changed.\n     * @example\n     * ```html\n     * <igx-splitter>\n     *  <igx-splitter-pane (onToggle)='onPaneToggle($event)'>...</igx-splitter-pane>\n     * </igx-splitter>\n     * ```\n     */\n    @Output()\n    public onToggle = new EventEmitter<IgxSplitterPaneComponent>();\n\n\n    /** @hidden @internal */\n    @HostBinding('style.order')\n    public order!: number;\n\n    /**\n     *\n     * @hidden @internal\n     * Gets the host native element.\n     */\n    public get element(): any {\n        return this.el.nativeElement;\n    }\n\n    /**\n     * @hidden @internal\n     * Gets/Sets the `overflow`.\n     */\n    @HostBinding('style.overflow')\n    public overflow = 'auto';\n\n    /**\n     * @hidden @internal\n     * Gets/Sets the `minHeight` and `minWidth` properties of the current pane.\n     */\n    @HostBinding('style.min-height')\n    @HostBinding('style.min-width')\n    public minHeight = 0;\n\n    /**\n     * @hidden @internal\n     * Gets/Sets the `maxHeight` and `maxWidth` properties of the current `IgxSplitterPaneComponent`.\n     */\n    @HostBinding('style.max-height')\n    @HostBinding('style.max-width')\n    public maxHeight = '100%';\n\n    /**\n     * @hidden @internal\n     * Gets the `flex` property of the current `IgxSplitterPaneComponent`.\n     */\n    @HostBinding('style.flex')\n    public get flex() {\n        const grow = this.size !== 'auto' ? 0 : 1;\n        const shrink = this.size !== 'auto' ? 0 : 1;\n\n        return `${grow} ${shrink} ${this.size}`;\n    }\n\n    /**\n     * @hidden @internal\n     * Gets/Sets the 'display' property of the current pane.\n     */\n    @HostBinding('style.display')\n    public display = 'flex';\n\n    /**\n     * Gets/Sets whether current pane is collapsed.\n     * @example\n     * ```typescript\n     * const isCollapsed = pane.collapsed;\n     * ```\n     */\n    @Input()\n    public set collapsed(value) {\n        this._collapsed = value;\n        this.display = this._collapsed ? 'none' : 'flex' ;\n    }\n\n    public get collapsed() {\n        return this._collapsed;\n    }\n\n    /** @hidden @internal */\n    private _getSiblings() {\n        const panes = this.owner.panes.toArray();\n        const index = panes.indexOf(this);\n        const siblings = [];\n        if (index !== 0) {\n            siblings.push(panes[index - 1]);\n        }\n        if (index !== panes.length - 1) {\n            siblings.push(panes[index + 1]);\n        }\n        return siblings;\n    }\n\n    /**\n     * Toggles the collapsed state of the pane.\n     * @example\n     * ```typescript\n     * pane.toggle();\n     * ```\n     */\n    public toggle() {\n        // reset sibling sizes when pane collapse state changes.\n        this._getSiblings().forEach(sibling => sibling.size = 'auto');\n        this.collapsed = !this.collapsed;\n        this.onToggle.emit(this);\n    }\n\n    constructor(private el: ElementRef) { }\n}\n","import { Component, QueryList, Input, ContentChildren, AfterContentInit, HostBinding, Output, EventEmitter } from '@angular/core';\nimport { IgxSplitterPaneComponent } from './splitter-pane/splitter-pane.component';\n\n/**\n * An enumeration that defines the `SplitterComponent` panes orientation.\n */\nexport enum SplitterType {\n    Horizontal,\n    Vertical\n}\n\n/**\n * Provides a framework for a simple layout, splitting the view horizontally or vertically\n * into multiple smaller resizable and collapsible areas.\n * @igxModule IgxSplitterModule\n *\n * @igxParent Layouts\n *\n * @igxTheme igx-splitter-theme\n *\n * @igxKeywords splitter panes layout\n *\n * @igxGroup presentation\n *\n * @example\n * ```html\n * <igx-splitter>\n *  <igx-splitter-pane>\n *      ...\n *  </igx-splitter-pane>\n *  <igx-splitter-pane>\n *      ...\n *  </igx-splitter-pane>\n * </igx-splitter>\n * ```\n */\n@Component({\n    selector: 'igx-splitter',\n    templateUrl: './splitter.component.html'\n})\nexport class IgxSplitterComponent implements AfterContentInit {\n    private _type: SplitterType = SplitterType.Horizontal;\n    /**\n     * Gets/Sets the splitter orientation.\n     * @example\n     * ```html\n     * <igx-splitter [type]=\"type\">...</igx-splitter>\n     * ```\n     */\n    @Input()\n    get type() {\n        return this._type;\n    }\n    set type(value) {\n        this._type = value;\n        if (this.panes) {\n            // if type is changed runtime, should reset sizes.\n            this.panes.forEach(x => x.size = 'auto');\n        }\n    }\n\n    /**\n     * Gets the list of splitter panes.\n     * @example\n     * ```typescript\n     * const panes = this.splitter.panes;\n     * ```\n     */\n    @ContentChildren(IgxSplitterPaneComponent, { read: IgxSplitterPaneComponent })\n    public panes!: QueryList<IgxSplitterPaneComponent>;\n\n    /**\n     * @hidden @internal\n     * Gets the `flex-direction` property of the current `SplitterComponent`.\n     */\n    @HostBinding('style.flex-direction')\n    public get direction(): string {\n        return this.type === SplitterType.Horizontal ? 'row' : 'column';\n    }\n\n    /**\n     * @hidden @internal\n     * Gets/Sets the `overflow` property of the current splitter.\n     */\n    @HostBinding('style.overflow')\n    public overflow = 'hidden';\n\n    /**\n     * @hidden @internal\n     * Sets/Gets the `display` property of the current splitter.\n     */\n    @HostBinding('style.display')\n    public display = 'flex';\n\n    /**\n     * @hidden @internal\n     * A field that holds the initial size of the main `IgxSplitterPaneComponent` in each pair of panes divided by a splitter bar.\n     */\n    private initialPaneSize!: number;\n\n    /**\n     * @hidden @internal\n     * A field that holds the initial size of the sibling pane in each pair of panes divided by a gripper.\n     * @memberof SplitterComponent\n     */\n    private initialSiblingSize!: number;\n\n    /**\n     * @hidden @internal\n     * The main pane in each pair of panes divided by a gripper.\n     */\n    private pane!: IgxSplitterPaneComponent;\n\n    /**\n     * The sibling pane in each pair of panes divided by a splitter bar.\n     */\n    private sibling!: IgxSplitterPaneComponent;\n\n    /** @hidden @internal */\n    public ngAfterContentInit(): void {\n        this.panes.forEach(pane => pane.owner = this);\n        this.assignFlexOrder();\n        this.panes.changes.subscribe(() => {\n            this.panes.forEach(pane => pane.owner = this);\n            this.assignFlexOrder();\n        });\n    }\n\n    /**\n     * @hidden @internal\n     * This method performs  initialization logic when the user starts dragging the splitter bar between each pair of panes.\n     * @param pane - the main pane associated with the currently dragged bar.\n     */\n    public onMoveStart(pane: IgxSplitterPaneComponent) {\n        const panes = this.panes.toArray();\n        this.pane = pane;\n        this.sibling = panes[panes.indexOf(this.pane) + 1];\n\n        const paneRect = this.pane.element.getBoundingClientRect();\n        this.initialPaneSize = this.type === SplitterType.Horizontal ? paneRect.width : paneRect.height;\n        if (this.pane.size === 'auto') {\n            this.pane.size = this.type === SplitterType.Horizontal ? paneRect.width : paneRect.height;\n        }\n\n        const siblingRect = this.sibling.element.getBoundingClientRect();\n        this.initialSiblingSize = this.type === SplitterType.Horizontal ? siblingRect.width : siblingRect.height;\n        if (this.sibling.size === 'auto') {\n            this.sibling.size = this.type === SplitterType.Horizontal ? siblingRect.width : siblingRect.height;\n        }\n    }\n\n    /**\n     * @hidden @internal\n     * This method performs calculations concerning the sizes of each pair of panes when the bar between them is dragged.\n     * @param delta - The difference along the X (or Y) axis between the initial and the current point when dragging the bar.\n     */\n    public onMoving(delta: number) {\n        const min = parseInt(this.pane.minSize, 10) || 0;\n        const max = parseInt(this.pane.maxSize, 10) || this.initialPaneSize + this.initialSiblingSize;\n        const minSibling = parseInt(this.sibling.minSize, 10) || 0;\n        const maxSibling = parseInt(this.sibling.maxSize, 10) || this.initialPaneSize + this.initialSiblingSize;\n\n        const paneSize = this.initialPaneSize - delta;\n        const siblingSize = this.initialSiblingSize + delta;\n        if (paneSize < min || paneSize > max || siblingSize < minSibling || siblingSize > maxSibling) {\n            return;\n        }\n\n        this.pane.size = paneSize + 'px';\n        this.sibling.size = siblingSize + 'px';\n    }\n\n    /**\n     * @hidden @internal\n     * This method assigns the order of each pane.\n     */\n    private assignFlexOrder() {\n        let k = 0;\n        this.panes.forEach((pane: IgxSplitterPaneComponent) => {\n            pane.order = k;\n            k += 2;\n        });\n    }\n\n    /** @hidden @internal */\n    public getPaneSiblingsByOrder(order: number, barIndex: number): Array<IgxSplitterPaneComponent> {\n        const panes = this.panes.toArray();\n        const prevPane = panes[order - barIndex - 1];\n        const nextPane = panes[order - barIndex];\n        const siblings = [prevPane, nextPane];\n        return siblings;\n    }\n}\n","import {Component, EventEmitter, HostBinding, HostListener, Input, Output} from '@angular/core';\nimport {SplitterType} from '../splitter.component';\nimport {IgxSplitterPaneComponent} from '../splitter-pane/splitter-pane.component';\nimport {DragDirection, IDragMoveEventArgs, IDragStartEventArgs} from '../../directives/drag-drop/drag-drop.directive';\n\n\nexport const SPLITTER_INTERACTION_KEYS = new Set('right down left up arrowright arrowdown arrowleft arrowup'.split(' '));\n\n/**\n * @hidden @internal\n * Represents the draggable bar that visually separates panes and allows for changing their sizes.\n */\n@Component({\n    selector: 'igx-splitter-bar',\n    templateUrl: './splitter-bar.component.html'\n})\nexport class IgxSplitBarComponent {\n    /**\n     * Set css class to the host element.\n     */\n    @HostBinding('class.igx-splitter-bar-host')\n    public cssClass = 'igx-splitter-bar-host';\n\n    /**\n     * Gets/Sets the orientation.\n     */\n    @Input()\n    public type: SplitterType = SplitterType.Horizontal;\n\n    /**\n     * Sets/gets the element order.\n     */\n    @HostBinding('style.order')\n    @Input()\n    public order!: number;\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @HostBinding('attr.tabindex')\n    public get tabindex() {\n        return this.resizeDisallowed ? null : 0;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    @HostBinding('attr.aria-orientation')\n    public get orientation() {\n        return this.type === SplitterType.Horizontal ? 'horizontal' : 'vertical';\n    }\n\n    /**\n     * @hidden\n     * @internal\n     */\n    public get cursor() {\n        if (this.resizeDisallowed) {\n            return '';\n        }\n        return this.type === SplitterType.Horizontal ? 'col-resize' : 'row-resize';\n    }\n\n    /**\n     * Sets/gets the `SplitPaneComponent` associated with the current `SplitBarComponent`.\n     * @memberof SplitBarComponent\n     */\n    @Input()\n    public pane!: IgxSplitterPaneComponent;\n\n    /**\n     * Sets/Gets the `SplitPaneComponent` sibling components associated with the current `SplitBarComponent`.\n     */\n    @Input()\n    public siblings!: Array<IgxSplitterPaneComponent>;\n\n    /**\n     * An event that is emitted whenever we start dragging the current `SplitBarComponent`.\n     */\n    @Output()\n    public moveStart = new EventEmitter<IgxSplitterPaneComponent>();\n\n    /**\n     * An event that is emitted while we are dragging the current `SplitBarComponent`.\n     */\n    @Output()\n    public moving = new EventEmitter<number>();\n\n    /**\n     * A temporary holder for the pointer coordinates.\n     */\n    private startPoint!: number;\n\n    /**\n     * @hidden @internal\n     */\n    public get prevButtonHidden() {\n        return this.siblings[0].collapsed && !this.siblings[1].collapsed;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    @HostListener('keydown', ['$event'])\n    keyEvent(event: KeyboardEvent) {\n        const key = event.key.toLowerCase();\n        const ctrl = event.ctrlKey;\n        event.stopPropagation();\n        if (SPLITTER_INTERACTION_KEYS.has(key)) {\n            event.preventDefault();\n        }\n            switch (key) {\n                case 'arrowup':\n                case 'up':\n                    if (this.type === SplitterType.Vertical) {\n                        if (ctrl) {\n                            this.onCollapsing(false);\n                            break;\n                        }\n                        if (!this.resizeDisallowed) {\n                            event.preventDefault();\n                            this.moveStart.emit(this.pane);\n                            this.moving.emit(10);\n                        }\n                    }\n                    break;\n                case 'arrowdown':\n                case 'down':\n                    if (this.type === SplitterType.Vertical) {\n                        if (ctrl) {\n                            this.onCollapsing(true);\n                            break;\n                        }\n                        if (!this.resizeDisallowed) {\n                            event.preventDefault();\n                            this.moveStart.emit(this.pane);\n                            this.moving.emit(-10);\n                        }\n                    }\n                    break;\n                case 'arrowleft':\n                case 'left':\n                    if (this.type === SplitterType.Horizontal) {\n                        if (ctrl) {\n                            this.onCollapsing(false);\n                            break;\n                        }\n                        if (!this.resizeDisallowed) {\n                            event.preventDefault();\n                            this.moveStart.emit(this.pane);\n                            this.moving.emit(10);\n                        }\n                    }\n                    break;\n                case 'arrowright':\n                case 'right':\n                    if (this.type === SplitterType.Horizontal) {\n                        if (ctrl) {\n                            this.onCollapsing(true);\n                            break;\n                        }\n                        if (!this.resizeDisallowed) {\n                            event.preventDefault();\n                            this.moveStart.emit(this.pane);\n                            this.moving.emit(-10);\n                        }\n                    }\n                    break;\n                default:\n                    break;\n            }\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public get dragDir() {\n        return this.type === SplitterType.Horizontal ? DragDirection.VERTICAL : DragDirection.HORIZONTAL;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public get nextButtonHidden() {\n        return this.siblings[1].collapsed && !this.siblings[0].collapsed;\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onDragStart(event: IDragStartEventArgs) {\n        if (this.resizeDisallowed) {\n            event.cancel = true;\n            return;\n        }\n        this.startPoint = this.type === SplitterType.Horizontal ? event.startX : event.startY;\n        this.moveStart.emit(this.pane);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onDragMove(event: IDragMoveEventArgs) {\n        const isHorizontal = this.type === SplitterType.Horizontal;\n        const curr =  isHorizontal ? event.pageX : event.pageY;\n        const delta = this.startPoint - curr;\n        if (delta !== 0) {\n            this.moving.emit(delta);\n            event.cancel = true;\n            event.owner.element.nativeElement.style.transform = '';\n        }\n    }\n\n    protected get resizeDisallowed() {\n        const relatedTabs = this.siblings;\n        return !!relatedTabs.find(x => x.resizable === false || x.collapsed === true);\n    }\n\n    /**\n     * @hidden @internal\n     */\n    public onCollapsing(next: boolean) {\n        const prevSibling = this.siblings[0];\n        const nextSibling = this.siblings[1];\n        let target;\n        if (next) {\n            // if next is clicked when prev pane is hidden, show prev pane, else hide next pane.\n            target = prevSibling.collapsed ? prevSibling : nextSibling;\n        } else {\n            // if prev is clicked when next pane is hidden, show next pane, else hide prev pane.\n            target = nextSibling.collapsed ? nextSibling : prevSibling;\n        }\n        target.toggle();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IgxSplitBarComponent } from './splitter-bar/splitter-bar.component';\nimport { IgxSplitterPaneComponent } from './splitter-pane/splitter-pane.component';\nimport { IgxSplitterComponent } from './splitter.component';\nimport { IgxIconModule } from '../icon/public_api';\nimport { IgxDragDropModule } from '../directives/drag-drop/drag-drop.directive';\n\n@NgModule({\n    imports: [\n        CommonModule, IgxIconModule, IgxDragDropModule\n    ],\n    declarations: [\n        IgxSplitterComponent,\n        IgxSplitterPaneComponent,\n        IgxSplitBarComponent\n    ],\n    exports: [\n        IgxSplitterComponent,\n        IgxSplitterPaneComponent\n    ]\n})\nexport class IgxSplitterModule { }\n","import { Component, ContentChild, Pipe, PipeTransform, Output, EventEmitter, HostListener, Directive } from '@angular/core';\nimport { formatDate } from '@angular/common';\nimport { NgControl } from '@angular/forms';\nimport { IgxInputDirective, IgxInputState } from '../input-group/public_api';\nimport { IgxInputGroupComponent } from '../input-group/input-group.component';\nimport { IgxInputGroupBase } from '../input-group/input-group.common';\nimport { IgxDateTimeEditorDirective } from '../directives/date-time-editor/public_api';\n\n/**\n * Represents a range between two dates.\n */\nexport interface DateRange {\n    start: Date;\n    end: Date;\n}\n\n/** @hidden @internal */\n@Pipe({ name: 'dateRange' })\nexport class DateRangePickerFormatPipe implements PipeTransform {\n    public transform(values: DateRange, inputFormat?: string, locale?: string): string {\n        if (!values) {\n            return '';\n        }\n        const { start, end } = values;\n        // TODO: move default locale from IgxDateTimeEditorDirective to its commons file/use displayFormat\n        const startDate = inputFormat ? formatDate(start, inputFormat, locale || 'en') : start?.toLocaleDateString();\n        const endDate = inputFormat ? formatDate(end, inputFormat, locale || 'en') : end?.toLocaleDateString();\n        let formatted;\n        if (start) {\n            formatted = `${startDate} - `;\n            if (end) {\n                formatted += endDate;\n            }\n        }\n\n        // TODO: no need to set format twice\n        return formatted ? formatted : '';\n    }\n}\n\n/** @hidden @internal */\n@Component({\n    template: ``,\n    selector: `igx-date-range-base`,\n    providers: [{ provide: IgxInputGroupBase, useExisting: IgxDateRangeInputsBaseComponent }]\n})\nexport class IgxDateRangeInputsBaseComponent extends IgxInputGroupComponent {\n    @ContentChild(NgControl)\n    protected ngControl: NgControl;\n\n    @ContentChild(IgxDateTimeEditorDirective)\n    public dateTimeEditor: IgxDateTimeEditorDirective;\n\n    @ContentChild(IgxInputDirective)\n    public inputDirective: IgxInputDirective;\n\n    /** @hidden @internal */\n    public get nativeElement() {\n        return this.element.nativeElement;\n    }\n\n    /** @hidden @internal */\n    public setFocus(): void {\n        this.input.focus();\n    }\n\n    /** @hidden @internal */\n    public updateInputValue(value: Date) {\n        if (this.ngControl) {\n            this.ngControl.control.setValue(value);\n        } else {\n            this.dateTimeEditor.value = value;\n        }\n    }\n\n    /** @hidden @internal */\n    public updateInputValidity(state: IgxInputState) {\n        this.inputDirective.valid = state;\n    }\n\n}\n\n/**\n * Templates the default icon in the `IgxDateRangePicker`.\n *\n * @igxModule IgxDateRangePickerModule\n *\n * @igxKeyWords date range icon, date picker icon\n *\n * @igxGroup scheduling\n *\n * @example\n * ```html\n * <igx-date-range-picker>\n *   <igx-picker-toggle igxSuffix>\n *      <igx-icon>calendar_view_day</igx-icon>\n *   </igx-picker-toggle>\n * </igx-date-range-picker>\n * ```\n */\n@Component({\n    template: `<ng-content></ng-content>`,\n    selector: 'igx-picker-toggle'\n})\nexport class IgxPickerToggleComponent {\n    @Output()\n    public clicked = new EventEmitter();\n\n    @HostListener('click', ['$event'])\n    public onClick(event: MouseEvent) {\n        // do not focus input on click\n        event.stopPropagation();\n        this.clicked.emit();\n    }\n}\n\n/**\n * Defines the start input for a date range picker\n *\n * @igxModule IgxDateRangePickerModule\n *\n * @igxTheme igx-input-group-theme, igx-calendar-theme, igx-date-range-picker-theme\n *\n * @igxKeywords date, range, date range, date picker\n *\n * @igxGroup scheduling\n *\n * @remarks\n * When templating, start input has to be templated separately\n *\n * @example\n * ```html\n * <igx-date-range-picker mode=\"dropdown\">\n *      <igx-date-range-start>\n *          <input igxInput igxDateTimeEditor type=\"text\">\n *      </igx-date-range-start>\n *      ...\n * </igx-date-range-picker>\n * ```\n */\n@Component({\n    selector: 'igx-date-range-start',\n    templateUrl: '../input-group/input-group.component.html',\n    providers: [\n        { provide: IgxInputGroupBase, useExisting: IgxDateRangeStartComponent },\n        { provide: IgxDateRangeInputsBaseComponent, useExisting: IgxDateRangeStartComponent }\n    ]\n})\nexport class IgxDateRangeStartComponent extends IgxDateRangeInputsBaseComponent { }\n\n/**\n * Defines the end input for a date range picker\n *\n * @igxModule IgxDateRangeModule\n *\n * @igxTheme igx-input-group-theme, igx-calendar-theme, igx-date-range-picker-theme\n *\n * @igxKeywords date, range, date range, date picker\n *\n * @igxGroup scheduling\n *\n * @remarks\n * When templating, end input has to be template separately\n *\n * @example\n * ```html\n * <igx-date-range-picker mode=\"dropdown\">\n *      <igx-date-range-end>\n *          <input igxInput igxDateTimeEditor type=\"text\">\n *      </igx-date-range-end>\n *      ...\n * </igx-date-range-picker>\n * ```\n */\n@Component({\n    selector: 'igx-date-range-end',\n    templateUrl: '../input-group/input-group.component.html',\n    providers: [\n        { provide: IgxInputGroupBase, useExisting: IgxDateRangeEndComponent },\n        { provide: IgxDateRangeInputsBaseComponent, useExisting: IgxDateRangeEndComponent }\n    ]\n})\nexport class IgxDateRangeEndComponent extends IgxDateRangeInputsBaseComponent { }\n\n@Directive({\n    selector: '[igxDateRangeSeparator]'\n})\nexport class IgxDateRangeSeparatorDirective {\n}\n","import {\n    AfterViewInit,\n    Component,\n    ContentChild,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    Injector,\n    Input,\n    LOCALE_ID,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild\n} from '@angular/core';\nimport {\n    AbstractControl,\n    ControlValueAccessor,\n    NgControl,\n    NG_VALIDATORS,\n    NG_VALUE_ACCESSOR,\n    ValidationErrors,\n    Validator\n} from '@angular/forms';\nimport { fromEvent, Subject, Subscription } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { fadeIn, fadeOut } from '../animations/fade';\nimport { IgxCalendarComponent, WEEKDAYS } from '../calendar/public_api';\nimport { DateRangeType } from '../core/dates';\nimport { DisplayDensityBase, DisplayDensityToken, IDisplayDensityOptions } from '../core/density';\nimport { InteractionMode } from '../core/enums';\nimport { CurrentResourceStrings } from '../core/i18n/resources';\nimport { IToggleView } from '../core/navigation';\nimport { CancelableBrowserEventArgs, IBaseEventArgs, KEYS } from '../core/utils';\nimport { DatePickerUtil } from '../date-picker/date-picker.utils';\nimport { IgxToggleDirective } from '../directives/toggle/toggle.directive';\nimport { IgxInputDirective, IgxInputGroupComponent, IgxInputState, IgxLabelDirective } from '../input-group/public_api';\nimport { AutoPositionStrategy, OverlaySettings, PositionSettings } from '../services/public_api';\nimport {\n    DateRange,\n    IgxDateRangeEndComponent,\n    IgxDateRangeInputsBaseComponent,\n    IgxDateRangeSeparatorDirective,\n    IgxDateRangeStartComponent,\n    IgxPickerToggleComponent\n} from './date-range-picker-inputs.common';\n\n\n\n/**\n * Provides the ability to select a range of dates from a calendar UI or editable inputs.\n *\n * @igxModule IgxDateRangeModule\n *\n * @igxTheme igx-input-group-theme, igx-calendar-theme, igx-date-range-picker-theme\n *\n * @igxKeywords date, range, date range, date picker\n *\n * @igxGroup scheduling\n *\n * @remarks\n * It displays the range selection in a single or two input fields.\n * The default template displays a single *readonly* input field\n * while projecting `igx-date-range-start` and `igx-date-range-end`\n * displays two *editable* input fields.\n *\n * @example\n * ```html\n * <igx-date-range-picker mode=\"dropdown\"></igx-date-range-picker>\n * ```\n */\n@Component({\n    selector: 'igx-date-range-picker',\n    templateUrl: './date-range-picker.component.html',\n    providers: [\n        { provide: NG_VALUE_ACCESSOR, useExisting: IgxDateRangePickerComponent, multi: true },\n        { provide: NG_VALIDATORS, useExisting: IgxDateRangePickerComponent, multi: true }\n    ]\n})\nexport class IgxDateRangePickerComponent extends DisplayDensityBase\n    implements IToggleView, OnChanges, OnInit, AfterViewInit, OnDestroy, ControlValueAccessor, Validator {\n    /**\n     * Display calendar in either `dialog` or `dropdown` mode.\n     * @remarks\n     * Default mode is `dialog`\n     *\n     * @example\n     * ```html\n     * <igx-date-range-picker mode=\"dropdown\"></igx-date-range-picker>\n     * ```\n     */\n    @Input()\n    public mode = InteractionMode.Dialog;\n\n    /**\n     * The number of displayed month views.\n     *\n     * @remarks\n     * Default is `2`.\n     *\n     * @example\n     * ```html\n     * <igx-date-range-picker [monthsViewNumber]=\"3\"></igx-date-range-picker>\n     * ```\n     */\n    @Input()\n    public monthsViewNumber = 2;\n\n    /**\n     * Gets/Sets whether dates that are not part of the current month will be displayed.\n     *\n     * @remarks\n     * Default value is `false`.\n     *\n     * @example\n     * ```html\n     * <igx-date-range-picker [hideOutsideDays]=\"true\"></igx-date-range-picker>\n     * ```\n     */\n    @Input()\n    public hideOutsideDays: boolean;\n\n    /**\n     * The start day of the week.\n     *\n     * @remarks\n     * Can be assigned to a numeric value or to `WEEKDAYS` enum value.\n     *\n     * @example\n     * ```html\n     * <igx-date-range-picker [weekStart]=\"1\"></igx-date-range-picker>\n     * ```\n     */\n    @Input()\n    public weekStart = WEEKDAYS.SUNDAY;\n\n    /**\n     * The `locale` of the calendar.\n     *\n     * @remarks\n     * Default value is `\"en\"`.\n     *\n     * @example\n     * ```html\n     * <igx-date-range-picker locale=\"jp\"></igx-date-range-picker>\n     * ```\n     */\n    @Input()\n    public locale: string;\n\n    /**\n     * A custom formatter function, applied on the selected or passed in date.\n     *\n     * @example\n     * ```typescript\n     * private dayFormatter = new Intl.DateTimeFormat(\"en\", { weekday: \"long\" });\n     * private monthFormatter = new Intl.DateTimeFormat(\"en\", { month: \"long\" });\n     *\n     * public formatter(date: Date): string {\n     *  return `${this.dayFormatter.format(date)} - ${this.monthFormatter.format(date)} - ${date.getFullYear()}`;\n     * }\n     * ```\n     * ```html\n     * <igx-date-range-picker [formatter]=\"formatter\"></igx-date-range-picker>\n     * ```\n     */\n    @Input()\n    public formatter: (val: DateRange) => string;\n\n    /**\n     * The default text of the calendar dialog `done` button.\n     *\n     * @remarks\n     * Default value is `Done`.\n     * The button will only show up in `dialog` mode.\n     *\n     * @example\n     * ```html\n     * <igx-date-range-picker doneButtonText=\"完了\"></igx-date-range-picker>\n     * ```\n     */\n    @Input()\n    public doneButtonText = 'Done';\n\n    /**\n     * Custom overlay settings that should be used to display the calendar.\n     *\n     * @example\n     * ```html\n     * <igx-date-range-picker [overlaySettings]=\"customOverlaySettings\"></igx-date-range-picker>\n     * ```\n     */\n    @Input()\n    public overlaySettings: OverlaySettings;\n\n    /**\n     * The format used when editable inputs are not focused.\n     *\n     * @remarks\n     * Uses Angular's DatePipe.\n     *\n     * @example\n     * ```html\n     * <igx-date-range-picker displayFormat=\"EE/M/yy\"></igx-date-range-picker>\n     * ```\n     *\n     */\n    @Input()\n    public displayFormat: string;\n\n    /**\n     * The expected user input format and placeholder.\n     *\n     * @remarks\n     * Default is `\"'MM/dd/yyyy'\"`\n     *\n     * @example\n     * ```html\n     * <igx-date-range-picker inputFormat=\"dd/MM/yy\"></igx-date-range-picker>\n     * ```\n     */\n    @Input()\n    public inputFormat: string;\n\n    /**\n     * The minimum value in a valid range.\n     *\n     * @example\n     * <igx-date-range-picker [minValue]=\"minDate\"></igx-date-range-picker>\n     */\n    @Input()\n    public set minValue(value: Date | string) {\n        this._minValue = value;\n        this.onValidatorChange();\n    }\n\n    public get minValue(): Date | string {\n        return this._minValue;\n    }\n\n    /**\n     * The maximum value in a valid range.\n     *\n     * @example\n     * <igx-date-range-picker [maxValue]=\"maxDate\"></igx-date-range-picker>\n     */\n    @Input()\n    public set maxValue(value: Date | string) {\n        this._maxValue = value;\n        this.onValidatorChange();\n    }\n\n    public get maxValue(): Date | string {\n        return this._maxValue;\n    }\n\n    /**\n     * Enables/Disables the `IgxDateRangePickerComponent`.\n     *  @example\n     * ```html\n     * <igx-date-range-picker [disabled]=\"'true'\"></igx-date-range-picker>\n     * ```\n     */\n    @Input()\n    public disabled: boolean;\n\n    /**\n     * Sets the `placeholder` for single-input `IgxDateRangePickerComponent`.\n     *   @example\n     * ```html\n     * <igx-date-range-picker [placeholder]=\"'Choose your dates'\"></igx-date-range-picker>\n     * ```\n     */\n    @Input()\n    public placeholder = '';\n\n    /**\n     * Emitted when a range is selected.\n     *\n     * @example\n     * ```html\n     * <igx-date-range-picker (rangeSelected)=\"handleSelected($event)\"></igx-date-range-picker>\n     * ```\n     */\n    @Output()\n    public rangeSelected = new EventEmitter<DateRange>();\n\n    /**\n     * Emitted when the calendar starts opening, cancelable.\n     *\n     * @example\n     * ```html\n     * <igx-date-range-picker (onOpening)=\"handleOpening($event)\"></igx-date-range-picker>\n     * ```\n     */\n    @Output()\n    public onOpening = new EventEmitter<CancelableBrowserEventArgs & IBaseEventArgs>();\n\n    /**\n     * Emitted when the `IgxDateRangeComponent` is opened.\n     *\n     * @example\n     * ```html\n     * <igx-date-range-picker (onOpened)=\"handleOpened($event)\"></igx-date-range-picker>\n     * ```\n     */\n    @Output()\n    public onOpened = new EventEmitter<IBaseEventArgs>();\n\n    /**\n     * Emitted when the calendar starts closing, cancelable.\n     *\n     * @example\n     * ```html\n     * <igx-date-range-picker (onClosing)=\"handleClosing($event)\"></igx-date-range-picker>\n     * ```\n     */\n    @Output()\n    public onClosing = new EventEmitter<CancelableBrowserEventArgs & IBaseEventArgs>();\n\n    /**\n     * Emitted when the `IgxDateRangeComponent` is closed.\n     *\n     * @example\n     * ```html\n     * <igx-date-range-picker (onClosed)=\"handleClosed($event)\"></igx-date-range-picker>\n     * ```\n     */\n    @Output()\n    public onClosed = new EventEmitter<IBaseEventArgs>();\n\n    /** @hidden @internal */\n    @HostBinding('class.igx-date-range-picker')\n    public cssClass = 'igx-date-range-picker';\n\n    /** @hidden @internal */\n    @ViewChild(IgxCalendarComponent)\n    public calendar: IgxCalendarComponent;\n\n    /** @hidden @internal */\n    @ViewChild(IgxInputGroupComponent)\n    public inputGroup: IgxInputGroupComponent;\n\n    /** @hidden @internal */\n    @ViewChild(IgxInputDirective)\n    public inputDirective: IgxInputDirective;\n\n    /** @hidden @internal */\n    @ViewChild(IgxToggleDirective)\n    public toggleDirective: IgxToggleDirective;\n\n    /** @hidden @internal */\n    @ContentChildren(IgxPickerToggleComponent, { descendants: true })\n    public toggleComponents: QueryList<IgxPickerToggleComponent>;\n\n    /** @hidden @internal */\n    @ContentChildren(IgxDateRangeInputsBaseComponent)\n    public projectedInputs: QueryList<IgxDateRangeInputsBaseComponent>;\n\n    @ContentChild(IgxLabelDirective)\n    public label: IgxLabelDirective;\n\n    /** @hidden @internal */\n    @ContentChild(IgxDateRangeSeparatorDirective, { read: TemplateRef })\n    public dateSeparatorTemplate: TemplateRef<any>;\n\n    /** @hidden @internal */\n    public dateSeparator = CurrentResourceStrings.DateRangePickerResStrings.igx_date_range_picker_date_separator;\n\n    /** @hidden @internal */\n    public get appliedFormat(): string {\n        if (this.formatter) {\n            return this.formatter(this.value);\n        }\n        if (!this.hasProjectedInputs) {\n            if (this.placeholder !== '') {\n                return this.placeholder;\n            }\n            // TODO: use displayFormat - see how shortDate, longDate can be defined\n            return this.inputFormat\n                ? `${this.inputFormat} - ${this.inputFormat}`\n                : `${DatePickerUtil.DEFAULT_INPUT_FORMAT} - ${DatePickerUtil.DEFAULT_INPUT_FORMAT}`;\n        } else {\n            return this.inputFormat || DatePickerUtil.DEFAULT_INPUT_FORMAT;\n        }\n    }\n\n    /** @hidden @internal */\n    public get hasProjectedInputs(): boolean {\n        return this.projectedInputs?.length > 0;\n    }\n\n    private get dropdownOverlaySettings(): OverlaySettings {\n        return Object.assign({}, this._dropDownOverlaySettings, this.overlaySettings);\n    }\n\n    private get dialogOverlaySettings(): OverlaySettings {\n        return Object.assign({}, this._dialogOverlaySettings, this.overlaySettings);\n    }\n\n    private get required(): boolean {\n        if (this._ngControl && this._ngControl.control && this._ngControl.control.validator) {\n            const error = this._ngControl.control.validator({} as AbstractControl);\n            return (error && error.required) ? true : false;\n        }\n\n        return false;\n    }\n\n    private _value: DateRange;\n    private _collapsed = true;\n    private _ngControl: NgControl;\n    private _statusChanges$: Subscription;\n    private $destroy = new Subject();\n    private _minValue: Date | string;\n    private _maxValue: Date | string;\n    private $toggleClickNotifier = new Subject();\n    private _positionSettings: PositionSettings;\n    private _dialogOverlaySettings: OverlaySettings = {\n        closeOnOutsideClick: true,\n        modal: true\n    };\n    private _dropDownOverlaySettings: OverlaySettings = {\n        closeOnOutsideClick: true,\n        modal: false\n    };\n    private onChangeCallback = (dateRange: DateRange) => { };\n    private onTouchCallback = () => { };\n    private onValidatorChange = () => { };\n\n    constructor(public element: ElementRef,\n        @Optional() @Inject(DisplayDensityToken) protected _displayDensityOptions: IDisplayDensityOptions,\n        @Inject(LOCALE_ID) private _locale: any,\n        private _injector: Injector) {\n        super(_displayDensityOptions);\n        this.locale = this.locale || this._locale;\n    }\n\n    /**\n     * Opens the date range picker's dropdown or dialog.\n     *\n     * @example\n     * ```html\n     * <igx-date-range-picker #dateRange></igx-date-range-picker>\n     *\n     * <button (click)=\"dateRange.open()\">Open Dialog</button\n     * ```\n     */\n    public open(overlaySettings?: OverlaySettings): void {\n        if (!this.collapsed) { return; }\n\n        this.updateCalendar();\n        const settings = this.mode === InteractionMode.Dialog ? this.dialogOverlaySettings : this.dropdownOverlaySettings;\n        this.toggleDirective.open(Object.assign(settings, overlaySettings));\n    }\n\n    /**\n     * Closes the date range picker's dropdown or dialog.\n     *\n     * @example\n     * html```\n     * <igx-date-range-picker #dateRange></igx-date-range-picker>\n     *\n     * <button (click)=\"dateRange.close()\">Close Dialog</button>\n     * ```\n     */\n    public close(): void {\n        if (!this.collapsed) {\n            this.toggleDirective.close();\n        }\n    }\n\n    /**\n     * Toggles the date range picker's dropdown or dialog\n     *\n     * @example\n     * html```\n     * <igx-date-range-picker #dateRange></igx-date-range-picker>\n     *\n     * <button (click)=\"dateRange.toggle()\">Toggle Dialog</button>\n     * ```\n     */\n    public toggle(overlaySettings?: OverlaySettings): void {\n        if (!this.collapsed) {\n            this.close();\n        } else {\n            this.open(overlaySettings);\n        }\n    }\n\n    /**\n     * Gets calendar state.\n     *\n     * ```typescript\n     * let state = this.dateRange.collapsed;\n     * ```\n     */\n    public get collapsed(): boolean {\n        return this._collapsed;\n    }\n\n    /**\n     * The currently selected value / range from the calendar\n     *\n     * @remarks\n     * The current value is of type `DateRange`\n     *\n     * @example\n     * ```typescript\n     * const newValue: DateRange = { start: new Date(\"2/2/2012\"), end: new Date(\"3/3/2013\")};\n     * this.dateRangePicker.value = newValue;\n     * ```\n     */\n    public get value(): DateRange {\n        return this._value;\n    }\n\n    @Input()\n    public set value(value: DateRange) {\n        this.updateValue(value);\n        this.onChangeCallback(value);\n    }\n\n    private updateValue(value: DateRange) {\n        this._value = value ? value : null;\n        this.updateInputs();\n    }\n\n    /**\n     * Selects a range of dates. If no `endDate` is passed, range is 1 day (only `startDate`)\n     *\n     * @example\n     * ```typescript\n     * public selectFiveDayRange() {\n     *  const inFiveDays = new Date(new Date().setDate(today.getDate() + 5));\n     *  const today = new Date();\n     *  this.dateRange.selectRange(today, inFiveDays);\n     * }\n     * ```\n     */\n    public selectRange(startDate: Date, endDate?: Date): void {\n        endDate = endDate ?? startDate;\n        const dateRange = [startDate, endDate];\n        this.calendar.selectDate(dateRange);\n        this.handleSelection(dateRange);\n    }\n\n    /** @hidden @internal */\n    public writeValue(value: DateRange): void {\n        this.updateValue(value);\n    }\n\n    /** @hidden @internal */\n    public registerOnChange(fn: any): void {\n        this.onChangeCallback = fn;\n    }\n\n    /** @hidden @internal */\n    public registerOnTouched(fn: any): void {\n        this.onTouchCallback = fn;\n    }\n\n    /** @hidden @internal */\n    public validate(control: AbstractControl): ValidationErrors | null {\n        const value: DateRange = control.value;\n        if (value) {\n            const min = DatePickerUtil.parseDate(this.minValue);\n            const max = DatePickerUtil.parseDate(this.maxValue);\n            const start = DatePickerUtil.parseDate(value.start);\n            const end = DatePickerUtil.parseDate(value.end);\n\n            if (min && start && DatePickerUtil.lessThanMinValue(start, min, false)) {\n                return { 'minValue': true };\n            }\n            if (min && end && DatePickerUtil.lessThanMinValue(end, min, false)) {\n                return { 'minValue': true };\n            }\n            if (max && start && DatePickerUtil.greaterThanMaxValue(start, max, false)) {\n                return { 'maxValue': true };\n            }\n            if (max && end && DatePickerUtil.greaterThanMaxValue(end, max, false)) {\n                return { 'maxValue': true };\n            }\n        }\n\n        // TODO: fix what happens on blur and ensure on blur the value is either null or with both start and end filled\n        return null;\n    }\n\n    /** @hidden @internal */\n    public registerOnValidatorChange?(fn: any): void {\n        this.onValidatorChange = fn;\n    }\n\n    /** @hidden @internal */\n    public setDisabledState?(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    /** @hidden @internal */\n    get separatorClass(): string {\n        return this.getComponentDensityClass('igx-date-range-picker__label');\n    }\n\n    /** @hidden */\n    public ngOnInit(): void {\n        this._ngControl = this._injector.get<NgControl>(NgControl, null);\n    }\n\n    /** @hidden */\n    public ngAfterViewInit(): void {\n        if (this.mode === InteractionMode.DropDown) {\n            this.attachOnKeydown();\n        }\n        this.subscribeToDateEditorEvents();\n        this.configPositionStrategy();\n        this.configOverlaySettings();\n        this.attachOnTouched();\n\n        const subsToClicked = () => {\n            this.$toggleClickNotifier.next();\n            this.toggleComponents.forEach(toggle => {\n                toggle.clicked.pipe(takeUntil(this.$toggleClickNotifier)).subscribe(() => this.open());\n            });\n        };\n        this.toggleComponents.changes.pipe(takeUntil(this.$destroy)).subscribe(() => subsToClicked());\n        subsToClicked();\n\n        this.setRequiredToInputs();\n\n        if (this._ngControl) {\n            this._statusChanges$ = this._ngControl.statusChanges.subscribe(this.onStatusChanged.bind(this));\n        }\n        this.initialSetValue();\n        this.updateInputs();\n    }\n\n    /** @hidden @internal */\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes['locale']) {\n            this.inputFormat = DatePickerUtil.getDefaultInputFormat(this.locale || 'en') || DatePickerUtil.DEFAULT_INPUT_FORMAT;\n        }\n    }\n\n    /** @hidden @internal */\n    public ngOnDestroy(): void {\n        this.$destroy.next();\n        this.$destroy.complete();\n        this.$toggleClickNotifier.next();\n        this.$toggleClickNotifier.complete();\n    }\n\n    /** @hidden @internal */\n    public handleOpening(event: CancelableBrowserEventArgs & IBaseEventArgs): void {\n        this.onOpening.emit(event);\n        this._collapsed = false;\n    }\n\n    /** @hidden @internal */\n    public handleOpened(): void {\n        this.calendar.daysView.focusActiveDate();\n        this.onOpened.emit({ owner: this });\n    }\n\n    /** @hidden @internal */\n    public handleClosing(event: CancelableBrowserEventArgs & IBaseEventArgs): void {\n        this.onClosing.emit(event);\n\n        if (this.value && this.value.start && !this.value.end) {\n            this.value = { start: this.value.start, end: this.value.start };\n        }\n        if (this.value && !this.value.start && !this.value.end) {\n            this.value = null;\n        }\n\n        if (this.mode === InteractionMode.DropDown && event.event && !this.element.nativeElement.contains(event.event.target)) {\n            // outside click\n            this.updateValidityOnBlur();\n        } else {\n            // input click\n            this.focusInput();\n        }\n    }\n\n    private updateValidityOnBlur() {\n        this.onTouchCallback();\n        if (this._ngControl) {\n            if (this.hasProjectedInputs) {\n                this.projectedInputs.forEach(i => {\n                    if (!this._ngControl.valid) {\n                        i.updateInputValidity(IgxInputState.INVALID);\n                    } else {\n                        i.updateInputValidity(IgxInputState.INITIAL);\n                    }\n                });\n            }\n\n            if (this.inputDirective) {\n                if (!this._ngControl.valid) {\n                    this.inputDirective.valid = IgxInputState.INVALID;\n                } else {\n                    this.inputDirective.valid = IgxInputState.INITIAL;\n                }\n            }\n        }\n    }\n\n    private focusInput() {\n        // TODO: should we always focus start input?\n        (this.projectedInputs\n            .find(i => i instanceof IgxDateRangeStartComponent) as IgxDateRangeStartComponent)?.setFocus();\n        if (this.inputDirective) {\n            this.inputDirective.focus();\n        }\n    }\n\n    /** @hidden @internal */\n    public handleClosed(): void {\n        this._collapsed = true;\n        this.onClosed.emit({ owner: this });\n    }\n\n    /** @hidden @internal */\n    public onKeyDown(event: KeyboardEvent): void {\n        switch (event.key) {\n            case KEYS.UP_ARROW:\n            case KEYS.UP_ARROW_IE:\n                if (event.altKey) {\n                    this.close();\n                }\n                break;\n            case KEYS.DOWN_ARROW:\n            case KEYS.DOWN_ARROW_IE:\n                if (event.altKey) {\n                    this.open();\n                }\n                break;\n            case KEYS.ESCAPE:\n            case KEYS.ESCAPE_IE:\n                this.close();\n                break;\n        }\n    }\n\n    /** @hidden @internal */\n    public handleSelection(selectionData: Date[]): void {\n        this.value = this.extractRange(selectionData);\n        this.rangeSelected.emit(this.value);\n    }\n\n    protected onStatusChanged = () => {\n        if ((this._ngControl.control.touched || this._ngControl.control.dirty) &&\n            (this._ngControl.control.validator || this._ngControl.control.asyncValidator)) {\n            if (this.inputGroup) {\n                this.inputDirective.valid = this.getInputState(this.inputGroup.isFocused);\n            } else if (this.hasProjectedInputs) {\n                this.projectedInputs\n                    .forEach(i => { i.inputDirective.valid = this.getInputState(i.isFocused); });\n            }\n        }\n        this.setRequiredToInputs();\n    }\n\n    private getInputState(focused: boolean): IgxInputState {\n        if (focused) {\n            return this._ngControl.valid ? IgxInputState.VALID : IgxInputState.INVALID;\n        } else {\n            return this._ngControl.valid ? IgxInputState.INITIAL : IgxInputState.INVALID;\n        }\n    }\n\n    private setRequiredToInputs(): void {\n        // workaround for igxInput setting required\n        Promise.resolve().then(() => {\n            const isRequired = this.required;\n            if (this.inputGroup && this.inputGroup.isRequired !== isRequired) {\n                this.inputGroup.isRequired = isRequired;\n            } else if (this.hasProjectedInputs && this._ngControl) {\n                this.projectedInputs.forEach(i => i.isRequired = isRequired);\n            }\n        });\n    }\n\n    private updateCalendar(): void {\n        this.calendar.disabledDates = [];\n        let minValue: Date = DatePickerUtil.parseDate(this.minValue);\n        if (!minValue && this.hasProjectedInputs) {\n            const start = this.projectedInputs.filter(i => i instanceof IgxDateRangeStartComponent)[0];\n            if (start) {\n                minValue = DatePickerUtil.parseDate(start.dateTimeEditor.minValue);\n            }\n        }\n        if (minValue) {\n            this.calendar.disabledDates.push({ type: DateRangeType.Before, dateRange: [minValue] });\n        }\n\n        let maxValue: Date = DatePickerUtil.parseDate(this.maxValue);\n        if (!maxValue && this.hasProjectedInputs) {\n            const end = this.projectedInputs.filter(i => i instanceof IgxDateRangeEndComponent)[0];\n            if (end) {\n                maxValue = DatePickerUtil.parseDate(end.dateTimeEditor.maxValue);\n            }\n        }\n        if (maxValue) {\n            this.calendar.disabledDates.push({ type: DateRangeType.After, dateRange: [maxValue] });\n        }\n\n        const range: Date[] = [];\n        if (this.value) {\n            if (this.value.start) {\n                range.push(this.value.start);\n            }\n            if (this.value.end) {\n                range.push(this.value.end);\n            }\n        }\n\n        if (range.length > 0) {\n            this.calendar.selectDate(range);\n            this.calendar.viewDate = range[0];\n        } else {\n            this.calendar.deselectDate();\n        }\n    }\n\n    private extractRange(selection: Date[]): DateRange {\n        return {\n            start: selection[0],\n            end: selection.length > 0 ? selection[selection.length - 1] : null\n        };\n    }\n\n    private attachOnKeydown(): void {\n        fromEvent(this.element.nativeElement, 'keydown')\n            .pipe(takeUntil(this.$destroy))\n            .subscribe((evt: KeyboardEvent) => this.onKeyDown(evt));\n    }\n\n    private subscribeToDateEditorEvents(): void {\n        if (this.hasProjectedInputs) {\n            const start = this.projectedInputs.find(i => i instanceof IgxDateRangeStartComponent) as IgxDateRangeStartComponent;\n            const end = this.projectedInputs.find(i => i instanceof IgxDateRangeEndComponent) as IgxDateRangeEndComponent;\n            if (start && end) {\n                start.dateTimeEditor.valueChange\n                    .pipe(takeUntil(this.$destroy))\n                    .subscribe(value => {\n                        if (this.value) {\n                            this.value = { start: value, end: this.value.end };\n                        } else {\n                            this.value = { start: value, end: null };\n                        }\n                        // TODO: should we check start and reset end value\n                    });\n                end.dateTimeEditor.valueChange\n                    .pipe(takeUntil(this.$destroy))\n                    .subscribe(value => {\n                        if (this.value) {\n                            this.value = { start: this.value.start, end: value };\n                        } else {\n                            this.value = { start: null, end: value };\n                        }\n                    });\n            }\n        }\n    }\n\n    private attachOnTouched(): void {\n        if (this.hasProjectedInputs) {\n            this.projectedInputs.forEach(i => {\n                fromEvent(i.dateTimeEditor.nativeElement, 'blur')\n                    .pipe(takeUntil(this.$destroy))\n                    .subscribe(() => {\n                        if (this.collapsed) {\n                            this.updateValidityOnBlur();\n                        }\n                        if (this.value && !this.value.start) {\n                            this.value = null;\n                        }\n                        // TODO: if we have start and have no end should we fill end\n                        // as we do on calendar close\n                    });\n            });\n        } else {\n            fromEvent(this.inputDirective.nativeElement, 'blur')\n                .pipe(takeUntil(this.$destroy))\n                .subscribe(() => {\n                    if (this.collapsed) {\n                        this.updateValidityOnBlur();\n                    }\n                });\n        }\n    }\n\n    private configPositionStrategy(): void {\n        this._positionSettings = {\n            openAnimation: fadeIn,\n            closeAnimation: fadeOut,\n            target: this.element.nativeElement\n        };\n        this._dropDownOverlaySettings.positionStrategy = new AutoPositionStrategy(this._positionSettings);\n    }\n\n    private configOverlaySettings(): void {\n        if (this.overlaySettings !== null) {\n            this._dropDownOverlaySettings = Object.assign({}, this._dropDownOverlaySettings, this.overlaySettings);\n            this._dialogOverlaySettings = Object.assign({}, this._dialogOverlaySettings, this.overlaySettings);\n        }\n    }\n\n    private initialSetValue() {\n        // if there is no value, no ngControl but we have inputs we may have value set trough\n        // inputs' ngModels - we should generate our initial control value\n        if (!this.value && this.hasProjectedInputs && !this._ngControl) {\n            const start = this.projectedInputs.find(i => i instanceof IgxDateRangeStartComponent).dateTimeEditor.value;\n            const end = this.projectedInputs.find(i => i instanceof IgxDateRangeEndComponent).dateTimeEditor.value;\n            this.updateValue({ start, end });\n\n        }\n    }\n\n    private updateInputs(): void {\n        const start = this.projectedInputs?.find(i => i instanceof IgxDateRangeStartComponent) as IgxDateRangeStartComponent;\n        const end = this.projectedInputs?.find(i => i instanceof IgxDateRangeEndComponent) as IgxDateRangeEndComponent;\n        if (start && end && this.value) {\n            start.updateInputValue(this.value.start);\n            end.updateInputValue(this.value.end);\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { IgxDateRangePickerComponent } from './date-range-picker.component';\nimport { IgxCalendarModule } from '../calendar/public_api';\nimport { IgxToggleModule } from '../directives/toggle/toggle.directive';\nimport { CommonModule } from '@angular/common';\nimport { IgxButtonModule } from '../directives/button/button.directive';\nimport { IgxInputGroupModule } from '../input-group/public_api';\nimport { IgxIconModule } from '../icon/public_api';\nimport {\n    IgxDateRangeStartComponent, IgxDateRangeEndComponent,\n    DateRangePickerFormatPipe,\n    IgxPickerToggleComponent,\n    IgxDateRangeSeparatorDirective,\n    IgxDateRangeInputsBaseComponent\n} from './date-range-picker-inputs.common';\nimport { IgxDateTimeEditorModule } from '../directives/date-time-editor/public_api';\n\n/**\n * @hidden\n */\n@NgModule({\n    declarations: [\n        IgxDateRangePickerComponent,\n        IgxDateRangeStartComponent,\n        IgxDateRangeEndComponent,\n        IgxDateRangeInputsBaseComponent,\n        DateRangePickerFormatPipe,\n        IgxPickerToggleComponent,\n        IgxDateRangeSeparatorDirective\n    ],\n    imports: [\n        CommonModule,\n        IgxIconModule,\n        IgxButtonModule,\n        IgxToggleModule,\n        IgxCalendarModule,\n        IgxInputGroupModule,\n        IgxDateTimeEditorModule\n    ],\n    exports: [\n        IgxDateRangePickerComponent,\n        IgxDateRangeStartComponent,\n        IgxDateRangeEndComponent,\n        IgxDateRangeSeparatorDirective,\n        IgxDateTimeEditorModule,\n        IgxPickerToggleComponent\n    ]\n})\nexport class IgxDateRangePickerModule { }\n","\n/*\n * Public API Surface of igniteui-angular\n */\n\n/**\n * Animations\n */\nexport * from './lib/animations/main';\n\n\n/**\n * Directives\n */\nexport * from './lib/core/navigation';\nexport * from './lib/directives/autocomplete/autocomplete.directive';\nexport * from './lib/directives/button/button.directive';\nexport * from './lib/directives/divider/divider.directive';\nexport * from './lib/directives/drag-drop/drag-drop.strategy';\nexport * from './lib/directives/drag-drop/drag-drop.directive';\nexport * from './lib/directives/filter/filter.directive';\nexport * from './lib/directives/focus/focus.directive';\nexport * from './lib/directives/for-of/for_of.directive';\nexport * from './lib/directives/layout/layout.directive';\nexport * from './lib/directives/mask/mask.directive';\nexport * from './lib/directives/radio/radio-group.directive';\nexport * from './lib/directives/ripple/ripple.directive';\nexport * from './lib/directives/text-highlight/text-highlight.directive';\nexport * from './lib/directives/text-selection/text-selection.directive';\nexport * from './lib/directives/toggle/toggle.directive';\nexport * from './lib/directives/tooltip/tooltip.directive';\nexport * from './lib/directives/date-time-editor/public_api';\n\n/**\n * Data operations\n */\nexport * from './lib/data-operations/filtering-expression.interface';\nexport * from './lib/data-operations/filtering-expressions-tree';\nexport * from './lib/data-operations/filtering-condition';\nexport * from './lib/data-operations/filtering-state.interface';\nexport * from './lib/data-operations/filtering-strategy';\nexport * from './lib/data-operations/groupby-expand-state.interface';\nexport * from './lib/data-operations/groupby-record.interface';\nexport * from './lib/data-operations/groupby-state.interface';\nexport * from './lib/data-operations/grouping-expression.interface';\nexport * from './lib/data-operations/grouping-strategy';\nexport * from './lib/data-operations/sorting-expression.interface';\nexport * from './lib/data-operations/sorting-strategy';\nexport * from './lib/data-operations/paging-state.interface';\nexport * from './lib/data-operations/data-util';\n\n/**\n * Components\n */\nexport * from './lib/action-strip/public_api';\nexport * from './lib/avatar/avatar.component';\nexport * from './lib/badge/badge.component';\nexport * from './lib/banner/banner.component';\nexport * from './lib/buttonGroup/buttonGroup.component';\nexport * from './lib/calendar/public_api';\nexport * from './lib/card/card.component';\nexport * from './lib/carousel/carousel.component';\nexport * from './lib/checkbox/checkbox.component';\nexport * from './lib/chips/public_api';\nexport * from './lib/combo/public_api';\nexport * from './lib/date-picker/date-picker.component';\nexport * from './lib/dialog/dialog.component';\nexport * from './lib/drop-down/public_api';\nexport * from './lib/grids/hiding/hiding.module';\nexport * from './lib/grids/common/enums';\nexport * from './lib/grids/common/events';\nexport * from './lib/grids/grid/public_api';\nexport * from './lib/grids/tree-grid/public_api';\nexport * from './lib/grids/hierarchical-grid/public_api';\nexport * from './lib/grids/columns/templates.directive';\nexport * from './lib/grids/columns/column.component';\nexport * from './lib/grids/columns/column-group.component';\nexport * from './lib/grids/columns/column-layout.component';\nexport * from './lib/icon/public_api';\nexport * from './lib/input-group/public_api';\nexport * from './lib/list/public_api';\nexport * from './lib/expansion-panel/public_api';\nexport * from './lib/navbar/navbar.component';\nexport * from './lib/navigation-drawer/public_api';\nexport * from './lib/paginator/paginator.component';\nexport * from './lib/progressbar/progressbar.component';\nexport * from './lib/radio/radio.component';\nexport * from './lib/slider/public_api';\nexport * from './lib/snackbar/snackbar.component';\nexport * from './lib/switch/switch.component';\nexport * from './lib/tabbar/tabbar.component';\nexport * from './lib/tabs/public_api';\nexport * from './lib/time-picker/time-picker.component';\nexport * from './lib/toast/toast.component';\nexport * from './lib/select/public_api';\nexport * from './lib/splitter/splitter-pane/splitter-pane.component';\nexport * from './lib/splitter/splitter.component';\nexport * from './lib/splitter/splitter.module';\nexport * from './lib/date-range-picker/public_api';\n\n\n/**\n * Exporter services, classes, interfaces and enums\n */\nexport * from './lib/services/public_api';\nexport * from './lib/core/dates';\nexport * from './lib/core/density';\nexport { CancelableEventArgs, CancelableBrowserEventArgs } from './lib/core/utils';\nexport { changei18n, getCurrentResourceStrings, IResourceStrings } from './lib/core/i18n/resources';\nexport { ICarouselResourceStrings } from './lib/core/i18n/carousel-resources';\nexport { IGridResourceStrings } from './lib/core/i18n/grid-resources';\nexport { IPaginatorResourceStrings } from './lib/core/i18n/paginator-resources';\nexport { ITimePickerResourceStrings } from './lib/core/i18n/time-picker-resources';\nexport { IDateRangePickerResourceStrings } from './lib/core/i18n/date-range-picker-resources';\nexport { InteractionMode } from './lib/core/enums';\nexport { SplitterType } from './lib/splitter/splitter.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {IgxActionStripMenuItemDirective as ɵa} from './lib/action-strip/action-strip.component';\nexport {EaseIn as ɵj,EaseOut as ɵk} from './lib/animations/easings';\nexport {IgxBannerActionsDirective as ɵba} from './lib/banner/banner.directives';\nexport {IgxCalendarBaseDirective as ɵbe} from './lib/calendar/calendar-base';\nexport {IgxDayItemComponent as ɵbg} from './lib/calendar/days-view/day-item.component';\nexport {IgxDaysViewNavigationService as ɵbf} from './lib/calendar/days-view/daysview-navigation.service';\nexport {IgxGetViewDateCalendar as ɵbi,IgxMonthViewSlotsCalendar as ɵbh} from './lib/calendar/months-view.pipe';\nexport {IgxCarouselIndicatorDirective as ɵbj,IgxCarouselNextButtonDirective as ɵbk,IgxCarouselPrevButtonDirective as ɵbl} from './lib/carousel/carousel.directives';\nexport {IgxSlideComponent as ɵbm} from './lib/carousel/slide.component';\nexport {IgxComboAddItemComponent as ɵcc} from './lib/combo/combo-add-item.component';\nexport {IgxComboDropDownComponent as ɵbq} from './lib/combo/combo-dropdown.component';\nexport {IgxComboItemComponent as ɵbr} from './lib/combo/combo-item.component';\nexport {IgxComboAPIService as ɵbn} from './lib/combo/combo.api';\nexport {IGX_COMBO_COMPONENT as ɵbo,IgxComboBase as ɵbp} from './lib/combo/combo.common';\nexport {IgxComboAddItemDirective as ɵbx,IgxComboClearIconDirective as ɵbz,IgxComboEmptyDirective as ɵbv,IgxComboFooterDirective as ɵbt,IgxComboHeaderDirective as ɵbs,IgxComboHeaderItemDirective as ɵbw,IgxComboItemDirective as ɵbu,IgxComboToggleIconDirective as ɵby} from './lib/combo/combo.directives';\nexport {IgxComboFilteringPipe as ɵca,IgxComboGroupingPipe as ɵcb} from './lib/combo/combo.pipes';\nexport {DeprecateMethod as ɵm,DeprecateProperty as ɵn} from './lib/core/deprecateDecorators';\nexport {IgxSelectionAPIService as ɵq} from './lib/core/selection';\nexport {HammerGesturesManager as ɵeh} from './lib/core/touch';\nexport {PlatformUtil as ɵi} from './lib/core/utils';\nexport {getHierarchy as ɵz,isHierarchyMatch as ɵy} from './lib/data-operations/operations';\nexport {IgxCalendarContainerComponent as ɵcf} from './lib/date-picker/calendar-container.component';\nexport {IDatePicker as ɵcj,IGX_DATE_PICKER_COMPONENT as ɵci} from './lib/date-picker/date-picker.common';\nexport {IgxDatePickerActionsDirective as ɵce,IgxDatePickerTemplateDirective as ɵcd} from './lib/date-picker/date-picker.directives';\nexport {DatePickerDisplayValuePipe as ɵcg,DatePickerInputValuePipe as ɵch} from './lib/date-picker/date-picker.pipes';\nexport {IgxDialogActionsDirective as ɵcl,IgxDialogTitleDirective as ɵck} from './lib/dialog/dialog.directives';\nexport {VirtualHelperBaseDirective as ɵt} from './lib/directives/for-of/base.helper.component';\nexport {DisplayContainerComponent as ɵr} from './lib/directives/for-of/display.container';\nexport {IgxForOfScrollSyncService as ɵp,IgxForOfSyncService as ɵo} from './lib/directives/for-of/for_of.sync.service';\nexport {HVirtualHelperComponent as ɵu} from './lib/directives/for-of/horizontal.virtual.helper.component';\nexport {VirtualHelperComponent as ɵs} from './lib/directives/for-of/virtual.helper.component';\nexport {MaskParsingService as ɵx} from './lib/directives/mask/mask-parsing.service';\nexport {IgxScrollInertiaDirective as ɵv,IgxScrollInertiaModule as ɵw} from './lib/directives/scroll-inertia/scroll_inertia.directive';\nexport {IgxTemplateOutletDirective as ɵcq,IgxTemplateOutletModule as ɵcr} from './lib/directives/template-outlet/template_outlet.directive';\nexport {IDropDownBase as ɵc,IGX_DROPDOWN_BASE as ɵb} from './lib/drop-down/drop-down.common';\nexport {IGX_EXPANSION_PANEL_COMPONENT as ɵh,IgxExpansionPanelBase as ɵg} from './lib/expansion-panel/expansion-panel.common';\nexport {IgxExpansionPanelDescriptionDirective as ɵbc,IgxExpansionPanelIconDirective as ɵbd,IgxExpansionPanelTitleDirective as ɵbb} from './lib/expansion-panel/expansion-panel.directives';\nexport {ColumnChooserBaseDirective as ɵcm} from './lib/grids/column-chooser-base';\nexport {ColumnChooserItemBaseDirective as ɵco,ItemPropertyValueChangedDirective as ɵcn} from './lib/grids/column-chooser-item-base';\nexport {IgxGridColumnModule as ɵen} from './lib/grids/columns/column.module';\nexport {IgxGridPipesModule as ɵeq} from './lib/grids/common/grid-pipes.module';\nexport {IgxDatePipeComponent as ɵez,IgxDecimalPipeComponent as ɵfa,IgxGridCellStyleClassesPipe as ɵer,IgxGridCellStylesPipe as ɵes,IgxGridFilterConditionPipe as ɵev,IgxGridNotGroupedPipe as ɵet,IgxGridPaginatorOptionsPipe as ɵex,IgxGridRowPinningPipe as ɵfb,IgxGridTopLevelColumns as ɵeu,IgxGridTransactionPipe as ɵew,IgxHasVisibleColumnsPipe as ɵey} from './lib/grids/common/pipes';\nexport {IgxGridSharedModules as ɵcp} from './lib/grids/common/shared.module';\nexport {IgxAdvancedFilteringDialogComponent as ɵek} from './lib/grids/filtering/advanced-filtering/advanced-filtering-dialog.component';\nexport {IgxGridFilteringModule as ɵep} from './lib/grids/filtering/base/filtering.module';\nexport {IgxGridFilteringCellComponent as ɵdo} from './lib/grids/filtering/base/grid-filtering-cell.component';\nexport {IgxGridFilteringRowComponent as ɵdz} from './lib/grids/filtering/base/grid-filtering-row.component';\nexport {IgxExcelStyleColumnMovingComponent as ɵfn} from './lib/grids/filtering/excel-style/excel-style-column-moving.component';\nexport {IgxExcelStyleCustomDialogComponent as ɵfj} from './lib/grids/filtering/excel-style/excel-style-custom-dialog.component';\nexport {IgxExcelStyleDateExpressionComponent as ɵfl} from './lib/grids/filtering/excel-style/excel-style-date-expression.component';\nexport {IgxExcelStyleDefaultExpressionComponent as ɵfk} from './lib/grids/filtering/excel-style/excel-style-default-expression.component';\nexport {IgxExcelStyleLoadingValuesTemplateDirective as ɵdk,IgxExcelStyleSearchComponent as ɵdl} from './lib/grids/filtering/excel-style/excel-style-search.component';\nexport {IgxExcelStyleSearchFilterPipe as ɵfo} from './lib/grids/filtering/excel-style/excel-style-search.pipe';\nexport {IgxExcelStyleSortingComponent as ɵfm} from './lib/grids/filtering/excel-style/excel-style-sorting.component';\nexport {IgxExcelStyleHidingTemplateDirective as ɵdg,IgxExcelStyleMovingTemplateDirective as ɵdf,IgxExcelStylePinningTemplateDirective as ɵdi,IgxExcelStyleSelectingTemplateDirective as ɵdh,IgxExcelStyleSortingTemplateDirective as ɵde,IgxGridExcelStyleFilteringComponent as ɵdj} from './lib/grids/filtering/excel-style/grid.excel-style-filtering.component';\nexport {IgxGridExcelStyleFilteringModule as ɵfi} from './lib/grids/filtering/excel-style/grid.excel-style-filtering.module';\nexport {IgxFilteringService as ɵdp} from './lib/grids/filtering/grid-filtering.service';\nexport {IgxGridFooterComponent as ɵej} from './lib/grids/grid-footer/grid-footer.component';\nexport {IgxGridNavigationService as ɵef} from './lib/grids/grid-navigation.service';\nexport {IgxRowEditActionsDirective as ɵec,IgxRowEditTabStopDirective as ɵed,IgxRowEditTemplateDirective as ɵea,IgxRowEditTextDirective as ɵeb} from './lib/grids/grid.rowEdit.directive';\nexport {IgxGridExpandableCellComponent as ɵga} from './lib/grids/grid/expandable-cell.component';\nexport {IgxGridDetailsPipe as ɵfz} from './lib/grids/grid/grid.details.pipe';\nexport {IgxGridFilteringPipe as ɵfx,IgxGridGroupingPipe as ɵfv,IgxGridPagingPipe as ɵfw,IgxGridSortingPipe as ɵfu} from './lib/grids/grid/grid.pipes';\nexport {IgxGridSummaryPipe as ɵfy} from './lib/grids/grid/grid.summary.pipe';\nexport {IgxGridHeaderGroupComponent as ɵdm} from './lib/grids/headers/grid-header-group.component';\nexport {IgxGridHeaderComponent as ɵdn} from './lib/grids/headers/grid-header.component';\nexport {IgxGridHeadersModule as ɵeo} from './lib/grids/headers/headers.module';\nexport {IgxColumnHidingItemDirective as ɵf} from './lib/grids/hiding/column-hiding-item.directive';\nexport {IgxChildGridRowComponent as ɵgl} from './lib/grids/hierarchical-grid/child-grid-row.component';\nexport {IgxHierarchicalGridNavigationService as ɵgk} from './lib/grids/hierarchical-grid/hierarchical-grid-navigation.service';\nexport {IgxGridHierarchicalPagingPipe as ɵgn,IgxGridHierarchicalPipe as ɵgm} from './lib/grids/hierarchical-grid/hierarchical-grid.pipes';\nexport {IgxColumnMovingDragDirective as ɵff} from './lib/grids/moving/moving.drag.directive';\nexport {IgxColumnMovingDropDirective as ɵfd} from './lib/grids/moving/moving.drop.directive';\nexport {IgxColumnMovingModule as ɵfc} from './lib/grids/moving/moving.module';\nexport {IgxColumnMovingService as ɵfe} from './lib/grids/moving/moving.service';\nexport {IgxColumnPinningItemDirective as ɵem} from './lib/grids/pinning/pinning.directive';\nexport {IgxColumnPinningModule as ɵel} from './lib/grids/pinning/pinning.module';\nexport {IgxResizeHandleDirective as ɵfh} from './lib/grids/resizing/resize-handle.directive';\nexport {IgxGridResizingModule as ɵfg} from './lib/grids/resizing/resize.module';\nexport {IgxGridColumnResizerComponent as ɵdb} from './lib/grids/resizing/resizer.component';\nexport {IgxColumnResizerDirective as ɵdd} from './lib/grids/resizing/resizer.directive';\nexport {IgxColumnResizingService as ɵdc} from './lib/grids/resizing/resizing.service';\nexport {IgxDragIndicatorIconDirective as ɵdw,IgxRowDragDirective as ɵdv,IgxRowDragGhostDirective as ɵdx,IgxRowDragModule as ɵdy} from './lib/grids/row-drag.directive';\nexport {IgxGridDragSelectDirective as ɵfq} from './lib/grids/selection/drag-select.directive';\nexport {IgxHeadSelectorDirective as ɵdu,IgxRowSelectorDirective as ɵdt} from './lib/grids/selection/row-selectors';\nexport {IgxGridSelectionModule as ɵfp} from './lib/grids/selection/selection.module';\nexport {IgxGridCRUDService as ɵd,IgxGridSelectionService as ɵe} from './lib/grids/selection/selection.service';\nexport {IgxSummaryDataPipe as ɵfs} from './lib/grids/summaries/grid-root-summary.pipe';\nexport {IgxGridSummaryService as ɵeg} from './lib/grids/summaries/grid-summary.service';\nexport {IgxSummaryCellComponent as ɵdr} from './lib/grids/summaries/summary-cell.component';\nexport {IgxSummaryRowComponent as ɵdq} from './lib/grids/summaries/summary-row.component';\nexport {IgxGridSummaryModule as ɵfr} from './lib/grids/summaries/summary.module';\nexport {IgxGridToolbarComponent as ɵee} from './lib/grids/toolbar/grid-toolbar.component';\nexport {IgxGridToolbarCustomContentDirective as ɵds} from './lib/grids/toolbar/toolbar.directive';\nexport {IgxGridToolbarModule as ɵft} from './lib/grids/toolbar/toolbar.module';\nexport {IgxRowLoadingIndicatorTemplateDirective as ɵgb} from './lib/grids/tree-grid/tree-grid.directives';\nexport {IgxTreeGridFilteringPipe as ɵgi} from './lib/grids/tree-grid/tree-grid.filtering.pipe';\nexport {IgxTreeGridFlatteningPipe as ɵgd,IgxTreeGridHierarchizingPipe as ɵgc,IgxTreeGridNormalizeRecordsPipe as ɵgh,IgxTreeGridPagingPipe as ɵgf,IgxTreeGridSortingPipe as ɵge,IgxTreeGridTransactionPipe as ɵgg} from './lib/grids/tree-grid/tree-grid.pipes';\nexport {IgxTreeGridSummaryPipe as ɵgj} from './lib/grids/tree-grid/tree-grid.summary.pipe';\nexport {WatchChanges as ɵcy,WatchColumnChanges as ɵcz,notifyChanges as ɵda} from './lib/grids/watch-changes';\nexport {IgxInputGroupBase as ɵl} from './lib/input-group/input-group.common';\nexport {IgxProcessBarTextTemplateDirective as ɵcs,IgxProgressBarGradientDirective as ɵct} from './lib/progressbar/progressbar.common';\nexport {IgxSelectItemNavigationDirective as ɵcx} from './lib/select/select-navigation.directive';\nexport {DIR_DOCUMENT as ɵcu,DIR_DOCUMENT_FACTORY as ɵcv,IgxDirectionality as ɵcw} from './lib/services/direction/directionality';\nexport {ConnectedPositioningStrategy as ɵei} from './lib/services/public_api';\nexport {IgxThumbLabelComponent as ɵgp} from './lib/slider/label/thumb-label.component';\nexport {IgxSliderThumbComponent as ɵgo} from './lib/slider/thumb/thumb-slider.component';\nexport {IgxTickLabelsPipe as ɵgr} from './lib/slider/ticks/tick.pipe';\nexport {IgxTicksComponent as ɵgq} from './lib/slider/ticks/ticks.component';\nexport {IgxSplitBarComponent as ɵhg} from './lib/splitter/splitter-bar/splitter-bar.component';\nexport {IgxTabItemBase as ɵgt,IgxTabsBase as ɵgs,IgxTabsGroupBase as ɵgu} from './lib/tabs/tabs.common';\nexport {IGX_TIME_PICKER_COMPONENT as ɵgv,IgxTimePickerBase as ɵgw} from './lib/time-picker/time-picker.common';\nexport {IgxAmPmItemDirective as ɵhb,IgxHourItemDirective as ɵgy,IgxItemListDirective as ɵgx,IgxMinuteItemDirective as ɵgz,IgxSecondsItemDirective as ɵha,IgxTimePickerActionsDirective as ɵhd,IgxTimePickerTemplateDirective as ɵhc} from './lib/time-picker/time-picker.directives';\nexport {TimeDisplayFormatPipe as ɵhe,TimeInputFormatPipe as ɵhf} from './lib/time-picker/time-picker.pipes';"],"names":["baseParams","baseRecipe","base","baseInParams","baseOutParams","NEXT_ID","warningShown","first","noop","nextId","getDOM","FILTERING_ICONS_FONT_SET","Direction","flatten"],"mappings":"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"}