import { ElementRef, DoCheck } from '@angular/core';
import { IgxDropDownItemComponent } from '../drop-down/drop-down-item.component';
import { IDropDownBase, Navigate } from '../drop-down/drop-down.common';
import { IgxComboAPIService } from './combo.api';
import { IgxSelectionAPIService } from '../core/selection';
/** @hidden */
import * as ɵngcc0 from '@angular/core';
export declare class IgxComboItemComponent extends IgxDropDownItemComponent implements DoCheck {
    protected comboAPI: IgxComboAPIService;
    protected dropDown: IDropDownBase;
    protected elementRef: ElementRef;
    protected selection: IgxSelectionAPIService;
    /**
     * Gets the height of a list item
     * @hidden
     */
    itemHeight: string;
    /**
     * @hidden
     */
    get itemID(): any;
    /**
     * @hidden
     */
    get comboID(): string;
    /**
     * @hidden
     * @internal
     */
    get disableTransitions(): boolean;
    constructor(comboAPI: IgxComboAPIService, dropDown: IDropDownBase, elementRef: ElementRef, selection: IgxSelectionAPIService);
    /**
     * @hidden
     */
    get selected(): boolean;
    set selected(value: boolean);
    /**
     * @hidden
     */
    isVisible(direction: Navigate): boolean;
    /**
     * @inheritdoc
     */
    clicked(event: any): void;
    /**
     * @hidden
     * @internal
     * The event that is prevented is the click on the checkbox label element.
     * That is the only visible element that a user can interact with.
     * The click propagates to the host and the preventDefault is to stop it from
     * switching focus to the input it's base on.
     * The toggle happens in an internal handler in the drop-down on the next task queue cycle.
     */
    disableCheck(event: MouseEvent): void;
    ngDoCheck(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxComboItemComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<IgxComboItemComponent, "igx-combo-item", never, {
    "itemHeight": "itemHeight";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYm8taXRlbS5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiY29tYm8taXRlbS5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7OztBQU1BOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZ0RBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgRG9DaGVjayB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSWd4RHJvcERvd25JdGVtQ29tcG9uZW50IH0gZnJvbSAnLi4vZHJvcC1kb3duL2Ryb3AtZG93bi1pdGVtLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJRHJvcERvd25CYXNlLCBOYXZpZ2F0ZSB9IGZyb20gJy4uL2Ryb3AtZG93bi9kcm9wLWRvd24uY29tbW9uJztcbmltcG9ydCB7IElneENvbWJvQVBJU2VydmljZSB9IGZyb20gJy4vY29tYm8uYXBpJztcbmltcG9ydCB7IElneFNlbGVjdGlvbkFQSVNlcnZpY2UgfSBmcm9tICcuLi9jb3JlL3NlbGVjdGlvbic7XG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgSWd4Q29tYm9JdGVtQ29tcG9uZW50IGV4dGVuZHMgSWd4RHJvcERvd25JdGVtQ29tcG9uZW50IGltcGxlbWVudHMgRG9DaGVjayB7XG4gICAgcHJvdGVjdGVkIGNvbWJvQVBJOiBJZ3hDb21ib0FQSVNlcnZpY2U7XG4gICAgcHJvdGVjdGVkIGRyb3BEb3duOiBJRHJvcERvd25CYXNlO1xuICAgIHByb3RlY3RlZCBlbGVtZW50UmVmOiBFbGVtZW50UmVmO1xuICAgIHByb3RlY3RlZCBzZWxlY3Rpb246IElneFNlbGVjdGlvbkFQSVNlcnZpY2U7XG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgaGVpZ2h0IG9mIGEgbGlzdCBpdGVtXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGl0ZW1IZWlnaHQ6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgZ2V0IGl0ZW1JRCgpOiBhbnk7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGdldCBjb21ib0lEKCk6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgZ2V0IGRpc2FibGVUcmFuc2l0aW9ucygpOiBib29sZWFuO1xuICAgIGNvbnN0cnVjdG9yKGNvbWJvQVBJOiBJZ3hDb21ib0FQSVNlcnZpY2UsIGRyb3BEb3duOiBJRHJvcERvd25CYXNlLCBlbGVtZW50UmVmOiBFbGVtZW50UmVmLCBzZWxlY3Rpb246IElneFNlbGVjdGlvbkFQSVNlcnZpY2UpO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBnZXQgc2VsZWN0ZWQoKTogYm9vbGVhbjtcbiAgICBzZXQgc2VsZWN0ZWQodmFsdWU6IGJvb2xlYW4pO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBpc1Zpc2libGUoZGlyZWN0aW9uOiBOYXZpZ2F0ZSk6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogQGluaGVyaXRkb2NcbiAgICAgKi9cbiAgICBjbGlja2VkKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKiBUaGUgZXZlbnQgdGhhdCBpcyBwcmV2ZW50ZWQgaXMgdGhlIGNsaWNrIG9uIHRoZSBjaGVja2JveCBsYWJlbCBlbGVtZW50LlxuICAgICAqIFRoYXQgaXMgdGhlIG9ubHkgdmlzaWJsZSBlbGVtZW50IHRoYXQgYSB1c2VyIGNhbiBpbnRlcmFjdCB3aXRoLlxuICAgICAqIFRoZSBjbGljayBwcm9wYWdhdGVzIHRvIHRoZSBob3N0IGFuZCB0aGUgcHJldmVudERlZmF1bHQgaXMgdG8gc3RvcCBpdCBmcm9tXG4gICAgICogc3dpdGNoaW5nIGZvY3VzIHRvIHRoZSBpbnB1dCBpdCdzIGJhc2Ugb24uXG4gICAgICogVGhlIHRvZ2dsZSBoYXBwZW5zIGluIGFuIGludGVybmFsIGhhbmRsZXIgaW4gdGhlIGRyb3AtZG93biBvbiB0aGUgbmV4dCB0YXNrIHF1ZXVlIGN5Y2xlLlxuICAgICAqL1xuICAgIGRpc2FibGVDaGVjayhldmVudDogTW91c2VFdmVudCk6IHZvaWQ7XG4gICAgbmdEb0NoZWNrKCk6IHZvaWQ7XG59XG4iXX0=