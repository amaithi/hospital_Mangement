import { PipeTransform } from '@angular/core';
import { GridBaseAPIService } from '../api.service';
import { IgxGridBaseDirective } from '../grid-base.directive';
import { GridType } from './grid.interface';
import { DatePipe, DecimalPipe } from '@angular/common';
/**
 * @hidden
 * @internal
 */
import * as ɵngcc0 from '@angular/core';
export declare class IgxGridCellStyleClassesPipe implements PipeTransform {
    transform(cssClasses: {
        [prop: string]: any;
    }, value: any, data: any, field: string, index: number): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxGridCellStyleClassesPipe>;
    static ɵpipe: ɵngcc0.ɵɵPipeDefWithMeta<IgxGridCellStyleClassesPipe, "igxCellStyleClasses">;
}
/**
 * @hidden
 * @internal
 */
export declare class IgxGridCellStylesPipe implements PipeTransform {
    transform(styles: {
        [prop: string]: any;
    }, value: any, data: any, field: string, index: number): {
        [prop: string]: any;
    };
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxGridCellStylesPipe>;
    static ɵpipe: ɵngcc0.ɵɵPipeDefWithMeta<IgxGridCellStylesPipe, "igxCellStyles">;
}
/**
 * @hidden
 * @internal
 */
export declare class IgxGridNotGroupedPipe implements PipeTransform {
    transform(value: any[]): any[];
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxGridNotGroupedPipe>;
    static ɵpipe: ɵngcc0.ɵɵPipeDefWithMeta<IgxGridNotGroupedPipe, "igxNotGrouped">;
}
/**
 * @hidden
 * @internal
 */
export declare class IgxGridTopLevelColumns implements PipeTransform {
    transform(value: any[]): any[];
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxGridTopLevelColumns>;
    static ɵpipe: ɵngcc0.ɵɵPipeDefWithMeta<IgxGridTopLevelColumns, "igxTopLevel">;
}
/**
 * @hidden
 * @internal
 */
export declare class IgxGridFilterConditionPipe implements PipeTransform {
    transform(value: string): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxGridFilterConditionPipe>;
    static ɵpipe: ɵngcc0.ɵɵPipeDefWithMeta<IgxGridFilterConditionPipe, "filterCondition">;
}
/**
 * @hidden
 * @internal
 */
export declare class IgxGridTransactionPipe implements PipeTransform {
    private gridAPI;
    constructor(gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>);
    transform(collection: any[], id: string, pipeTrigger: number): any[];
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxGridTransactionPipe>;
    static ɵpipe: ɵngcc0.ɵɵPipeDefWithMeta<IgxGridTransactionPipe, "gridTransaction">;
}
/**
 * @hidden
 * @internal
 */
export declare class IgxGridPaginatorOptionsPipe implements PipeTransform {
    transform(values: Array<number>): number[];
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxGridPaginatorOptionsPipe>;
    static ɵpipe: ɵngcc0.ɵɵPipeDefWithMeta<IgxGridPaginatorOptionsPipe, "paginatorOptions">;
}
/**
 * @hidden
 * @internal
 */
export declare class IgxHasVisibleColumnsPipe implements PipeTransform {
    transform(values: any[], hasVisibleColumns: any): any[];
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxHasVisibleColumnsPipe>;
    static ɵpipe: ɵngcc0.ɵɵPipeDefWithMeta<IgxHasVisibleColumnsPipe, "visibleColumns">;
}
/**
 * @hidden
 * @internal
 */
export declare class IgxDatePipeComponent extends DatePipe implements PipeTransform {
    private readonly DEFAULT_DATE_FORMAT;
    constructor(locale: string);
    transform(value: any, locale: string): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxDatePipeComponent>;
    static ɵpipe: ɵngcc0.ɵɵPipeDefWithMeta<IgxDatePipeComponent, "igxdate">;
}
/**
 * @hidden
 * @internal
 */
export declare class IgxDecimalPipeComponent extends DecimalPipe implements PipeTransform {
    constructor(locale: string);
    transform(value: any, locale: string): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxDecimalPipeComponent>;
    static ɵpipe: ɵngcc0.ɵɵPipeDefWithMeta<IgxDecimalPipeComponent, "igxdecimal">;
}
/**
 * @hidden
 */
export declare class IgxGridRowPinningPipe implements PipeTransform {
    private gridAPI;
    constructor(gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>);
    transform(collection: any[], id: string, isPinned: boolean, pipeTrigger: number): any[];
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxGridRowPinningPipe>;
    static ɵpipe: ɵngcc0.ɵɵPipeDefWithMeta<IgxGridRowPinningPipe, "gridRowPinning">;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGlwZXMuZC50cyIsInNvdXJjZXMiOlsicGlwZXMuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7OztBQVNBOzs7Ozs7QUFJQTs7Ozs7Ozs7Ozs7OztBQVdBOzs7Ozs7Ozs7QUFPQTs7Ozs7Ozs7O0FBT0E7Ozs7Ozs7OztBQU9BOzs7Ozs7Ozs7OztBQVNBOzs7Ozs7Ozs7QUFPQTs7Ozs7Ozs7O0FBT0E7Ozs7Ozs7Ozs7O0FBU0E7Ozs7Ozs7Ozs7QUFRQTs7Ozs7Ozs7OztBQVFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgR3JpZEJhc2VBUElTZXJ2aWNlIH0gZnJvbSAnLi4vYXBpLnNlcnZpY2UnO1xuaW1wb3J0IHsgSWd4R3JpZEJhc2VEaXJlY3RpdmUgfSBmcm9tICcuLi9ncmlkLWJhc2UuZGlyZWN0aXZlJztcbmltcG9ydCB7IEdyaWRUeXBlIH0gZnJvbSAnLi9ncmlkLmludGVyZmFjZSc7XG5pbXBvcnQgeyBEYXRlUGlwZSwgRGVjaW1hbFBpcGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuLyoqXG4gKiBAaGlkZGVuXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgSWd4R3JpZENlbGxTdHlsZUNsYXNzZXNQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gICAgdHJhbnNmb3JtKGNzc0NsYXNzZXM6IHtcbiAgICAgICAgW3Byb3A6IHN0cmluZ106IGFueTtcbiAgICB9LCB2YWx1ZTogYW55LCBkYXRhOiBhbnksIGZpZWxkOiBzdHJpbmcsIGluZGV4OiBudW1iZXIpOiBzdHJpbmc7XG59XG4vKipcbiAqIEBoaWRkZW5cbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBJZ3hHcmlkQ2VsbFN0eWxlc1BpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgICB0cmFuc2Zvcm0oc3R5bGVzOiB7XG4gICAgICAgIFtwcm9wOiBzdHJpbmddOiBhbnk7XG4gICAgfSwgdmFsdWU6IGFueSwgZGF0YTogYW55LCBmaWVsZDogc3RyaW5nLCBpbmRleDogbnVtYmVyKToge1xuICAgICAgICBbcHJvcDogc3RyaW5nXTogYW55O1xuICAgIH07XG59XG4vKipcbiAqIEBoaWRkZW5cbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBJZ3hHcmlkTm90R3JvdXBlZFBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgICB0cmFuc2Zvcm0odmFsdWU6IGFueVtdKTogYW55W107XG59XG4vKipcbiAqIEBoaWRkZW5cbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBJZ3hHcmlkVG9wTGV2ZWxDb2x1bW5zIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gICAgdHJhbnNmb3JtKHZhbHVlOiBhbnlbXSk6IGFueVtdO1xufVxuLyoqXG4gKiBAaGlkZGVuXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgSWd4R3JpZEZpbHRlckNvbmRpdGlvblBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgICB0cmFuc2Zvcm0odmFsdWU6IHN0cmluZyk6IHN0cmluZztcbn1cbi8qKlxuICogQGhpZGRlblxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIElneEdyaWRUcmFuc2FjdGlvblBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgICBwcml2YXRlIGdyaWRBUEk7XG4gICAgY29uc3RydWN0b3IoZ3JpZEFQSTogR3JpZEJhc2VBUElTZXJ2aWNlPElneEdyaWRCYXNlRGlyZWN0aXZlICYgR3JpZFR5cGU+KTtcbiAgICB0cmFuc2Zvcm0oY29sbGVjdGlvbjogYW55W10sIGlkOiBzdHJpbmcsIHBpcGVUcmlnZ2VyOiBudW1iZXIpOiBhbnlbXTtcbn1cbi8qKlxuICogQGhpZGRlblxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIElneEdyaWRQYWdpbmF0b3JPcHRpb25zUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuICAgIHRyYW5zZm9ybSh2YWx1ZXM6IEFycmF5PG51bWJlcj4pOiBudW1iZXJbXTtcbn1cbi8qKlxuICogQGhpZGRlblxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIElneEhhc1Zpc2libGVDb2x1bW5zUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuICAgIHRyYW5zZm9ybSh2YWx1ZXM6IGFueVtdLCBoYXNWaXNpYmxlQ29sdW1uczogYW55KTogYW55W107XG59XG4vKipcbiAqIEBoaWRkZW5cbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBJZ3hEYXRlUGlwZUNvbXBvbmVudCBleHRlbmRzIERhdGVQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gICAgcHJpdmF0ZSByZWFkb25seSBERUZBVUxUX0RBVEVfRk9STUFUO1xuICAgIGNvbnN0cnVjdG9yKGxvY2FsZTogc3RyaW5nKTtcbiAgICB0cmFuc2Zvcm0odmFsdWU6IGFueSwgbG9jYWxlOiBzdHJpbmcpOiBzdHJpbmc7XG59XG4vKipcbiAqIEBoaWRkZW5cbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBJZ3hEZWNpbWFsUGlwZUNvbXBvbmVudCBleHRlbmRzIERlY2ltYWxQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gICAgY29uc3RydWN0b3IobG9jYWxlOiBzdHJpbmcpO1xuICAgIHRyYW5zZm9ybSh2YWx1ZTogYW55LCBsb2NhbGU6IHN0cmluZyk6IHN0cmluZztcbn1cbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBJZ3hHcmlkUm93UGlubmluZ1BpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgICBwcml2YXRlIGdyaWRBUEk7XG4gICAgY29uc3RydWN0b3IoZ3JpZEFQSTogR3JpZEJhc2VBUElTZXJ2aWNlPElneEdyaWRCYXNlRGlyZWN0aXZlICYgR3JpZFR5cGU+KTtcbiAgICB0cmFuc2Zvcm0oY29sbGVjdGlvbjogYW55W10sIGlkOiBzdHJpbmcsIGlzUGlubmVkOiBib29sZWFuLCBwaXBlVHJpZ2dlcjogbnVtYmVyKTogYW55W107XG59XG4iXX0=