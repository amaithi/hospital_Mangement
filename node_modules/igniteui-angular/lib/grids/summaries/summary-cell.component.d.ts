import { ElementRef } from '@angular/core';
import { IgxSummaryResult } from './grid-summary';
import { IgxColumnComponent } from '../columns/column.component';
import { DataType } from '../../data-operations/data-util';
import { ISelectionNode } from '../selection/selection.service';
import * as ɵngcc0 from '@angular/core';
export declare class IgxSummaryCellComponent {
    private element;
    summaryResults: IgxSummaryResult[];
    column: IgxColumnComponent;
    firstCellIndentation: number;
    hasSummary: boolean;
    density: any;
    constructor(element: ElementRef);
    /** @hidden */
    active: boolean;
    rowIndex: number;
    get visibleColumnIndex(): number;
    get describeby(): string;
    get attrCellID(): string;
    activate(): void;
    protected get selectionNode(): ISelectionNode;
    get width(): string;
    get nativeElement(): any;
    get columnDatatype(): DataType;
    get itemHeight(): number;
    /**
     * @hidden
     */
    get grid(): any;
    translateSummary(summary: IgxSummaryResult): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxSummaryCellComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<IgxSummaryCellComponent, "igx-grid-summary-cell", never, {
    "firstCellIndentation": "firstCellIndentation";
    "hasSummary": "hasSummary";
    "summaryResults": "summaryResults";
    "column": "column";
    "density": "density";
    "active": "active";
    "rowIndex": "rowIndex";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3VtbWFyeS1jZWxsLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJzdW1tYXJ5LWNlbGwuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztBQUtBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXlCQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElneFN1bW1hcnlSZXN1bHQgfSBmcm9tICcuL2dyaWQtc3VtbWFyeSc7XG5pbXBvcnQgeyBJZ3hDb2x1bW5Db21wb25lbnQgfSBmcm9tICcuLi9jb2x1bW5zL2NvbHVtbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgRGF0YVR5cGUgfSBmcm9tICcuLi8uLi9kYXRhLW9wZXJhdGlvbnMvZGF0YS11dGlsJztcbmltcG9ydCB7IElTZWxlY3Rpb25Ob2RlIH0gZnJvbSAnLi4vc2VsZWN0aW9uL3NlbGVjdGlvbi5zZXJ2aWNlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIElneFN1bW1hcnlDZWxsQ29tcG9uZW50IHtcbiAgICBwcml2YXRlIGVsZW1lbnQ7XG4gICAgc3VtbWFyeVJlc3VsdHM6IElneFN1bW1hcnlSZXN1bHRbXTtcbiAgICBjb2x1bW46IElneENvbHVtbkNvbXBvbmVudDtcbiAgICBmaXJzdENlbGxJbmRlbnRhdGlvbjogbnVtYmVyO1xuICAgIGhhc1N1bW1hcnk6IGJvb2xlYW47XG4gICAgZGVuc2l0eTogYW55O1xuICAgIGNvbnN0cnVjdG9yKGVsZW1lbnQ6IEVsZW1lbnRSZWYpO1xuICAgIC8qKiBAaGlkZGVuICovXG4gICAgYWN0aXZlOiBib29sZWFuO1xuICAgIHJvd0luZGV4OiBudW1iZXI7XG4gICAgZ2V0IHZpc2libGVDb2x1bW5JbmRleCgpOiBudW1iZXI7XG4gICAgZ2V0IGRlc2NyaWJlYnkoKTogc3RyaW5nO1xuICAgIGdldCBhdHRyQ2VsbElEKCk6IHN0cmluZztcbiAgICBhY3RpdmF0ZSgpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBnZXQgc2VsZWN0aW9uTm9kZSgpOiBJU2VsZWN0aW9uTm9kZTtcbiAgICBnZXQgd2lkdGgoKTogc3RyaW5nO1xuICAgIGdldCBuYXRpdmVFbGVtZW50KCk6IGFueTtcbiAgICBnZXQgY29sdW1uRGF0YXR5cGUoKTogRGF0YVR5cGU7XG4gICAgZ2V0IGl0ZW1IZWlnaHQoKTogbnVtYmVyO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBnZXQgZ3JpZCgpOiBhbnk7XG4gICAgdHJhbnNsYXRlU3VtbWFyeShzdW1tYXJ5OiBJZ3hTdW1tYXJ5UmVzdWx0KTogc3RyaW5nO1xufVxuIl19