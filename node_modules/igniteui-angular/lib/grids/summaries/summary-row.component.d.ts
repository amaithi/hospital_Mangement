import { QueryList, ElementRef, ChangeDetectorRef, DoCheck } from '@angular/core';
import { IgxSummaryResult } from './grid-summary';
import { IgxSummaryCellComponent } from './summary-cell.component';
import { IgxGridForOfDirective } from '../../directives/for-of/for_of.directive';
import { GridBaseAPIService } from '../api.service';
import { IgxGridBaseDirective } from '../grid-base.directive';
import { IgxColumnComponent } from '../columns/column.component';
import { GridType } from '../common/grid.interface';
import * as ɵngcc0 from '@angular/core';
export declare class IgxSummaryRowComponent implements DoCheck {
    gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>;
    element: ElementRef;
    cdr: ChangeDetectorRef;
    summaries: Map<string, IgxSummaryResult[]>;
    gridID: any;
    index: number;
    firstCellIndentation: number;
    get dataRowIndex(): number;
    get minHeight(): number;
    _summaryCells: QueryList<IgxSummaryCellComponent>;
    get summaryCells(): QueryList<IgxSummaryCellComponent>;
    set summaryCells(cells: QueryList<IgxSummaryCellComponent>);
    /**
     * @hidden
     */
    virtDirRow: IgxGridForOfDirective<any>;
    constructor(gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>, element: ElementRef, cdr: ChangeDetectorRef);
    ngDoCheck(): void;
    get grid(): IgxGridBaseDirective & GridType;
    get nativeElement(): any;
    getColumnSummaries(columnName: any): IgxSummaryResult[];
    /**
     * @hidden
     * @internal
     */
    isCellActive(visibleColumnIndex: any): boolean;
    /**
     * @hidden
     */
    get pinnedColumns(): IgxColumnComponent[];
    /**
     * @hidden
     */
    get unpinnedColumns(): IgxColumnComponent[];
    getContext(row: any): {
        $implicit: any;
    };
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxSummaryRowComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<IgxSummaryRowComponent, "igx-grid-summary-row", never, {
    "firstCellIndentation": "firstCellIndentation";
    "summaries": "summaries";
    "gridID": "gridID";
    "index": "index";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3VtbWFyeS1yb3cuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInN1bW1hcnktcm93LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7QUFRQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBc0NBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUXVlcnlMaXN0LCBFbGVtZW50UmVmLCBDaGFuZ2VEZXRlY3RvclJlZiwgRG9DaGVjayB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSWd4U3VtbWFyeVJlc3VsdCB9IGZyb20gJy4vZ3JpZC1zdW1tYXJ5JztcbmltcG9ydCB7IElneFN1bW1hcnlDZWxsQ29tcG9uZW50IH0gZnJvbSAnLi9zdW1tYXJ5LWNlbGwuY29tcG9uZW50JztcbmltcG9ydCB7IElneEdyaWRGb3JPZkRpcmVjdGl2ZSB9IGZyb20gJy4uLy4uL2RpcmVjdGl2ZXMvZm9yLW9mL2Zvcl9vZi5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgR3JpZEJhc2VBUElTZXJ2aWNlIH0gZnJvbSAnLi4vYXBpLnNlcnZpY2UnO1xuaW1wb3J0IHsgSWd4R3JpZEJhc2VEaXJlY3RpdmUgfSBmcm9tICcuLi9ncmlkLWJhc2UuZGlyZWN0aXZlJztcbmltcG9ydCB7IElneENvbHVtbkNvbXBvbmVudCB9IGZyb20gJy4uL2NvbHVtbnMvY29sdW1uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBHcmlkVHlwZSB9IGZyb20gJy4uL2NvbW1vbi9ncmlkLmludGVyZmFjZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBJZ3hTdW1tYXJ5Um93Q29tcG9uZW50IGltcGxlbWVudHMgRG9DaGVjayB7XG4gICAgZ3JpZEFQSTogR3JpZEJhc2VBUElTZXJ2aWNlPElneEdyaWRCYXNlRGlyZWN0aXZlICYgR3JpZFR5cGU+O1xuICAgIGVsZW1lbnQ6IEVsZW1lbnRSZWY7XG4gICAgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZjtcbiAgICBzdW1tYXJpZXM6IE1hcDxzdHJpbmcsIElneFN1bW1hcnlSZXN1bHRbXT47XG4gICAgZ3JpZElEOiBhbnk7XG4gICAgaW5kZXg6IG51bWJlcjtcbiAgICBmaXJzdENlbGxJbmRlbnRhdGlvbjogbnVtYmVyO1xuICAgIGdldCBkYXRhUm93SW5kZXgoKTogbnVtYmVyO1xuICAgIGdldCBtaW5IZWlnaHQoKTogbnVtYmVyO1xuICAgIF9zdW1tYXJ5Q2VsbHM6IFF1ZXJ5TGlzdDxJZ3hTdW1tYXJ5Q2VsbENvbXBvbmVudD47XG4gICAgZ2V0IHN1bW1hcnlDZWxscygpOiBRdWVyeUxpc3Q8SWd4U3VtbWFyeUNlbGxDb21wb25lbnQ+O1xuICAgIHNldCBzdW1tYXJ5Q2VsbHMoY2VsbHM6IFF1ZXJ5TGlzdDxJZ3hTdW1tYXJ5Q2VsbENvbXBvbmVudD4pO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICB2aXJ0RGlyUm93OiBJZ3hHcmlkRm9yT2ZEaXJlY3RpdmU8YW55PjtcbiAgICBjb25zdHJ1Y3RvcihncmlkQVBJOiBHcmlkQmFzZUFQSVNlcnZpY2U8SWd4R3JpZEJhc2VEaXJlY3RpdmUgJiBHcmlkVHlwZT4sIGVsZW1lbnQ6IEVsZW1lbnRSZWYsIGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIG5nRG9DaGVjaygpOiB2b2lkO1xuICAgIGdldCBncmlkKCk6IElneEdyaWRCYXNlRGlyZWN0aXZlICYgR3JpZFR5cGU7XG4gICAgZ2V0IG5hdGl2ZUVsZW1lbnQoKTogYW55O1xuICAgIGdldENvbHVtblN1bW1hcmllcyhjb2x1bW5OYW1lOiBhbnkpOiBJZ3hTdW1tYXJ5UmVzdWx0W107XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIGlzQ2VsbEFjdGl2ZSh2aXNpYmxlQ29sdW1uSW5kZXg6IGFueSk6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGdldCBwaW5uZWRDb2x1bW5zKCk6IElneENvbHVtbkNvbXBvbmVudFtdO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBnZXQgdW5waW5uZWRDb2x1bW5zKCk6IElneENvbHVtbkNvbXBvbmVudFtdO1xuICAgIGdldENvbnRleHQocm93OiBhbnkpOiB7XG4gICAgICAgICRpbXBsaWNpdDogYW55O1xuICAgIH07XG59XG4iXX0=