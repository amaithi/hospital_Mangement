import { AfterViewInit, ChangeDetectorRef, TemplateRef } from '@angular/core';
import { IgxColumnComponent } from '../../columns/column.component';
import { IChangeCheckboxEventArgs } from '../../../checkbox/checkbox.component';
import { IgxInputDirective } from '../../../directives/input/input.directive';
import { DisplayDensity } from '../../../core/density';
import { IgxForOfDirective } from '../../../directives/for-of/for_of.directive';
import { FilterListItem } from './grid.excel-style-filtering.component';
import { IgxListComponent } from '../../../list/public_api';
import * as ɵngcc0 from '@angular/core';
export declare class IgxExcelStyleLoadingValuesTemplateDirective {
    template: TemplateRef<any>;
    constructor(template: TemplateRef<any>);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxExcelStyleLoadingValuesTemplateDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<IgxExcelStyleLoadingValuesTemplateDirective, "[igxExcelStyleLoading]", never, {}, {}, never>;
}
/**
 * @hidden
 */
export declare class IgxExcelStyleSearchComponent implements AfterViewInit {
    cdr: ChangeDetectorRef;
    private _isLoading;
    get isLoading(): boolean;
    set isLoading(value: boolean);
    searchValue: any;
    grid: any;
    data: FilterListItem[];
    inline: boolean;
    column: IgxColumnComponent;
    searchInput: IgxInputDirective;
    list: IgxListComponent;
    displayDensity: DisplayDensity;
    protected virtDir: IgxForOfDirective<any>;
    protected defaultExcelStyleLoadingValuesTemplate: TemplateRef<any>;
    get valuesLoadingTemplate(): any;
    constructor(cdr: ChangeDetectorRef);
    ngAfterViewInit(): void;
    refreshSize(): void;
    clearInput(): void;
    onCheckboxChange(eventArgs: IChangeCheckboxEventArgs): void;
    get itemSize(): string;
    get containerSize(): any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxExcelStyleSearchComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<IgxExcelStyleSearchComponent, "igx-excel-style-search", never, {
    "grid": "grid";
    "data": "data";
    "inline": "inline";
    "column": "column";
    "displayDensity": "displayDensity";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhjZWwtc3R5bGUtc2VhcmNoLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJleGNlbC1zdHlsZS1zZWFyY2guY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztBQVFBOzs7OztBQUdBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTJCQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIENoYW5nZURldGVjdG9yUmVmLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSWd4Q29sdW1uQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vY29sdW1ucy9jb2x1bW4uY29tcG9uZW50JztcbmltcG9ydCB7IElDaGFuZ2VDaGVja2JveEV2ZW50QXJncyB9IGZyb20gJy4uLy4uLy4uL2NoZWNrYm94L2NoZWNrYm94LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJZ3hJbnB1dERpcmVjdGl2ZSB9IGZyb20gJy4uLy4uLy4uL2RpcmVjdGl2ZXMvaW5wdXQvaW5wdXQuZGlyZWN0aXZlJztcbmltcG9ydCB7IERpc3BsYXlEZW5zaXR5IH0gZnJvbSAnLi4vLi4vLi4vY29yZS9kZW5zaXR5JztcbmltcG9ydCB7IElneEZvck9mRGlyZWN0aXZlIH0gZnJvbSAnLi4vLi4vLi4vZGlyZWN0aXZlcy9mb3Itb2YvZm9yX29mLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBGaWx0ZXJMaXN0SXRlbSB9IGZyb20gJy4vZ3JpZC5leGNlbC1zdHlsZS1maWx0ZXJpbmcuY29tcG9uZW50JztcbmltcG9ydCB7IElneExpc3RDb21wb25lbnQgfSBmcm9tICcuLi8uLi8uLi9saXN0L3B1YmxpY19hcGknO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgSWd4RXhjZWxTdHlsZUxvYWRpbmdWYWx1ZXNUZW1wbGF0ZURpcmVjdGl2ZSB7XG4gICAgdGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgY29uc3RydWN0b3IodGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT4pO1xufVxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIElneEV4Y2VsU3R5bGVTZWFyY2hDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcbiAgICBjZHI6IENoYW5nZURldGVjdG9yUmVmO1xuICAgIHByaXZhdGUgX2lzTG9hZGluZztcbiAgICBnZXQgaXNMb2FkaW5nKCk6IGJvb2xlYW47XG4gICAgc2V0IGlzTG9hZGluZyh2YWx1ZTogYm9vbGVhbik7XG4gICAgc2VhcmNoVmFsdWU6IGFueTtcbiAgICBncmlkOiBhbnk7XG4gICAgZGF0YTogRmlsdGVyTGlzdEl0ZW1bXTtcbiAgICBpbmxpbmU6IGJvb2xlYW47XG4gICAgY29sdW1uOiBJZ3hDb2x1bW5Db21wb25lbnQ7XG4gICAgc2VhcmNoSW5wdXQ6IElneElucHV0RGlyZWN0aXZlO1xuICAgIGxpc3Q6IElneExpc3RDb21wb25lbnQ7XG4gICAgZGlzcGxheURlbnNpdHk6IERpc3BsYXlEZW5zaXR5O1xuICAgIHByb3RlY3RlZCB2aXJ0RGlyOiBJZ3hGb3JPZkRpcmVjdGl2ZTxhbnk+O1xuICAgIHByb3RlY3RlZCBkZWZhdWx0RXhjZWxTdHlsZUxvYWRpbmdWYWx1ZXNUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBnZXQgdmFsdWVzTG9hZGluZ1RlbXBsYXRlKCk6IGFueTtcbiAgICBjb25zdHJ1Y3RvcihjZHI6IENoYW5nZURldGVjdG9yUmVmKTtcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbiAgICByZWZyZXNoU2l6ZSgpOiB2b2lkO1xuICAgIGNsZWFySW5wdXQoKTogdm9pZDtcbiAgICBvbkNoZWNrYm94Q2hhbmdlKGV2ZW50QXJnczogSUNoYW5nZUNoZWNrYm94RXZlbnRBcmdzKTogdm9pZDtcbiAgICBnZXQgaXRlbVNpemUoKTogc3RyaW5nO1xuICAgIGdldCBjb250YWluZXJTaXplKCk6IGFueTtcbn1cbiJdfQ==