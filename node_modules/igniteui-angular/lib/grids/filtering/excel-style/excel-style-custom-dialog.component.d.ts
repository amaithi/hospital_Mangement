import { ChangeDetectorRef, AfterViewInit, TemplateRef, ElementRef } from '@angular/core';
import { IgxColumnComponent } from '../../columns/column.component';
import { IgxFilteringService, ExpressionUI } from '../grid-filtering.service';
import { IgxToggleDirective } from '../../../directives/toggle/toggle.directive';
import { IgxOverlayService } from '../../../services/public_api';
import { ILogicOperatorChangedArgs } from './excel-style-default-expression.component';
import { DisplayDensity } from '../../../core/density';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class IgxExcelStyleCustomDialogComponent implements AfterViewInit {
    private cdr;
    expressionsList: ExpressionUI[];
    private _customDialogPositionSettings;
    private _customDialogOverlaySettings;
    column: IgxColumnComponent;
    selectedOperator: string;
    filteringService: IgxFilteringService;
    overlayComponentId: string;
    overlayService: IgxOverlayService;
    displayDensity: DisplayDensity;
    private expressionComponents;
    private expressionDateComponents;
    toggle: IgxToggleDirective;
    protected defaultExpressionTemplate: TemplateRef<any>;
    protected dateExpressionTemplate: TemplateRef<any>;
    protected expressionsContainer: ElementRef;
    constructor(cdr: ChangeDetectorRef);
    ngAfterViewInit(): void;
    get template(): TemplateRef<any>;
    get grid(): any;
    onCustomDialogOpening(): void;
    onCustomDialogOpened(): void;
    open(esf: any): void;
    onClearButtonClick(): void;
    closeDialog(): void;
    onApplyButtonClick(): void;
    onAddButtonClick(): void;
    onExpressionRemoved(event: ExpressionUI): void;
    onLogicOperatorChanged(event: ILogicOperatorChangedArgs): void;
    onKeyDown(eventArgs: any): void;
    onApplyButtonKeyDown(eventArgs: any): void;
    private createCondition;
    private markChildrenForCheck;
    private createInitialExpressionUIElement;
    private scrollToBottom;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxExcelStyleCustomDialogComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<IgxExcelStyleCustomDialogComponent, "igx-excel-style-custom-dialog", never, {
    "expressionsList": "expressionsList";
    "column": "column";
    "selectedOperator": "selectedOperator";
    "filteringService": "filteringService";
    "overlayComponentId": "overlayComponentId";
    "overlayService": "overlayService";
    "displayDensity": "displayDensity";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhjZWwtc3R5bGUtY3VzdG9tLWRpYWxvZy5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiZXhjZWwtc3R5bGUtY3VzdG9tLWRpYWxvZy5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7QUFVQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW9DQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBBZnRlclZpZXdJbml0LCBUZW1wbGF0ZVJlZiwgRWxlbWVudFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSWd4Q29sdW1uQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vY29sdW1ucy9jb2x1bW4uY29tcG9uZW50JztcbmltcG9ydCB7IElneEZpbHRlcmluZ1NlcnZpY2UsIEV4cHJlc3Npb25VSSB9IGZyb20gJy4uL2dyaWQtZmlsdGVyaW5nLnNlcnZpY2UnO1xuaW1wb3J0IHsgSWd4VG9nZ2xlRGlyZWN0aXZlIH0gZnJvbSAnLi4vLi4vLi4vZGlyZWN0aXZlcy90b2dnbGUvdG9nZ2xlLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBJZ3hPdmVybGF5U2VydmljZSB9IGZyb20gJy4uLy4uLy4uL3NlcnZpY2VzL3B1YmxpY19hcGknO1xuaW1wb3J0IHsgSUxvZ2ljT3BlcmF0b3JDaGFuZ2VkQXJncyB9IGZyb20gJy4vZXhjZWwtc3R5bGUtZGVmYXVsdC1leHByZXNzaW9uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBEaXNwbGF5RGVuc2l0eSB9IGZyb20gJy4uLy4uLy4uL2NvcmUvZGVuc2l0eSc7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgSWd4RXhjZWxTdHlsZUN1c3RvbURpYWxvZ0NvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xuICAgIHByaXZhdGUgY2RyO1xuICAgIGV4cHJlc3Npb25zTGlzdDogRXhwcmVzc2lvblVJW107XG4gICAgcHJpdmF0ZSBfY3VzdG9tRGlhbG9nUG9zaXRpb25TZXR0aW5ncztcbiAgICBwcml2YXRlIF9jdXN0b21EaWFsb2dPdmVybGF5U2V0dGluZ3M7XG4gICAgY29sdW1uOiBJZ3hDb2x1bW5Db21wb25lbnQ7XG4gICAgc2VsZWN0ZWRPcGVyYXRvcjogc3RyaW5nO1xuICAgIGZpbHRlcmluZ1NlcnZpY2U6IElneEZpbHRlcmluZ1NlcnZpY2U7XG4gICAgb3ZlcmxheUNvbXBvbmVudElkOiBzdHJpbmc7XG4gICAgb3ZlcmxheVNlcnZpY2U6IElneE92ZXJsYXlTZXJ2aWNlO1xuICAgIGRpc3BsYXlEZW5zaXR5OiBEaXNwbGF5RGVuc2l0eTtcbiAgICBwcml2YXRlIGV4cHJlc3Npb25Db21wb25lbnRzO1xuICAgIHByaXZhdGUgZXhwcmVzc2lvbkRhdGVDb21wb25lbnRzO1xuICAgIHRvZ2dsZTogSWd4VG9nZ2xlRGlyZWN0aXZlO1xuICAgIHByb3RlY3RlZCBkZWZhdWx0RXhwcmVzc2lvblRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIHByb3RlY3RlZCBkYXRlRXhwcmVzc2lvblRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIHByb3RlY3RlZCBleHByZXNzaW9uc0NvbnRhaW5lcjogRWxlbWVudFJlZjtcbiAgICBjb25zdHJ1Y3RvcihjZHI6IENoYW5nZURldGVjdG9yUmVmKTtcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbiAgICBnZXQgdGVtcGxhdGUoKTogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBnZXQgZ3JpZCgpOiBhbnk7XG4gICAgb25DdXN0b21EaWFsb2dPcGVuaW5nKCk6IHZvaWQ7XG4gICAgb25DdXN0b21EaWFsb2dPcGVuZWQoKTogdm9pZDtcbiAgICBvcGVuKGVzZjogYW55KTogdm9pZDtcbiAgICBvbkNsZWFyQnV0dG9uQ2xpY2soKTogdm9pZDtcbiAgICBjbG9zZURpYWxvZygpOiB2b2lkO1xuICAgIG9uQXBwbHlCdXR0b25DbGljaygpOiB2b2lkO1xuICAgIG9uQWRkQnV0dG9uQ2xpY2soKTogdm9pZDtcbiAgICBvbkV4cHJlc3Npb25SZW1vdmVkKGV2ZW50OiBFeHByZXNzaW9uVUkpOiB2b2lkO1xuICAgIG9uTG9naWNPcGVyYXRvckNoYW5nZWQoZXZlbnQ6IElMb2dpY09wZXJhdG9yQ2hhbmdlZEFyZ3MpOiB2b2lkO1xuICAgIG9uS2V5RG93bihldmVudEFyZ3M6IGFueSk6IHZvaWQ7XG4gICAgb25BcHBseUJ1dHRvbktleURvd24oZXZlbnRBcmdzOiBhbnkpOiB2b2lkO1xuICAgIHByaXZhdGUgY3JlYXRlQ29uZGl0aW9uO1xuICAgIHByaXZhdGUgbWFya0NoaWxkcmVuRm9yQ2hlY2s7XG4gICAgcHJpdmF0ZSBjcmVhdGVJbml0aWFsRXhwcmVzc2lvblVJRWxlbWVudDtcbiAgICBwcml2YXRlIHNjcm9sbFRvQm90dG9tO1xufVxuIl19