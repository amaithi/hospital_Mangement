import { IgxHierarchicalGridComponent } from './hierarchical-grid.component';
import { IgxRowIslandComponent } from './row-island.component';
import { IPathSegment } from './hierarchical-grid-base.directive';
import { IgxGridBaseDirective, GridBaseAPIService } from '../grid/public_api';
import { GridType } from '../common/grid.interface';
import * as ɵngcc0 from '@angular/core';
export declare class IgxHierarchicalGridAPIService extends GridBaseAPIService<IgxGridBaseDirective & GridType> {
    protected childRowIslands: Map<string, IgxRowIslandComponent>;
    protected childGrids: Map<string, Map<any, IgxHierarchicalGridComponent>>;
    registerChildRowIsland(rowIsland: IgxRowIslandComponent): void;
    unsetChildRowIsland(rowIsland: IgxRowIslandComponent): void;
    getChildRowIsland(key: string): IgxRowIslandComponent;
    getChildGrid(path: Array<IPathSegment>): any;
    getChildGrids(inDepth?: boolean): any[];
    getParentRowId(childGrid: IgxHierarchicalGridComponent): any;
    registerChildGrid(parentRowID: string | object, rowIslandKey: string, grid: IgxHierarchicalGridComponent): void;
    getChildGridsForRowIsland(rowIslandKey: any): IgxHierarchicalGridComponent[];
    getChildGridByID(rowIslandKey: any, rowID: any): IgxHierarchicalGridComponent;
    get_row_expansion_state(record: any): boolean;
    allow_expansion_state_change(rowID: any, expanded: any): boolean;
    get_rec_by_id(rowID: any): any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxHierarchicalGridAPIService>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<IgxHierarchicalGridAPIService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGllcmFyY2hpY2FsLWdyaWQtYXBpLnNlcnZpY2UuZC50cyIsInNvdXJjZXMiOlsiaGllcmFyY2hpY2FsLWdyaWQtYXBpLnNlcnZpY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0FBS0E7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJZ3hIaWVyYXJjaGljYWxHcmlkQ29tcG9uZW50IH0gZnJvbSAnLi9oaWVyYXJjaGljYWwtZ3JpZC5jb21wb25lbnQnO1xuaW1wb3J0IHsgSWd4Um93SXNsYW5kQ29tcG9uZW50IH0gZnJvbSAnLi9yb3ctaXNsYW5kLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJUGF0aFNlZ21lbnQgfSBmcm9tICcuL2hpZXJhcmNoaWNhbC1ncmlkLWJhc2UuZGlyZWN0aXZlJztcbmltcG9ydCB7IElneEdyaWRCYXNlRGlyZWN0aXZlLCBHcmlkQmFzZUFQSVNlcnZpY2UgfSBmcm9tICcuLi9ncmlkL3B1YmxpY19hcGknO1xuaW1wb3J0IHsgR3JpZFR5cGUgfSBmcm9tICcuLi9jb21tb24vZ3JpZC5pbnRlcmZhY2UnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgSWd4SGllcmFyY2hpY2FsR3JpZEFQSVNlcnZpY2UgZXh0ZW5kcyBHcmlkQmFzZUFQSVNlcnZpY2U8SWd4R3JpZEJhc2VEaXJlY3RpdmUgJiBHcmlkVHlwZT4ge1xuICAgIHByb3RlY3RlZCBjaGlsZFJvd0lzbGFuZHM6IE1hcDxzdHJpbmcsIElneFJvd0lzbGFuZENvbXBvbmVudD47XG4gICAgcHJvdGVjdGVkIGNoaWxkR3JpZHM6IE1hcDxzdHJpbmcsIE1hcDxhbnksIElneEhpZXJhcmNoaWNhbEdyaWRDb21wb25lbnQ+PjtcbiAgICByZWdpc3RlckNoaWxkUm93SXNsYW5kKHJvd0lzbGFuZDogSWd4Um93SXNsYW5kQ29tcG9uZW50KTogdm9pZDtcbiAgICB1bnNldENoaWxkUm93SXNsYW5kKHJvd0lzbGFuZDogSWd4Um93SXNsYW5kQ29tcG9uZW50KTogdm9pZDtcbiAgICBnZXRDaGlsZFJvd0lzbGFuZChrZXk6IHN0cmluZyk6IElneFJvd0lzbGFuZENvbXBvbmVudDtcbiAgICBnZXRDaGlsZEdyaWQocGF0aDogQXJyYXk8SVBhdGhTZWdtZW50Pik6IGFueTtcbiAgICBnZXRDaGlsZEdyaWRzKGluRGVwdGg/OiBib29sZWFuKTogYW55W107XG4gICAgZ2V0UGFyZW50Um93SWQoY2hpbGRHcmlkOiBJZ3hIaWVyYXJjaGljYWxHcmlkQ29tcG9uZW50KTogYW55O1xuICAgIHJlZ2lzdGVyQ2hpbGRHcmlkKHBhcmVudFJvd0lEOiBzdHJpbmcgfCBvYmplY3QsIHJvd0lzbGFuZEtleTogc3RyaW5nLCBncmlkOiBJZ3hIaWVyYXJjaGljYWxHcmlkQ29tcG9uZW50KTogdm9pZDtcbiAgICBnZXRDaGlsZEdyaWRzRm9yUm93SXNsYW5kKHJvd0lzbGFuZEtleTogYW55KTogSWd4SGllcmFyY2hpY2FsR3JpZENvbXBvbmVudFtdO1xuICAgIGdldENoaWxkR3JpZEJ5SUQocm93SXNsYW5kS2V5OiBhbnksIHJvd0lEOiBhbnkpOiBJZ3hIaWVyYXJjaGljYWxHcmlkQ29tcG9uZW50O1xuICAgIGdldF9yb3dfZXhwYW5zaW9uX3N0YXRlKHJlY29yZDogYW55KTogYm9vbGVhbjtcbiAgICBhbGxvd19leHBhbnNpb25fc3RhdGVfY2hhbmdlKHJvd0lEOiBhbnksIGV4cGFuZGVkOiBhbnkpOiBib29sZWFuO1xuICAgIGdldF9yZWNfYnlfaWQocm93SUQ6IGFueSk6IGFueTtcbn1cbiJdfQ==