import { EventEmitter, ElementRef, OnDestroy, NgZone, OnInit } from '@angular/core';
import { Observable, Subscription, Subject } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
export declare enum DragScrollDirection {
    NONE = 0,
    LEFT = 1,
    TOP = 2,
    RIGHT = 3,
    BOTTOM = 4,
    TOPLEFT = 5,
    TOPRIGHT = 6,
    BOTTOMLEFT = 7,
    BOTTOMRIGHT = 8
}
export declare class IgxGridDragSelectDirective implements OnInit, OnDestroy {
    private ref;
    private zone;
    _activeDrag: boolean;
    get activeDrag(): boolean;
    set activeDrag(val: boolean);
    onDragStop: EventEmitter<boolean>;
    onDragScroll: EventEmitter<DragScrollDirection>;
    get nativeElement(): HTMLElement;
    get clientRect(): ClientRect;
    protected end$: Subject<any>;
    protected lastDirection: DragScrollDirection;
    protected _interval$: Observable<any>;
    protected _sub: Subscription;
    constructor(ref: ElementRef, zone: NgZone);
    ngOnInit(): void;
    ngOnDestroy(): void;
    startDragSelection: (ev: PointerEvent) => void;
    stopDragSelection: () => void;
    _measureDimensions(x: number, y: number): DragScrollDirection;
    protected unsubscribe(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxGridDragSelectDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<IgxGridDragSelectDirective, "[igxGridDragSelect]", never, {
    "activeDrag": "igxGridDragSelect";
}, {
    "onDragStop": "onDragStop";
    "onDragScroll": "onDragScroll";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZy1zZWxlY3QuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbImRyYWctc2VsZWN0LmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZ0NBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBFbGVtZW50UmVmLCBPbkRlc3Ryb3ksIE5nWm9uZSwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBTdWJzY3JpcHRpb24sIFN1YmplY3QgfSBmcm9tICdyeGpzJztcbmV4cG9ydCBkZWNsYXJlIGVudW0gRHJhZ1Njcm9sbERpcmVjdGlvbiB7XG4gICAgTk9ORSA9IDAsXG4gICAgTEVGVCA9IDEsXG4gICAgVE9QID0gMixcbiAgICBSSUdIVCA9IDMsXG4gICAgQk9UVE9NID0gNCxcbiAgICBUT1BMRUZUID0gNSxcbiAgICBUT1BSSUdIVCA9IDYsXG4gICAgQk9UVE9NTEVGVCA9IDcsXG4gICAgQk9UVE9NUklHSFQgPSA4XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBJZ3hHcmlkRHJhZ1NlbGVjdERpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgICBwcml2YXRlIHJlZjtcbiAgICBwcml2YXRlIHpvbmU7XG4gICAgX2FjdGl2ZURyYWc6IGJvb2xlYW47XG4gICAgZ2V0IGFjdGl2ZURyYWcoKTogYm9vbGVhbjtcbiAgICBzZXQgYWN0aXZlRHJhZyh2YWw6IGJvb2xlYW4pO1xuICAgIG9uRHJhZ1N0b3A6IEV2ZW50RW1pdHRlcjxib29sZWFuPjtcbiAgICBvbkRyYWdTY3JvbGw6IEV2ZW50RW1pdHRlcjxEcmFnU2Nyb2xsRGlyZWN0aW9uPjtcbiAgICBnZXQgbmF0aXZlRWxlbWVudCgpOiBIVE1MRWxlbWVudDtcbiAgICBnZXQgY2xpZW50UmVjdCgpOiBDbGllbnRSZWN0O1xuICAgIHByb3RlY3RlZCBlbmQkOiBTdWJqZWN0PGFueT47XG4gICAgcHJvdGVjdGVkIGxhc3REaXJlY3Rpb246IERyYWdTY3JvbGxEaXJlY3Rpb247XG4gICAgcHJvdGVjdGVkIF9pbnRlcnZhbCQ6IE9ic2VydmFibGU8YW55PjtcbiAgICBwcm90ZWN0ZWQgX3N1YjogU3Vic2NyaXB0aW9uO1xuICAgIGNvbnN0cnVjdG9yKHJlZjogRWxlbWVudFJlZiwgem9uZTogTmdab25lKTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgc3RhcnREcmFnU2VsZWN0aW9uOiAoZXY6IFBvaW50ZXJFdmVudCkgPT4gdm9pZDtcbiAgICBzdG9wRHJhZ1NlbGVjdGlvbjogKCkgPT4gdm9pZDtcbiAgICBfbWVhc3VyZURpbWVuc2lvbnMoeDogbnVtYmVyLCB5OiBudW1iZXIpOiBEcmFnU2Nyb2xsRGlyZWN0aW9uO1xuICAgIHByb3RlY3RlZCB1bnN1YnNjcmliZSgpOiB2b2lkO1xufVxuIl19