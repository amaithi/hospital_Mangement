import { OnDestroy, ElementRef, ViewContainerRef, NgZone, Renderer2, ChangeDetectorRef } from '@angular/core';
import { IgxDragDirective } from '../../directives/drag-drop/drag-drop.directive';
import { IgxColumnComponent } from '../columns/column.component';
import { IgxColumnMovingService } from './moving.service';
/**
 * @hidden
 * @internal
 */
import * as ɵngcc0 from '@angular/core';
export declare class IgxColumnMovingDragDirective extends IgxDragDirective implements OnDestroy {
    element: ElementRef<HTMLElement>;
    viewContainer: ViewContainerRef;
    zone: NgZone;
    renderer: Renderer2;
    cdr: ChangeDetectorRef;
    private cms;
    set data(val: any);
    get column(): IgxColumnComponent;
    get draggable(): boolean;
    get icon(): HTMLElement;
    private subscription$;
    private _column;
    private _ghostClass;
    private ghostImgIconClass;
    private ghostImgIconGroupClass;
    private columnSelectedClass;
    constructor(element: ElementRef<HTMLElement>, viewContainer: ViewContainerRef, zone: NgZone, renderer: Renderer2, cdr: ChangeDetectorRef, cms: IgxColumnMovingService);
    ngOnDestroy(): void;
    onEscape(event: any): void;
    onPointerDown(event: any): void;
    onPointerMove(event: any): void;
    onPointerUp(event: any): void;
    protected createGhost(pageX: any, pageY: any): void;
    private _unsubscribe;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxColumnMovingDragDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<IgxColumnMovingDragDirective, "[igxColumnMovingDrag]", never, {
    "data": "igxColumnMovingDrag";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW92aW5nLmRyYWcuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbIm1vdmluZy5kcmFnLmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7QUFRQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF5QkEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPbkRlc3Ryb3ksIEVsZW1lbnRSZWYsIFZpZXdDb250YWluZXJSZWYsIE5nWm9uZSwgUmVuZGVyZXIyLCBDaGFuZ2VEZXRlY3RvclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSWd4RHJhZ0RpcmVjdGl2ZSB9IGZyb20gJy4uLy4uL2RpcmVjdGl2ZXMvZHJhZy1kcm9wL2RyYWctZHJvcC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgSWd4Q29sdW1uQ29tcG9uZW50IH0gZnJvbSAnLi4vY29sdW1ucy9jb2x1bW4uY29tcG9uZW50JztcbmltcG9ydCB7IElneENvbHVtbk1vdmluZ1NlcnZpY2UgfSBmcm9tICcuL21vdmluZy5zZXJ2aWNlJztcbi8qKlxuICogQGhpZGRlblxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIElneENvbHVtbk1vdmluZ0RyYWdEaXJlY3RpdmUgZXh0ZW5kcyBJZ3hEcmFnRGlyZWN0aXZlIGltcGxlbWVudHMgT25EZXN0cm95IHtcbiAgICBlbGVtZW50OiBFbGVtZW50UmVmPEhUTUxFbGVtZW50PjtcbiAgICB2aWV3Q29udGFpbmVyOiBWaWV3Q29udGFpbmVyUmVmO1xuICAgIHpvbmU6IE5nWm9uZTtcbiAgICByZW5kZXJlcjogUmVuZGVyZXIyO1xuICAgIGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWY7XG4gICAgcHJpdmF0ZSBjbXM7XG4gICAgc2V0IGRhdGEodmFsOiBhbnkpO1xuICAgIGdldCBjb2x1bW4oKTogSWd4Q29sdW1uQ29tcG9uZW50O1xuICAgIGdldCBkcmFnZ2FibGUoKTogYm9vbGVhbjtcbiAgICBnZXQgaWNvbigpOiBIVE1MRWxlbWVudDtcbiAgICBwcml2YXRlIHN1YnNjcmlwdGlvbiQ7XG4gICAgcHJpdmF0ZSBfY29sdW1uO1xuICAgIHByaXZhdGUgX2dob3N0Q2xhc3M7XG4gICAgcHJpdmF0ZSBnaG9zdEltZ0ljb25DbGFzcztcbiAgICBwcml2YXRlIGdob3N0SW1nSWNvbkdyb3VwQ2xhc3M7XG4gICAgcHJpdmF0ZSBjb2x1bW5TZWxlY3RlZENsYXNzO1xuICAgIGNvbnN0cnVjdG9yKGVsZW1lbnQ6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+LCB2aWV3Q29udGFpbmVyOiBWaWV3Q29udGFpbmVyUmVmLCB6b25lOiBOZ1pvbmUsIHJlbmRlcmVyOiBSZW5kZXJlcjIsIGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYsIGNtczogSWd4Q29sdW1uTW92aW5nU2VydmljZSk7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBvbkVzY2FwZShldmVudDogYW55KTogdm9pZDtcbiAgICBvblBvaW50ZXJEb3duKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIG9uUG9pbnRlck1vdmUoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgb25Qb2ludGVyVXAoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIGNyZWF0ZUdob3N0KHBhZ2VYOiBhbnksIHBhZ2VZOiBhbnkpOiB2b2lkO1xuICAgIHByaXZhdGUgX3Vuc3Vic2NyaWJlO1xufVxuIl19