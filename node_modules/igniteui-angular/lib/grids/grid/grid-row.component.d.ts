import { ElementRef, ChangeDetectorRef } from '@angular/core';
import { IgxGridComponent } from './grid.component';
import { IgxRowDirective } from '../row.directive';
import { GridBaseAPIService } from '../api.service';
import { IgxGridSelectionService, IgxGridCRUDService } from '../selection/selection.service';
import * as ɵngcc0 from '@angular/core';
export declare class IgxGridRowComponent extends IgxRowDirective<IgxGridComponent> {
    gridAPI: GridBaseAPIService<IgxGridComponent>;
    crudService: IgxGridCRUDService;
    selectionService: IgxGridSelectionService;
    element: ElementRef;
    cdr: ChangeDetectorRef;
    constructor(gridAPI: GridBaseAPIService<IgxGridComponent>, crudService: IgxGridCRUDService, selectionService: IgxGridSelectionService, element: ElementRef, cdr: ChangeDetectorRef);
    get hasColumnLayouts(): boolean;
    getContext(col: any, row: any): {
        $implicit: any;
        row: any;
    };
    get mrlRightPinnedOffset(): string;
    getContextMRL(pinnedCols: any, row: any): {
        $implicit: any;
        row: any;
    };
    get expanded(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxGridRowComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<IgxGridRowComponent, "igx-grid-row", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZC1yb3cuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImdyaWQtcm93LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7QUFLQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFrQkEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBDaGFuZ2VEZXRlY3RvclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSWd4R3JpZENvbXBvbmVudCB9IGZyb20gJy4vZ3JpZC5jb21wb25lbnQnO1xuaW1wb3J0IHsgSWd4Um93RGlyZWN0aXZlIH0gZnJvbSAnLi4vcm93LmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBHcmlkQmFzZUFQSVNlcnZpY2UgfSBmcm9tICcuLi9hcGkuc2VydmljZSc7XG5pbXBvcnQgeyBJZ3hHcmlkU2VsZWN0aW9uU2VydmljZSwgSWd4R3JpZENSVURTZXJ2aWNlIH0gZnJvbSAnLi4vc2VsZWN0aW9uL3NlbGVjdGlvbi5zZXJ2aWNlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIElneEdyaWRSb3dDb21wb25lbnQgZXh0ZW5kcyBJZ3hSb3dEaXJlY3RpdmU8SWd4R3JpZENvbXBvbmVudD4ge1xuICAgIGdyaWRBUEk6IEdyaWRCYXNlQVBJU2VydmljZTxJZ3hHcmlkQ29tcG9uZW50PjtcbiAgICBjcnVkU2VydmljZTogSWd4R3JpZENSVURTZXJ2aWNlO1xuICAgIHNlbGVjdGlvblNlcnZpY2U6IElneEdyaWRTZWxlY3Rpb25TZXJ2aWNlO1xuICAgIGVsZW1lbnQ6IEVsZW1lbnRSZWY7XG4gICAgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZjtcbiAgICBjb25zdHJ1Y3RvcihncmlkQVBJOiBHcmlkQmFzZUFQSVNlcnZpY2U8SWd4R3JpZENvbXBvbmVudD4sIGNydWRTZXJ2aWNlOiBJZ3hHcmlkQ1JVRFNlcnZpY2UsIHNlbGVjdGlvblNlcnZpY2U6IElneEdyaWRTZWxlY3Rpb25TZXJ2aWNlLCBlbGVtZW50OiBFbGVtZW50UmVmLCBjZHI6IENoYW5nZURldGVjdG9yUmVmKTtcbiAgICBnZXQgaGFzQ29sdW1uTGF5b3V0cygpOiBib29sZWFuO1xuICAgIGdldENvbnRleHQoY29sOiBhbnksIHJvdzogYW55KToge1xuICAgICAgICAkaW1wbGljaXQ6IGFueTtcbiAgICAgICAgcm93OiBhbnk7XG4gICAgfTtcbiAgICBnZXQgbXJsUmlnaHRQaW5uZWRPZmZzZXQoKTogc3RyaW5nO1xuICAgIGdldENvbnRleHRNUkwocGlubmVkQ29sczogYW55LCByb3c6IGFueSk6IHtcbiAgICAgICAgJGltcGxpY2l0OiBhbnk7XG4gICAgICAgIHJvdzogYW55O1xuICAgIH07XG4gICAgZ2V0IGV4cGFuZGVkKCk6IGJvb2xlYW47XG59XG4iXX0=