import { ElementRef } from '@angular/core';
import { GridBaseAPIService } from './api.service';
/** @hidden */
import * as ɵngcc0 from '@angular/core';
export declare class IgxRowEditTemplateDirective {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxRowEditTemplateDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<IgxRowEditTemplateDirective, "[igxRowEdit]", never, {}, {}, never>;
}
/** @hidden */
export declare class IgxRowEditTextDirective {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxRowEditTextDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<IgxRowEditTextDirective, "[igxRowEditText]", never, {}, {}, never>;
}
/** @hidden */
export declare class IgxRowEditActionsDirective {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxRowEditActionsDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<IgxRowEditActionsDirective, "[igxRowEditActions]", never, {}, {}, never>;
}
/** @hidden */
export declare class IgxRowEditTabStopDirective {
    api: GridBaseAPIService<any>;
    element: ElementRef;
    private currentCellIndex;
    constructor(api: GridBaseAPIService<any>, element: ElementRef);
    get grid(): any;
    handleTab(event: KeyboardEvent): void;
    handleEscape(event: KeyboardEvent): void;
    /**
     * Moves focus to first/last editable cell in the editable row and put the cell in edit mode.
     * If cell is out of view first scrolls to the cell
     * @param event keyboard event containing information about whether SHIFT key was pressed
     */
    private move;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxRowEditTabStopDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<IgxRowEditTabStopDirective, "[igxRowEditTabStop]", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZC5yb3dFZGl0LmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJncmlkLnJvd0VkaXQuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFHQTs7O0FBQ0E7Ozs7O0FBR0E7Ozs7O0FBR0E7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWdCQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEdyaWRCYXNlQVBJU2VydmljZSB9IGZyb20gJy4vYXBpLnNlcnZpY2UnO1xuLyoqIEBoaWRkZW4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIElneFJvd0VkaXRUZW1wbGF0ZURpcmVjdGl2ZSB7XG59XG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgSWd4Um93RWRpdFRleHREaXJlY3RpdmUge1xufVxuLyoqIEBoaWRkZW4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIElneFJvd0VkaXRBY3Rpb25zRGlyZWN0aXZlIHtcbn1cbi8qKiBAaGlkZGVuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBJZ3hSb3dFZGl0VGFiU3RvcERpcmVjdGl2ZSB7XG4gICAgYXBpOiBHcmlkQmFzZUFQSVNlcnZpY2U8YW55PjtcbiAgICBlbGVtZW50OiBFbGVtZW50UmVmO1xuICAgIHByaXZhdGUgY3VycmVudENlbGxJbmRleDtcbiAgICBjb25zdHJ1Y3RvcihhcGk6IEdyaWRCYXNlQVBJU2VydmljZTxhbnk+LCBlbGVtZW50OiBFbGVtZW50UmVmKTtcbiAgICBnZXQgZ3JpZCgpOiBhbnk7XG4gICAgaGFuZGxlVGFiKGV2ZW50OiBLZXlib2FyZEV2ZW50KTogdm9pZDtcbiAgICBoYW5kbGVFc2NhcGUoZXZlbnQ6IEtleWJvYXJkRXZlbnQpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIE1vdmVzIGZvY3VzIHRvIGZpcnN0L2xhc3QgZWRpdGFibGUgY2VsbCBpbiB0aGUgZWRpdGFibGUgcm93IGFuZCBwdXQgdGhlIGNlbGwgaW4gZWRpdCBtb2RlLlxuICAgICAqIElmIGNlbGwgaXMgb3V0IG9mIHZpZXcgZmlyc3Qgc2Nyb2xscyB0byB0aGUgY2VsbFxuICAgICAqIEBwYXJhbSBldmVudCBrZXlib2FyZCBldmVudCBjb250YWluaW5nIGluZm9ybWF0aW9uIGFib3V0IHdoZXRoZXIgU0hJRlQga2V5IHdhcyBwcmVzc2VkXG4gICAgICovXG4gICAgcHJpdmF0ZSBtb3ZlO1xufVxuIl19