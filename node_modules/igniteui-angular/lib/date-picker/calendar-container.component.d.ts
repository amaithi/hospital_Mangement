import { EventEmitter } from '@angular/core';
import { IgxCalendarComponent } from '../calendar/public_api';
import { InteractionMode } from '../core/enums';
import { IgxDatePickerActionsDirective } from './date-picker.directives';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class IgxCalendarContainerComponent {
    calendar: IgxCalendarComponent;
    mode: InteractionMode;
    vertical: boolean;
    cancelButtonLabel: string;
    todayButtonLabel: string;
    datePickerActions: IgxDatePickerActionsDirective;
    onClose: EventEmitter<any>;
    onTodaySelection: EventEmitter<any>;
    styleClass: string;
    get dropdownCSS(): boolean;
    get verticalCSS(): boolean;
    onEscape(event: any): void;
    /**
     * Returns whether the date-picker is in readonly dialog mode.
     *
     * @hidden
     */
    get isReadonly(): boolean;
    /**
     * Emits close event for the calendar.
     */
    closeCalendar(): void;
    /**
     * Emits today selection event for the calendar.
     */
    triggerTodaySelection(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxCalendarContainerComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<IgxCalendarContainerComponent, "igx-calendar-container", never, {
    "mode": "mode";
    "vertical": "vertical";
    "cancelButtonLabel": "cancelButtonLabel";
    "todayButtonLabel": "todayButtonLabel";
    "datePickerActions": "datePickerActions";
}, {
    "onClose": "onClose";
    "onTodaySelection": "onTodaySelection";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXItY29udGFpbmVyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJjYWxlbmRhci1jb250YWluZXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBT0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMkJBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJZ3hDYWxlbmRhckNvbXBvbmVudCB9IGZyb20gJy4uL2NhbGVuZGFyL3B1YmxpY19hcGknO1xuaW1wb3J0IHsgSW50ZXJhY3Rpb25Nb2RlIH0gZnJvbSAnLi4vY29yZS9lbnVtcyc7XG5pbXBvcnQgeyBJZ3hEYXRlUGlja2VyQWN0aW9uc0RpcmVjdGl2ZSB9IGZyb20gJy4vZGF0ZS1waWNrZXIuZGlyZWN0aXZlcyc7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgSWd4Q2FsZW5kYXJDb250YWluZXJDb21wb25lbnQge1xuICAgIGNhbGVuZGFyOiBJZ3hDYWxlbmRhckNvbXBvbmVudDtcbiAgICBtb2RlOiBJbnRlcmFjdGlvbk1vZGU7XG4gICAgdmVydGljYWw6IGJvb2xlYW47XG4gICAgY2FuY2VsQnV0dG9uTGFiZWw6IHN0cmluZztcbiAgICB0b2RheUJ1dHRvbkxhYmVsOiBzdHJpbmc7XG4gICAgZGF0ZVBpY2tlckFjdGlvbnM6IElneERhdGVQaWNrZXJBY3Rpb25zRGlyZWN0aXZlO1xuICAgIG9uQ2xvc2U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG9uVG9kYXlTZWxlY3Rpb246IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIHN0eWxlQ2xhc3M6IHN0cmluZztcbiAgICBnZXQgZHJvcGRvd25DU1MoKTogYm9vbGVhbjtcbiAgICBnZXQgdmVydGljYWxDU1MoKTogYm9vbGVhbjtcbiAgICBvbkVzY2FwZShldmVudDogYW55KTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHdoZXRoZXIgdGhlIGRhdGUtcGlja2VyIGlzIGluIHJlYWRvbmx5IGRpYWxvZyBtb2RlLlxuICAgICAqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGdldCBpc1JlYWRvbmx5KCk6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogRW1pdHMgY2xvc2UgZXZlbnQgZm9yIHRoZSBjYWxlbmRhci5cbiAgICAgKi9cbiAgICBjbG9zZUNhbGVuZGFyKCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogRW1pdHMgdG9kYXkgc2VsZWN0aW9uIGV2ZW50IGZvciB0aGUgY2FsZW5kYXIuXG4gICAgICovXG4gICAgdHJpZ2dlclRvZGF5U2VsZWN0aW9uKCk6IHZvaWQ7XG59XG4iXX0=