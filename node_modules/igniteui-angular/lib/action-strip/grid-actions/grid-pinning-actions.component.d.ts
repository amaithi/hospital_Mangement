import { IgxGridActionsBaseDirective } from './grid-actions-base.directive';
import * as ɵngcc0 from '@angular/core';
export declare class IgxGridPinningActionsComponent extends IgxGridActionsBaseDirective {
    /**
     * Host `class.igx-action-strip` binding.
     * @hidden
     * @internal
     */
    cssClass: string;
    private iconsRendered;
    /**
     * Getter to know if the row is pinned
     * @hidden
     * @internal
     */
    get pinned(): boolean;
    /**
     * Getter to know if the row is in pinned and ghost
     * @hidden
     * @internal
     */
    get inPinnedArea(): boolean;
    /**
     * Getter to know if the row pinning is set to top or bottom
     * @hidden
     * @internal
     */
    get pinnedTop(): boolean;
    /**
     * Pin the row according to the context.
     * @example
     * ```typescript
     * this.gridPinningActions.pin();
     * ```
     */
    pin(event?: any): void;
    /**
     * Unpin the row according to the context.
     * @example
     * ```typescript
     * this.gridPinningActions.unpin();
     * ```
     */
    unpin(event?: any): void;
    scrollToRow(event: any): void;
    private renderIcons;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxGridPinningActionsComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<IgxGridPinningActionsComponent, "igx-grid-pinning-actions", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZC1waW5uaW5nLWFjdGlvbnMuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImdyaWQtcGlubmluZy1hY3Rpb25zLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBNENBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSWd4R3JpZEFjdGlvbnNCYXNlRGlyZWN0aXZlIH0gZnJvbSAnLi9ncmlkLWFjdGlvbnMtYmFzZS5kaXJlY3RpdmUnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgSWd4R3JpZFBpbm5pbmdBY3Rpb25zQ29tcG9uZW50IGV4dGVuZHMgSWd4R3JpZEFjdGlvbnNCYXNlRGlyZWN0aXZlIHtcbiAgICAvKipcbiAgICAgKiBIb3N0IGBjbGFzcy5pZ3gtYWN0aW9uLXN0cmlwYCBiaW5kaW5nLlxuICAgICAqIEBoaWRkZW5cbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBjc3NDbGFzczogc3RyaW5nO1xuICAgIHByaXZhdGUgaWNvbnNSZW5kZXJlZDtcbiAgICAvKipcbiAgICAgKiBHZXR0ZXIgdG8ga25vdyBpZiB0aGUgcm93IGlzIHBpbm5lZFxuICAgICAqIEBoaWRkZW5cbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBnZXQgcGlubmVkKCk6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogR2V0dGVyIHRvIGtub3cgaWYgdGhlIHJvdyBpcyBpbiBwaW5uZWQgYW5kIGdob3N0XG4gICAgICogQGhpZGRlblxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIGdldCBpblBpbm5lZEFyZWEoKTogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBHZXR0ZXIgdG8ga25vdyBpZiB0aGUgcm93IHBpbm5pbmcgaXMgc2V0IHRvIHRvcCBvciBib3R0b21cbiAgICAgKiBAaGlkZGVuXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgZ2V0IHBpbm5lZFRvcCgpOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIFBpbiB0aGUgcm93IGFjY29yZGluZyB0byB0aGUgY29udGV4dC5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiB0aGlzLmdyaWRQaW5uaW5nQWN0aW9ucy5waW4oKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBwaW4oZXZlbnQ/OiBhbnkpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIFVucGluIHRoZSByb3cgYWNjb3JkaW5nIHRvIHRoZSBjb250ZXh0LlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIHRoaXMuZ3JpZFBpbm5pbmdBY3Rpb25zLnVucGluKCk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgdW5waW4oZXZlbnQ/OiBhbnkpOiB2b2lkO1xuICAgIHNjcm9sbFRvUm93KGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIHByaXZhdGUgcmVuZGVySWNvbnM7XG59XG4iXX0=