import { InjectionToken, EventEmitter, DoCheck, OnInit } from '@angular/core';
import { IBaseEventArgs } from './utils';
/**
 * Defines the posible values of the components' display density.
 */
import * as ɵngcc0 from '@angular/core';
export declare enum DisplayDensity {
    comfortable = "comfortable",
    cosy = "cosy",
    compact = "compact"
}
/**
 * Describes the object used to configure the DisplayDensity in Angular DI.
 */
export interface IDisplayDensityOptions {
    displayDensity: DisplayDensity;
}
export interface IDensityChangedEventArgs extends IBaseEventArgs {
    oldDensity: DisplayDensity;
    newDensity: DisplayDensity;
}
/**
 * Defines the DisplayDensity DI token.
 */
export declare const DisplayDensityToken: InjectionToken<IDisplayDensityOptions>;
/**
 * Base class containing all logic required for implementing DisplayDensity.
 */
export declare class DisplayDensityBase implements DoCheck, OnInit {
    protected displayDensityOptions: IDisplayDensityOptions;
    protected _displayDensity: DisplayDensity;
    /**
     * @hidden
     */
    initialDensity: DisplayDensity;
    /**
     * Returns the theme of the component.
     * The default theme is `comfortable`.
     * Available options are `comfortable`, `cosy`, `compact`.
     * ```typescript
     * let componentTheme = this.component.displayDensity;
     * ```
     */
    get displayDensity(): DisplayDensity | string;
    /**
     * Sets the theme of the component.
     */
    set displayDensity(val: DisplayDensity | string);
    onDensityChanged: EventEmitter<IDensityChangedEventArgs>;
    protected oldDisplayDensityOptions: IDisplayDensityOptions;
    constructor(displayDensityOptions: IDisplayDensityOptions);
    /**
     * @hidden
     */
    ngOnInit(): void;
    ngDoCheck(): void;
    /**
     * Given a style class of a component/element returns the modified version of it based
     * on the current display density.
     */
    protected getComponentDensityClass(baseStyleClass: string): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DisplayDensityBase>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<DisplayDensityBase, "[igxDisplayDensityBase]", never, {
    "displayDensity": "displayDensity";
}, {
    "onDensityChanged": "onDensityChanged";
}, never>;
}
export declare class IgxDisplayDensityModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<IgxDisplayDensityModule, [typeof DisplayDensityBase], never, [typeof DisplayDensityBase]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<IgxDisplayDensityModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlzcGxheURlbnNpdHkuZC50cyIsInNvdXJjZXMiOlsiZGlzcGxheURlbnNpdHkuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0FBS0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF1REE7Ozs7QUFFQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGlvblRva2VuLCBFdmVudEVtaXR0ZXIsIERvQ2hlY2ssIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSUJhc2VFdmVudEFyZ3MgfSBmcm9tICcuL3V0aWxzJztcbi8qKlxuICogRGVmaW5lcyB0aGUgcG9zaWJsZSB2YWx1ZXMgb2YgdGhlIGNvbXBvbmVudHMnIGRpc3BsYXkgZGVuc2l0eS5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgZW51bSBEaXNwbGF5RGVuc2l0eSB7XG4gICAgY29tZm9ydGFibGUgPSBcImNvbWZvcnRhYmxlXCIsXG4gICAgY29zeSA9IFwiY29zeVwiLFxuICAgIGNvbXBhY3QgPSBcImNvbXBhY3RcIlxufVxuLyoqXG4gKiBEZXNjcmliZXMgdGhlIG9iamVjdCB1c2VkIHRvIGNvbmZpZ3VyZSB0aGUgRGlzcGxheURlbnNpdHkgaW4gQW5ndWxhciBESS5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBJRGlzcGxheURlbnNpdHlPcHRpb25zIHtcbiAgICBkaXNwbGF5RGVuc2l0eTogRGlzcGxheURlbnNpdHk7XG59XG5leHBvcnQgaW50ZXJmYWNlIElEZW5zaXR5Q2hhbmdlZEV2ZW50QXJncyBleHRlbmRzIElCYXNlRXZlbnRBcmdzIHtcbiAgICBvbGREZW5zaXR5OiBEaXNwbGF5RGVuc2l0eTtcbiAgICBuZXdEZW5zaXR5OiBEaXNwbGF5RGVuc2l0eTtcbn1cbi8qKlxuICogRGVmaW5lcyB0aGUgRGlzcGxheURlbnNpdHkgREkgdG9rZW4uXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNvbnN0IERpc3BsYXlEZW5zaXR5VG9rZW46IEluamVjdGlvblRva2VuPElEaXNwbGF5RGVuc2l0eU9wdGlvbnM+O1xuLyoqXG4gKiBCYXNlIGNsYXNzIGNvbnRhaW5pbmcgYWxsIGxvZ2ljIHJlcXVpcmVkIGZvciBpbXBsZW1lbnRpbmcgRGlzcGxheURlbnNpdHkuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIERpc3BsYXlEZW5zaXR5QmFzZSBpbXBsZW1lbnRzIERvQ2hlY2ssIE9uSW5pdCB7XG4gICAgcHJvdGVjdGVkIGRpc3BsYXlEZW5zaXR5T3B0aW9uczogSURpc3BsYXlEZW5zaXR5T3B0aW9ucztcbiAgICBwcm90ZWN0ZWQgX2Rpc3BsYXlEZW5zaXR5OiBEaXNwbGF5RGVuc2l0eTtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgaW5pdGlhbERlbnNpdHk6IERpc3BsYXlEZW5zaXR5O1xuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIHRoZW1lIG9mIHRoZSBjb21wb25lbnQuXG4gICAgICogVGhlIGRlZmF1bHQgdGhlbWUgaXMgYGNvbWZvcnRhYmxlYC5cbiAgICAgKiBBdmFpbGFibGUgb3B0aW9ucyBhcmUgYGNvbWZvcnRhYmxlYCwgYGNvc3lgLCBgY29tcGFjdGAuXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGxldCBjb21wb25lbnRUaGVtZSA9IHRoaXMuY29tcG9uZW50LmRpc3BsYXlEZW5zaXR5O1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGdldCBkaXNwbGF5RGVuc2l0eSgpOiBEaXNwbGF5RGVuc2l0eSB8IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSB0aGVtZSBvZiB0aGUgY29tcG9uZW50LlxuICAgICAqL1xuICAgIHNldCBkaXNwbGF5RGVuc2l0eSh2YWw6IERpc3BsYXlEZW5zaXR5IHwgc3RyaW5nKTtcbiAgICBvbkRlbnNpdHlDaGFuZ2VkOiBFdmVudEVtaXR0ZXI8SURlbnNpdHlDaGFuZ2VkRXZlbnRBcmdzPjtcbiAgICBwcm90ZWN0ZWQgb2xkRGlzcGxheURlbnNpdHlPcHRpb25zOiBJRGlzcGxheURlbnNpdHlPcHRpb25zO1xuICAgIGNvbnN0cnVjdG9yKGRpc3BsYXlEZW5zaXR5T3B0aW9uczogSURpc3BsYXlEZW5zaXR5T3B0aW9ucyk7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdEb0NoZWNrKCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogR2l2ZW4gYSBzdHlsZSBjbGFzcyBvZiBhIGNvbXBvbmVudC9lbGVtZW50IHJldHVybnMgdGhlIG1vZGlmaWVkIHZlcnNpb24gb2YgaXQgYmFzZWRcbiAgICAgKiBvbiB0aGUgY3VycmVudCBkaXNwbGF5IGRlbnNpdHkuXG4gICAgICovXG4gICAgcHJvdGVjdGVkIGdldENvbXBvbmVudERlbnNpdHlDbGFzcyhiYXNlU3R5bGVDbGFzczogc3RyaW5nKTogc3RyaW5nO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgSWd4RGlzcGxheURlbnNpdHlNb2R1bGUge1xufVxuIl19