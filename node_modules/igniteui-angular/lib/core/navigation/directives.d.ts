import { IgxNavigationService } from './nav.service';
/**
 * Directive that can toggle targets through provided NavigationService.
 *
 * Usage:
 * ```
 * <button igxNavToggle="ID"> Toggle </button>
 * ```
 * Where the `ID` matches the ID of compatible `IToggleView` component.
 */
import * as ɵngcc0 from '@angular/core';
export declare class IgxNavigationToggleDirective {
    state: IgxNavigationService;
    private target;
    constructor(nav: IgxNavigationService);
    toggleNavigationDrawer(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxNavigationToggleDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<IgxNavigationToggleDirective, "[igxNavToggle]", never, {
    "target": "igxNavToggle";
}, {}, never>;
}
/**
 * Directive that can close targets through provided NavigationService.
 *
 * Usage:
 * ```
 * <button igxNavClose="ID"> Close </button>
 * ```
 * Where the `ID` matches the ID of compatible `IToggleView` component.
 */
export declare class IgxNavigationCloseDirective {
    state: IgxNavigationService;
    private target;
    constructor(nav: IgxNavigationService);
    closeNavigationDrawer(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxNavigationCloseDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<IgxNavigationCloseDirective, "[igxNavClose]", never, {
    "target": "igxNavClose";
}, {}, never>;
}
/**
 * @hidden
 */
export declare class IgxNavigationModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<IgxNavigationModule, [typeof IgxNavigationCloseDirective, typeof IgxNavigationToggleDirective], never, [typeof IgxNavigationCloseDirective, typeof IgxNavigationToggleDirective]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<IgxNavigationModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlyZWN0aXZlcy5kLnRzIiwic291cmNlcyI6WyJkaXJlY3RpdmVzLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7O0FBVUE7Ozs7Ozs7OztBQUtBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZUE7Ozs7Ozs7QUFLQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElneE5hdmlnYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi9uYXYuc2VydmljZSc7XG4vKipcbiAqIERpcmVjdGl2ZSB0aGF0IGNhbiB0b2dnbGUgdGFyZ2V0cyB0aHJvdWdoIHByb3ZpZGVkIE5hdmlnYXRpb25TZXJ2aWNlLlxuICpcbiAqIFVzYWdlOlxuICogYGBgXG4gKiA8YnV0dG9uIGlneE5hdlRvZ2dsZT1cIklEXCI+IFRvZ2dsZSA8L2J1dHRvbj5cbiAqIGBgYFxuICogV2hlcmUgdGhlIGBJRGAgbWF0Y2hlcyB0aGUgSUQgb2YgY29tcGF0aWJsZSBgSVRvZ2dsZVZpZXdgIGNvbXBvbmVudC5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgSWd4TmF2aWdhdGlvblRvZ2dsZURpcmVjdGl2ZSB7XG4gICAgc3RhdGU6IElneE5hdmlnYXRpb25TZXJ2aWNlO1xuICAgIHByaXZhdGUgdGFyZ2V0O1xuICAgIGNvbnN0cnVjdG9yKG5hdjogSWd4TmF2aWdhdGlvblNlcnZpY2UpO1xuICAgIHRvZ2dsZU5hdmlnYXRpb25EcmF3ZXIoKTogdm9pZDtcbn1cbi8qKlxuICogRGlyZWN0aXZlIHRoYXQgY2FuIGNsb3NlIHRhcmdldHMgdGhyb3VnaCBwcm92aWRlZCBOYXZpZ2F0aW9uU2VydmljZS5cbiAqXG4gKiBVc2FnZTpcbiAqIGBgYFxuICogPGJ1dHRvbiBpZ3hOYXZDbG9zZT1cIklEXCI+IENsb3NlIDwvYnV0dG9uPlxuICogYGBgXG4gKiBXaGVyZSB0aGUgYElEYCBtYXRjaGVzIHRoZSBJRCBvZiBjb21wYXRpYmxlIGBJVG9nZ2xlVmlld2AgY29tcG9uZW50LlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBJZ3hOYXZpZ2F0aW9uQ2xvc2VEaXJlY3RpdmUge1xuICAgIHN0YXRlOiBJZ3hOYXZpZ2F0aW9uU2VydmljZTtcbiAgICBwcml2YXRlIHRhcmdldDtcbiAgICBjb25zdHJ1Y3RvcihuYXY6IElneE5hdmlnYXRpb25TZXJ2aWNlKTtcbiAgICBjbG9zZU5hdmlnYXRpb25EcmF3ZXIoKTogdm9pZDtcbn1cbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBJZ3hOYXZpZ2F0aW9uTW9kdWxlIHtcbn1cbiJdfQ==