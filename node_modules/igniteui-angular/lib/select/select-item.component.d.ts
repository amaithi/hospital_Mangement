import { IgxDropDownItemComponent } from './../drop-down/drop-down-item.component';
import { DoCheck } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class IgxSelectItemComponent extends IgxDropDownItemComponent implements DoCheck {
    private _text;
    /**
     * An @Input property that gets/sets the item's text to be displayed in the select component's input when the item is selected.
     *
     * ```typescript
     *  //get
     *  let mySelectedItem = this.dropDown.selectedItem;
     *  let selectedItemText = mySelectedItem.text;
     * ```
     *
     * ```html
     * // set
     * <igx-select-item [text]="'London'"></igx-select-item>
     * ```
     */
    get text(): string;
    set text(text: string);
    /** @hidden @internal */
    get itemText(): any;
    /**
     * Sets/Gets if the item is the currently selected one in the select
     *
     * ```typescript
     *  let mySelectedItem = this.select.selectedItem;
     *  let isMyItemSelected = mySelectedItem.selected; // true
     * ```
     */
    get selected(): any;
    set selected(value: any);
    /** @hidden @internal */
    isHeader: boolean;
    ngDoCheck(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxSelectItemComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<IgxSelectItemComponent, "igx-select-item", never, {
    "text": "text";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LWl0ZW0uY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInNlbGVjdC1pdGVtLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElneERyb3BEb3duSXRlbUNvbXBvbmVudCB9IGZyb20gJy4vLi4vZHJvcC1kb3duL2Ryb3AtZG93bi1pdGVtLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBEb0NoZWNrIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBJZ3hTZWxlY3RJdGVtQ29tcG9uZW50IGV4dGVuZHMgSWd4RHJvcERvd25JdGVtQ29tcG9uZW50IGltcGxlbWVudHMgRG9DaGVjayB7XG4gICAgcHJpdmF0ZSBfdGV4dDtcbiAgICAvKipcbiAgICAgKiBBbiBASW5wdXQgcHJvcGVydHkgdGhhdCBnZXRzL3NldHMgdGhlIGl0ZW0ncyB0ZXh0IHRvIGJlIGRpc3BsYXllZCBpbiB0aGUgc2VsZWN0IGNvbXBvbmVudCdzIGlucHV0IHdoZW4gdGhlIGl0ZW0gaXMgc2VsZWN0ZWQuXG4gICAgICpcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogIC8vZ2V0XG4gICAgICogIGxldCBteVNlbGVjdGVkSXRlbSA9IHRoaXMuZHJvcERvd24uc2VsZWN0ZWRJdGVtO1xuICAgICAqICBsZXQgc2VsZWN0ZWRJdGVtVGV4dCA9IG15U2VsZWN0ZWRJdGVtLnRleHQ7XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBgYGBodG1sXG4gICAgICogLy8gc2V0XG4gICAgICogPGlneC1zZWxlY3QtaXRlbSBbdGV4dF09XCInTG9uZG9uJ1wiPjwvaWd4LXNlbGVjdC1pdGVtPlxuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGdldCB0ZXh0KCk6IHN0cmluZztcbiAgICBzZXQgdGV4dCh0ZXh0OiBzdHJpbmcpO1xuICAgIC8qKiBAaGlkZGVuIEBpbnRlcm5hbCAqL1xuICAgIGdldCBpdGVtVGV4dCgpOiBhbnk7XG4gICAgLyoqXG4gICAgICogU2V0cy9HZXRzIGlmIHRoZSBpdGVtIGlzIHRoZSBjdXJyZW50bHkgc2VsZWN0ZWQgb25lIGluIHRoZSBzZWxlY3RcbiAgICAgKlxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiAgbGV0IG15U2VsZWN0ZWRJdGVtID0gdGhpcy5zZWxlY3Quc2VsZWN0ZWRJdGVtO1xuICAgICAqICBsZXQgaXNNeUl0ZW1TZWxlY3RlZCA9IG15U2VsZWN0ZWRJdGVtLnNlbGVjdGVkOyAvLyB0cnVlXG4gICAgICogYGBgXG4gICAgICovXG4gICAgZ2V0IHNlbGVjdGVkKCk6IGFueTtcbiAgICBzZXQgc2VsZWN0ZWQodmFsdWU6IGFueSk7XG4gICAgLyoqIEBoaWRkZW4gQGludGVybmFsICovXG4gICAgaXNIZWFkZXI6IGJvb2xlYW47XG4gICAgbmdEb0NoZWNrKCk6IHZvaWQ7XG59XG4iXX0=