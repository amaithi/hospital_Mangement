/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { Overlay } from '@angular/cdk/overlay';
import { Observable } from 'rxjs';
import { NzModalControlService } from './nz-modal-control.service';
import { NzModalRef } from './nz-modal-ref.class';
import { NzModalComponent } from './nz-modal.component';
import { ConfirmType, ModalOptionsForService } from './nz-modal.type';
import * as ɵngcc0 from '@angular/core';
export declare class ModalBuilderForService {
    private overlay;
    private modalRef;
    private overlayRef;
    constructor(overlay: Overlay, options?: ModalOptionsForService);
    getInstance(): NzModalComponent | null;
    destroyModal(): void;
    private changeProps;
    private createModal;
}
export declare class NzModalService {
    private overlay;
    private modalControl;
    readonly openModals: NzModalRef[];
    readonly afterAllClose: Observable<void>;
    constructor(overlay: Overlay, modalControl: NzModalControlService);
    closeAll(): void;
    create<T>(options?: ModalOptionsForService<T>): NzModalRef<T>;
    confirm<T>(options?: ModalOptionsForService<T>, confirmType?: ConfirmType): NzModalRef<T>;
    info<T>(options?: ModalOptionsForService<T>): NzModalRef<T>;
    success<T>(options?: ModalOptionsForService<T>): NzModalRef<T>;
    error<T>(options?: ModalOptionsForService<T>): NzModalRef<T>;
    warning<T>(options?: ModalOptionsForService<T>): NzModalRef<T>;
    private simpleConfirm;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzModalService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnotbW9kYWwuc2VydmljZS5kLnRzIiwic291cmNlcyI6WyJuei1tb2RhbC5zZXJ2aWNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7O0FBYUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF3QkEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQWxpYmFiYS5jb20gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vTkctWk9SUk8vbmctem9ycm8tYW50ZC9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKi9cbmltcG9ydCB7IE92ZXJsYXkgfSBmcm9tICdAYW5ndWxhci9jZGsvb3ZlcmxheSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBOek1vZGFsQ29udHJvbFNlcnZpY2UgfSBmcm9tICcuL256LW1vZGFsLWNvbnRyb2wuc2VydmljZSc7XG5pbXBvcnQgeyBOek1vZGFsUmVmIH0gZnJvbSAnLi9uei1tb2RhbC1yZWYuY2xhc3MnO1xuaW1wb3J0IHsgTnpNb2RhbENvbXBvbmVudCB9IGZyb20gJy4vbnotbW9kYWwuY29tcG9uZW50JztcbmltcG9ydCB7IENvbmZpcm1UeXBlLCBNb2RhbE9wdGlvbnNGb3JTZXJ2aWNlIH0gZnJvbSAnLi9uei1tb2RhbC50eXBlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE1vZGFsQnVpbGRlckZvclNlcnZpY2Uge1xuICAgIHByaXZhdGUgb3ZlcmxheTtcbiAgICBwcml2YXRlIG1vZGFsUmVmO1xuICAgIHByaXZhdGUgb3ZlcmxheVJlZjtcbiAgICBjb25zdHJ1Y3RvcihvdmVybGF5OiBPdmVybGF5LCBvcHRpb25zPzogTW9kYWxPcHRpb25zRm9yU2VydmljZSk7XG4gICAgZ2V0SW5zdGFuY2UoKTogTnpNb2RhbENvbXBvbmVudCB8IG51bGw7XG4gICAgZGVzdHJveU1vZGFsKCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBjaGFuZ2VQcm9wcztcbiAgICBwcml2YXRlIGNyZWF0ZU1vZGFsO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTnpNb2RhbFNlcnZpY2Uge1xuICAgIHByaXZhdGUgb3ZlcmxheTtcbiAgICBwcml2YXRlIG1vZGFsQ29udHJvbDtcbiAgICByZWFkb25seSBvcGVuTW9kYWxzOiBOek1vZGFsUmVmW107XG4gICAgcmVhZG9ubHkgYWZ0ZXJBbGxDbG9zZTogT2JzZXJ2YWJsZTx2b2lkPjtcbiAgICBjb25zdHJ1Y3RvcihvdmVybGF5OiBPdmVybGF5LCBtb2RhbENvbnRyb2w6IE56TW9kYWxDb250cm9sU2VydmljZSk7XG4gICAgY2xvc2VBbGwoKTogdm9pZDtcbiAgICBjcmVhdGU8VD4ob3B0aW9ucz86IE1vZGFsT3B0aW9uc0ZvclNlcnZpY2U8VD4pOiBOek1vZGFsUmVmPFQ+O1xuICAgIGNvbmZpcm08VD4ob3B0aW9ucz86IE1vZGFsT3B0aW9uc0ZvclNlcnZpY2U8VD4sIGNvbmZpcm1UeXBlPzogQ29uZmlybVR5cGUpOiBOek1vZGFsUmVmPFQ+O1xuICAgIGluZm88VD4ob3B0aW9ucz86IE1vZGFsT3B0aW9uc0ZvclNlcnZpY2U8VD4pOiBOek1vZGFsUmVmPFQ+O1xuICAgIHN1Y2Nlc3M8VD4ob3B0aW9ucz86IE1vZGFsT3B0aW9uc0ZvclNlcnZpY2U8VD4pOiBOek1vZGFsUmVmPFQ+O1xuICAgIGVycm9yPFQ+KG9wdGlvbnM/OiBNb2RhbE9wdGlvbnNGb3JTZXJ2aWNlPFQ+KTogTnpNb2RhbFJlZjxUPjtcbiAgICB3YXJuaW5nPFQ+KG9wdGlvbnM/OiBNb2RhbE9wdGlvbnNGb3JTZXJ2aWNlPFQ+KTogTnpNb2RhbFJlZjxUPjtcbiAgICBwcml2YXRlIHNpbXBsZUNvbmZpcm07XG59XG4iXX0=